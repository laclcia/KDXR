/*	This file was automatically created by
 *	Reverse Engineering Compiler 2.0 (C) Giampiero Caprino (Sep 19 2005)
 *	Input file: 'C:\Documents and Settings\default\Desktop\KDXServer.exe'
 */

/*	Procedure: 0x00401000 - 0x004010F9
 *	Argument size: -60
 *	Local size: 60
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 */

L00401000()
{
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    Vfffffff0 = 0;
    Vfffffff4 = 0;
    Vfffffff8 = 0x226;
    Vfffffffc = 0xf0;
    eax = L00419240(0x2c, & Vfffffff0, 268435469, 0, 0x46e010);
    Vffffffc4 = eax;
    Vffffffdc = esp;
    L0041B670( *(Vffffffc4 + 0xc), 0x401100);
    L0041CF00( *(Vffffffc4 + 0xc), 0x96, 0x46, 32767, 32767);
    Vffffffe0 = 0;
    Vffffffe4 = 0;
    Vffffffe8 = 0x226;
    Vffffffec = 0xf0;
    *(Vffffffc4 + 0x28) = L00422080(Vffffffc4, & Vffffffe0, 0x10c, 0, 0x83, 0);
    (save)0xa;
    L0041D060( *(Vffffffc4 + 0xc));
    (restore)ecx;
    *(Vffffffc4 + 0x18) = 8;
    return Vffffffc4;
    L004192E0( & Vffffffc4);
    L004234F0(0, 0, 0);
    if(Vffffffd0 != 0) {
        ecx = Vffffffc8;
        Vffffffd0(-1);
    }
    esp = *(ebp - 0x24);
    return Vffffffc4;
}

/*	Procedure: 0x004010FA - 0x00401181
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L004010FA(Ac)
/* unknown */ void  Ac;
{



    L00424EF0(Ac, 3, 0x46e024, 0, 0, 0);
    L00424EF0(Ac, 4, "\tShow Info", 0, 0, 0x49);
    L00424EF0(Ac, 0x64, 0x46e04c, 0, 0, 0);
    L00424EF0(Ac, 5, 0x46e058, 0, 0, 0);
    L00425140(Ac);
    return L00424EF0(Ac, 7, 0x46e060, 0, 0, 0x51);
}

/*	Procedure: 0x00401182 - 0x0040118F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401182()
{



}

/*	Procedure: 0x00401190 - 0x004011BD
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408A50()
 *		L00408F30()
 *		L00412B90()
 */

L00401190(A8)
/* unknown */ void  A8;
{



    edx = A8 != 0 ? *A8 & 0xff : 0;
    return L00422280( *( *ecx + 0x28), 0, 0, A8 + 1, edx);
}

/*	Procedure: 0x004011BE - 0x004011BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004011BE()
{



}

/*	Procedure: 0x004011C0 - 0x00401270
 *	Argument size: 8
 *	Local size: 260
 *	Save regs size: 12
 *	Called by:
 *		L00401280()
 *		L00401310()
 *		L00401D10()
 *		L00405DF0()
 *		L00405E70()
 *		L00406950()
 *		L0040853A()
 *		L00415A60()
 *		L00417EC0()
 *		L00418340()
 *		L00418DBB()
 */

L004011C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edx = A8;
    *(ebp + -272) = ecx;
    if(edx == 0) {
        return;
    }
    *(edx + 0x3b) :: 0;
    if(!(edi = edx + 0x98)) {
        esi = *(edx + 0x168);
        if(esi != 0) {
            edi = esi + 0x98;
        }
    }
    esi = L00426870( *(edx + 0x30) & 65535, ebp + -268, 0x40, 0);
    *(ebp + esi + -268) = 0x20;
    esi = esi + 1;
    esi = esi + L00428EA0(edi, ebp + esi + -268, 0x20);
    edx = Ac != 0 ? *Ac & 0xff : 0;
    ecx = Ac + 1;
    eax = L00422280( *( *( *(ebp + -272)) + 0x28), ebp + -268, esi, ecx, edx);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00401271 - 0x0040127F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401271()
{



}

/*	Procedure: 0x00401280 - 0x00401303
 *	Argument size: 8
 *	Local size: 280
 *	Save regs size: 8
 *	Called by:
 *		L0040853A()
 */

L00401280(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffee8;
	/* unknown */ void  Vfffffef4;
	/* unknown */ void  Vfffffef8;
	/* unknown */ void  Vfffffef9;



    eax = Ac;
    Vfffffef4 = esp;
    esi = ecx;
    if(*eax == 6553604) {
        eax = L004011C0(A8, 0x46e06c);
    } else {
        L004291F0(eax, 0, & Vfffffef9, 0xff);
        Vfffffef8 = al;
        ecx = esi;
        eax = L004011C0(A8, & Vfffffef8);
        goto L004012fb;
        if(Vfffffee8 != 0) {
            ecx = *(ebp + -288);
            eax = Vfffffee8(-1);
        }
        esp = *(ebp + -268);
    }
L004012fb:
}

/*	Procedure: 0x00401304 - 0x0040130F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401304()
{



}

/*	Procedure: 0x00401310 - 0x0040167E
 *	Argument size: 4
 *	Local size: 128
 *	Save regs size: 12
 *	Called by:
 *		L00401310()
 *		L00402D10()
 *		L0040853A()
 *		L00408E70()
 */

L00401310(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff9c;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    ebx = ecx;
    if(A8 == 0) {
        return;
    }
    if(*(A8 + 0x3b) != 0) {
        Vffffff90 = esp;
        ecx = ebx;
        L004011C0(A8, 0x46e084);
        goto L00401365;
        if(Vffffff84 != 0) {
            (save)-1;
            ecx = *(ebp + -132);
            Vffffff84();
        }
        esp = *(ebp - 0x70);
L00401365:
        edx = *(A8 + 0x16c);
        Vffffffc0 = esp;
        if(edx == 0x19c) {
            *(ebx + 0x282) = *(ebx + 0x282) - 1;
            *(ebx + 0x2a0) = 1;
            edx = A8;
            ecx = edx;
            L00416790(ebx, ecx, 0xba, 0, 0, *(ecx + 0x178), *(edx + 0x17c));
        } else {
            if(edx == 0x19f) {
                edi = A8;
                esi = edi;
                L00416790(ebx, esi, 0xbb, 0, 0, *(esi + 0x178), *(edi + 0x17c));
            } else {
                if(edx == 0x384) {
                    L00416790(ebx, A8, 0x385, 0, 0, 0, 0);
                    goto L00401414;
                    if(Vffffffb4 != 0) {
                        (save)-1;
                        ecx = Vffffffac;
                        Vffffffb4();
                    }
                    esp = *(ebp - 0x40);
                }
            }
        }
L00401414:
        eax = A8;
        if(eax != 0) {
            L00429BC0(ebx + 0x2d8, eax);
        }
        edx = A8;
        esi = *(edx + 0x168);
        if(esi != 0) {
            L0042A150(esi + 0x20, edx);
        }
        L0042BD00(A8 + 0x170);
        L0042E3E0(A8 + 0x174);
        L0042E3E0(A8 + 0x178);
        L00430240(A8 + 8);
        L00432760(A8 + 4);
        ebx = & A8;
        eax = L0042E3E0(ebx);
        esp = ebp - 0xc;
        return;
    }
    Vfffffff0 = esp;
    ecx = ebx;
    L004011C0(A8, 0x46e098);
    goto L004014c5;
    if(Vffffffe4 != 0) {
        (save)-1;
        ecx = Vffffffdc;
        Vffffffe4();
    }
    esp = *(ebp - 0x10);
L004014c5:
    edi = *(ebx + 0x2c);
    if(edi != 0) {
        do {
            edx = A8;
            esi = *edi;
            eax = edx == 0 ? 0 : L00429BC0(edi + 0x1a4, edx);
            if(eax != -1 && *(edi + 0x1a8) == 0 && !( *(edi + 0x1b0) & 65535 & 1)) {
                L00409AB0(ebx, edi);
            }
            edi = esi;
        } while(esi != 0);
    }
    edx = *(ebx + 0x8c);
    if(edx == A8) {
        *(ebx + 0x8c) = 0;
    }
    edi = A8;
    if(edi != 0) {
        L00429BC0(ebx + 0x2c0, edi);
    }
    Vffffffd8 = esp;
    esi = 0xb9;
    if(!(L00430380( *(A8 + 8)) & 8)) {
        esi = 0xbf;
    }
    L00416790(ebx, A8, esi, 0, A8 + 0x5c, 0, 0);
    goto L00401598;
    if(Vffffffcc != 0) {
        (save)-1;
        ecx = Vffffffc4;
        Vffffffcc();
    }
    esp = *(ebp - 0x28);
L00401598:
    for(L00417D80(ebx, A8); 1; L00401310(ecx)) {
        ecx = *(A8 + 0x20);
        if(ecx == 0) {
            break;
        }
        ecx = ebx;
    }
    if(*(A8 + 0x3c) != 0) {
        *(ebx + 0x280) = ( *(ebx + 0x280) & 65535 ^ 11177) - 1 ^ 11177;
    }
    L0042A150(ebx + 0x1c, A8);
    L00430240(A8 + 8);
    L00432760(A8 + 4);
    esi = *(A8 + 0x30) & 65535;
    L0042E3E0( & A8);
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    *(ebp + -140) = ecx | esi << 0x18;
    *(ebp + -136) = 7;
    Vffffffa8 = esp;
    ecx = ebx;
    eax = L00401730(0x68, ebp + -140, 8, 0);
    goto L00401675;
    if(Vffffff9c != 0) {
        ecx = Vffffff94;
        eax = Vffffff9c(-1);
    }
    esp = *(ebp - 0x58);
L00401675:
    esp = ebp - 0xc;
}

/*	Procedure: 0x0040167F - 0x0040167F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040167F()
{



}

/*	Procedure: 0x00401680 - 0x004016AA
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00402D10()
 *		L00403190()
 *		L00403A90()
 *		L0040AA30()
 */

L00401680(A4)
/* unknown */ void  A4;
{



    eax = *(ecx + 0x1c);
    if(eax != 0) {
        do {
            if(( *(eax + 0x30) & 65535) == A4) {
                goto L00401698;
            }
L004016a0:
            eax = *eax;
        } while(eax != 0);
        goto L004016a6;
L00401698:
        return;
        goto L004016a0;
    }
L004016a6:
    return 0;
}

/*	Procedure: 0x004016AB - 0x004016AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004016AB()
{



}

/*	Procedure: 0x004016B0 - 0x004016EE
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L004016B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    eax = *(A8 + 0x20);
    if(eax != 0) {
        do {
            if(( *(eax + 0x30) & 65535) == Ac) {
                goto L004016df;
            }
            eax = *eax;
        } while(eax != 0);
        goto L004016e6;
L004016df:
        return;
    }
L004016e6:
    esp = ebp - 8;
    return 0;
}

/*	Procedure: 0x004016EF - 0x004016EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004016EF()
{



}

/*	Procedure: 0x004016F0 - 0x00401722
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L004016F0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    ebx = *(ecx + 0x1c);
    eax = 0;
    do {
        if(*(ebx + 0x58) == A8) {
            ecx = *(ebx + 0x20);
            eax = eax + 1;
            do {
                ecx = *ecx;
                eax = eax + 1;
            } while(ecx != 0);
        }
        ebx = *ebx;
    } while(ebx != 0);
}

/*	Procedure: 0x00401723 - 0x0040172F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401723()
{



}

/*	Procedure: 0x00401730 - 0x00401785
 *	Argument size: 16
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L00401310()
 *		L00401D10()
 *		L004020E0()
 *		L00403980()
 *		L0040D0F0()
 *		L00411640()
 *		L00414FA0()
 *		L00415120()
 */

L00401730(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    edx = *(ecx + 0x1c);
    if(edx != 0) {
        do {
            edi = *edx;
            if(edx != A14) {
                Vfffffff0 = esp;
                eax = L00431A10( *(edx + 8), A8, 0, Ac, A10);
            }
L00401776:
            edx = edi;
        } while(edi != 0);
        goto L0040177c;
        if(*(ebp - 0x1c) != 0) {
            ecx = *(ebp - 0x24);
            eax = *(ebp - 0x1c)(-1);
        }
        esp = *(ebp - 0x10);
        goto L00401776;
    }
L0040177c:
}

/*	Procedure: 0x00401786 - 0x0040178F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401786()
{



}

/*	Procedure: 0x00401790 - 0x004018E1
 *	Argument size: 12
 *	Local size: 264
 *	Save regs size: 12
 *	Called by:
 *		L00401D10()
 *		L0040D0F0()
 */

L00401790(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = Ac;
    *(ebp + -276) = ecx;
    if(ebx > 0x3f) {
        ebx = 0x3f;
    }
    L00427DA0(0x46e0a8, A8, ebx, ebp + -267, 0xff);
    *(ebp + -268) = al;
    if(*(ebp + -268) == 0) {
        L004288C0(ebp + -268, 0x46e0ac);
    }
    *(ebp + -272) = 1;
    if(ebx >= 0x3d) {
        ebx = 0x3d;
    }
    while(1) {
        esi = *( *(ebp + -276) + 0x1c);
        edi = 0;
        if(esi != 0) {
            do {
                ecx = ebp + -268;
                (save)ecx;
                L00428D80(esi + 0x98);
                (restore)ecx;
                if(al != 0) {
                    goto L0040182a;
                }
L00401830:
                esi = *esi;
            } while(esi != 0);
            goto L00401836;
L0040182a:
            edi = esi;
        }
L00401836:
        if(edi == 0) {
            goto L004018c7;
        }
        *(ebp + -272) = *(ebp + -272) + 1;
        if(*(ebp + -272) > 0x63) {
            goto L004018c7;
        }
        if(*(ebp + -272) >= 0xa) {
            esi = *(ebp + -272);
            eax = -858993459;
            asm("mul esi");
            eax = -858993459;
            *(ebp + ebx + -267) = (edx >> 3) + 0x30;
            ecx = esi;
            asm("mul ecx");
            edx = (edx >> 3) * 0xa;
            cl = ecx - edx + 0x30;
            dl = bl + 2;
            *(ebp + ebx + -266) = cl;
            *(ebp + -268) = dl;
            continue;
        }
        ecx = *(ebp + -272);
        eax = -858993459;
        asm("mul ecx");
        edx = (edx >> 3) * 0xa;
        al = bl;
        cl = ecx - edx + 0x30;
        *(ebp + ebx + -267) = cl;
        *(ebp + -268) = al + 1;
    }
    goto L00401830;
L004018c7:
    return L004288C0(A10, ebp + -268);
}

/*	Procedure: 0x004018E2 - 0x004018EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004018E2()
{



}

/*	Procedure: 0x004018F0 - 0x00401A41
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00401A50()
 *		L00401D10()
 *		L0040D0F0()
 */

L004018F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    esi = A10;
    (save)edi;
    esp = esp - 0xc;
    L00434150(esi, 0x1c);
    edi = *(A8 + 0x30) & 65535;
    eax = edi << 8 & 16711680;
    eax = eax | edi >> 0x18;
    eax = eax | edi >> 8 & 65280;
    *esi = eax | edi << 0x18;
    *(esi + 4) = *(A8 + 0x3e) & 0xff;
    ecx = *(A8 + 0x36) & 65535;
    edx = ecx << 8;
    edx = edx | ecx >> 8;
    *(esi + 0xa) = dx;
    *(ebp - 0x18) = Ac != 0 ? *(A8 + 0x32) & 65535 : 0;
    eax = *(ebp - 0x18) & 65535;
    edi = eax;
    eax = eax >> 8;
    edi = edi << 8 | eax;
    *(esi + 0xc) = di;
    *(esi + 0xe) = *(A8 + 0x158) & 65535;
    *(esi + 0x10) = *(A8 + 0x15a) & 65535;
    *(esi + 0x12) = *(A8 + 0x15c) & 65535;
    *(esi + 0x14) = *(A8 + 0x15e) & 65535;
    *(esi + 0x16) = *(A8 + 0x160) & 0xff;
    *(esi + 0x17) = *(A8 + 0x3d) & 0xff;
    *(esi + 0x18) = 0;
    *(ebp - 0x10) = *(A8 + 0x98) & 0xff;
    *(esi + 0x19) = *(ebp - 0x10);
    *(ebp - 0x14) = *(A8 + 0xd8) & 0xff;
    *(esi + 0x1a) = *(ebp - 0x14);
    edi = *(ebp - 0x18) + 0x1f + *(ebp - 0x10) + *(ebp - 0x14) & -4;
    if(edi > 0x1c) {
        *(esi + edi - 4) = 0;
    }
    esi = esi + 0x1c;
    L004342A0(esi, A8 + 0x168, *(ebp - 0x18));
    esi = esi + *(ebp - 0x18);
    L004342A0(esi, A8 + 0x99, *(ebp - 0x10));
    esi = esi + *(ebp - 0x10);
    L004342A0(esi, A8 + 0xd9, *(ebp - 0x14));
    esp = ebp - 0xc;
    eax = edi;
    (restore)edi;
}

/*	Procedure: 0x00401A42 - 0x00401A4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401A42()
{



}

/*	Procedure: 0x00401A50 - 0x00401AF7
 *	Argument size: 4
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00401D10()
 */

L00401A50(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = ecx;
    eax = *(esi + 0x1c);
    ebx = 0;
    do {
        ebx = ebx + 0x1c;
        ebx = ebx + ( *(eax + 0x32) & 65535);
        ebx = ebx + ( *(eax + 0x98) & 0xff);
        ebx = ebx + ( *(eax + 0xd8) & 0xff) + 3;
        eax = *eax;
        ebx = ebx & -4;
    } while(eax != 0);
    *(ebp - 0x10) = ebx;
    eax = L0042E310(ebx);
    *(ebp - 0x18) = eax;
    *(ebp - 0x14) = eax;
    esi = *(esi + 0x1c);
    edi = eax;
    do {
        eax = L004018F0(esi, 1, edi);
        esi = *esi;
        edi = edi + eax;
    } while(esi != 0);
    if(edi != *(ebp - 0x18) + ebx) {
        L00429610(65537);
    }
    L00431A10( *(A8 + 8), 0x65, 0, *(ebp - 0x18), *(ebp - 0x10));
    return L0042E3E0(ebp - 0x14);
}

/*	Procedure: 0x00401AF8 - 0x00401B14
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 */

L00401AF8()
{
	/* unknown */ void  ebx;



    ebx = ecx;
    L0042E3E0(ebx);
    return ebx;
}

/*	Procedure: 0x00401B15 - 0x00401B1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401B15()
{



}

/*	Procedure: 0x00401B20 - 0x00401D01
 *	Argument size: 8
 *	Local size: 1028
 *	Save regs size: 12
 *	Called by:
 *		L00401D10()
 */

L00401B20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = ebp + -1036;
    L00434150(edi, 0x4c);
    L004342A0(edi, Ac + 0x78, 0x20);
    edx = *(A8 + 0x268);
    esi = edx << 8 & 16711680;
    esi = esi | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *(edi + 0x20) = esi | eax >> 8 & 65280 | edx;
    esi = *(Ac + 0x30) & 65535;
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    *(edi + 0x24) = ecx | esi << 0x18;
    *(edi + 0x28) = 16390;
    *(edi + 0x46) = 0x200;
    if(!(( *(Ac + 0x4f) & 0xff) >> 2 & 1)) {
        *(edi + 0x2a) = 0x100;
    }
    *(edi + 0x48) = *(A8 + 0xa0) & 0xff;
    *(edi + 0x49) = *(A8 + 0xe0) & 0xff;
    ecx = *(A8 + 0x1e0) & 0xff;
    eax = A8 + 0xa0;
    *(edi + 0x4a) = cl;
    esi = edi + 0x4c;
    esi = esi + L00428EA0(eax, esi, 0x3f);
    esi = esi + L00428EA0(A8 + 0xe0, esi, 0xff);
    esi = esi + L00428EA0(A8 + 0x1e0, esi, 0x7f) - edi;
    if(esi > 0x400) {
        L00429610(65546);
    }
    ecx = *(Ac + 8);
    *(ebp + -1040) = ecx;
    L00431A10( *(ebp + -1040), 0x69, 0, edi, esi);
    ecx = *(A8 + 0x27c);
    if(ecx != 0 && *(A8 + 0x285) != 0 && !(( *(Ac + 0x4f) & 0xff) >> 1 & 1)) {
        L00431A10( *(ebp + -1040), 0x6b, 0, *(A8 + 0x278), ecx);
    }
    esi = *(A8 + 0x298);
    if(esi != 0) {
        L00431A10( *(ebp + -1040), 0x6a, 0, *(A8 + 0x294), esi);
    }
    eax = Ac;
    if(!(( *(eax + 0x4c) & 0xff) >> 3 & 1)) {
        eax = Ac;
        if(!(( *(eax + 0x4b) & 0xff) >> 1 & 1)) {
            eax = L00431A10( *(ebp + -1040), 0xd5, 0, 0, 0);
        }
    }
}

/*	Procedure: 0x00401D02 - 0x00401D0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00401D02()
{



}

/*	Procedure: 0x00401D10 - 0x004020B9
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00401D10(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    eax = 0x1214;
    eax = L00434370();
    edx = A14;
    *(ebp - 0x10) = ecx;
    if(edx < 0x1c) {
        return;
    }
    edi = A10;
    ebx = *(edi + 0xc) & 65535;
    *(ebp + -276) = ebx;
    *(ebp + -276) = *(ebp + -276) << 8;
    *(ebp + -276) = *(ebp + -276) | *(ebp + -276) >> 8;
    *(ebp + -276) = *(ebp + -276) & 65535;
    *(ebp + -540) = *(edi + 0x18) & 0xff;
    *(ebp + -280) = *(edi + 0x19) & 0xff;
    *(ebp + -544) = *(edi + 0x1a) & 0xff;
    eax = *(ebp + -276) + 0x1c + *(ebp + -540) + *(ebp + -280) + *(ebp + -544);
    if(edx < eax) {
        esp = ebp - 0xc;
        return;
    }
    if(*(ebp + -276) > 0x708) {
        esp = ebp - 0xc;
        return;
    }
    ebx = *(edi + 0xe) & 0xff;
    *(A8 + 0x158) = bl;
    ecx = *(edi + 0xf) & 0xff;
    *(A8 + 0x159) = cl;
    *(A8 + 0x15a) = *(edi + 0x10) & 0xff;
    eax = *(edi + 0x11) & 0xff;
    *(A8 + 0x15b) = al;
    ebx = *(edi + 0x12) & 0xff;
    *(A8 + 0x15c) = bl;
    *(A8 + 0x15d) = *(edi + 0x13) & 0xff;
    ebx = *(A8 + 0x3d) & 0xff;
    edx = *(edi + 0x17) & 0xff;
    ebx = ebx & -5;
    ebx = ebx | edx & 4;
    *(A8 + 0x3d) = bl;
    *(A8 + 0x3e) = *(edi + 4) & 0xff;
    ebx = *(edi + 0xa) & 65535;
    ecx = ebx << 8;
    *(A8 + 0x36) = ecx | ebx >> 8;
    if(*(ebp + -276) != 0) {
        *(A8 + 0x32) = *(ebp + -276);
        edx = edi + 0x1c;
        L004342A0(A8 + 0x168, edx, *(ebp + -276));
    }
    if(*(ebp + -280) != 0) {
        if(( *(A8 + 0x4f) & 0xff) >> 3 & 1) {
            goto L00401f72;
        }
        edx = ebp + -536;
        ebx = *(A8 + 0x98) & 0xff;
        *(A8 + 0x98) = 0;
        ecx = *(ebp - 0x10);
        L00401790(edi + 0x1c + *(ebp + -276) + *(ebp + -540), *(ebp + -280), edx);
        *(A8 + 0x98) = bl;
        if(*(A8 + 0x3a) != 0) {
            L00416790( *(ebp - 0x10), A8, 0x64, 0, ebp + -536, 0, 0);
        }
        L004288C0(ebp + -272, 0x46e0b4);
        edx = ebp + -536;
        L00428A30(ebp + -272, edx);
        L00428A30(ebp + -272, 0x46e0c0);
        edx = ebp + -272;
        L004303D0( *(A8 + 8), ( *(ebp + -272) & 0xff) + edx + 1, 0x40, 0);
        *(ebp + -272) = *(ebp + -272) + al;
        L00428A30(ebp + -272, 0x46e0c4);
        ecx = *(ebp - 0x10);
        L004011C0(A8, ebp + -272);
        edx = A8 + 0x98;
        L004288C0(edx, ebp + -536);
    } else {
L00401f72:
        if(*(A8 + 0x3a) != 0) {
            L00416790( *(ebp - 0x10), A8, 0x64, 0, 0, 0, 0);
        }
    }
    eax = A8 + 0xd9;
    *(A8 + 0xd8) = L00427DA0(0x46e0a8, edi + 0x1c + *(ebp + -276) + *(ebp + -540) + *(ebp + -280), *(ebp + -544), eax, 0x7f);
    *(A8 + 0x3d) = *(A8 + 0x3d) & 0xfd;
    if(eax >= 0x17 && *(eax + A8 + 0xd8) == 0xac) {
        edi = eax - 0x16 + A8 + 0xd8;
        if(L00435000(edi, 0x17, 18796) == -1772968035) {
            L00434150(edi, 0x17);
            *(A8 + 0xd8) = *(A8 + 0xd8) - 0x17;
            *(A8 + 0x3d) = *(A8 + 0x3d) | 2;
        }
    }
    if(*(A8 + 0x39) == 0) {
        ecx = *(ebp - 0x10);
        L00401A50(A8);
        L00401B20( *(ebp - 0x10), A8);
        *(A8 + 0x39) = 1;
    }
    edi = L004018F0(A8, 0, ebp + -4640);
    if(edi > 0x1000) {
        L00429610(65537);
    }
    if(*(A8 + 0x3a) != 0) {
        ecx = *(ebp - 0x10);
        eax = L00401730(0x66, ebp + -4640, edi, 0);
    } else {
        *(A8 + 0x3a) = 1;
        ecx = *(ebp - 0x10);
        L00401730(0x67, ebp + -4640, edi, A8);
        eax = L00416790( *(ebp - 0x10), A8, 0xb8, 0, 0, 0, 0);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x004020BA - 0x004020BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004020BA()
{



}

/*	Procedure: 0x004020C0 - 0x004020DF
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00406020()
 */

L004020C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00431A10( *(A8 + 8), 0x6d, Ac, 0, 0);
}

/*	Procedure: 0x004020E0 - 0x00402163
 *	Argument size: 16
 *	Local size: 8
 *	Save regs size: 8
 *	Called by:
 *		L00406020()
 */

L004020E0(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A8;
    if(A14 < 4) {
        return;
    }
    eax = *A10 & 0xff;
    if(*(esi + 0x3e) == al) {
        esp = ebp - 8;
        return;
    }
    *(esi + 0x3e) = al;
    edx = *(esi + 0x30) & 65535;
    esi = edx << 8 & 16711680;
    esi = esi | edx >> 0x18;
    ebx = edx;
    edx = edx << 0x18;
    esi = esi | ebx >> 8 & 65280 | edx;
    edx = ebp - 0x10;
    *(ebp - 0x10) = esi;
    *(ebp - 0xc) = 0;
    *(ebp - 0xc) = al;
    eax = L00401730(0x6f, edx, 8, 0);
    esp = ebp - 8;
}

/*	Procedure: 0x00402164 - 0x0040216F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00402164()
{



}

/*	Procedure: 0x00402170 - 0x004021C4
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00406020()
 */

L00402170(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    eax = *(ecx + 0x27c);
    if(eax < 5) {
        ebx = 0x46e0c9;
        eax = *L0046E0C8 & 0xff;
    } else {
        if(*(ecx + 0x285) == 0) {
            ebx = 0x46e0dd;
            eax = *L0046E0DC & 0xff;
        } else {
            ebx = *(ecx + 0x278);
        }
    }
    return L00431A10( *(A8 + 8), 0x6b, 0, ebx, eax);
}

/*	Procedure: 0x004021C5 - 0x004021CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004021C5()
{



}

/*	Procedure: 0x004021D0 - 0x004021F7
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00406020()
 */

L004021D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = ( *(A8 + 0x5c) & 0xff) + 1;
    return L00431A10( *(A8 + 8), 0x74, Ac, A8 + 0x5c, ecx);
}

/*	Procedure: 0x004021F8 - 0x00402394
 *	Argument size: 8
 *	Local size: 348
 *	Save regs size: 12
 */

L004021F8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    (save)0;
    (save)(L00435380() & 589823) + 900000;
    (save)Ac;
    L0042F1C0();
    eax = ebp + -356;
    esp = esp + 0xc;
    Vffffffe8 = eax;
    esi = 0;
    ebx = 0x46e0f8;
    eax = L0042EF50();
    Vffffffec = eax;
    Vffffffc8 = edx;
    edi = *(A8 + 0x1c);
    if(edi != 0) {
        Vffffffe4 = Vffffffe8;
        Vffffffe4 = Vffffffe4 + 0xf;
        do {
            if(*(edi + 0x3f) == 2) {
                edx = Vffffffec - *(edi + 0x18);
                ecx = Vffffffc8;
                asm("sbb ecx,[edi+0x1c]");
                if(ecx <= 0) {
                    != ? 0x40228c : ;
                    if(edx < 7200000) {
                        if(esi == 0) {
                            L00434150(Vffffffe8, 0x10);
                            eax = *ebx & 0xff;
                            *(ebp + -360) = eax;
                            edx = Vffffffe4;
                            ecx = 1;
                            if(eax >= 1) {
                                eax :: 8;
                                if(!(esi = eax - 8)) {
                                    do {
                                        al = !( *(ebx + ecx) & 0xff) + 0xbe;
                                        *(edx + ecx) = al;
                                        al = !( *(ebx + ecx + 1) & 0xff) + 0xbe;
                                        *(edx + ecx + 1) = al;
                                        al = !( *(ebx + ecx + 2) & 0xff) + 0xbe;
                                        *(edx + ecx + 2) = al;
                                        al = !( *(ebx + ecx + 3) & 0xff) + 0xbe;
                                        *(edx + ecx + 3) = al;
                                        al = !( *(ebx + ecx + 4) & 0xff) + 0xbe;
                                        *(edx + ecx + 4) = al;
                                        al = !( *(ebx + ecx + 5) & 0xff) + 0xbe;
                                        *(edx + ecx + 5) = al;
                                        al = !( *(ebx + ecx + 6) & 0xff) + 0xbe;
                                        *(edx + ecx + 6) = al;
                                        al = !( *(ebx + ecx + 7) & 0xff) + 0xbe;
                                        *(edx + ecx + 7) = al;
                                        ecx = ecx + 8;
                                    } while(ecx <= esi);
                                }
                                do {
                                    al = !( *(ebx + ecx) & 0xff) + 0xbe;
                                    *(edx + ecx) = al;
                                    ecx = ecx + 1;
                                } while(ecx <= *(ebp + -360));
                            }
                            esi = *(ebp + -360) + 0x10;
                        }
                        Vffffffe0 = esp;
                        eax = L00431A10( *(edi + 8), 0x9b, 0, Vffffffe8, esi);
                    }
                }
            }
L00402383:
            edi = *edi;
        } while(edi != 0);
        goto L0040238d;
        if(Vffffffd4 != 0) {
            ecx = Vffffffcc;
            Vffffffd4(-1);
        }
        esp = *(ebp - 0x20);
        goto L00402383;
    }
L0040238d:
}

/*	Procedure: 0x00402395 - 0x0040239F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00402395()
{



}

/*	Procedure: 0x004023A0 - 0x004023F1
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00406020()
 */

L004023A0(Ac, A14, A18)
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;



    if(A18 < 4) {
        return;
    }
    ecx = *A14;
    ebx = ecx << 8 & 16711680;
    eax = ecx;
    edx = ecx;
    ebx = ebx | eax >> 0x18;
    ebx = ebx | edx >> 8 & 65280;
    eax = !(ebx = ebx | ecx << 0x18) ? 1 : 2;
    *(Ac + 0x3f) = al;
}

/*	Procedure: 0x004023F2 - 0x004023FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004023F2()
{



}

/*	Procedure: 0x00402400 - 0x00402455
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00406020()
 */

L00402400(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    eax = ( *(A8 + 0x4d) & 0xff) >> 7;
    esi = ecx;
    if(!(eax & 1)) {
        eax = L00429610(65556);
    }
    if(*(A8 + 0x40) != 0) {
        return;
    }
    *(A8 + 0x40) = 1;
    eax = L00416790(esi, A8, 0x8c, 0, 0, 0, 0);
    esp = ebp - 8;
}

/*	Procedure: 0x00402456 - 0x0040245F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00402456()
{



}

/*	Procedure: 0x00402460 - 0x00402490
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00406020()
 */

L00402460(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(*(eax + 0x40) == 0) {
        return;
    }
    *(eax + 0x40) = 0;
    eax = L00416790(ecx, eax, 0x8d, 0, 0, 0, 0);
    esp = ebp;
}

/*	Procedure: 0x00402491 - 0x0040249F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00402491()
{



}

/*	Procedure: 0x004024A0 - 0x00402D0D
 *	Argument size: 16
 *	Local size: 352
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004024A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffea8;
	/* unknown */ void  Vfffffeac;
	/* unknown */ void  Vfffffeb0;
	/* unknown */ void  Vfffffeb4;
	/* unknown */ void  Vfffffeb8;
	/* unknown */ void  Vfffffebc;
	/* unknown */ void  Vfffffec8;
	/* unknown */ void  Vfffffecc;
	/* unknown */ void  Vfffffed0;
	/* unknown */ void  Vfffffed1;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    Vfffffeb4 = ecx;
    if(!(( *(A8 + 0x4d) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    if(*(A8 + 0x40) == 0) {
        L00429610(65539);
    }
    esi = *(Vfffffeb4 + 0x1c);
    ebx = 0x800;
    do {
        edi = *(esi + 0x2c) * 0x168;
        ebx = ebx + 0xe8;
        esi = *esi;
        ebx = ebx + edi;
    } while(esi != 0);
    Vffffffd4 = ebx;
    Vffffffd4 = Vffffffd4 + 0xfff;
    Vffffffd4 = Vffffffd4 & -4096;
    eax = L0042E310(Vffffffd4);
    Vffffffe8 = eax;
    Vfffffea8 = Vffffffe8;
    Vffffffd0 = 0;
    eax = L0042EF50();
    ebx = *(Vfffffeb4 + 0x1c);
    Vfffffecc = ebx;
    if(ebx != 0) {
        ebx = 0;
        ecx = edx;
        ebx = eax;
        Vffffffe4 = edx;
        esi = edx;
        ecx = ecx >> 8 & 65280;
        edx = edx << 0x18;
        Vffffffdc = eax;
        edi = eax;
        ebx = ebx >> 8 & 65280;
        Vffffffe4 = Vffffffe4 << 8;
        Vffffffe4 = Vffffffe4 & 16711680;
        Vffffffe4 = Vffffffe4 | esi >> 0x18;
        Vffffffe4 = Vffffffe4 | ecx;
        Vffffffdc = Vffffffdc << 8;
        Vffffffdc = Vffffffdc & 16711680;
        Vffffffdc = Vffffffdc | edi >> 0x18;
        Vffffffe4 = Vffffffe4 | edx;
        Vffffffdc = Vffffffdc | ebx;
        Vffffffdc = Vffffffdc | eax << 0x18;
        do {
            Vfffffed0 = 1;
            Vfffffed1 = 0x3f;
            eax = *(Vfffffecc + 0x38) & 0xff;
            edi = eax;
            Vfffffeac = eax;
            (save)edi;
            L00435AE0( *(Vfffffeb4 + 0x64));
            (restore)ecx;
            if(al != 0) {
                eax = L00436310( *(Vfffffeb4 + 0x64), edi, ebp + -364);
                if(*(ebp + -364) >= 0x38) {
                    ebx = *(eax + 0x34) & 0xff;
                    if(*(ebp + -364) >= ebx + 0x38) {
                        eax = eax + 0x38;
                        L00428F50( & Vfffffed0, eax, ebx);
                    }
                }
            }
            Vfffffec8 = L00430420( *(Vfffffecc + 8));
            if(!(L00430380( *(Vfffffecc + 8)) & 0x10)) {
                Vfffffec8 = 0x46e144;
                L004288C0( & Vfffffed0, Vfffffec8);
            }
            if(Vffffffd0 + 0x800 > Vffffffd4) {
                Vffffffd4 = Vffffffd4 + 8192;
                eax = L0042E410(Vffffffe8, Vffffffd4);
                Vffffffe8 = eax;
                Vfffffea8 = Vffffffe8;
            }
            ebx = Vffffffe8 + Vffffffd0;
            L00434150(ebx, 0x68);
            eax = *(Vfffffecc + 0x30) & 65535;
            Vffffffd8 = eax;
            ecx = eax << 8 & 16711680;
            eax = eax >> 0x18 | ecx;
            Vffffffd8 = Vffffffd8 << 0x18;
            Vffffffd8 = Vffffffd8 | Vffffffd8 >> 8 & 65280 | eax;
            *ebx = Vffffffd8;
            eax = Vfffffecc;
            edx = *(eax + 0x10);
            esi = *(eax + 0x14);
            eax = esi << 8;
            ecx = 0;
            eax = eax & 16711680;
            eax = eax | esi >> 0x18;
            ecx = esi;
            esi = esi << 0x18;
            *(ebx + 8) = eax | ecx >> 8 & 65280 | esi;
            eax = edx << 8 & 16711680;
            eax = eax | edx >> 0x18;
            ecx = edx;
            edx = edx << 0x18;
            *(ebx + 0xc) = eax | ecx >> 8 & 65280 | edx;
            eax = Vfffffecc;
            esi = *(eax + 0x18);
            eax = *(eax + 0x1c);
            ecx = eax << 8;
            edi = 0;
            ecx = ecx & 16711680;
            ecx = ecx | eax >> 0x18;
            edi = eax;
            eax = eax << 0x18;
            *(ebx + 0x10) = ecx | edi >> 8 & 65280 | eax;
            ecx = esi << 8 & 16711680;
            ecx = ecx | esi >> 0x18;
            edi = esi;
            esi = esi << 0x18;
            *(ebx + 0x14) = ecx | edi >> 8 & 65280 | esi;
            *(ebx + 0x18) = Vffffffe4;
            *(ebx + 0x1c) = Vffffffdc;
            al = Vfffffeac;
            *(ebx + 0x42) = al;
            eax = *(Vfffffecc + 0x98) & 0xff;
            *(ebx + 0x60) = al;
            *(ebx + 0x61) = *Vfffffec8 & 0xff;
            *(ebx + 0x62) = Vfffffed0 & 0xff;
            *(ebx + 0x63) = *(Vfffffecc + 0x5c) & 0xff;
            edi = ebx + 0x68;
            edi = edi + L00428EA0(Vfffffecc + 0x98, edi, 0xff);
            edi = edi + L00428EA0(Vfffffec8, edi, 0xff);
            edi = edi + L00428EA0( & Vfffffed0, edi, 0xff);
            Vffffffd0 = Vffffffd0 + (edi + L00428EA0(Vfffffecc + 0x5c, edi, 0xff) - ebx + 3 & -4);
            esi = *(Vfffffecc + 0x20);
            do {
                eax = *(esi + 0x17c);
                Vfffffeb8 = eax;
                if(Vffffffd0 + 0x800 + eax > Vffffffd4) {
                    Vffffffd4 = Vffffffd4 + (eax + 8191 & -4096);
                    eax = L0042E410(Vffffffe8, Vffffffd4);
                    Vffffffe8 = eax;
                    Vfffffea8 = Vffffffe8;
                }
                ebx = Vffffffe8 + Vffffffd0;
                L00434150(ebx, 0x68);
                *ebx = Vffffffd8;
                eax = *(esi + 0x30) & 65535;
                ecx = eax << 8 & 16711680;
                ecx = ecx | eax >> 0x18;
                edx = eax;
                eax = eax << 0x18;
                *(ebx + 4) = ecx | edx >> 8 & 65280 | eax;
                edi = *(esi + 0x14);
                ecx = *(esi + 0x10);
                edx = 0;
                edx = edi << 8 & 16711680;
                edx = edx | edi >> 0x18;
                eax = edi;
                edi = edi << 0x18;
                *(ebx + 8) = edx | eax >> 8 & 65280 | edi;
                edx = ecx << 8 & 16711680;
                edx = edx | ecx >> 0x18;
                edi = ecx;
                ecx = ecx << 0x18;
                *(ebx + 0xc) = edx | edi >> 8 & 65280 | ecx;
                *(ebx + 0x18) = Vffffffe4;
                *(ebx + 0x1c) = Vffffffdc;
                *(ebx + 0x42) = Vfffffeac;
                Vffffffec = *(esi + 0x188);
                Vffffffe0 = *(esi + 0x18c);
                Vffffffec = Vffffffec + *(esi + 0x198);
                eax = *(esi + 0x19c);
                asm("adc [ebp-0x20],eax");
                eax = L00433380( *(esi + 4));
                Vfffffeb0 = eax;
                edi = eax;
                if(Vffffffe0 >= 0) {
                    != ? 0x40298e : ;
                    if(Vffffffec > edi) {
                        goto L0040298e;
                    }
                }
                Vffffffec = 0;
                Vffffffe0 = 0;
                goto L004029ae;
L0040298e:
                ecx = 0;
                Vffffffec = Vffffffec - Vfffffeb0;
                asm("sbb [ebp-0x20],ecx");
L004029ae:
                edi = Vffffffe0;
                eax = edi << 8;
                edx = 0;
                eax = eax & 16711680;
                eax = eax | edi >> 0x18;
                edx = edi;
                edi = edi << 0x18;
                *(ebx + 0x20) = eax | edx >> 8 & 65280 | edi;
                *(ebx + 0x24) = Vffffffec << 8 & 16711680 | Vffffffec >> 0x18 | Vffffffec >> 8 & 65280 | Vffffffec << 0x18;
                Vfffffebc = *(esi + 0x190);
                *(ebp + -360) = *(esi + 0x194);
                Vfffffebc = Vfffffebc + *(esi + 0x1a0);
                eax = *(esi + 0x1a4);
                asm("adc [ebp+0xfffffe98],eax");
                ecx = *(ebp + -360);
                eax = ecx << 8;
                edx = 0;
                eax = eax & 16711680;
                eax = eax | ecx >> 0x18;
                edx = ecx;
                ecx = ecx << 0x18;
                *(ebx + 0x28) = eax | edx >> 8 & 65280 | ecx;
                *(ebx + 0x2c) = Vfffffebc << 8 & 16711680 | Vfffffebc >> 0x18 | Vfffffebc >> 8 & 65280 | Vfffffebc << 0x18;
                ecx = *(esi + 0x180);
                if(Vffffffe0 >= *(esi + 0x184)) {
                    != ? 0x402ab3 : ;
                    if(Vffffffec > ecx) {
                        goto L00402ab3;
                    }
                }
                *(ebp + -356) = 0;
                edi = 0;
                goto L00402adc;
L00402ab3:
                *(ebp + -356) = Vffffffec;
                edi = Vffffffe0;
                *(ebp + -356) = *(ebp + -356) - ecx;
                asm("sbb edi,edx");
L00402adc:
                eax = L00436CE0( *(esi + 0x1ac));
                if(eax == 0) {
                    ecx = 0;
                    edx = 0;
                } else {
                    ecx = L004357C0( *(ebp + -356), edi, eax, 0);
                    eax = edx;
                }
                edi = ecx;
                edx = edi << 8 & 16711680;
                edx = edx | edi >> 0x18;
                edx = edx | edi >> 8 & 65280;
                ecx :: 0;
                if(*(ebx + 0x30) = edx | edi << 0x18) {
                    ecx = 0;
                    eax = 0;
                } else {
                    eax = Vfffffebc - Vffffffec;
                    edx = *(ebp + -360);
                    asm("sbb edx,[ebp-0x20]");
                    eax = L004357C0(eax, edx, ecx, 0);
                    edi = edx;
                    ecx = eax;
                    eax = edi;
                }
                edx = ecx << 8 & 16711680;
                edx = edx | ecx >> 0x18;
                eax = ecx;
                ecx = ecx << 0x18;
                *(ebx + 0x34) = edx | eax >> 8 & 65280 | ecx;
                edx = *(esi + 0x1b0);
                edi = edx << 8 & 16711680;
                eax = edx;
                ecx = edx;
                edi = edi | eax >> 0x18;
                edi = edi | ecx >> 8 & 65280;
                *(ebx + 0x38) = edi | edx << 0x18;
                edi = *(esi + 0x16c);
                if(edi == 0 && Vfffffeb0 != 0) {
                    edi = 0x90;
                }
                eax = edi << 8 & 16711680;
                eax = eax | edi >> 0x18;
                edx = edi;
                edi = edi << 0x18;
                *(ebx + 0x3c) = eax | edx >> 8 & 65280 | edi;
                eax = *(Vfffffecc + 0x98) & 0xff;
                *(ebx + 0x60) = al;
                *(ebx + 0x61) = *Vfffffec8 & 0xff;
                *(ebx + 0x62) = Vfffffed0 & 0xff;
                *(ebx + 0x63) = *(esi + 0x5c) & 0xff;
                ecx = Vfffffeb8 & 65535;
                edx = ecx << 8;
                *(ebx + 0x66) = edx | ecx >> 8;
                edi = ebx + 0x68;
                edi = edi + L00428EA0(Vfffffecc + 0x98, edi, 0xff);
                edi = edi + L00428EA0(Vfffffec8, edi, 0xff);
                edi = edi + L00428EA0( & Vfffffed0, edi, 0xff);
                edi = edi + L00428EA0(esi + 0x5c, edi, 0xff);
                Vffffffd0 = Vffffffd0 + (edi + L004342A0(edi, *(esi + 0x178), Vfffffeb8) - ebx + 3 & -4);
                esi = *esi;
            } while(esi != 0);
            ecx = *Vfffffecc;
            Vfffffecc = ecx;
        } while(ecx != 0);
    }
    L00431A10( *(A8 + 8), 0x8f, Ac, Vffffffe8, Vffffffd0);
    return L0042E3E0( & Vfffffea8);
}

/*	Procedure: 0x00402D0E - 0x00402D0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00402D0E()
{



}

/*	Procedure: 0x00402D10 - 0x00403188
 *	Argument size: 16
 *	Local size: 1460
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00402D10(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  V0;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V18;
	/* unknown */ void  V118;
	/* unknown */ void  V11c;
	/* unknown */ void  V120;
	/* unknown */ void  V124;
	/* unknown */ void  V128;
	/* unknown */ void  V1a8;
	/* unknown */ void  V1ac;
	/* unknown */ void  Vfffffffc;



    esp = esp & -8;
    V120 = ecx;
    esi = A14;
    if(!(( *(A8 + 0x4d) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    if(esi < 0x18) {
        L00429610(65538);
    }
    eax = A10;
    V124 = eax;
    eax = *(eax + 0x14) & 0xff;
    V11c = eax;
    if(esi < V11c + 0x18) {
        L00429610(65538);
    }
    edi = *V124;
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    edx = edx | edi >> 8 & 65280;
    ecx = V120;
    eax = L00401680(edx | edi << 0x18);
    V118 = eax;
    if(eax == 0) {
        L00429610(65548);
    }
    if(!(( *(V118 + 0x4d) & 0xff) >> 5 & 1) && !(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        (save)L00430420( *(V118 + 8));
        L00428D80(L00430420( *(A8 + 8)));
        (restore)ecx;
        if(al == 0) {
            L00429610(65556);
        }
    }
    esi = *(V124 + 8);
    edi = esi << 8 & 16711680;
    eax = esi;
    edx = esi;
    edi = edi | eax >> 0x18;
    edi = edi | edx >> 8 & 65280;
    if(!(edi = edi | esi << 0x18)) {
        if(!(( *(A8 + 0x4d) & 0xff) >> 4 & 1)) {
            L00429610(65556);
        }
        if(edi > 524288) {
            edi = 524288;
        }
        L00434150( & Vfffffffc, 0x18);
        ecx = 0;
        esi = edi * 0x3e8 + L0042EF50();
        asm("adc ecx,edx");
        eax = & V128;
        *esp = esi;
        V0 = ecx;
        V8 = eax;
        V10 = & V18;
        Vc = V118 + 0x98;
        L00428970(V8, V118 + 0x5c, 0x7f);
        (save)0x3a;
        (restore)ecx;
        if(L00428E60( & V128) != 0) {
            V128 = al - & V128 + 1;
        }
        L004288C0( & V18, "\nBanned by ");
        L00428A30( & V18, A8 + 0x98);
        L00428A30( & V18, 0x46e160);
        L00428A30( & V18, L00430420( *(A8 + 8)));
        L00428A30( & V18, 0x46e164);
        L00414CB0(V120, esp);
    }
    ecx = *(V124 + 0x10) & 65535;
    edx = ecx << 8;
    if((edx | ecx >> 8) & 65535 & 1 || !(L00430380( *(V118 + 8)) & 0x10)) {
        edi = V118 + 0x98;
        L00416790(V120, A8, 0x96, 0, edi, 0, 0);
        if(V118 == A8) {
            return L00432B90( *(A8 + 4));
        }
        ecx = V120;
        L00401310(V118);
        eax = L00431C20( *(A8 + 8), Ac, 0, 0x96);
        esp = ebp - 0xc;
        return;
    }
    eax = *(A8 + 0x30) & 65535;
    esi = & V1ac;
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edx = edx | eax >> 8 & 65280;
    *esi = edx | eax << 0x18;
    *(esi + 4) = 0;
    *(esi + 8) = 0;
    ecx = edi != 0 ? 2 : 0;
    eax = edi != 0 ? 2 : 0;
    edx = ecx;
    ecx = ax & 65535;
    edx = edx << 8;
    *(esi + 0xc) = edx | ecx >> 8;
    *(esi + 0xe) = 0;
    *(esi + 0x10) = 0;
    *(esi + 0x12) = V11c;
    V1a8 = *(A8 + 0x98) & 0xff;
    *(esi + 0x13) = V1a8;
    edi = esi + 0x14;
    L004342A0(edi, V124 + 0x18, V11c);
    edi = edi + V11c;
    L00428EA0(A8 + 0x98, edi, V1a8);
    L00431A10( *(V118 + 8), 0x97, 0, esi, V11c + 0x14 + V1a8);
    L00432C00( *(V118 + 4));
    if(A8 != V118) {
        L00431C20( *(A8 + 8), Ac, 0, 0x96);
    }
    eax = L00416790(V120, A8, 0x96, 0, V118 + 0x98, 0, 0);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00403189 - 0x0040318F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00403189()
{



}

/*	Procedure: 0x00403190 - 0x00403974
 *	Argument size: 16
 *	Local size: 604
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00403190(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffda4;
	/* unknown */ void  Vfffffda8;
	/* unknown */ void  Vfffffdac;
	/* unknown */ void  Vfffffdb8;
	/* unknown */ void  Vfffffdbc;
	/* unknown */ void  Vfffffdc0;
	/* unknown */ void  Vfffffdc4;
	/* unknown */ void  Vfffffdc5;
	/* unknown */ void  Vfffffec4;
	/* unknown */ void  Vfffffec8;
	/* unknown */ void  Vfffffecc;
	/* unknown */ void  Vfffffed0;
	/* unknown */ void  Vfffffed1;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;



    Vfffffec8 = ecx;
    if(!(( *(A8 + 0x4d) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    if(A14 < 4) {
        L00429610(65538);
    }
    ebx = *A10;
    edi = ebx << 8 & 16711680;
    esi = ebx;
    edx = ebx;
    edi = edi | esi >> 0x18;
    edi = edi | edx >> 8 & 65280;
    edi = edi | ebx << 0x18;
    ecx = Vfffffec8;
    eax = L00401680(edi);
    Vfffffecc = eax;
    if(eax == 0) {
        L00429610(65548);
    }
    Vffffffe0 = L00430420( *(Vfffffecc + 8));
    edx = ebp + -616;
    Vfffffed0 = 1;
    Vfffffed1 = 0x3f;
    Vfffffdc0 = -1;
    esi = *(Vfffffec8 + 0x60);
    L004364F0(esi, Vffffffe0 + 1, *Vffffffe0 & 0xff, edx, 0x40c0c0, 0);
    if(al != 0) {
        eax = L00436310(esi, *(ebp + -616), ebp + -608);
        if(*(ebp + -608) >= 0x80) {
            Vfffffdc0 = *(eax + 0x76) & 0xff;
            edx = *(eax + 0x7a) & 0xff;
            ebx = *(eax + 0x7b) & 0xff;
            if(*(ebp + -608) >= ebx + edx + 0x80) {
                L00428F50( & Vfffffed0, eax - -128 + edx, ebx);
            }
        }
    }
    Vfffffdc4 = 1;
    Vfffffdc5 = 0x3f;
    (save)Vfffffdc0;
    L00435AE0( *(Vfffffec8 + 0x64));
    (restore)ecx;
    if(al != 0) {
        eax = L00436310( *(Vfffffec8 + 0x64), Vfffffdc0, ebp + -612);
        if(*(ebp + -612) >= 0x38) {
            ebx = *(eax + 0x34) & 0xff;
            if(*(ebp + -612) >= ebx + 0x38) {
                eax = eax + 0x38;
                L00428F50( & Vfffffdc4, eax, ebx);
            }
        }
    }
    if(!(L00430380( *(Vfffffecc + 8)) & 0x10)) {
        Vffffffe0 = 0x46e144;
        L004288C0( & Vfffffed0, Vffffffe0);
        L004288C0( & Vfffffdc4, Vffffffe0);
    }
    Vfffffec4 = 0x1000;
    eax = L0042E310(0x1000);
    esi = eax;
    Vffffffdc = eax;
    Vfffffda4 = eax;
    L00434150(esi, 0x44);
    ebx = edi << 8 & 16711680;
    ebx = ebx | edi >> 0x18;
    ebx = ebx | edi >> 8 & 65280;
    *esi = ebx | edi << 0x18;
    eax = Vfffffecc;
    ebx = *(eax + 0x10);
    edx = *(eax + 0x14);
    eax = edx << 8;
    edi = 0;
    eax = eax & 16711680;
    eax = eax | edx >> 0x18;
    edi = edx;
    edx = edx << 0x18;
    *(esi + 8) = eax | edi >> 8 & 65280 | edx;
    ecx = ebx << 8 & 16711680;
    ecx = ecx | ebx >> 0x18;
    eax = ebx;
    ebx = ebx << 0x18;
    *(esi + 0xc) = ecx | eax >> 8 & 65280 | ebx;
    eax = Vfffffecc;
    edx = *(eax + 0x18);
    ecx = *(eax + 0x1c);
    eax = ecx << 8;
    edi = 0;
    eax = eax & 16711680;
    eax = eax | ecx >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    *(esi + 0x10) = eax | ecx << 0x18;
    eax = edx << 8 & 16711680;
    ebx = edx;
    edi = edx;
    eax = eax | ebx >> 0x18;
    eax = eax | edi >> 8 & 65280;
    *(esi + 0x14) = eax | edx << 0x18;
    eax = L0042EF50();
    ebx = edx << 8;
    ecx = 0;
    ebx = ebx & 16711680;
    ebx = ebx | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *(esi + 0x18) = ebx | ecx >> 8 & 65280 | edx;
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edi = eax;
    eax = eax << 0x18;
    *(esi + 0x1c) = edx | edi >> 8 & 65280 | eax;
    ecx = *(Vfffffecc + 0x5c) & 0xff;
    *(esi + 0x3b) = cl;
    edx = *(Vfffffecc + 0x98) & 0xff;
    *(esi + 0x3d) = dl;
    *(esi + 0x3e) = *(Vfffffecc + 0xd8) & 0xff;
    *(esi + 0x3f) = Vfffffed0 & 0xff;
    *(esi + 0x40) = *Vffffffe0 & 0xff;
    *(esi + 0x41) = Vfffffdc4 & 0xff;
    ebx = esi + 0x44;
    ebx = ebx + L00428EA0(Vfffffecc + 0x5c, ebx, 0xff);
    ebx = ebx + L00428EA0(Vfffffecc + 0x98, ebx, 0xff);
    ebx = ebx + L00428EA0(Vfffffecc + 0xd8, ebx, 0xff);
    ebx = ebx + L00428EA0( & Vfffffed0, ebx, 0xff);
    ebx = ebx + L00428EA0(Vffffffe0, ebx, 0xff);
    ebx = ebx + L00428EA0( & Vfffffdc4, ebx, 0xff);
    *ebx = 0;
    *(ebx + 1) = 0;
    *(ebx + 2) = 0;
    Vffffffd0 = ebx;
    Vffffffd0 = Vffffffd0 + 3;
    Vffffffd0 = Vffffffd0 & -4;
    Vffffffd0 = Vffffffd0 - esi;
    Vffffffe0 = 0;
    esi = *(Vfffffecc + 0x20);
    do {
        eax = *(esi + 0x16c);
        Vffffffd4 = eax;
        if(eax == 0x19c || eax == 0x19f || eax == 0) {
            Vffffffe0 = Vffffffe0 + 1;
            Vfffffdb8 = *(esi + 0x17c);
            Vfffffdc0 = *(esi + 0x178);
            edi = Vffffffd0;
            Vffffffd0 = Vffffffd0 + 0x28;
            Vffffffd0 = Vffffffd0 + (Vfffffdb8 + 3 & -4);
            if(Vffffffd0 > Vfffffec4) {
                Vfffffec4 = Vffffffd0;
                Vfffffec4 = Vfffffec4 + 0xfff;
                Vfffffec4 = Vfffffec4 & -4096;
                eax = L0042E410(Vffffffdc, Vfffffec4);
                Vffffffdc = eax;
                Vfffffda4 = Vffffffdc;
            }
            ebx = Vffffffdc + edi;
            L00434150(ebx, 0x28);
            Vffffffe4 = *(esi + 0x188);
            Vffffffd8 = *(esi + 0x18c);
            Vffffffe4 = Vffffffe4 + *(esi + 0x198);
            eax = *(esi + 0x19c);
            asm("adc [ebp-0x28],eax");
            eax = L00433380( *(esi + 4));
            Vfffffdbc = eax;
            edi = eax;
            if(Vffffffd8 >= 0) {
                != ? 0x4036d4 : ;
                if(Vffffffe4 > edi) {
                    goto L004036d4;
                }
            }
            Vffffffe4 = 0;
            Vffffffd8 = 0;
            goto L004036f2;
L004036d4:
            ecx = 0;
            Vffffffe4 = Vffffffe4 - Vfffffdbc;
            asm("sbb [ebp-0x28],ecx");
L004036f2:
            edi = Vffffffd8;
            eax = edi << 8;
            edx = 0;
            eax = eax & 16711680;
            eax = eax | edi >> 0x18;
            edx = edi;
            edi = edi << 0x18;
            *ebx = eax | edx >> 8 & 65280 | edi;
            *(ebx + 4) = Vffffffe4 << 8 & 16711680 | Vffffffe4 >> 0x18 | Vffffffe4 >> 8 & 65280 | Vffffffe4 << 0x18;
            Vffffffec = *(esi + 0x190);
            Vfffffda8 = *(esi + 0x194);
            Vffffffec = Vffffffec + *(esi + 0x1a0);
            eax = *(esi + 0x1a4);
            asm("adc [ebp+0xfffffda8],eax");
            ecx = Vfffffda8;
            eax = ecx << 8;
            edx = 0;
            eax = eax & 16711680;
            eax = eax | ecx >> 0x18;
            edx = ecx;
            ecx = ecx << 0x18;
            *(ebx + 8) = eax | edx >> 8 & 65280 | ecx;
            *(ebx + 0xc) = Vffffffec << 8 & 16711680 | Vffffffec >> 0x18 | Vffffffec >> 8 & 65280 | Vffffffec << 0x18;
            ecx = *(esi + 0x180);
            if(Vffffffd8 >= *(esi + 0x184)) {
                != ? 0x4037e4 : ;
                if(Vffffffe4 > ecx) {
                    goto L004037e4;
                }
            }
            Vfffffdac = 0;
            edi = 0;
            goto L0040380c;
L004037e4:
            Vfffffdac = Vffffffe4;
            edi = Vffffffd8;
            Vfffffdac = Vfffffdac - ecx;
            asm("sbb edi,edx");
L0040380c:
            eax = L00436CE0( *(esi + 0x1ac));
            if(eax == 0) {
                ecx = 0;
                edx = 0;
            } else {
                ecx = L004357C0(Vfffffdac, edi, eax, 0);
                eax = edx;
            }
            edi = ecx;
            edx = edi << 8 & 16711680;
            edx = edx | edi >> 0x18;
            edx = edx | edi >> 8 & 65280;
            ecx :: 0;
            if(*(ebx + 0x14) = edx | edi << 0x18) {
                ecx = 0;
                edx = 0;
            } else {
                eax = Vffffffec - Vffffffe4;
                edx = Vfffffda8;
                asm("sbb edx,[ebp-0x28]");
                ecx = L004357C0(eax, edx, ecx, 0);
                edi = edx;
            }
            edi = ecx << 8 & 16711680;
            edi = edi | ecx >> 0x18;
            edx = ecx;
            ecx = ecx << 0x18;
            *(ebx + 0x18) = edi | edx >> 8 & 65280 | ecx;
            edi = Vfffffdb8 & 65535;
            ecx = edi << 8;
            *(ebx + 0x24) = ecx | edi >> 8;
            al = 0;
            if(Vffffffd4 == 0) {
                if(Vfffffdbc != 0) {
                    al = al | 4;
                }
            } else {
                if(Vffffffd4 == 0x19f) {
                    eax = 1 & 0xff;
                }
            }
            *(ebx + 0x27) = al;
            L004342A0(ebx + 0x28, Vfffffdc0, Vfffffdb8);
        }
        esi = *esi;
    } while(esi != 0);
    *(Vffffffdc + 0x3c) = Vffffffe0;
    L00431A10( *(A8 + 8), 0x99, Ac, Vffffffdc, Vffffffd0);
    L00416790(Vfffffec8, A8, 0x98, 0, Vfffffecc + 0x98, 0, 0);
    return L0042E3E0( & Vfffffda4);
}

/*	Procedure: 0x00403975 - 0x0040397F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00403975()
{



}

/*	Procedure: 0x00403980 - 0x00403A88
 *	Argument size: 16
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00403980(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    *(ebp - 0x18) = ecx;
    edi = A14;
    if(!(( *(A8 + 0x4c) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    if(edi <= 4) {
        L00429610(65538);
    }
    esi = edi - 4;
    Vffffffec = A10;
    if(esi > 0x800) {
        esi = 0x800;
    }
    *(ebp - 0x20) = esi;
    *(ebp - 0x20) = *(ebp - 0x20) + 0x10;
    eax = L0042E310( *(ebp - 0x20));
    edx = eax;
    Vfffffff0 = eax;
    *(ebp - 0x1c) = eax;
    eax = *(A8 + 0x30) & 65535;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edi = eax;
    eax = eax << 0x18;
    *edx = ecx | edi >> 8 & 65280 | eax;
    *(edx + 4) = 0;
    *(edx + 8) = 0;
    *(edx + 0xc) = 0;
    *(edx + 0xe) = *(Vffffffec + 2) & 65535;
    L004342A0(edx + 0x10, Vffffffec + 4, esi);
    ecx = *(ebp - 0x18);
    L00401730(0x9b, Vfffffff0, *(ebp - 0x20), 0);
    L00416790( *(ebp - 0x18), A8, 0x9a, 0, 0, 0, 0);
    return L0042E3E0(ebp - 0x1c);
}

/*	Procedure: 0x00403A89 - 0x00403A8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00403A89()
{



}

/*	Procedure: 0x00403A90 - 0x00403B66
 *	Argument size: 16
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00403A90(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = A8;
    *(ebp - 0x10) = ecx;
    if(!(( *(ebx + 0x4c) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    if(A14 < 0x11) {
        L00429610(65538);
    }
    ecx = *A10;
    eax = ecx << 8 & 16711680;
    esi = ecx;
    edx = ecx;
    ecx = ecx << 0x18;
    eax = eax | esi >> 0x18;
    ecx = *(ebp - 0x10);
    esi = L00401680(eax | edx >> 8 & 65280 | ecx);
    if(esi == 0) {
        L00429610(65548);
    }
    edx = *(ebx + 0x30) & 65535;
    ebx = edx << 8 & 16711680;
    ecx = edx;
    eax = edx;
    ebx = ebx | ecx >> 0x18;
    ebx = ebx | eax >> 8 & 65280;
    *A10 = ebx | edx << 0x18;
    if(A14 > 16384) {
        A14 = 16384;
    }
    return L00431A10( *(esi + 8), 0x12d, 0, A10, A14);
}

/*	Procedure: 0x00403B67 - 0x00403B6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00403B67()
{



}

/*	Procedure: 0x00403B70 - 0x00403BFF
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00403C00()
 */

L00403B70(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    edx = Ac;
    esp = esp - 4;
    A14 = A8;
    if(*(edx + 0x3b) != 0) {
        edx = *(edx + 0x168);
    }
    esi = *(A14 + 0x64);
    ebx = *(edx + 0x38) & 0xff;
    (save)ebx;
    L00435AE0(esi);
    (restore)A14;
    if(al == 0) {
        return 0;
    }
    eax = L00436310(esi, ebx, ebp - 0xc);
    if(*(ebp - 0xc) < 0x38) {
        esp = ebp - 8;
        return 0;
    }
    ebx = *(eax + 0x34) & 0xff;
    if(*(ebp - 0xc) < ebx + 0x38) {
        esp = ebp - 8;
        return 0;
    }
    if(ebx >= A14) {
        ebx = A14;
    }
    eax = L004342A0(A10, eax + 0x38, ebx);
    esp = ebp - 8;
}

/*	Procedure: 0x00403C00 - 0x00403CF3
 *	Argument size: 8
 *	Local size: 260
 *	Save regs size: 12
 *	Called by:
 *		L00404010()
 *		L00404640()
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L004051B0()
 *		L00405970()
 *		L00405D00()
 *		L00406950()
 */

L00403C00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    eax = *(A8 + 0x4a) & 0xff;
    edi = ecx;
    if(!(eax >> 1 & 1)) {
        *Ac = 0;
        return 5;
    }
    if(!(( *(A8 + 0x4b) & 0xff) >> 7 & 1)) {
        *Ac = 0;
        eax = *(edi + 0x54);
        esp = ebp - 0xc;
        return;
    }
    if(!(eax & 1)) {
        eax = L0042B5E0( *(edi + 0x54), 0, 0, L00430420( *(A8 + 8)), 0x23);
        if(eax != 0) {
            *Ac = eax;
            esp = ebp - 0xc;
            return;
        }
        L00403B70(edi, A8, ebp + -267, 0xff);
        *(ebp + -268) = al;
        if(*(ebp + -268) != 0) {
            eax = L0042B5E0( *(edi + 0x54), 0, 0, ebp + -268, 0x23);
            if(eax != 0) {
                *Ac = eax;
                esp = ebp - 0xc;
                return;
            }
        }
    }
    *Ac = 0;
    eax = *(edi + 0x50);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00403CF4 - 0x00403CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00403CF4()
{



}

/*	Procedure: 0x00403D00 - 0x00404008
 *	Argument size: 12
 *	Local size: 1056
 *	Save regs size: 12
 *	Called by:
 *		L00404010()
 */

L00403D00(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    eax = L0042D720(0, 0);
    Vfffffff0 = eax;
    Vffffffd8 = eax;
    ecx = *(Vffffffd8 + 4);
    Vffffffec = ecx;
    eax = ebp + -1064;
    ecx = Vffffffec << 5;
    Vffffffe0 = 0;
    Vffffffe8 = eax;
    if(ecx > 0x400) {
        eax = L0042E310(ecx);
        Vffffffe8 = eax;
        Vffffffe0 = Vffffffe8;
    }
    ebx = Vfffffff0 + 8;
    edi = ebx;
    *(ebp + -1068) = 4;
    esi = Vffffffe8;
    if(!(Vffffffec = Vffffffec - 1)) {
        do {
            (save)0x46e168;
            L004288C0(esi);
            (restore)ecx;
            ecx = eax = ( *(edi + 0x24) & 65280) - 0x100 ? 0x46e170 : eax = eax - 0x100 ? 0x46e174 : eax = eax - 0x100 ? 0x46e178 : eax = eax - 0x100 ? 0x46e180 : eax = eax - 0x100 ? 0x46e184 : eax = eax - 0x100 ? 0x46e188 : eax = eax - 0x100 ? 0x46e18c : 0x46e190;
            L00428A30(esi, ecx);
            *(ebp + -1068) = *(ebp + -1068) + 0x38;
            *(ebp + -1068) = *(ebp + -1068) + ( *( *(edi + 0x44)) & 0xff);
            *(ebp + -1068) = *(ebp + -1068) + ( *esi & 0xff);
            *(ebp + -1068) = *(ebp + -1068) + ( *( *(edi + 0x4c)) & 0xff);
            *(ebp + -1068) = *(ebp + -1068) + 3;
            *(ebp + -1068) = *(ebp + -1068) & -4;
            eax = *(ebp + -1068);
            edi = edi + 0x58;
            esi = esi + 0x20;
        } while(Vffffffec = Vffffffec - 1);
    }
    eax = *(ebp + -1068);
    Vffffffec = eax;
    eax = L0042E3A0(Vffffffec);
    Vffffffdc = eax;
    Vffffffe4 = Vffffffdc;
    eax = *(Vfffffff0 + 4);
    Vfffffff0 = eax;
    edx = eax << 8 & 16711680;
    edi = eax;
    ecx = eax;
    eax = eax << 0x18;
    edx = edx | edi >> 0x18;
    edx = edx | ecx >> 8 & 65280 | eax;
    *Vffffffe4 = edx;
    esi = Vffffffe4 + 4;
    if(!(Vfffffff0 = Vfffffff0 - 1)) {
        do {
            edi = *(ebx + 4);
            edx = *ebx;
            ecx = 0;
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            eax = edi;
            edi = edi << 0x18;
            *esi = ecx | eax >> 8 & 65280 | edi;
            eax = edx << 8 & 16711680;
            eax = eax | edx >> 0x18;
            ecx = edx;
            edx = edx << 0x18;
            *(esi + 4) = eax | ecx >> 8 & 65280 | edx;
            eax = *(ebx + 0x2c);
            edi = eax << 8 & 16711680;
            edi = edi | eax >> 0x18;
            edi = edi | eax >> 8 & 65280;
            *(esi + 0x20) = edi | eax << 0x18;
            edi = *(ebx + 0x30) & 65535;
            edx = edi;
            edi = edi >> 8;
            *(esi + 0x30) = edx << 8 | edi;
            edi = esi + 0x38;
            edi = edi + L00428EA0( *(ebx + 0x44), edi, 0xff);
            *(esi + 0x35) = al;
            *(esi + 0x36) = L00428EA0(Vffffffe8, edi, 0xff);
            edi = edi + *(esi + 0x36);
            *(esi + 0x37) = al;
            edx = (edi + L00428EA0( *(ebx + 0x4c), edi, 0xff) - esi + 3 & -4) + esi;
            ebx = ebx + 0x58;
            Vffffffe8 = Vffffffe8 + 0x20;
            esi = edx;
        } while(Vfffffff0 = Vfffffff0 - 1);
    }
    if(*(ebp + -1068) != esi - Vffffffe4) {
        L00429610(65546);
    }
    L00431A10( *(Ac + 8), 0x191, A10, Vffffffe4, Vffffffec);
    L00416790(A8, Ac, 0x190, 0, 0, 0, 0);
    L0042E3E0( & Vffffffdc);
    L0042E3E0( & Vffffffe0);
    return L0042E3E0( & Vffffffd8);
}

/*	Procedure: 0x00404009 - 0x0040400F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00404009()
{



}

/*	Procedure: 0x00404010 - 0x00404614
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00406020()
 */

L00404010(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = A8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x138;
    *(ebp - 0x20) = ecx;
    *(ebp - 0x14) = eax;
    if(*(eax + 0x3b) != 0) {
        *(ebp - 0x14) = *(eax + 0x168);
    }
    L004100F0( *(ebp - 0x20), 1, A8, A10, A14, 0);
    if(al == 0) {
        L00431A10( *(A8 + 8), 0x191, Ac, 0, 0);
        eax = L00416790( *(ebp - 0x20), A8, 0x190, 0, 0, A10, A14);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    if(A14 <= 2 && !(( *(A8 + 0x4a) & 0xff) >> 1 & 1)) {
        eax = L00403D00( *(ebp - 0x20), A8, Ac);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    ecx = *(ebp - 0x20);
    eax = L00403C00( *(ebp - 0x14), ebp + -324);
    *(ebp - 0x34) = *(ebp + -324);
    eax = L0042B5E0(eax, A10, A14, 0, 1);
    *(ebp - 0x30) = eax;
    ebx = L0042CFC0( *(ebp - 0x30), 0, 0);
    if(ebx == 0) {
        L00431A10( *(A8 + 8), 0x191, Ac, 0, 0);
        L00416790( *(ebp - 0x20), A8, 0x190, 0, 0, A10, A14);
        L0042BD00(ebp - 0x30);
        eax = L0042BD00(ebp - 0x34);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    *(ebp + -320) = ebx;
    eax = ( *(A8 + 0x48) & 0xff) >> 7;
    *(ebp - 0x24) = 0;
    *(ebp - 0x1c) = L00430420( *( *(ebp - 0x14) + 8));
    eax = *(ebx + 4);
    *(ebp - 0x18) = eax;
    esi = ebx + 8;
    *(ebp - 0x2c) = eax;
    *(ebp - 0x10) = 4;
    *(ebp + -316) = 0;
    edi = esi;
    if(!( *(ebp - 0x18) = *(ebp - 0x18) - 1)) {
        do {
            if(!( *(edi + 0x20) & 0x42)) {
                edx = *(edi + 0x34);
                ecx = *edx & 0xff;
                eax = L0040FE40( *(ebp - 0x20), edx + 1, ecx, ebp + -312);
                *(ebp - 0x28) = eax;
                if(eax != 0) {
                    eax = *(eax + 8);
                    ebx = eax << 8 & 16711680;
                    ecx = eax;
                    edx = eax;
                    ebx = ebx | ecx >> 0x18;
                    ebx = ebx | edx >> 8 & 65280;
                    *(edi + 0x2c) = ebx | eax << 0x18;
                    if(*(ebp - 0x24) == 0) {
                        ebx = *( *(ebp - 0x14) + 0x38) & 0xff;
                        ecx = ebp + -312;
                        ebx = ebx & 0x1f;
                        (save) *(ebp - 0x1c);
                        L00428D80(ecx);
                        (restore)ecx;
                        if(al != 0) {
                            ebx = 0x20;
                        }
                        if(!(( *( *(ebp - 0x28) + ebx * 4 + 0xc) & 0xff) >> 7 & 1)) {
                            goto L00404249;
                        }
                    }
                }
            }
            eax = *(edi + 0x38);
            ecx = *eax & 0xff;
            (save)ecx;
            (restore)ecx;
            if(eax = L00437700(eax + 1) & 0xff) {
                edx = *( *(edi + 0x38)) & 0xff;
            } else {
                ebx = *(edi + 0x2c);
                if(ebx != 0x2c) {
                    if(ebx == 0x2b) {
                        eax = 5;
                    }
                } else {
                    eax = 4;
                }
                edx = 0;
                *(edi + 0x38) = eax;
            }
            *(ebp - 0x10) = *(ebp - 0x10) + 0x38;
            *(ebp - 0x10) = *(ebp - 0x10) + ( *( *(edi + 0x34)) & 0xff);
            *(ebp - 0x10) = *(ebp - 0x10) + edx;
            *(ebp - 0x10) = *(ebp - 0x10) + ( *( *(edi + 0x3c)) & 0xff);
            *(ebp - 0x10) = *(ebp - 0x10) + 3;
            *(ebp - 0x10) = *(ebp - 0x10) & -4;
            eax = *(ebp - 0x10);
            *(ebp + -316) = *(ebp + -316) + 1;
            goto L004042c2;
L00404249:
            *(edi + 0x38) = -1;
L004042c2:
            edi = edi + 0x40;
        } while(*(ebp - 0x18) = *(ebp - 0x18) - 1);
    }
    eax = L0042E310( *(ebp - 0x10));
    ebx = eax;
    *(ebp - 0x24) = eax;
    *(ebp - 0x38) = eax;
    edx = *(ebp + -316) << 8 & 16711680;
    ecx = *(ebp + -316);
    eax = *(ebp + -316);
    *(ebp + -316) = *(ebp + -316) << 0x18;
    edx = edx | ecx >> 0x18;
    *ebx = edx | eax >> 8 & 65280 | *(ebp + -316);
    ebx = ebx + 4;
    if(!( *(ebp - 0x2c) = *(ebp - 0x2c) - 1)) {
        do {
            eax = *(esi + 0x38);
            *(ebp - 0x1c) = eax;
            if(eax != -1) {
                edi = *(esi + 4);
                edx = *esi;
                ecx = 0;
                ecx = edi << 8 & 16711680;
                ecx = ecx | edi >> 0x18;
                eax = edi;
                edi = edi << 0x18;
                *ebx = ecx | eax >> 8 & 65280 | edi;
                ecx = edx << 8 & 16711680;
                ecx = ecx | edx >> 0x18;
                edi = edx;
                edx = edx << 0x18;
                *(ebx + 4) = ecx | edi >> 8 & 65280 | edx;
                eax = *(esi + 0xc);
                ecx = *(esi + 8);
                edx = eax << 8;
                edi = 0;
                edx = edx & 16711680;
                edx = edx | eax >> 0x18;
                edi = eax;
                eax = eax << 0x18;
                *(ebx + 8) = edx | edi >> 8 & 65280 | eax;
                edi = ecx << 8 & 16711680;
                edi = edi | ecx >> 0x18;
                edx = ecx;
                ecx = ecx << 0x18;
                *(ebx + 0xc) = edi | edx >> 8 & 65280 | ecx;
                eax = *(esi + 0x14);
                edi = *(esi + 0x10);
                ecx = eax << 8;
                edx = 0;
                ecx = ecx & 16711680;
                ecx = ecx | eax >> 0x18;
                edx = eax;
                eax = eax << 0x18;
                *(ebx + 0x10) = ecx | edx >> 8 & 65280 | eax;
                edx = edi << 8 & 16711680;
                edx = edx | edi >> 0x18;
                ecx = edi;
                edi = edi << 0x18;
                *(ebx + 0x14) = edx | ecx >> 8 & 65280 | edi;
                edx = *(esi + 0x18);
                eax = edx << 8 & 16711680;
                eax = eax | edx >> 0x18;
                edi = edx;
                edx = edx << 0x18;
                *(ebx + 0x18) = eax | edi >> 8 & 65280 | edx;
                eax = *(esi + 0x1c);
                ecx = eax << 8 & 16711680;
                ecx = ecx | eax >> 0x18;
                edx = eax;
                eax = eax << 0x18;
                *(ebx + 0x1c) = ecx | edx >> 8 & 65280 | eax;
                ecx = *(esi + 0x20);
                edi = ecx << 8 & 16711680;
                edi = edi | ecx >> 0x18;
                eax = ecx;
                ecx = ecx << 0x18;
                *(ebx + 0x20) = edi | eax >> 8 & 65280 | ecx;
                *(ebx + 0x24) = 0;
                *(ebx + 0x28) = 0;
                *(ebx + 0x2c) = 0;
                edi = *(esi + 0x30) & 65535;
                edx = edi << 8;
                *(ebx + 0x2e) = edx | edi >> 8;
                eax = *(esi + 0x2c) & 65535;
                ecx = eax << 8;
                *(ebx + 0x30) = ecx | eax >> 8;
                *(ebx + 0x32) = 0;
                if(*(ebp - 0x1c) >= 0x100) {
                    ecx = *(ebp - 0x1c);
                    edx = 0;
                    *(ebp - 0x14) = *ecx & 0xff;
                } else {
                    *(ebp - 0x14) = 0;
                    *(ebp - 0x1c) = 0;
                }
                *(ebp + -316) = *( *(esi + 0x34)) & 0xff;
                *(ebp - 0x18) = *( *(esi + 0x3c)) & 0xff;
                *(ebx + 0x34) = dl;
                *(ebx + 0x35) = *(ebp + -316);
                *(ebx + 0x36) = *(ebp - 0x14);
                *(ebx + 0x37) = *(ebp - 0x18);
                edi = ebx + 0x38;
                L00428EA0( *(esi + 0x34), edi, *(ebp + -316));
                edi = edi + *(ebp + -316);
                L00428EA0( *(ebp - 0x1c), edi, *(ebp - 0x14));
                L00428EA0( *(esi + 0x3c), edi + *(ebp - 0x14), *(ebp - 0x18));
                ebx = ( *(ebp + -316) + 0x3b + *(ebp - 0x14) + *(ebp - 0x18) & -4) + ebx;
            }
            esi = esi + 0x40;
        } while(*(ebp - 0x2c) = *(ebp - 0x2c) - 1);
    }
    L00431A10( *(A8 + 8), 0x191, Ac, *(ebp - 0x24), *(ebp - 0x10));
    L00416790( *(ebp - 0x20), A8, 0x190, 0, 0, A10, A14);
    L0042E3E0(ebp - 0x38);
    L0042E3E0(ebp + -320);
    L0042BD00(ebp - 0x30);
    eax = L0042BD00(ebp - 0x34);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00404615 - 0x0040461F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00404615()
{



}

/*	Procedure: 0x00404635 - 0x0040463F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00404635()
{



}

/*	Procedure: 0x00404640 - 0x0040498D
 *	Argument size: 16
 *	Local size: 300
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00404640(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffed4;
	/* unknown */ void  Vfffffed8;
	/* unknown */ void  Vfffffedc;
	/* unknown */ void  Vfffffee0;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffee8;
	/* unknown */ void  Vfffffeec;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffef4;
	/* unknown */ void  Vfffffef5;
	/* unknown */ void  Vfffffff3;



    Vfffffee4 = ecx;
    if(!(( *(A8 + 0x49) & 0xff) >> 4 & 1)) {
        L00429610(65556);
    }
    if(A14 < 0x18) {
        L00429610(65538);
    }
    edi = A10;
    Vfffffedc = *(edi + 0x16) & 0xff;
    Vfffffeec = *(edi + 0x13) & 0xff;
    Vfffffee0 = *(edi + 0x17) & 0xff;
    ecx = *(edi + 0x14) & 65535;
    edi = edi + 0x18;
    Vfffffed8 = (Vfffffedc & 0xff) + edi;
    esi = ecx;
    Vfffffee8 = Vfffffeec & 0xff;
    Vfffffee8 = Vfffffee8 + Vfffffed8;
    esi = esi << 8;
    ecx = ecx >> 8;
    esi = esi | ecx;
    Vfffffef0 = Vfffffee0 & 0xff;
    Vfffffef0 = Vfffffef0 + Vfffffee8;
    esi = si & 65535;
    if(Vfffffef0 + esi > A10 + A14) {
        L00429610(65546);
    }
    if(Vfffffedc != 0) {
        L00428F50( & Vfffffef4, edi, Vfffffedc & 0xff);
    } else {
        L00437390(Vfffffef0, esi, & Vfffffef5, 0xff, 0);
        Vfffffef4 = al;
        if(Vfffffef4 == 0) {
            L00429610(196726);
        }
        esi = esi - (Vfffffef4 & 0xff) + 3;
        if(esi < 6) {
            esi = 0;
        }
        eax = *Vfffffef0 & 65535;
        edx = eax;
        eax = eax >> 8;
        edx = edx << 8 | eax;
        edx = (dx & 65535) - 1 & 65535;
        ecx = edx << 8;
        ecx = ecx | edx >> 8;
        *Vfffffef0 = cx;
    }
    L004100F0(Vfffffee4, 4, A8, Vfffffef0, esi, 0);
    if(al == 0) {
        L00429610(65556);
    }
    edi = & Vfffffef5;
    L00437FE0(edi, Vfffffef4 & 0xff, 0x46e194);
    if(al != 0) {
        L00429610(196726);
    }
    L0040FDA0(edi, Vfffffef4 & 0xff, ebp + -312);
    if(*(ebp + -312) != 0) {
        L00429610(196726);
    }
    if(Vfffffeec != 0) {
        if(!(( *(A8 + 0x4b) & 0xff) >> 3 & 1)) {
            L00429610(65556);
        }
        L00428A30( & Vfffffef4, 0x46e198);
        L00428C10( & Vfffffef4, Vfffffed8, Vfffffeec & 0xff);
        if(Vfffffee0 != 0) {
            L00428D50( & Vfffffef4, 0x2c);
            L00428C10( & Vfffffef4, Vfffffee8, Vfffffee0 & 0xff);
        }
        (save)0x5d;
        L00428D50( & Vfffffef4);
        (restore)ecx;
        if(Vfffffef4 == 0xff && Vfffffff3 != 0x5d) {
            L00429610(196726);
        }
    }
    eax = A8;
    if(*(A8 + 0x3b) != 0) {
        eax = *(A8 + 0x168);
    }
    ecx = Vfffffee4;
    eax = L00403C00(eax, & Vfffffed4);
    *(ebp + -308) = Vfffffed4;
    *(ebp + -304) = L0042BA30(eax, Vfffffef0, esi, & Vfffffef4, 2);
    L0042BD00(ebp + -304);
    L00431C20( *(A8 + 8), Ac, 0, 0x192);
    L00416790(Vfffffee4, A8, 0x192, 0, & Vfffffef4, Vfffffef0, esi);
    return L0042BD00(ebp + -308);
}

/*	Procedure: 0x0040498E - 0x0040498F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040498E()
{



}

/*	Procedure: 0x00404990 - 0x00404D70
 *	Argument size: 16
 *	Local size: 348
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00404990(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffea4;
	/* unknown */ void  Vfffffea8;
	/* unknown */ void  Vfffffeac;
	/* unknown */ void  Vfffffeb0;
	/* unknown */ void  Vfffffeb4;
	/* unknown */ void  Vfffffeb8;
	/* unknown */ void  Vfffffebc;
	/* unknown */ void  Vfffffec0;
	/* unknown */ void  Vfffffec4;
	/* unknown */ void  Vfffffec8;
	/* unknown */ void  Vfffffecc;
	/* unknown */ void  Vfffffed0;
	/* unknown */ void  Vfffffed4;
	/* unknown */ void  Vfffffed8;
	/* unknown */ void  Vfffffed9;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vfffffff0 = ecx;
    ebx = A10;
    if(!( *(A8 + 0x49) & 0xff & 1)) {
        L00429610(65556);
    }
    if(A14 < 6) {
        L00429610(65538);
    }
    Vfffffed0 = ebx;
    Vfffffed0 = Vfffffed0 + A14;
    ecx = *ebx & 65535;
    eax = ecx << 8;
    esi = ebx;
    if((eax | ecx >> 8) != 0) {
        L00437590(ebx, A14, & Vfffffecc);
        if(al == 0) {
            L00429610(65546);
        }
        Vfffffed4 = esi;
        esi = esi + Vfffffecc;
    } else {
        Vfffffed4 = 0;
        Vfffffecc = 0;
        esi = esi + 2;
    }
    edi = Vfffffed0 - esi;
    if(edi < 2) {
        L00429610(65546);
    }
    ebx = ( *esi & 0xff) << 8;
    ebx = ebx | *(esi + 1) & 0xff;
    if(bx != 0) {
        L00437590(esi, edi, & Vfffffec8);
        if(al == 0) {
            L00429610(65546);
        }
        Vfffffec0 = esi;
        esi = esi + Vfffffec8;
    } else {
        Vfffffec0 = 0;
        Vfffffec8 = 0;
        esi = esi + 2;
    }
    if(Vfffffed0 - esi < 6) {
        L00429610(65546);
    }
    ebx = ( *esi & 0xff) << 8;
    ebx = (ebx | *(esi + 1) & 0xff) & 65535;
    *(ebp + -352) = ebx;
    if(ebx == 0) {
        L00429610(65546);
    }
    esi = esi + 2;
    ecx = Vfffffff0;
    ebx = L00403C00(A8, & Vfffffeb8);
    *(ebp + -356) = Vfffffeb8;
    eax = L0042B5E0(ebx, Vfffffed4, Vfffffecc, 0, 1);
    Vfffffec4 = eax;
    Vfffffea4 = Vfffffec4;
    eax = L0042B5E0(ebx, Vfffffec0, Vfffffec8, 0, 1);
    Vfffffebc = eax;
    Vfffffeb4 = Vfffffebc;
    L004100F0(Vfffffff0, 7, A8, Vfffffed4, Vfffffecc, 0);
    if(al != 0) {
        L004100F0(Vfffffff0, 8, A8, Vfffffec0, Vfffffec8, 0);
        if(al != 0) {
            goto L00404d60;
        }
    }
    L00429610(65556);
    goto L00404d60;
    edx = Vffffffe4;
    *(ebp + -360) = edx;
    if(*( *(ebp + -360)) != 196723) {
        L004234F0(0, 0, 0);
    }
    L00438100( & Vfffffed8, 0x46e1a8);
    eax = L0042BAE0(Vfffffec4, 0, 0, & Vfffffed8, 2, edi);
    Vfffffeac = eax;
    L0042BD00( & Vfffffeac);
    if(Vffffffe0 != 0) {
        (save)-1;
        ecx = Vffffffd8;
        Vffffffe0();
    }
    esp = *(ebp - 0x14);
    goto L00404cda;
L00404cec:
    while(( *(ebp + -352) = *(ebp + -352) - 1) && esi + 3 <= Vfffffed0) {
        esi = esi + 2;
        ebx = *esi & 0xff;
        if(ebx + esi + 1 > Vfffffed0) {
            break;
        }
        edi = L0042B070(Vfffffebc, 0, 0, esi, 1);
        Vfffffeb0 = edi;
        (save) & Vfffffed8;
        L00437F70(edi);
        (restore)ecx;
        if(!(( *(A8 + 0x4b) & 0xff) >> 3 & 1) && L0040FE40(Vfffffff0, Vfffffed4, Vfffffed8 & 0xff, 0) != 0) {
            L00429610(65556);
        }
        Vffffffec = esp;
        Vfffffea8 = L0042BAE0(Vfffffec4, 0, 0, & Vfffffed8, 2, edi);
        L0042BD00( & Vfffffea8);
L00404cda:
        eax = ebx + 1;
        esi = esi + eax;
        L0042BD00( & Vfffffeb0);
    }
    L00431C20( *(A8 + 8), Ac, 0, 0x193);
    L00416790(Vfffffff0, A8, 0x193, 0, 0, 0, 0);
    L0042BD00( & Vfffffeb4);
    L0042BD00( & Vfffffea4);
    return L0042BD00(ebp + -356);
L00404d60:
    Vfffffed4 = & Vfffffed9;
    goto L00404cec;
}

/*	Procedure: 0x00404D80 - 0x00404F3C
 *	Argument size: 16
 *	Local size: 36
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00404D80(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffec = ecx;
    ebx = A10;
    if(!(( *(A8 + 0x4a) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    if(A14 < 4) {
        L00429610(65538);
    }
    edx = *ebx & 65535;
    eax = edx << 8;
    edx = edx >> 8;
    esi = ebx;
    eax = eax | edx;
    esi = esi + A14;
    edi = ebx;
    if(ax != 0) {
        L00437590(edi, esi - edi, ebp - 0x30);
        if(al == 0) {
            L00429610(65546);
        }
        Vfffffff0 = edi;
        edi = edi + *(ebp - 0x30);
    } else {
        Vfffffff0 = 0;
        *(ebp - 0x30) = 0;
        edi = edi + 2;
    }
    if(esi - edi < 6) {
        L00429610(65546);
    }
    ebx = ( *edi & 0xff) << 8;
    ebx = (ebx | *(edi + 1) & 0xff) & 65535;
    Vffffffdc = ebx;
    if(ebx == 0) {
        L00429610(65546);
    }
    edi = edi + 2;
    ecx = Vffffffec;
    eax = L00403C00(A8, ebp - 0x2c);
    Vffffffe4 = *(ebp - 0x2c);
    eax = L0042B5E0(eax, Vfffffff0, *(ebp - 0x30), 0, 1);
    Vffffffe8 = eax;
    *(ebp - 0x28) = Vffffffe8;
    L004100F0(Vffffffec, 0xb, A8, Vfffffff0, *(ebp - 0x30), 0);
    if(al == 0) {
        (save)65556;
        L00429610();
        goto L00404f00;
L00404ea0:
        if(edi + 3 > esi) {
            goto L00404f07;
        }
        edi = edi + 2;
        if(( *edi & 0xff) + edi + 1 > esi) {
            goto L00404f07;
        }
        L0042B070(Vffffffe8, 0, 0, edi, 1);
        Vffffffe0 = eax;
        L0042BF80(eax);
        L00416790(Vffffffec, A8, 0x195, 0, edi, 0, 0);
        edx = ebx + 1;
        edi = edi + edx;
        L0042BD00( & Vffffffe0);
L00404f00:
    }
    if(Vffffffdc = Vffffffdc - 1) {
        goto L00404ea0;
    }
L00404f07:
    L00431C20( *(A8 + 8), Ac, 0, 0x195);
    L0042BD00(ebp - 0x28);
    return L0042BD00( & Vffffffe4);
}

/*	Procedure: 0x00404F3D - 0x00404F3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00404F3D()
{



}

/*	Procedure: 0x00404F40 - 0x004051A0
 *	Argument size: 16
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00404F40(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vfffffff0 = ecx;
    edi = A10;
    ebx = A14;
    if(!(( *(A8 + 0x4a) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    if(ebx < 6) {
        L00429610(65538);
    }
    *(ebp - 0x40) = edi;
    *(ebp - 0x40) = *(ebp - 0x40) + ebx;
    eax = *edi & 65535;
    edx = eax << 8;
    esi = edi;
    if((edx | eax >> 8) != 0) {
        L00437590(edi, ebx, & Vffffffe8);
        if(al == 0) {
            L00429610(65546);
        }
        Vffffffe0 = esi;
        esi = esi + Vffffffe8;
    } else {
        Vffffffe0 = 0;
        Vffffffe8 = 0;
        esi = esi + 2;
    }
    ebx = *(ebp - 0x40) - esi;
    if(ebx < 2) {
        L00429610(65546);
    }
    eax = ( *esi & 0xff) << 8;
    if((eax | *(esi + 1) & 0xff) != 0) {
        L00437590(esi, ebx, & Vffffffec);
        if(al == 0) {
            L00429610(65546);
        }
        Vffffffe4 = esi;
        esi = esi + Vffffffec;
    } else {
        Vffffffe4 = 0;
        Vffffffec = 0;
        esi = esi + 2;
    }
    if(*(ebp - 0x40) - esi < 6) {
        L00429610(65546);
    }
    ebx = ( *esi & 0xff) << 8;
    ebx = (ebx | *(esi + 1) & 0xff) & 65535;
    edi = ebx;
    if(ebx == 0) {
        L00429610(65546);
    }
    esi = esi + 2;
    ecx = Vfffffff0;
    ebx = L00403C00(A8, & Vffffffcc);
    *(ebp - 0x3c) = Vffffffcc;
    eax = L0042B5E0(ebx, Vffffffe0, Vffffffe8, 0, 1);
    Vffffffdc = eax;
    *(ebp - 0x38) = Vffffffdc;
    eax = L0042B5E0(ebx, Vffffffe4, Vffffffec, 0, 1);
    Vffffffd8 = eax;
    Vffffffd0 = Vffffffd8;
    L004100F0(Vfffffff0, 5, A8, Vffffffe0, Vffffffe8, 0);
    if(al != 0) {
        L004100F0(Vfffffff0, 6, A8, Vffffffe4, Vffffffec, 0);
        if(al != 0) {
            goto L00405141;
        }
    }
    (save)65556;
    L00429610();
    goto L00405141;
L004050f6:
    if(esi + 3 <= *(ebp - 0x40)) {
        esi = esi + 2;
        if(( *esi & 0xff) + esi + 1 <= *(ebp - 0x40)) {
            L0042B070(Vffffffd8, 0, 0, esi, 1);
            Vffffffd4 = eax;
            L0042C440(eax, Vffffffdc);
            eax = ebx + 1;
            esi = esi + eax;
            L0042BD00( & Vffffffd4);
L00405141:
            if(edi = edi - 1) {
                goto L004050f6;
            }
        }
    }
    L00431C20( *(A8 + 8), Ac, 0, 0x197);
    L00416790(Vfffffff0, A8, 0x197, 0, 0, 0, 0);
    L0042BD00( & Vffffffd0);
    L0042BD00(ebp - 0x38);
    return L0042BD00(ebp - 0x3c);
}

/*	Procedure: 0x004051A1 - 0x004051AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004051A1()
{



}

/*	Procedure: 0x004051B0 - 0x00405960
 *	Argument size: 16
 *	Local size: 2992
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004051B0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vbac;



    esp = esp & -8;
    ebx = & Vbac;
    *(ebx + -928) = ecx;
    ecx = *(ebx + -928);
    eax = L00403C00(A8, ebx + -2988);
    edi = *(ebx + -2988);
    esi = eax;
    *(ebx + -936) = edi;
    L004100F0( *(ebx + -928), 2, A8, A10, A14, 1);
    if(al == 0) {
        L00429610(65556);
    }
    edi = L0042B070(esi, A10, A14, 0, 1);
    *(ebx + -932) = edi;
    L0042E070(edi, ebx + -156, 0);
    if(esi == 5 && A14 > 2) {
        ecx = *A10 & 65535;
        eax = ecx << 8;
        if((eax | ecx >> 8) == 1) {
            edx = ebx + -668;
            eax = ebx + -412;
            ecx = ebx - 0x58;
            *(ebx - 0x10) = edx;
            *(ebx - 0xc) = eax;
            *(ebx - 0x14) = ebx + -924;
            L0042DAB0(edi, ecx);
            esi = ebx + -2984;
            L00434150(esi, 0x54);
            edi = *(ebx - 0x54);
            edx = *(ebx - 0x58);
            ecx = 0;
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            eax = edi;
            edi = edi << 0x18;
            *esi = ecx | eax >> 8 & 65280 | edi;
            ecx = edx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            edi = edx;
            edx = edx << 0x18;
            *(esi + 4) = ecx | edi >> 8 & 65280 | edx;
            ecx = *(ebx - 0x4c);
            eax = *(ebx - 0x50);
            edx = ecx << 8;
            edi = 0;
            edx = edx & 16711680;
            edx = edx | ecx >> 0x18;
            edi = ecx;
            ecx = ecx << 0x18;
            *(esi + 8) = edx | edi >> 8 & 65280 | ecx;
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            *(esi + 0xc) = edx | ecx >> 8 & 65280 | eax;
            edi = *(ebx - 0x44);
            edx = *(ebx - 0x48);
            ecx = 0;
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            eax = edi;
            edi = edi << 0x18;
            *(esi + 0x10) = ecx | eax >> 8 & 65280 | edi;
            ecx = edx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            edi = edx;
            edx = edx << 0x18;
            *(esi + 0x14) = ecx | edi >> 8 & 65280 | edx;
            ecx = *(ebx - 0x3c);
            eax = *(ebx - 0x40);
            edx = ecx << 8;
            edi = 0;
            edx = edx & 16711680;
            edx = edx | ecx >> 0x18;
            edi = ecx;
            ecx = ecx << 0x18;
            *(esi + 0x18) = edx | edi >> 8 & 65280 | ecx;
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            *(esi + 0x1c) = edx | ecx >> 8 & 65280 | eax;
            edx = *(ebx - 0x38);
            edi = edx << 8 & 16711680;
            edi = edi | edx >> 0x18;
            eax = edx;
            edx = edx << 0x18;
            *(esi + 0x20) = edi | eax >> 8 & 65280 | edx;
            edi = *(ebx - 0x34);
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            edx = edi;
            edi = edi << 0x18;
            *(esi + 0x24) = ecx | edx >> 8 & 65280 | edi;
            ecx = *(ebx - 0x30);
            eax = ecx << 8 & 16711680;
            eax = eax | ecx >> 0x18;
            edi = ecx;
            ecx = ecx << 0x18;
            *(esi + 0x28) = eax | edi >> 8 & 65280 | ecx;
            eax = *(ebx - 0x2c);
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            *(esi + 0x2c) = edx | ecx >> 8 & 65280 | eax;
            edx = *(ebx - 0x28);
            edi = edx << 8 & 16711680;
            edi = edi | edx >> 0x18;
            eax = edx;
            edx = edx << 0x18;
            *(esi + 0x30) = edi | eax >> 8 & 65280 | edx;
            edi = *(ebx + -156) & 2 | 1;
            *(ebx + -156) = edi;
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            edx = edi;
            edi = edi << 0x18;
            *(esi + 0x44) = ecx | edx >> 8 & 65280 | edi;
            ecx = *(ebx + -156);
            eax = *(ebx + -156);
            edx = *(ebx + -156);
            eax = eax >> 0x18;
            edi = *(ebx + -156) << 0x18;
            ecx = ecx << 8 & 16711680 | eax;
            *(esi + 0x48) = ecx | edx >> 8 & 65280 | edi;
            *(esi + 0x4e) = *(ebx + -924) & 0xff;
            *(esi + 0x50) = *(ebx + -668) & 0xff;
            edx = *(ebx + -412) & 0xff;
            ecx = ebx + -924;
            *(esi + 0x51) = dl;
            edi = esi + 0x54;
            edi = edi + L00428EA0(ecx, edi, 0xff);
            edi = edi + L00428EA0(ebx + -668, edi, 0xff);
            L00428EA0(ebx + -412, edi, 0xff);
            edx = *(ebx + -412) & 0xff;
            eax = ( *(ebx + -924) & 0xff) + 0x54;
            ecx = ( *(ebx + -668) & 0xff) + eax + edx;
            L00431A10( *(A8 + 8), 0x1a6, Ac, esi, ecx);
            L00416790( *(ebx + -928), A8, 0x199, 0, 0, A10, A14);
            L0042BD00(ebx + -932);
            edi = ebx + -936;
            return L0042BD00(edi);
        }
    }
    ecx = ebx + -668;
    edx = ebx + -412;
    eax = ebx + -152;
    *(ebx - 0x60) = ecx;
    *(ebx - 0x5c) = edx;
    *(ebx - 0x64) = ebx + -924;
    L0042CCB0(edi, eax);
    esi = ebx + -2984;
    L00434150(esi, 0x40);
    edi = *(ebx + -156) << 8 & 16711680;
    edi = edi | *(ebx + -156) >> 0x18;
    edi = edi | *(ebx + -156) >> 8 & 65280;
    *esi = edi | *(ebx + -156) << 0x18;
    ecx = *(A8 + 0x4a) & 0xff;
    edx = ecx >> 3;
    edi = 0;
    if(!(edx & 1)) {
        edi = 0xbe;
    }
    if(!(ecx >> 6 & 1)) {
        edi = edi | 1;
    }
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    edx = edx | edi >> 8 & 65280;
    *(esi + 4) = edx | edi << 0x18;
    edx = *(ebx + -148);
    edi = *(ebx + -152);
    ecx = 0;
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *(esi + 8) = ecx | eax >> 8 & 65280 | edx;
    ecx = edi << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    edx = edi;
    edi = edi << 0x18;
    *(esi + 0xc) = ecx | edx >> 8 & 65280 | edi;
    ecx = *(ebx + -140);
    eax = *(ebx + -144);
    edx = ecx << 8;
    edi = 0;
    edx = edx & 16711680;
    edx = edx | ecx >> 0x18;
    edi = ecx;
    ecx = ecx << 0x18;
    *(esi + 0x10) = edx | edi >> 8 & 65280 | ecx;
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    *(esi + 0x14) = edx | ecx >> 8 & 65280 | eax;
    edx = *(ebx + -132);
    edi = *(ebx + -136);
    ecx = 0;
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *(esi + 0x18) = ecx | eax >> 8 & 65280 | edx;
    eax = edi << 8 & 16711680;
    eax = eax | edi >> 0x18;
    ecx = edi;
    edi = edi << 0x18;
    *(esi + 0x1c) = eax | ecx >> 8 & 65280 | edi;
    eax = *(ebx - 0x80);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edi = eax;
    eax = eax << 0x18;
    *(esi + 0x20) = edx | edi >> 8 & 65280 | eax;
    edx = *(ebx - 0x7c);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *(esi + 0x24) = ecx | eax >> 8 & 65280 | edx;
    ecx = *(ebx - 0x78);
    edi = ecx << 8 & 16711680;
    edi = edi | ecx >> 0x18;
    edx = ecx;
    ecx = ecx << 0x18;
    *(esi + 0x28) = edi | edx >> 8 & 65280 | ecx;
    edi = *(ebx - 0x68) & 65535;
    eax = edi;
    edi = edi >> 8;
    *(esi + 0x36) = eax << 8 | edi;
    *(esi + 0x3d) = *(ebx + -924) & 0xff;
    *(esi + 0x3e) = *(ebx + -668) & 0xff;
    eax = *(ebx + -412) & 0xff;
    edx = ebx + -924;
    *(esi + 0x3f) = al;
    edi = esi + 0x40;
    edi = edi + L00428EA0(edx, edi, 0xff);
    edi = edi + L00428EA0(ebx + -668, edi, 0xff);
    L00428EA0(ebx + -412, edi, 0xff);
    eax = *(ebx + -412) & 0xff;
    ecx = *(ebx + -924) & 0xff;
    edx = *(ebx + -668) & 0xff;
    edx = edx + ecx + 0x40 + eax;
    L00431A10( *(A8 + 8), 0x19a, Ac, esi, edx);
    L00416790( *(ebx + -928), A8, 0x199, 0, 0, A10, A14);
    L0042BD00(ebx + -932);
    eax = L0042BD00(ebx + -936);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00405961 - 0x0040596F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00405961()
{



}

/*	Procedure: 0x00405970 - 0x00405B61
 *	Argument size: 16
 *	Local size: 288
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00405970(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffee0;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vfffffff0 = ecx;
    if(A14 < 0x34) {
        L00429610(65538);
    }
    edi = A10;
    eax = *(edi + 0x2e) & 65535;
    esi = eax;
    eax = eax >> 8;
    esi = esi << 8 | eax;
    eax = *(edi + 0x31) & 0xff;
    Vffffffe4 = eax;
    esi = si & 65535;
    ecx = Vffffffe4 + esi + 0x34;
    ecx = ecx + ( *(edi + 0x32) & 0xff);
    if(A14 < ecx + ( *(edi + 0x33) & 0xff)) {
        L00429610(65538);
    }
    ecx = ebp + -300;
    *(ebp + -292) = edi;
    *(ebp + -292) = *(ebp + -292) + 0x34;
    Vffffffe8 = *(ebp + -292);
    Vffffffe8 = Vffffffe8 + esi;
    ecx = Vfffffff0;
    eax = L00403C00(A8, ecx);
    *(ebp + -296) = *(ebp + -300);
    eax = L0042B070(eax, *(ebp + -292), esi, 0, 2);
    Vffffffec = eax;
    Vffffffe0 = eax;
    L0042CB20(Vffffffe0);
    eax = *(edi + 0x28);
    edi = eax << 8 & 16711680;
    edi = edi | eax >> 0x18;
    edi = edi | eax >> 8 & 65280;
    edi = edi | eax << 0x18;
    if(!(edi & 1)) {
        if(!(( *(A8 + 0x4a) & 0xff) >> 6 & 1)) {
            L004100F0(Vfffffff0, 0xc, A8, *(ebp + -292), esi, 1);
            if(al != 0) {
                goto L00405a8c;
            }
        }
        L00429610(65556);
L00405a8c:
        if(!(( *(A8 + 0x4b) & 0xff) >> 3 & 1)) {
            L004101C0( & Vfffffee0, L0042C260(Vffffffec, & Vfffffee0, 0x100), Vffffffe8, Vffffffe4);
            if(al == 0) {
                L00429610(65556);
            }
        }
        L0042C050(Vffffffec, Vffffffe8, Vffffffe4);
    }
    if(!(edi & 0x86)) {
        if(( *(A8 + 0x4a) & 0xff) >> 3 & 1) {
            goto L00405b1a;
        }
        L004100F0(Vfffffff0, 0xd, A8, *(ebp + -292), esi, 1);
        if(al == 0) {
L00405b1a:
            L00429610(65556);
        }
    }
    L00416790(Vfffffff0, A8, 0x19b, 0, 0, *(ebp + -292), esi);
    L0042BD00( & Vffffffe0);
    return L0042BD00(ebp + -296);
}

/*	Procedure: 0x00405B62 - 0x00405B6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00405B62()
{



}

/*	Procedure: 0x00405B70 - 0x00405CFA
 *	Argument size: 16
 *	Local size: 296
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00405B70(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffed8;
	/* unknown */ void  Vfffffedc;
	/* unknown */ void  Vfffffee0;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffee6;
	/* unknown */ void  Vfffffee8;



    *(ebp + -300) = ecx;
    esi = A14;
    if(!(( *(A8 + 0x4a) & 0xff) >> 1 & 1)) {
        L00429610(65556);
    }
    if(esi < 0x54) {
        L00429610(65546);
    }
    edx = ( *(A10 + 0x4e) & 0xff) + 0x54;
    ecx = ( *(A10 + 0x4f) & 0xff) + edx;
    ecx = ecx + ( *(A10 + 0x50) & 0xff);
    if(esi < ecx + ( *(A10 + 0x51) & 0xff)) {
        L00429610(65546);
    }
    Vfffffee4 = 0x100;
    Vfffffee6 = 0;
    eax = *(A10 + 0x4e) & 0xff;
    edi = A10 + 0x54;
    eax = L00428F50( & Vfffffee8, edi, eax) + 5;
    ecx = *(A10 + 0x4e) & 0xff;
    Vfffffed8 = eax;
    edi = edi + ecx;
    eax = L0042B070(5, & Vfffffee4, eax, 0, 2);
    *(ebp + -304) = edi;
    Vfffffee0 = eax;
    *(ebp + -308) = Vfffffee0;
    Vfffffedc = *(A10 + 0x4f) & 0xff;
    eax = *(A10 + 0x44);
    edi = edi + (Vfffffedc & 0xff);
    esi = eax;
    ecx = *(A10 + 0x50) & 0xff;
    esi = esi << 8;
    edi = edi + ecx;
    esi = esi & 16711680;
    edx = eax;
    ecx = eax;
    esi = esi | edx >> 0x18;
    esi = esi | ecx >> 8 & 65280;
    esi = esi | eax << 0x18;
    if(!(esi & 1)) {
        L0042DDB0(Vfffffee0, *(ebp + -304), Vfffffedc & 0xff);
    }
    if(!(esi & 2)) {
        L0042CB60(Vfffffee0, edi, *(A10 + 0x51) & 0xff);
    }
    L00416790( *(ebp + -300), A8, 0x1a7, 0, 0, & Vfffffee4, Vfffffed8);
    return L0042BD00(ebp + -308);
}

/*	Procedure: 0x00405CFB - 0x00405CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00405CFB()
{



}

/*	Procedure: 0x00405D00 - 0x00405DE3
 *	Argument size: 16
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00405D00(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    *(ebp - 0x20) = ecx;
    ebx = A14;
    if(!(( *(A8 + 0x52) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    if(ebx <= 8) {
        L00429610(65538);
    }
    ecx = *(ebp - 0x20);
    eax = L00403C00(A8, ebp - 0x1c);
    edx = *(ebp - 0x1c);
    edi = A10 + 8;
    ebx = ebx - 8;
    *(ebp - 0x18) = edx;
    eax = L0042B070(eax, edi, ebx, 0, 1);
    Vfffffff0 = eax;
    Vffffffec = Vfffffff0;
    L004100F0( *(ebp - 0x20), 2, A8, edi, ebx, 1);
    if(al == 0) {
        L00429610(65556);
    }
    L0042DF80(Vfffffff0, 0);
    L00431C20( *(A8 + 8), Ac, 0, 0x1a4);
    L00416790( *(ebp - 0x20), A8, 0x1a4, 0, 0, edi, ebx);
    L0042BD00( & Vffffffec);
    return L0042BD00(ebp - 0x18);
}

/*	Procedure: 0x00405DE4 - 0x00405DEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00405DE4()
{



}

/*	Procedure: 0x00405DF0 - 0x00405E60
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00406020()
 */

L00405DF0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esi = ecx;
    if(!(( *(A8 + 0x49) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    L0042E010(0, 1);
    ecx = esi;
    L004011C0(A8, 0x46e1b0);
    L00431C20( *(A8 + 8), Ac, 0, 0x1a5);
    return L00416790(esi, A8, 0x1a5, 0, 0, 0, 0);
}

/*	Procedure: 0x00405E61 - 0x00405E6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00405E61()
{



}

/*	Procedure: 0x00405E70 - 0x00406019
 *	Argument size: 8
 *	Local size: 468
 *	Save regs size: 12
 *	Called by:
 *		L0040853A()
 */

L00405E70(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V14;
	/* unknown */ void  V94;
	/* unknown */ void  V98;
	/* unknown */ void  V9c;
	/* unknown */ void  Va0;
	/* unknown */ void  Vfffffffc;



    esp = esp & -8;
    esi = Ac;
    eax = *(esi + 0x43) & 0xff;
    V94 = eax;
    if(eax == 0) {
        return;
    }
    V98 = V94;
    V98 = V98 + 4;
    eax = V98;
    V9c = eax;
    V9c = V9c + 4;
    *(esi + 0x42) = *(esi + 0x42) + 1;
    ebx = *(esi + 0x42) & 0xff;
    if(ebx < V94) {
        esp = ebp - 0xc;
        return;
    }
    eax = L0042EF30();
    edi = eax - *(esi + 0x44);
    if(edi > 0x78) {
        *(esi + 0x42) = 0;
        *(esi + 0x44) = eax;
        esp = ebp - 0xc;
        return;
    }
    if(ebx > V9c) {
        ecx = A8;
        L004011C0(esi, 0x46e1bc);
        L00434150( & Vfffffffc, 0x18);
        ecx = & V14;
        eax = L0042EF50() + 7200000;
        asm("adc edx,+0x0");
        V0 = edx;
        edx = ecx;
        *esp = eax;
        V8 = ecx;
        edi = esi + 0x98;
        ebx = esi + 0x5c;
        Vc = edi;
        V10 = "&Auto-banned this bastard for flooding.";
        L00428970(edx, ebx, 0x7f);
        (save)0x3a;
        (restore)ecx;
        if(L00428E60( & V14) != 0) {
            V14 = al - & V14 + 1;
        }
        esi = esp;
        L00414CB0(A8, esi);
        esp = ebp - 0xc;
        return L00429610(6553604);
    }
    if(ebx == V94) {
        edi = "uWARNING: The server has detected that you are flooding it. If you continue to flood the server, you will be banned.";
    } else {
        if(ebx == V98) {
            edi = "HFinal warning: If you continue to flood the server, you will be banned.";
        } else {
            esp = ebp - 0xc;
            return;
        }
    }
    ebx = & Va0;
    L00434150(ebx, 0x10);
    eax = L00431A10( *(esi + 8), 0x9b, 0, ebx, L00428EA0(edi, ebx + 0x10, 0xff) + 0x10);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0040601A - 0x0040601F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040601A()
{



}

/*	Procedure: 0x00406020 - 0x0040694F
 *	Argument size: 20
 *	Local size: 32
 *	Save regs size: 12
 *	Called by:
 *		L0040853A()
 */

L00406020(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff0;



    *(ebp - 0x2c) = ecx;
    if(A18 != 0x6c && A18 != 0x8e && A18 != 0x261) {
        *(A8 + 0x18) = L0042EF50();
        *(A8 + 0x1c) = edx;
    }
    Vfffffff0 = esp;
    if(!(eax = A18 - 0x64)) {
        if(eax = eax - 8) {
            goto L00406300;
        }
        if(eax = eax - 2) {
            goto L00406313;
        }
        if(eax = eax - 2) {
            goto L00406326;
        }
        if(eax = eax - 1) {
            goto L00406353;
        }
        if(eax = eax - 2) {
            goto L00406340;
        }
        if(eax = eax - 3) {
            goto L00406366;
        }
        if(eax = eax - 0x16) {
            goto L00406380;
        }
        if(eax = eax - 1) {
            goto L00406393;
        }
        if(eax = eax - 1) {
            goto L004063a6;
        }
        if(eax = eax - 8) {
            goto L004063c0;
        }
        if(eax = eax - 2) {
            goto L004063d3;
        }
        if(eax = eax - 2) {
            goto L004063e6;
        }
        if(eax = eax - 0x10) {
            goto L00406400;
        }
        if(eax = eax - 2) {
            goto L00406413;
        }
        if(eax = eax - 2) {
            goto L00406426;
        }
        if(eax = eax - 1) {
            goto L00406440;
        }
        if(eax = eax - 5) {
            goto L00406453;
        }
        if(eax = eax - 2) {
            goto L00406466;
        }
        if(eax = eax - 0x12) {
            goto L00406480;
        }
        if(eax = eax - 1) {
            goto L00406513;
        }
        if(eax = eax - 1) {
            goto L00406493;
        }
        if(eax = eax - 2) {
            goto L004064a6;
        }
        if(eax = eax - 3) {
            goto L004064c0;
        }
        if(eax = eax - 2) {
            goto L004064d3;
        }
        if(eax = eax - 2) {
            goto L004064e6;
        }
        if(eax = eax - 3) {
            goto L00406500;
        }
        if(eax = eax - 3) {
            goto L00406526;
        }
        if(eax = eax - 1) {
            goto L00406540;
        }
        if(eax = eax - 2) {
            goto L00406553;
        }
        if(eax = eax - 2) {
            goto L00406566;
        }
        if(eax = eax - 0x4e) {
            goto L00406580;
        }
        if(eax = eax - 0x64) {
            goto L00406593;
        }
        if(eax = eax - 2) {
            goto L004065a6;
        }
        if(eax = eax - 1) {
            goto L004065c0;
        }
        if(eax = eax - 2) {
            goto L004065d3;
        }
        if(eax = eax - 2) {
            goto L004065e6;
        }
        if(eax = eax - 2) {
            goto L00406600;
        }
        if(eax = eax - 2) {
            goto L00406613;
        }
        if(eax = eax - 9) {
            goto L00406640;
        }
        if(eax = eax - 1) {
            goto L00406653;
        }
        if(eax = eax - 2) {
            goto L00406626;
        }
        if(eax = eax - 0x1b) {
            goto L00406666;
        }
        if(eax = eax - 2) {
            goto L00406680;
        }
        if(eax = eax - 0x32) {
            goto L00406693;
        }
        if(eax = eax - 2) {
            goto L004066a6;
        }
        if(eax = eax - 1) {
            goto L004066c0;
        }
        if(eax = eax - 2) {
            goto L004066d3;
        }
        if(eax = eax - 1) {
            goto L004066e6;
        }
        if(eax = eax - 1) {
            goto L00406700;
        }
        if(eax = eax - 2) {
            goto L00406713;
        }
        if(eax = eax - 1) {
            goto L00406726;
        }
        if(eax = eax - 0x26) {
            goto L00406740;
        }
        if(eax = eax - 0x32) {
            goto L00406753;
        }
        if(eax = eax - 1) {
            goto L00406766;
        }
        if(eax = eax - 1) {
            goto L00406780;
        }
        if(eax = eax - 2) {
            goto L00406793;
        }
        if(eax = eax - 1) {
            goto L004067a6;
        }
        if(eax = eax - 2) {
            goto L004067c0;
        }
        if(eax = eax - 2) {
            goto L004067d3;
        }
        if(eax = eax - 2) {
            goto L004067e6;
        }
        if(eax = eax - 1) {
            goto L00406800;
        }
        if(eax = eax - 0xbc) {
            goto L00406813;
        }
        if(eax = eax - 1) {
            goto L00406830;
        }
        if(eax = eax - 1) {
            goto L00406846;
        }
        if(eax = eax - 2) {
            goto L00406860;
        }
        if(eax = eax - 0x128) {
            goto L00406876;
        }
        if(eax = eax - 1) {
            goto L00406890;
        }
        if(eax = eax - 2) {
            goto L004068a6;
        }
        if(eax = eax - 2) {
            goto L004068c0;
        }
        if(eax = eax - 1) {
            goto L004068d3;
        }
    } else {
        ecx = *(ebp - 0x2c);
        eax = L00401D10(A8, Ac, A10, A14);
        goto L00406946;
L00406300:
        ecx = *(ebp - 0x2c);
        eax = L004020C0(A8, Ac, A10, A14);
        goto L00406946;
L00406313:
        ecx = *(ebp - 0x2c);
        eax = L004020E0(A8, Ac, A10, A14);
        goto L00406946;
L00406326:
        ecx = *(ebp - 0x2c);
        eax = L00402170(A8, Ac, A10, A14);
        goto L00406946;
L00406340:
        ecx = *(ebp - 0x2c);
        eax = L004021D0(A8, Ac, A10, A14);
        goto L00406946;
L00406353:
        ecx = *(ebp - 0x2c);
        eax = L004157B0(A8, Ac, A10, A14);
        goto L00406946;
L00406366:
        ecx = *(ebp - 0x2c);
        eax = L004023A0(A8, Ac, A10, A14);
        goto L00406946;
L00406380:
        ecx = *(ebp - 0x2c);
        eax = L00402400(A8, Ac, A10, A14);
        goto L00406946;
L00406393:
        ecx = *(ebp - 0x2c);
        eax = L00402460(A8, Ac, A10, A14);
        goto L00406946;
L004063a6:
        ecx = *(ebp - 0x2c);
        eax = L004024A0(A8, Ac, A10, A14);
        goto L00406946;
L004063c0:
        ecx = *(ebp - 0x2c);
        eax = L00402D10(A8, Ac, A10, A14);
        goto L00406946;
L004063d3:
        ecx = *(ebp - 0x2c);
        eax = L00403190(A8, Ac, A10, A14);
        goto L00406946;
L004063e6:
        ecx = *(ebp - 0x2c);
        eax = L00403980(A8, Ac, A10, A14);
        goto L00406946;
L00406400:
        ecx = *(ebp - 0x2c);
        eax = L00412E50(A8, Ac, A10, A14);
        goto L00406946;
L00406413:
        ecx = *(ebp - 0x2c);
        eax = L00412EE0(A8, Ac, A10, A14);
        goto L00406946;
L00406426:
        ecx = *(ebp - 0x2c);
        eax = L00414FA0(A8, Ac, A10, A14);
        goto L00406946;
L00406440:
        ecx = *(ebp - 0x2c);
        eax = L00415120(A8, Ac, A10, A14);
        goto L00406946;
L00406453:
        ecx = *(ebp - 0x2c);
        eax = L00416F00(A8, Ac, A10, A14);
        goto L00406946;
L00406466:
        ecx = *(ebp - 0x2c);
        eax = L00417050(A8, Ac, A10, A14);
        goto L00406946;
L00406480:
        ecx = *(ebp - 0x2c);
        eax = L00409B60(A8, Ac, A10, A14);
        goto L00406946;
L00406493:
        ecx = *(ebp - 0x2c);
        eax = L00409E60(A8, Ac, A10, A14);
        goto L00406946;
L004064a6:
        ecx = *(ebp - 0x2c);
        eax = L0040A4E0(A8, Ac, A10, A14);
        goto L00406946;
L004064c0:
        ecx = *(ebp - 0x2c);
        eax = L0040A620(A8, Ac, A10, A14);
        goto L00406946;
L004064d3:
        ecx = *(ebp - 0x2c);
        eax = L0040A760(A8, Ac, A10, A14);
        goto L00406946;
L004064e6:
        ecx = *(ebp - 0x2c);
        eax = L0040AA30(A8, Ac, A10, A14);
        goto L00406946;
L00406500:
        ecx = *(ebp - 0x2c);
        eax = L0040AD20(A8, Ac, A10, A14);
        goto L00406946;
L00406513:
        ecx = *(ebp - 0x2c);
        eax = L0040AFD0(A8, Ac, A10, A14);
        goto L00406946;
L00406526:
        ecx = *(ebp - 0x2c);
        eax = L0040B130(A8, Ac, A10, A14);
        goto L00406946;
L00406540:
        ecx = *(ebp - 0x2c);
        eax = L0040B3A0(A8, Ac, A10, A14);
        goto L00406946;
L00406553:
        ecx = *(ebp - 0x2c);
        eax = L0040B590(A8, Ac, A10, A14);
        goto L00406946;
L00406566:
        ecx = *(ebp - 0x2c);
        eax = L0040B7E0(A8, Ac, A10, A14);
        goto L00406946;
L00406580:
        ecx = *(ebp - 0x2c);
        eax = L00403A90(A8, Ac, A10, A14);
        goto L00406946;
L00406593:
        ecx = *(ebp - 0x2c);
        eax = L00404010(A8, Ac, A10, A14);
        goto L00406946;
L004065a6:
        ecx = *(ebp - 0x2c);
        eax = L00404640(A8, Ac, A10, A14);
        goto L00406946;
L004065c0:
        ecx = *(ebp - 0x2c);
        eax = L00404990(A8, Ac, A10, A14);
        goto L00406946;
L004065d3:
        ecx = *(ebp - 0x2c);
        eax = L00404D80(A8, Ac, A10, A14);
        goto L00406946;
L004065e6:
        ecx = *(ebp - 0x2c);
        eax = L00404F40(A8, Ac, A10, A14);
        goto L00406946;
L00406600:
        ecx = *(ebp - 0x2c);
        eax = L004051B0(A8, Ac, A10, A14);
        goto L00406946;
L00406613:
        ecx = *(ebp - 0x2c);
        eax = L00405970(A8, Ac, A10, A14);
        goto L00406946;
L00406626:
        ecx = *(ebp - 0x2c);
        eax = L00405B70(A8, Ac, A10, A14);
        goto L00406946;
L00406640:
        ecx = *(ebp - 0x2c);
        eax = L00405D00(A8, Ac, A10, A14);
        goto L00406946;
L00406653:
        ecx = *(ebp - 0x2c);
        eax = L00405DF0(A8, Ac, A10, A14);
        goto L00406946;
L00406666:
        ecx = *(ebp - 0x2c);
        eax = L00415A60(A8, Ac, A10, A14);
        goto L00406946;
L00406680:
        ecx = *(ebp - 0x2c);
        eax = L00416000(A8, Ac, A10, A14);
        goto L00406946;
L00406693:
        ecx = *(ebp - 0x2c);
        eax = L0040DB20(A8, Ac, A10, A14);
        goto L00406946;
L004066a6:
        ecx = *(ebp - 0x2c);
        eax = L0040DC10(A8, Ac, A10, A14);
        goto L00406946;
L004066c0:
        ecx = *(ebp - 0x2c);
        eax = L0040DF50(A8, Ac, A10, A14);
        goto L00406946;
L004066d3:
        ecx = *(ebp - 0x2c);
        eax = L0040E200(A8, Ac, A10, A14);
        goto L00406946;
L004066e6:
        ecx = *(ebp - 0x2c);
        eax = L0040E5B0(A8, Ac, A10, A14);
        goto L00406946;
L00406700:
        ecx = *(ebp - 0x2c);
        eax = L0040E700(A8, Ac, A10, A14);
        goto L00406946;
L00406713:
        ecx = *(ebp - 0x2c);
        eax = L0040E830(A8, Ac, A10, A14);
        goto L00406946;
L00406726:
        ecx = *(ebp - 0x2c);
        eax = L0040EE00(A8, Ac, A10, A14);
        goto L00406946;
L00406740:
        ecx = *(ebp - 0x2c);
        eax = L0040F110(A8, Ac, A10, A14);
        goto L00406946;
L00406753:
        ecx = *(ebp - 0x2c);
        eax = L004102F0(A8, Ac, A10, A14);
        goto L00406946;
L00406766:
        ecx = *(ebp - 0x2c);
        eax = L004104E0(A8, Ac, A10, A14);
        goto L00406946;
L00406780:
        ecx = *(ebp - 0x2c);
        eax = L004105F0(A8, Ac, A10, A14);
        goto L00406946;
L00406793:
        ecx = *(ebp - 0x2c);
        eax = L004107E0(A8, Ac, A10, A14);
        goto L00406946;
L004067a6:
        ecx = *(ebp - 0x2c);
        eax = L00410960(A8, Ac, A10, A14);
        goto L00406946;
L004067c0:
        ecx = *(ebp - 0x2c);
        eax = L00410EB0(A8, Ac, A10, A14);
        goto L00406946;
L004067d3:
        ecx = *(ebp - 0x2c);
        eax = L004110F0(A8, Ac, A10, A14);
        goto L00406946;
L004067e6:
        ecx = *(ebp - 0x2c);
        eax = L004112D0(A8, Ac, A10, A14);
        goto L00406946;
L00406800:
        ecx = *(ebp - 0x2c);
        eax = L00411640(A8, Ac, A10, A14);
        goto L00406946;
L00406813:
        eax = L00417E20( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L00406830:
        eax = L00417E90( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L00406846:
        eax = L00417EC0( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L00406860:
        eax = L00418340( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L00406876:
        eax = L0040F570( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L00406890:
        eax = L0040F6E0( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L004068a6:
        eax = L0040F7B0( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L004068c0:
        eax = L0040F8A0( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
L004068d3:
        eax = L0040FAE0( *(ebp - 0x2c), A8, Ac, A10, A14);
        goto L00406946;
        eax = Vffffffe8;
        *(ebp - 0x28) = eax;
        L00431C20( *(A8 + 8), Ac, *( *(ebp - 0x28)), A18);
        L00416790( *(ebp - 0x2c), A8, A18, *( *(ebp - 0x28)), 0, 0, 0);
        eax = *(ebp - 0x28);
        if(*eax == 65563) {
            eax = L00408CB0( *(ebp - 0x2c), eax, "\nError-PTRQ");
        }
        if(Vffffffe4 != 0) {
            ecx = *(ebp - 0x24);
            eax = Vffffffe4(-1);
        }
        esp = *(ebp - 0x10);
    }
L00406946:
}

/*	Procedure: 0x00406950 - 0x004071B7
 *	Argument size: 16
 *	Local size: 3064
 *	Save regs size: 12
 */

L00406950(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vbf4;



    esp = esp & -8;
    ebx = & Vbf4;
    *(ebx + -356) = ecx;
    edi = A14;
    if(!(( *(A8 + 0x49) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    if(edi < 0x1a) {
        L00429610(65538);
    }
    *(ebx - 0x60) = A10;
    if(*(A8 + 0x16c) != 0) {
        L00429610(65539);
    }
    eax = *(ebx - 0x60);
    edi = edi - 0x18;
    *(ebx + -360) = eax;
    *(ebx + -360) = *(ebx + -360) + 0x18;
    *(ebx + -372) = edi;
    L004100F0( *(ebx + -356), 2, A8, *(ebx + -360), edi, 1);
    if(al == 0) {
        L00429610(65556);
    }
    ecx = *( *(ebx - 0x60) + 0x17) & 0xff;
    *(A8 + 0x1b9) = 0;
    if(*(A8 + 0x1b9) == 0 && !(( *(A8 + 0x50) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    ecx = *(ebx + -356);
    eax = L00403C00( *(A8 + 0x168), ebx + -3060);
    *(ebx + -3056) = *(ebx + -3060);
    eax = L0042B460(eax, *(ebx + -360), *(ebx + -372), 0, 16393);
    *(ebx - 0x58) = eax;
    *(ebx + -428) = *(ebx - 0x58);
    *(ebx + -424) = 0;
    if(edi != 0) {
        *(ebx + -424) = L0042E350( *(ebx + -360), *(ebx + -372));
    }
    eax = L0042C570( *(ebx - 0x58), 0);
    *(ebx - 8) = eax;
    *(ebx - 0x5c) = edx;
    *(A8 + 0x190) = *(ebx - 8);
    *(A8 + 0x194) = *(ebx - 0x5c);
    eax = *(ebx - 0x60);
    edx = *eax;
    eax = *(eax + 4);
    *(ebx - 0x54) = 0;
    edi = edx << 8 & 16711680;
    edi = edi | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    edi = edi | ecx >> 8 & 65280 | edx;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = ecx | eax << 0x18 | *(ebx - 0x54);
    edx = edi;
    *(ebx + -392) = ecx;
    *(ebx - 0x54) = edx;
    if(*(ebx - 0x54) <= *(ebx - 0x5c)) {
        != ? 0x406b35 : ;
        if(ecx >= *(ebx - 8)) {
            goto L00406b41;
        }
        *(ebx + -392) = *(ebx + -392) & -4096;
    } else {
L00406b41:
        *(ebx + -392) = *(ebx - 8);
        *(ebx - 0x54) = *(ebx - 0x5c);
    }
    *(A8 + 0x188) = *(ebx + -392);
    *(A8 + 0x18c) = *(ebx - 0x54);
    eax = L0042C570( *(ebx - 0x58), 16384);
    *(ebx - 0x10) = eax;
    *(ebx + -420) = edx;
    *(A8 + 0x1a0) = *(ebx - 0x10);
    *(A8 + 0x1a4) = *(ebx + -420);
    eax = *(ebx - 0x60);
    edx = *(eax + 8);
    eax = *(eax + 0xc);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    edi = edx;
    edx = edx << 0x18;
    ecx = ecx | edi >> 8 & 65280 | edx;
    edi = eax << 8 & 16711680;
    edi = edi | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    edi = edi | edx >> 8 & 65280 | eax;
    edx = ecx;
    *(ebx - 0x60) = 0;
    edi = edi | *(ebx - 0x60);
    ecx = edi;
    eax = edx;
    if(edx <= *(ebx + -420)) {
        != ? 0x406c01 : ;
        if(edi < *(ebx - 0x10)) {
            ecx = ecx & -4096;
            goto L00406c19;
        }
    }
    ecx = *(ebx - 0x10);
    eax = *(ebx + -420);
L00406c19:
    *(A8 + 0x198) = ecx;
    *(A8 + 0x19c) = eax;
    edi = *(ebx + -392) + ecx;
    edx = *(ebx - 0x54);
    asm("adc edx,eax");
    *(A8 + 0x180) = edi;
    *(A8 + 0x184) = edx;
    *(A8 + 0x1ac) = L0042EF30();
    if(*(ebx - 0x5c) >= 0) {
        != ? 0x406c5a : ;
        if(*(ebx - 8) > 262144 && !(( *(A8 + 0x4b) & 0xff) >> 6 & 1)) {
            eax = *( *(A8 + 0x168) + 0x20);
            edi = eax;
            if(eax != 0) {
                do {
                    if(*(edi + 0x16c) == 0x19c) {
                        L00429610(6553603);
                    }
                    edi = *edi;
                } while(edi != 0);
            }
        }
    }
    *(ebx - 0x1c) = ebx + -684;
    edx = ebx + -1004;
    eax = ebx + -352;
    *(ebx - 0x18) = edx;
    *(ebx - 0x14) = eax;
    L0042CCB0( *(ebx - 0x58), ebx - 0x50);
    L0042CFB0( *(ebx - 0x58), ebx + -747, 0x41);
    edi = ebx + -3052;
    *(ebx + -748) = al;
    eax = *(ebx - 0x5c);
    edx = eax << 8;
    ecx = 0;
    edx = edx & 16711680;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    *edi = edx | ecx >> 8 & 65280 | eax;
    ecx = *(ebx - 8);
    edx = *(ebx - 8);
    eax = *(ebx - 8);
    edx = edx >> 0x18;
    ecx = ecx << 8 & 16711680 | edx;
    edx = *(ebx - 8) << 0x18;
    *(edi + 4) = ecx | eax >> 8 & 65280 | edx;
    eax = *(ebx + -420);
    edx = eax << 8;
    ecx = 0;
    edx = edx & 16711680;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    *(edi + 8) = edx | ecx >> 8 & 65280 | eax;
    ecx = *(ebx - 0x10);
    edx = *(ebx - 0x10);
    eax = *(ebx - 0x10);
    edx = edx >> 0x18;
    ecx = ecx << 8 & 16711680 | edx;
    edx = *(ebx - 0x10) << 0x18;
    *(edi + 0xc) = ecx | eax >> 8 & 65280 | edx;
    *(edi + 0x10) = 0;
    *(edi + 0x14) = 0;
    *(ebx + -384) = *(ebx - 0x48);
    eax = *(ebx - 0x44);
    edx = eax << 8;
    ecx = 0;
    edx = edx & 16711680;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    *(edi + 0x18) = edx | ecx >> 8 & 65280 | eax;
    edx = *(ebx + -384) << 8 & 16711680;
    edx = edx | *(ebx + -384) >> 0x18;
    ecx = *(ebx + -384);
    *(ebx + -384) = *(ebx + -384) << 0x18;
    *(edi + 0x1c) = edx | ecx >> 8 & 65280 | *(ebx + -384);
    *(ebx + -368) = *(ebx - 0x40);
    eax = *(ebx - 0x3c);
    ecx = eax << 8;
    edx = 0;
    ecx = ecx & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    *(edi + 0x20) = ecx | edx >> 8 & 65280 | eax;
    edx = *(ebx + -368) << 8 & 16711680;
    edx = edx | *(ebx + -368) >> 0x18;
    ecx = *(ebx + -368);
    *(ebx + -368) = *(ebx + -368) << 0x18;
    *(edi + 0x24) = edx | ecx >> 8 & 65280 | *(ebx + -368);
    edx = *(ebx - 0x38);
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *(edi + 0x28) = eax | ecx >> 8 & 65280 | edx;
    ecx = *(ebx - 0x34);
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    eax = ecx;
    ecx = ecx << 0x18;
    *(edi + 0x2c) = edx | eax >> 8 & 65280 | ecx;
    eax = *(ebx - 0x30);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    *(edi + 0x30) = ecx | edx >> 8 & 65280 | eax;
    *(edi + 0x34) = 0;
    *(edi + 0x38) = 0;
    *(edi + 0x3c) = 0;
    *(edi + 0x40) = 0;
    *(edi + 0x42) = 0;
    *(edi + 0x44) = 0;
    *(edi + 0x46) = 0;
    edx = *(ebx + -684) & 0xff;
    *(edi + 0x48) = dl;
    *(edi + 0x49) = *(ebx + -1004) & 0xff;
    *(edi + 0x4a) = *(ebx + -352) & 0xff;
    *(edi + 0x4b) = *(ebx + -748) & 0xff;
    edi = edi + 0x4c;
    edi = edi + L00428EA0(ebx + -684, edi, 0xff);
    edi = edi + L00428EA0(ebx + -1004, edi, 0xff);
    edi = edi + L00428EA0(ebx + -352, edi, 0xff);
    edi = edi + L00428EA0(ebx + -748, edi, 0xff);
    edi = edi - ebx + -3052;
    if(edi > 0x800) {
        L00429610(65537);
    }
    *(ebx - 0x58) = *(A8 + 8);
    L00431A10( *(ebx - 0x58), 0x19d, Ac, ebx + -3052, edi);
    ecx = *(ebx - 8) - *(ebx + -392);
    edx = *(ebx - 0x5c);
    asm("sbb edx,[ebx-0x54]");
    L00431CB0( *(ebx - 0x58), 0x19e, Ac, ecx, edx);
    *(A8 + 0x16c) = 0x19c;
    *(A8 + 0x1a8) = 65536;
    *(A8 + 0x1b4) = 0;
    *(A8 + 0x1b8) = 0;
    edi = *(ebx + -428);
    *(ebx + -428) = 0;
    *(A8 + 0x170) = edi;
    edx = *(ebx + -424);
    *(ebx + -424) = 0;
    *(A8 + 0x178) = edx;
    *(A8 + 0x17c) = *(ebx + -372);
    *( *(ebx + -356) + 0x282) = *( *(ebx + -356) + 0x282) + 1;
    eax = *(ebx + -356);
    if(*(eax + 0x29c) != 0) {
        *(eax + 0x2a0) = 1;
    }
    L004288C0(ebx + -352, "\nDownload \"");
    ecx = ebx + -352;
    L00428A30(ecx, ebx + -684);
    L00428A30(ebx + -352, 0x46e2dc);
    ecx = *(ebx + -356);
    L004011C0(A8, ebx + -352);
    L00416790( *(ebx + -356), A8, 0x19c, 0, 0, *(ebx + -360), *(ebx + -372));
    *(ebx + -396) = esp;
    L00408140( *(ebx + -356), A8);
    goto L00407136;
    if(*(ebx + -408) != 0) {
        (save)-1;
        ecx = *(ebx + -416);
        *(ebx + -408)();
    }
    esp = *(ebx + -396);
L00407136:
    edx = *(A8 + 0x1b0);
    if(edx != 0 && *( *(ebx + -356) + 0x2a1) == 0) {
        *(A8 + 0x1b4) = edx * 4 + 0xfff & -4096;
        L0042F1C0( *( *(ebx + -356) + 0x6c), 0xfa0, 1);
        *( *(ebx + -356) + 0x2a1) = 1;
    }
    L0042E3E0(ebx + -424);
    L0042BD00(ebx + -428);
    return L0042BD00(ebx + -3056);
}

/*	Procedure: 0x004071B8 - 0x004071BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004071B8()
{



}

/*	Procedure: 0x004071C0 - 0x00407BBF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00408060()
 */

L004071C0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A8;
    (save)edi;
    esp = esp - 0x4c;
    *(ebp - 0x30) = ecx;
    eax = *(esi + 8);
    *(ebp - 0x4c) = eax;
    if(L00431770( *(ebp - 0x4c)) != 0) {
        L00429610(65539);
    }
    eax = *(esi + 4);
    *(ebp - 0x28) = eax;
    (save)ebp - 0x55;
    L00433470(eax);
    (restore)ecx;
    if(al == 0) {
        eax = L004333F0( *(ebp - 0x28));
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    eax = *(esi + 0x1b0);
    ebx = *(esi + 0x1a8);
    *(ebp - 0x44) = eax;
    if(eax != 0) {
        eax = *(esi + 0x1b4);
        *(ebp - 0x48) = eax;
        if(*(ebp - 0x55) != 0 && eax != 0) {
            ebx = ebx + 65536;
            if(ebx > 524288) {
                ebx = 524288;
            }
            *(esi + 0x1a8) = ebx;
        }
        if(ebx > *(ebp - 0x48)) {
            ebx = *(ebp - 0x48);
        }
        if(ebx = ebx & -4096) {
            goto L0040728f;
        }
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    if(*(ebp - 0x55) != 0) {
        ebx = ebx + 65536;
        if(ebx > 524288) {
            ebx = 524288;
        }
        *(esi + 0x1a8) = ebx;
    }
L0040728f:
    *(ebp - 0x2c) = *(esi + 0x170);
    ecx = *(esi + 0x1b8) & 0xff;
    if(ecx <= 1) {
        switch(ecx) {
            case 0:
                goto L004072af;
            case 1:
                goto L00407415;
        }
L004072af:
        *(ebp - 0x14) = *(esi + 0x188);
        *(ebp - 0x20) = *(esi + 0x18c);
        edi = *(esi + 0x190);
        *(ebp - 0x38) = *(esi + 0x194);
        edi = edi - *(ebp - 0x14);
        eax = *(ebp - 0x20);
        asm("sbb [ebp-0x38],eax");
        *(ebp - 0x3c) = ebx;
        eax = ebx;
        if(0 < *(ebp - 0x38)) {
            goto L004072ee;
        }
        != ? 0x4072eb : ;
        if(eax <= edi) {
            goto L004072ee;
        }
        *(ebp - 0x3c) = edi;
        if(*(ebp - 0x3c) == 0) {
            goto L004073d0;
        }
        eax = L0042C600( *(ebp - 0x2c), *(ebp - 0x14), *(ebp - 0x20), ebp - 0x3c, 0);
        *(ebp - 0x40) = eax;
        if(eax != 0) {
            goto L00407321;
        }
        L00429610(196724);
        if(*(esi + 0x1b9) == 0) {
            goto L00407350;
        }
        eax = *(ebp - 0x40);
        *(ebp - 0x50) = eax;
        L00431e40( *(ebp - 0x4c), *(ebp - 0x50), *(ebp - 0x3c));
        L0042E3E0(ebp - 0x50);
        goto L00407364;
        L00433030( *(ebp - 0x28), ebp - 0x40, *(ebp - 0x3c), 0);
        ecx = *(ebp - 0x3c);
        edx = 0;
        *(ebp - 0x14) = *(ebp - 0x14) + ecx;
        asm("adc [ebp-0x20],edx");
        *(esi + 0x188) = *(ebp - 0x14);
        eax = *(ebp - 0x20);
        edi = edi - ecx;
        *(esi + 0x18c) = eax;
        asm("sbb [ebp-0x38],edx");
        if(*(ebp - 0x44) == 0) {
            goto L004073b4;
        }
        *(ebp - 0x48) = *(ebp - 0x48) - *(ebp - 0x3c);
        *(esi + 0x1b4) = *(ebp - 0x48);
        if(*(ebp - 0x48) == 0) {
            goto L004073aa;
        }
        eax = L004333F0( *(ebp - 0x28));
        esp = ebp - 0xc;
        (restore)edi;
        return;
        if(eax = edi | *(ebp - 0x38)) {
            goto L004073d0;
        }
        eax = L004333F0( *(ebp - 0x28));
        esp = ebp - 0xc;
        (restore)edi;
        return;
        if(*(esi + 0x1b9) != 0) {
            goto L004073e2;
        }
        L00431f30( *(ebp - 0x4c));
        edx = *(esi + 0x1a0) - *(esi + 0x198);
        ecx = *(esi + 0x1a4);
        asm("sbb ecx,[esi+0x19c]");
        L00431CB0( *(ebp - 0x4c), 0x19e, 0, edx, ecx);
        *(esi + 0x1b8) = 1;
L00407415:
        *(ebp - 0x1c) = *(esi + 0x198);
        *(ebp - 0x14) = *(esi + 0x19c);
        edi = *(esi + 0x1a0);
        *(ebp - 0x20) = *(esi + 0x1a4);
        edi = edi - *(ebp - 0x1c);
        eax = *(ebp - 0x14);
        asm("sbb [ebp-0x20],eax");
        *(ebp - 0x24) = ebx;
        eax = ebx;
        if(0 < *(ebp - 0x20)) {
            goto L00407454;
        }
        != ? 0x407451 : ;
        if(eax <= edi) {
            goto L00407454;
        }
        *(ebp - 0x24) = edi;
        if(*(ebp - 0x24) == 0) {
            goto L00407540;
        }
        eax = L0042C600( *(ebp - 0x2c), *(ebp - 0x1c), *(ebp - 0x14), ebp - 0x24, 16384);
        *(ebp - 0x34) = eax;
        if(eax != 0) {
            goto L0040748a;
        }
        L00429610(196724);
        if(*(esi + 0x1b9) == 0) {
            goto L004074b4;
        }
        eax = *(ebp - 0x34);
        *(ebp - 0x54) = eax;
        L00431e40( *(ebp - 0x4c), *(ebp - 0x54), *(ebp - 0x24));
        L0042E3E0(ebp - 0x54);
        goto L004074c8;
        L00433030( *(ebp - 0x28), ebp - 0x34, *(ebp - 0x24), 0);
        edx = *(ebp - 0x24);
        ebx = 0;
        *(ebp - 0x1c) = *(ebp - 0x1c) + edx;
        asm("adc [ebp-0x14],ebx");
        *(esi + 0x198) = *(ebp - 0x1c);
        eax = *(ebp - 0x14);
        edi = edi - edx;
        *(esi + 0x19c) = eax;
        asm("sbb [ebp-0x20],ebx");
        if(*(ebp - 0x44) == 0) {
            goto L00407520;
        }
        *(ebp - 0x48) = *(ebp - 0x48) - *(ebp - 0x24);
        *(esi + 0x1b4) = *(ebp - 0x48);
        if(edi = edi | *(ebp - 0x20)) {
            goto L00407540;
        }
        if(*(ebp - 0x48) == 0) {
            goto L00407513;
        }
        eax = L004333F0( *(ebp - 0x28));
        esp = ebp - 0xc;
        (restore)edi;
        return;
        if(eax = edi | *(ebp - 0x20)) {
            goto L00407540;
        }
        eax = L004333F0( *(ebp - 0x28));
        esp = ebp - 0xc;
        (restore)edi;
        return;
        if(*(esi + 0x1b9) == 0) {
            L00431f30( *(ebp - 0x4c));
        }
    }
    L00416790( *(ebp - 0x30), esi, 0xbc, 0, 0, *(esi + 0x178), *(esi + 0x17c));
    L0042BD00(ebp - 0x2c);
    *(esi + 0x170) = 0;
    *(esi + 0x16c) = 0;
    L0042E3E0(esi + 0x178);
    *(esi + 0x178) = 0;
    *(esi + 0x17c) = 0;
    *( *(ebp - 0x30) + 0x282) = *( *(ebp - 0x30) + 0x282) - 1;
    if(*( *(ebp - 0x30) + 0x29c) == 0) {
        goto L004075d0;
    }
    *(eax + 0x2a0) = 1;
    esp = ebp - 0xc;
    (restore)edi;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x28c;
    *(ebp + -308) = ecx;
    if(( *(A8 + 0x49) & 0xff) >> 4 & 1) {
        goto L0040760f;
    }
    L00429610(65556);
    if(*(A8 + 0x16c) == 0) {
        goto L00407626;
    }
    L00429610(65539);
    if(A14 >= 0x4c) {
        goto L00407637;
    }
    L00429610(65538);
    *(ebp + -276) = A10;
    *(ebp + -280) = *( *(ebp + -276) + 0x48) & 0xff;
    *(ebp + -584) = *( *(ebp + -276) + 0x49) & 0xff;
    *(ebp - 0x10) = *( *(ebp + -276) + 0x4a) & 0xff;
    *(ebp + -652) = *( *(ebp + -276) + 0x4b) & 0xff;
    ebx = ( *( *(ebp + -276) + 0x46) & 65535) << 8;
    ebx = ebx | ecx >> 8;
    edi = *(ebp + -280) + 0x4c + *(ebp + -584) + *(ebp - 0x10) + *(ebp + -652);
    if(A14 >= edi + (bx & 65535)) {
        goto L004076ba;
    }
    L00429610(65538);
    A14 = edi;
    if(*(ebp + -280) != 0) {
        goto L004076d1;
    }
    L00429610(65538);
    *(ebp + -312) = *(ebp + -276);
    *(ebp + -312) = *(ebp + -312) + 0x4c;
    esi = *(ebp + -312) + *(ebp + -280);
    ecx = ebp + -272;
    edi = esi + *(ebp + -584) + *(ebp - 0x10) + *(ebp + -652);
    L00428F50(ecx, *(ebp + -312), *(ebp + -280));
    L004176f0(ebp + -272, esi, *(ebp + -584));
    L004100F0( *(ebp + -308), 3, A8, edi, ebx, 0);
    if(al != 0) {
        goto L00407758;
    }
    L00429610(65556);
    cl = 0;
    *(A8 + 0x1b9) = cl;
    if(*(A8 + 0x1b9) != 0 || ( *(eax + 0x50) & 0xff) >> 6 & 1) {
        goto L00407799;
    }
    L00429610(65556);
    ecx = ebp + -656;
    L00437460(edi, ebx, 0, 0, ebp + -272, ecx);
    *(ebp + -316) = eax;
    edx = ebp + -664;
    ecx = *(ebp + -308);
    L00403C00( *(A8 + 0x168), edx);
    ecx = *(ebp + -664);
    esi = eax;
    *(ebp + -660) = ecx;
    L0042BED0(esi, edi, ebx, ebp + -272, 0);
    if(al == 0) {
        goto L00407807;
    }
    L00429610(196723);
    L00428A30(ebp + -272, 0x46e2e0);
    L0042B600(esi, edi, ebx, ebp + -272, 16522, M0047e2f8);
    ebx = eax;
    *(ebp + -320) = ebx;
    L0042CB70(ebx, ebp + -647, 0x3f, 0);
    edx = ebp + -648;
    *(ebp + -648) = al;
    (save)M0047e2f8;
    L00428D80(edx);
    (restore)ecx;
    if(al != 0) {
        goto L0040787c;
    }
    L00429610(196723);
    *(ebp + -288) = 0;
    *(ebp + -284) = 0;
    L0042C570(ebx, 0);
    esi = edx << 8;
    ecx = 0;
    esi = esi & 16711680;
    esi = esi | ebx >> 0x18;
    ecx = ebx;
    ebx = ebx << 0x18;
    *(ebp + -304) = esi | ecx >> 8 & 65280 | ebx;
    esi = eax << 8 & 16711680;
    esi = esi | eax >> 0x18;
    esi = esi | eax >> 8 & 65280;
    ecx = *(ebp + -276);
    *(ebp + -300) = esi | eax << 0x18;
    edi = *(ecx + 4);
    ecx = *ecx << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ebx = esi;
    esi = esi << 0x18;
    ecx = ecx | ebx >> 8 & 65280 | esi;
    ebx = edi << 8 & 16711680;
    ebx = ebx | edi >> 0x18;
    ebx = ebx | edi >> 8 & 65280;
    edi = edi << 0x18;
    ebx = ebx | edi;
    esi = ecx;
    *(ebp - 0x10) = 0;
    ebx = ebx | *(ebp - 0x10);
    if(edx > esi) {
        goto L00407966;
    }
    != ? 0x40795f : ;
    if(eax >= ebx) {
        goto L00407966;
    }
    eax = eax & -4096;
    goto L0040796a;
    eax = ebx;
    edx = esi;
    *(A8 + 0x188) = eax;
    *(A8 + 0x18c) = edx;
    *(A8 + 0x190) = ebx;
    *(A8 + 0x194) = esi;
    *(ebp + -296) = -1;
    *(ecx + 4) = -1;
    edi = *( *(ebp + -276) + 0xc);
    *(ebp - 0x10) = 0;
    ecx = *(ecx + 8) << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ebx = esi;
    esi = esi << 0x18;
    ecx = ecx | ebx >> 8 & 65280 | esi;
    ebx = edi << 8 & 16711680;
    ebx = ebx | edi >> 0x18;
    ebx = ebx | edi >> 8 & 65280;
    ebx = ebx | edi << 0x18 | *(ebp - 0x10);
    esi = ecx;
    eax = eax + ebx;
    *(A8 + 0x198) = ebx;
    *(A8 + 0x19c) = esi;
    *(A8 + 0x1a0) = ebx;
    *(A8 + 0x1a4) = esi;
    *(A8 + 0x180) = eax;
    asm("adc edx,esi");
    *(A8 + 0x184) = edx;
    L0042EF30();
    *(A8 + 0x1ac) = eax;
    L0042E350( *(ebp + -276), A14);
    *(ebp + -580) = eax;
    L00431A10( *(A8 + 8), 0x1a0, Ac, ebp + -304, 0x18);
    *(A8 + 0x16c) = 0x19f;
    *(A8 + 0x1a8) = 0;
    *(A8 + 0x1b8) = 0;
    edx = *(ebp + -320);
    *(ebp + -320) = 0;
    *(A8 + 0x170) = edx;
    ebx = *(ebp + -580);
    *(ebp + -580) = 0;
    *(A8 + 0x174) = ebx;
    ecx = *(ebp + -316);
    *(ebp + -316) = 0;
    *(A8 + 0x178) = ecx;
    *(A8 + 0x17c) = *(ebp + -656);
    L004288C0(ebp + -576, 0x46e2e8);
    L00428C10(ebp + -576, *(ebp + -312), *(ebp + -280));
    L00428A30(ebp + -576, 0x46e2dc);
    ecx = *(ebp + -308);
    L004011C0(A8, ebp + -576);
    L00416790( *(ebp + -308), A8, 0x19f, 0, 0, *(A8 + 0x178), *(ebp + -656));
    L0042E3E0(ebp + -580);
    L0042BD00(ebp + -320);
    L0042BD00(ebp + -660);
    L0042E3E0(ebp + -316);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00407BC0 - 0x00407EEF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00408060()
 */

L00407BC0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffef;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff2;



    (save)esi;
    (save)edi;
    esp = esp - 0x54;
    esp = esp & -8;
    Vffffffd0 = ecx;
    Vffffffd4 = *(A8 + 8);
    if(( *(A8 + 0x1b8) & 0xff) > 3) {
        goto L00407ee5;
    }
    goto ( *(ecx * 4 + 0x46f210));
    L00431f90(Vffffffd4, & Vffffffa8, & Vffffffdc, & Vffffffc4, & Vffffffef);
    if(al == 0) {
        goto L00407ee5;
    }
    if(Vffffffdc != 0x1a1) {
        goto L00407c47;
    }
    edi = *(ebx + 0x190) - *(ebx + 0x188);
    esi = *(ebx + 0x194);
    asm("sbb esi,[ebx+0x18c]");
    if(Vffffffac != esi) {
        goto L00407c47;
    }
    if(Vffffffa8 == edi) {
        goto L00407c52;
    }
    L00429610(262260);
    *(ebx + 0x1b8) = 1;
    if(*(ebx + 0x1b9) == 0) {
        goto L00407c77;
    }
    (save) & Vffffffc8;
    (save)32768;
    (save)Vffffffd4;
    L00432170();
    goto L00407c90;
    L00432250(Vffffffc8, 32768, & Vffffffbc);
    Vffffffac = eax;
    edi = *(ebx + 0x188);
    esi = *(ebx + 0x18c);
    if(Vffffffac == 0) {
        goto L00407cdb;
    }
    L0042C770( *(ebx + 0x170), edi, esi, & Vffffffac, Vffffffbc, 0);
    ecx = 0;
    edi = edi + Vffffffbc;
    asm("adc esi,ecx");
    *(ebx + 0x188) = edi;
    *(ebx + 0x18c) = esi;
    if(esi > *(ebx + 0x194)) {
        goto L00407cf7;
    }
    != ? 0x407ced : ;
    if(edi >= *(ebx + 0x190)) {
        goto L00407cf7;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    *(ebx + 0x1b8) = 2;
    L00431f90(Vffffffd8, & Vffffffa4, & Vffffffc0, & Vffffffe8, & Vfffffff2);
    if(al == 0) {
        goto L00407ee5;
    }
    if(Vffffffc0 != 0x1a1) {
        goto L00407d53;
    }
    esi = *(ebx + 0x1a0) - *(ebx + 0x198);
    eax = *(ebx + 0x1a4);
    asm("sbb eax,[ebx+0x19c]");
    if(Vffffffa8 != eax) {
        goto L00407d53;
    }
    if(*esp == esi) {
        goto L00407d5e;
    }
    L00429610(262260);
    *(ebx + 0x1b8) = 3;
    if(*(ebx + 0x1b9) == 0) {
        goto L00407d83;
    }
    (save) & Vffffffe4;
    (save)32768;
    (save)Vffffffd8;
    L00432170();
    goto L00407d96;
    L00432250(Vffffffcc, 32768, & Vffffffd8);
    Vffffffc4 = eax;
    edi = *(ebx + 0x198);
    esi = *(ebx + 0x19c);
    if(Vffffffc4 == 0) {
        goto L00407de4;
    }
    L0042C770( *(ebx + 0x170), edi, esi, & Vffffffc4, Vffffffd8, 16384);
    ecx = 0;
    edi = edi + Vffffffd8;
    asm("adc esi,ecx");
    *(ebx + 0x198) = edi;
    *(ebx + 0x19c) = esi;
    if(esi > *(ebx + 0x1a4)) {
        goto L00407e00;
    }
    != ? 0x407df6 : ;
    if(edi >= *(ebx + 0x1a0)) {
        goto L00407e00;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    Vffffffbc = *(ebx + 0x170);
    eax = *( *(ebx + 0x174) + 0x49) & 0xff;
    edx = *(edi + 0x48) & 0xff;
    Vfffffff0 = eax;
    Vffffffe0 = edi + 0x4c + edx;
    esi = Vffffffe0 + eax;
    ( *(edi + 0x4a) & 0xff) :: 0;
    if(Vffffffc8 = *(edi + 0x4a) & 0xff) {
        goto L00407e41;
    }
    L0042CB60(Vffffffbc, esi, eax);
    esi = esi + Vffffffc8;
    L00417770(Vffffffbc, Vffffffe0, Vfffffff0, esi, *(edi + 0x4b) & 0xff);
    L00416790(Vffffffd8, ebx, 0xbd, 0, 0, *(ebx + 0x178), *(ebx + 0x17c));
    L0042BD00( & Vffffffbc);
    *(ebx + 0x170) = 0;
    *(ebx + 0x16c) = 0;
    L0042E3E0(ebx + 0x174);
    L0042E3E0(ebx + 0x178);
    *(ebx + 0x17c) = 0;
    L00431A10(Vffffffdc, 0x1a2, 0, 0, 0);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00407EF0 - 0x00408051
 *	Argument size: 20
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L00408060()
 */

L00407EF0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff0;



    esi = ecx;
    if(A18 == 0x6c) {
        goto L00407f15;
    }
    ecx = *(A8 + 0x168);
    *(ecx + 0x18) = L0042EF50();
    *(ecx + 0x1c) = edx;
    Vfffffff0 = esp;
    if(eax = A18 - 0x190) {
        goto L00407f50;
    }
    if(eax = eax - 2) {
        goto L00407f66;
    }
    if(eax = eax - 0xa) {
        goto L00407f80;
    }
    if(eax = eax - 3) {
        goto L00407f96;
    }
    if(eax = eax - 0x1e5) {
        goto L00407fb0;
    }
    if(eax = eax - 4) {
        goto L00407fc8;
    }
    if(eax = eax - 1) {
        goto L00407fe0;
    }
    goto L00408048;
    ecx = esi;
    L00404010(A8, Ac, A10, A14);
    goto L00408048;
    ecx = esi;
    L00404640(A8, Ac, A10, A14);
    goto L00408048;
    ecx = esi;
    L00406950(A8, Ac, A10, A14);
    goto L00408048;
    (save)A14;
    (save)A10;
    (save)Ac;
    (save)A8;
    ecx = esi;
    L004075e0();
    goto L00408048;
    L00418dc0(esi, A8, Ac, A10, A14);
    goto L00408048;
    L00418fc0(esi, A8, Ac, A10, A14);
    goto L00408048;
    L00419110(esi, A8, Ac, A10, A14);
    goto L00408048;
    edi = Vffffffe8;
    L00431C20( *(A8 + 8), Ac, *edi, A18);
    L00416790(esi, A8, A18, *edi, 0, 0, 0);
    if(*edi != 65563) {
        goto L00408037;
    }
    L00408CB0(esi, edi, 0x46e2f4);
    if(*(ebp - 0x1c) == 0) {
        goto L00408045;
    }
    ecx = *(ebp - 0x24);
    eax = *(ebp - 0x1c)(-1);
    esp = *(ebp - 0x10);
}

/*	Procedure: 0x00408060 - 0x00408133
 *	Argument size: 4
 *	Local size: 40
 *	Save regs size: 12
 *	Called by:
 *		L0040853A()
 */

L00408060(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = *(A8 + 0x16c);
    esi = ecx;
    if(edi == 0 || edi == 0x384) {
        for(edi = *(A8 + 8); 1; L004319C0(edi)) {
            ecx = ebp - 0x2c;
            eax = L004317A0(edi, ebp - 0x30, ecx, & Vfffffff0, ebp - 0x31);
            if(eax == 0) {
                break;
            }
            if(*(ebp - 0x31) == 0) {
                ecx = esi;
                L00407EF0(A8, Vfffffff0, eax, *(ebp - 0x30), *(ebp - 0x2c));
            }
        }
        edi = *(A8 + 0x16c);
    }
    Vffffffec = esp;
    if(edi == 0x19c) {
        ecx = esi;
        eax = L004071C0(A8);
    } else {
        if(edi == 0x19f) {
            ecx = esi;
            eax = L00407BC0(A8);
            goto L0040812a;
            L00431C20( *( *(A8 + 0x168) + 8), 0, *Vffffffe4, edi);
            eax = L004234F0(0, 0, 0);
            if(Vffffffe0 != 0) {
                ecx = Vffffffd8;
                eax = Vffffffe0(-1);
            }
            esp = *(ebp - 0x14);
        }
    }
L0040812a:
}

/*	Procedure: 0x00408134 - 0x0040813F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00408134()
{



}

/*	Procedure: 0x00408140 - 0x00408252
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00406950()
 */

L00408140(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = Ac;
    esp = esp - 0xc;
    edx = A8;
    if(*(eax + 0x3b) != 0) {
        Ac = *(eax + 0x168);
    }
    if(!(( *(Ac + 0x4b) & 0xff) >> 5 & 1)) {
        esi = 0;
    } else {
        eax = *(edx + 0x29c);
        esi = ( *(Ac + 0x34) & 65535) << 0xa;
        if(eax != 0) {
            edi = *(edx + 0x282) & 65535;
            if(edi == 0) {
                edi = 1;
            }
            edx = 0;
            ecx = eax;
            edx = edi / edi % edi / edi;
            ecx = eax & -1024;
            if(ecx < 0x400) {
                ecx = 0x400;
            }
            if(ecx < esi) {
                goto L004081bb;
            }
            if(esi == 0) {
L004081bb:
                esi = ecx;
            }
        }
    }
    eax = Ac;
    edi = *(eax + 0x20);
    bl = 0;
    if(edi != 0) {
        *(ebp - 0x18) = esi;
        *(ebp - 0x10) = esi;
        do {
            eax = *(ebp - 0x18);
            if(*(edi + 0x1b0) != eax && *(edi + 0x16c) == 0x19c) {
                eax = *(ebp - 0x10);
                *(edi + 0x1b0) = eax;
                bl = 1;
                if(esi == 0) {
                    eax = L004333F0( *(edi + 4));
                }
            }
            edi = *edi;
        } while(edi != 0);
    }
    if(bl != 0) {
        ebx = esi << 8 & 16711680;
        ebx = ebx | esi >> 0x18;
        ebx = ebx | esi >> 8 & 65280;
        ebx = ebx | esi << 0x18;
        ecx = ebp - 0x14;
        *(ebp - 0x14) = ebx;
        eax = L00431A10( *(Ac + 8), 0x1a3, 0, ecx, 4);
    }
}

/*	Procedure: 0x00408253 - 0x0040825F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00408253()
{



}

/*	Procedure: 0x00408348 - 0x00408382
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00408348(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(Ac != 625689688) {
        return 262257;
    }
    if(A10 != 0x10) {
        eax = A10 > 0x10 ? 262259 : 262258;
        return;
    }
    return 0;
}

/*	Procedure: 0x00408383 - 0x0040838F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00408383()
{



}

/*	Procedure: 0x0040853A - 0x004086A1
 *	Argument size: 4
 *	Local size: 40
 *	Save regs size: 12
 */

L0040853A(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff0;



    if(L00432A60( *(A8 + 4)) == 0x1c) {
        ecx = 0x47e000;
        eax = L00401310(A8);
        if(M0047e070 != 0 && M0047e01c == 0) {
            eax = L00414F70(0x47e000, 0);
        }
        return;
    }
    Vfffffff0 = esp;
    ebx = *(A8 + 8);
    L00431260(ebx);
    if(*(A8 + 0x3b) != 0) {
        ecx = 0x47e000;
        eax = L00408060(A8);
        esp = ebp - 0xc;
        return;
    }
    eax = L00430380(ebx);
    if(!(eax & -65536)) {
        if(!(eax & 524288)) {
            ecx = 0x47e000;
            eax = L004011C0(A8, 0x46e30c);
            esp = ebp - 0xc;
            return;
        }
        if(!(eax & 1048576)) {
            if(*(A8 + 0x3b) != 0) {
                esp = ebp - 0xc;
                return;
            }
            M0047e280 = (M0047e280 & 65535 ^ 11177) + 1 ^ 11177;
            *(A8 + 0x3c) = 1;
        }
    }
    while(1) {
        ecx = ebp - 0x2c;
        eax = L004317A0(ebx, ebp - 0x30, ecx, & Vffffffd8, ebp - 0x31);
        edi = eax;
        if(edi == 0) {
            goto L0040869a;
        }
        (save)A8;
        L00405E70(0x47e000);
        (restore)ecx;
        if(*(ebp - 0x31) == 0) {
            ecx = 0x47e000;
            L00406020(A8, Vffffffd8, edi, *(ebp - 0x30), *(ebp - 0x2c));
        }
        L004319C0(ebx);
    }
    ecx = 0x47e000;
    L00401280(A8, Vffffffe8);
    ecx = 0x47e000;
    eax = L00401310(A8);
    if(Vffffffe4 != 0) {
        ecx = Vffffffdc;
        eax = Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L0040869a:
    esp = ebp - 0xc;
}

/*	Procedure: 0x004086A2 - 0x004086AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004086A2()
{



}

/*	Procedure: 0x00408A50 - 0x00408B59
 *	Argument size: 4
 *	Local size: 260
 *	Save regs size: 12
 *	Called by:
 *		L00408B5A()
 */

L00408A50(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edx = *(A8 + 0x1c);
    edi = 0;
    esi = 0;
    do {
        ecx = *(edx + 0x20);
        edi = edi + 1;
        do {
            ecx = *ecx;
            esi = esi + 1;
        } while(ecx != 0);
        edx = *edx;
    } while(edx != 0);
    eax = ebp + -268;
    *(ebp + -268) = 0;
    L00428CD0(eax, edi, 0);
    L00428A30(ebp + -268, 0x46e364);
    ecx = A8;
    L00401190(ebp + -268);
    eax = esi + edi;
    edx = ebp + -268;
    *(ebp + -268) = 0;
    L00428CD0(edx, eax, 0);
    L00428A30(ebp + -268, 0x46e37c);
    ecx = A8;
    L00401190(ebp + -268);
    *(ebp + -268) = 0;
    L0042E470(ebp + -272);
    L00428CD0(ebp + -268, *(ebp + -272), 0);
    L00428A30(ebp + -268, " blocks of memory are allocated.");
    ecx = A8;
    return L00401190(ebp + -268);
}

/*	Procedure: 0x00408B5A - 0x00408CAA
 *	Argument size: -248
 *	Local size: 256
 *	Save regs size: 0
 */

L00408B5A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vffffff00;
	/* unknown */ void  Vffffff01;



    ecx = Ac;
    if(!(eax = *(ecx + 0xc) - 2)) {
        if(eax = eax - 1) {
            goto L00408c06;
        }
        if(eax = eax - 1) {
            goto L00408c60;
        }
        if(eax = eax - 1) {
            goto L00408c68;
        }
        if(!(eax = eax - 1)) {
            if(!(eax = eax - 1)) {
                if(eax = eax - 1) {
                    goto L00408be0;
                }
                if(eax = eax - 0x5c) {
                    goto L00408c84;
                }
                if(eax = eax - 1) {
                    goto L00408c90;
                }
                if(eax = eax - 1) {
                    goto L00408ca0;
                }
            } else {
                eax = L00438BF0();
            }
        } else {
            eax = L00438BE0();
            goto L00408ca7;
L00408be0:
            eax = L0041FF90(0, 0, 0, 0);
        }
    } else {
        ecx = 0x47e000;
        eax = L0040CFF0( *ecx);
        goto L00408ca7;
L00408c06:
        L004328E0(1, & Vffffff00, 0x100, 0);
        L00428D50( & Vffffff00, 0x3a);
        L00428CD0( & Vffffff00, M0047e260, 0);
        eax = L0042F3B0( & Vffffff01, Vffffff00 & 0xff, 0);
        goto L00408ca7;
L00408c60:
        eax = L00408A50(A8);
        goto L00408ca6;
L00408c68:
        eax = L00439CA0(0, 0x5b, 0x46e3fc, "@KDX Server 1.600\nHaxial Software Pty Ltd, 2001-4\n\nwww.haxial.com", 0, 0);
        goto L00408ca7;
L00408c84:
        (save)A8;
        eax = L00415380();
        goto L00408ca6;
L00408c90:
        (save) *ecx;
        eax = L004154F0(A8);
        goto L00408ca6;
L00408ca0:
        eax = L00415790(A8);
L00408ca6:
    }
L00408ca7:
}

/*	Procedure: 0x00408CAB - 0x00408CAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00408CAB()
{



}

/*	Procedure: 0x00408CB0 - 0x00408E32
 *	Argument size: 12
 *	Local size: 548
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 *		L004148A0()
 */

L00408CB0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffddc;
	/* unknown */ void  Vfffffddd;
	/* unknown */ void  Vfffffedc;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffef4;
	/* unknown */ void  Vfffffef5;



    ebx = A10;
    esi = A8;
    Vfffffef0 = esp;
    if(ebx == 0) {
        ebx = 0x46e414;
    }
    edi = & Vfffffddd;
    L004291F0(Ac, 0, edi, 0xfe);
    Vfffffddc = al;
    ecx = *ebx & 0xff;
    L00422280( *( *esi + 0x28), ebx + 1, ecx, edi, Vfffffddc & 0xff);
    esi = & Vfffffef5;
    L00437370(esi, 0x80, 12320);
    Vfffffef4 = al;
    L00428A30( & Vfffffef4, 0x46e198);
    L00428A30( & Vfffffef4, ebx);
    L00428A30( & Vfffffef4, 0x46e41c);
    L00428A30( & Vfffffef4, & Vfffffddc);
    L00428D50( & Vfffffef4, 0xa);
    ebx = L0042B600(1, 0, 0, 0x46e42c, 0x82, "\ntext/plain");
    *(ebp + -560) = ebx;
    (save)0;
    eax = L0042C570(ebx);
    edi = edx;
    edx = eax;
    (restore)ecx;
    *(ebp + -556) = eax;
    if(!(edx = edx | edi)) {
        L0042C860(ebx, 0, 0, 0x46e440, 3, 0);
        *(ebp + -556) = *(ebp + -556) + 3;
        asm("adc edi,+0x0");
    }
    L0042C860(ebx, *(ebp + -556), edi, esi, Vfffffef4 & 0xff, 0);
    eax = L0042BD00(ebp + -560);
    goto L00408e2b;
    if(Vfffffee4 != 0) {
        ecx = Vfffffedc;
        eax = Vfffffee4(-1);
    }
    esp = *(ebp + -272);
L00408e2b:
}

/*	Procedure: 0x00408E33 - 0x00408E3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00408E33()
{



}

/*	Procedure: 0x00408E70 - 0x00408F2E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00408E70(A8)
/* unknown */ void  A8;
{



    (save)esi;
    esp = esp - 0x48;
    ecx = *(A8 + 0x1c);
    *(A8 + 0x1c) = 0;
    *(A8 + 0x20) = 0;
    *(A8 + 0x28) = 0;
    edx = ecx;
    if(ecx != 0) {
        do {
            esi = *edx;
            *(ebp - 0x24) = esp;
            ecx = A8;
            L00401310(edx);
L00408ec3:
            edx = esi;
        } while(esi != 0);
        goto L00408ec9;
        if(*(ebp - 0x30) != 0) {
            (save)-1;
            ecx = *(ebp - 0x38);
            *(ebp - 0x30)();
        }
        esp = *(ebp - 0x24);
        goto L00408ec3;
    }
L00408ec9:
    *(ebp - 0x3c) = esp;
    L0041CD90( *( *A8 + 0xc), A8 + 0x2a4, 0, 0);
    L00413B90(A8);
    goto L00408f03;
    if(*(ebp - 0x48) != 0) {
        (save)-1;
        ecx = *(ebp - 0x50);
        *(ebp - 0x48)();
    }
    esp = *(ebp - 0x3c);
L00408f03:
    *(ebp - 0xc) = esp;
    ecx = A8;
    L0040C970();
    goto L00408f23;
    if(*(ebp - 0x18) != 0) {
        (save)-1;
        ecx = *(ebp - 0x20);
        *(ebp - 0x18)();
    }
    esp = *(ebp - 0xc);
L00408f23:
    esp = ebp - 8;
    (restore)esi;
    return L00438BE0();
}

/*	Procedure: 0x00408F2F - 0x00408F2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00408F2F()
{



}

/*	Procedure: 0x00408F30 - 0x00409379
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00409390()
 *		L0040CFF0()
 */

L00408F30()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffff8;



    esi = ecx;
    (save)edi;
    esp = esp - 0xdd0;
    esp = esp & -8;
    ebx = & Vfffffff8;
    *(ebx + -257) = 0;
    *(ebx + -264) = esp;
    edi = 0x46e444;
    L00432C80( *(esi + 8), *(esi + 0x260), 1);
    goto L00409006;
    eax = *(ebx + -272);
    *(ebx + -3532) = eax;
    L004288C0(ebx + -256, edi);
    L00428CD0(ebx + -256, *(esi + 0x260), 0);
    ecx = esi;
    L00401190(ebx + -256);
    L004291F0( *(ebx + -3532), 0, ebx + -255, 0xff);
    *(ebx + -256) = al;
    ecx = esi;
    L00401190(ebx + -256);
    *(ebx + -257) = 1;
    if(*(ebx + -276) != 0) {
        (save)-1;
        ecx = *(ebx + -284);
        *(ebx + -276)();
    }
    esp = *(ebx + -264);
L00409006:
    if(*(esi + 0x264) != 0) {
        *(ebx + -312) = esp;
        *(esi + 0xc) = L00432610(0x4086b0, 0x47e000, 0, 1, 0);
        L00432C80( *(esi + 0xc), *(esi + 0x264), 1);
        goto L004090e6;
        eax = *(ebx + -320);
        *(ebx + -3528) = eax;
        L004288C0(ebx + -256, edi);
        L00428CD0(ebx + -256, *(esi + 0x264), 0);
        ecx = esi;
        L00401190(ebx + -256);
        L004291F0( *(ebx + -3528), 0, ebx + -255, 0xff);
        ecx = ebx + -256;
        *(ebx + -256) = al;
        ecx = esi;
        L00401190(ecx);
        *(ebx + -257) = 1;
        if(*(ebx + -324) != 0) {
            (save)-1;
            ecx = *(ebx + -332);
            *(ebx + -324)();
        }
        esp = *(ebx + -312);
    }
L004090e6:
    if(*(esi + 0x268) != 0) {
        *(ebx + -288) = esp;
        *(esi + 0x10) = L00432610(0x4086b0, 0x47e000, 0, 1, 0);
        L00432C80( *(esi + 0x10), *(esi + 0x268), 1);
        goto L004091c6;
        *(ebx + -3524) = *(ebx + -296);
        L004288C0(ebx + -256, edi);
        L00428CD0(ebx + -256, *(esi + 0x268), 0);
        ecx = esi;
        L00401190(ebx + -256);
        L004291F0( *(ebx + -3524), 0, ebx + -255, 0xff);
        *(ebx + -256) = al;
        ecx = esi;
        L00401190(ebx + -256);
        *(ebx + -257) = 1;
        if(*(ebx + -300) != 0) {
            (save)-1;
            ecx = *(ebx + -308);
            *(ebx + -300)();
        }
        esp = *(ebx + -288);
    }
L004091c6:
    *(ebx + -1356) = 0;
    if(*(ebx + -257) == 0) {
        edx = ebx + -1360;
        L004328E0(1, ebx + -1356, 0x400, edx);
        L004288C0(ebx + -256, 0x46e460);
        *(ebx + -1360) = *(ebx + -1360) - 1;
        if(!(edi = ebx + -1356)) {
            do {
                L00428A30(ebx + -256, edi);
                L00428D50(ebx + -256, 0x3a);
                L00428CD0(ebx + -256, *(esi + 0x260), 0);
                L00428A30(ebx + -256, 0x46e478);
                edi = edi + ( *edi & 0xff) + 1;
            } while(*(ebx + -1360) = *(ebx + -1360) - 1);
        }
        *(ebx + -256) = *(ebx + -256) - 2;
        if(*(esi + 0x264) != 0) {
            L00428A30(ebx + -256, 0x46e47c);
            L00428CD0(ebx + -256, *(esi + 0x264), 0);
        }
        ecx = esi;
        L00401190(ebx + -256);
    }
    L00434150(ebx + -3520, 0x870);
    edx = ebx + -1356;
    L00416790(esi, ebx + -3520, 0xbe, 0, edx, 0, 0);
    L00438C50(0x408e70, esi);
    *(esi + 0x78) = L0042EF50();
    *(esi + 0x7c) = edx;
    L0042F0B0(0x402200, esi, 217500000, 0);
    L00414C70(esi);
    if(*(ebx + -257) == 0) {
        L0041FF90(0, 0, 0, 0);
    }
    (save)1;
    eax = L0041CBA0( *( *esi + 0xc));
    (restore)ecx;
    if(*(ebx + -257) != 0) {
        eax = L00439CA0(1, 3, 0, 0x46e484, 0, 0);
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0040937A - 0x00409380
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040937A()
{



}

/*	Procedure: 0x00409381 - 0x0040938F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00409381()
{



}

/*	Procedure: 0x00409390 - 0x0040982E
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409830()
 */

L00409390()
{
	/* unknown */ void  ebx;



    ebx = ecx;
    (save)esi;
    (save)edi;
    esp = esp - 0x34;
    L00438CC0(0x408b60, ebx);
    L0042E570("\nKDX Server", 0);
    L004295F0(0x408e40, ebx);
    L0041D990(0x47e2fc, 2);
    L0043AA80();
    L0043BC30();
    L0043C000(L0043BED0());
    *(ebx + 0x260) = 10700;
    *(ebx + 0x2d0) = 1048576;
    *(ebx + 0x280) = 11177;
    L004288C0(ebx + 0xa0, "\nNew Server");
    L00414800(ebx);
    if(*(ebx + 0x26c) == 0 && *(ebx + 0x270) == 0 && *(ebx + 0x274) == 0) {
        *(ebx + 0x26c) = L00435380();
        *(ebx + 0x270) = L00435380();
        *(ebx + 0x274) = L00435380();
    }
    *(ebx + 0x2b4) = L0042E310(204800);
    *(ebx + 0x2b8) = 0;
    *(ebx + 0x2bc) = 0;
    *(ebx + 0x6c) = L0042F070(0x408260, ebx);
    *(ebx + 0x60) = L00435A30();
    *(ebx + 0x64) = L00435A30();
    *(ebx + 0x68) = L00435A30();
    *(ebp - 0x14) = esp;
    *(ebx + 0x54) = L0042B5E0(1, 0, 0, 0x46e52c, 3);
    *(ebx + 0x50) = L0042BA30( *(ebx + 0x54), 0, 0, 0x46e534, 0x83);
    goto L00409585;
    if(*(ebx + 0x54) != 0) {
        L004234F0(0, 0, 0);
    }
    *(ebx + 0x54) = L0042BA30(1, 0, 0, 0x46e52c, 0x83);
    *(ebx + 0x50) = L0042BA30( *(ebx + 0x54), 0, 0, 0x46e534, 0x83);
    *(ebp - 0x34) = L0042BA30( *(ebx + 0x50), 0, 0, 0x46e53c, 0);
    L0042BD00(ebp - 0x34);
    *(ebp - 0x34) = L0042BA30( *(ebx + 0x50), 0, 0, 0x46e54c, 0);
    L0042BD00(ebp - 0x34);
    if(*(ebp - 0x20) != 0) {
        (save)-1;
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)();
    }
    esp = *(ebp - 0x14);
L00409585:
    L00409860(ebx);
    ecx = ebx;
    L00411DF0();
    if(*(ebx + 0x3c) == 0) {
        esi = L0042E3A0(0xe8);
        eax = L00435A30();
        *(ebp - 0x38) = eax;
        *(esi + 4) = *(ebp - 0x38);
        *(esi + 8) = L0042EF50();
        *(esi + 0xc) = edx;
        *(esi + 0x10) = 1;
        *(esi + 0x14) = 1;
        *(esi + 0x18) = -1;
        *(esi + 0x1c) = -1;
        *(esi + 0x20) = 1;
        *(esi + 0xe4) = 51200;
        L004288C0(esi + 0x24, 0x46e560);
        L0042A0A0(ebx + 0x3c, esi);
        *(ebp - 0x3c) = L0043C150(1413830740, 1684961139, ebp - 0x2c);
        *(ebp - 0x30) = 0x46e570;
        *(ebp - 0x10) = 0x46e578;
        edx = *( *(ebp - 0x10)) & 0xff;
        ecx = ( *( *(ebp - 0x30)) & 0xff) + 0x20 + *(ebp - 0x2c);
        L00435B10( *(ebp - 0x38), 0, 0, edx + edx + ecx + 3 & -4, ebp - 0x40);
        L00434150( *(ebp - 0x40), 0x20);
        edi = *(esi + 0xc);
        edx = *(esi + 8);
        eax = *(ebp - 0x40);
        ecx = edi << 8;
        esi = 0;
        ecx = ecx & 16711680;
        ecx = ecx | edi >> 0x18;
        esi = edi;
        edi = edi << 0x18;
        *eax = ecx | esi >> 8 & 65280 | edi;
        edi = edx << 8 & 16711680;
        edi = edi | edx >> 0x18;
        esi = edx;
        edx = edx << 0x18;
        *(eax + 4) = edi | esi >> 8 & 65280 | edx;
        *( *(ebp - 0x40) + 8) = 16777216;
        *( *(ebp - 0x40) + 0xc) = 16777216;
        edx = *(ebp - 0x2c) & 65535;
        ecx = *(ebp - 0x40);
        eax = edx;
        edx = edx >> 8;
        *(ecx + 0x18) = eax << 8 | edx;
        eax = *(ebp - 0x10);
        esi = *(ebp - 0x40);
        *(esi + 0x1c) = *eax & 0xff;
        ecx = *( *(ebp - 0x10)) & 0xff;
        *( *(ebp - 0x40) + 0x1d) = cl;
        edx = *( *(ebp - 0x30)) & 0xff;
        *( *(ebp - 0x40) + 0x1e) = dl;
        edi = *(ebp - 0x40) + 0x20;
        edi = edi + L00428EA0( *(ebp - 0x10), edi, 0xff);
        edi = edi + L00428EA0( *(ebp - 0x10), edi, 0xff);
        L004342A0(edi + L00428EA0( *(ebp - 0x30), edi, 0xff), *(ebp - 0x3c), *(ebp - 0x2c));
    }
    ecx = ebx;
    L004159D0();
    *(ebx + 8) = L00432610(0x4086b0, 0x47e000, 0, 1, 0);
    *(ebx + 0x14) = L00432610(0x409380, 0x47e000, 0, 2, 0);
    *(ebx + 0x18) = L0042F070(0x414c60, 0x47e000);
    *ebx = L00401000();
    edx = *(ebx + 0x2ac);
    if(edx > *(ebx + 0x2a4)) {
        ecx = *(ebx + 0x2b0);
        if(ecx > *(ebx + 0x2a8)) {
            L0041A270( *ebx, ebx + 0x2a4, 0, 0);
        }
    }
    ecx = ebx;
    L0040C640();
    L0040F2D0(ebx);
    if(L00435AB0( *(ebx + 0x60)) == 0) {
        eax = L0041CBA0( *(L0040BCF0() + 0xc), 1);
    } else {
        ecx = ebx;
        eax = L00408F30();
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0040982F - 0x0040982F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040982F()
{



}

/*	Procedure: 0x00409830 - 0x0040984F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042FDF0()
 */

L00409830()
{



    L00432450();
    L0042E130();
    ecx = 0x47e000;
    L00409390();
    return L0042E5B0();
}

/*	Procedure: 0x00409850 - 0x00409850
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00409850()
{



}

/*	Procedure: 0x00409851 - 0x0040985F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00409851()
{



}

/*	Procedure: 0x00409860 - 0x00409A76
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409390()
 */

L00409860(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    ebx = A8;
    (save)esi;
    if(*(ebx + 0x2c) == 0) {
        esi = L0042E3A0(0x278);
        *(esi + 4) = 1;
        *(esi + 0x198) = -1;
        *(esi + 0x19c) = -1;
        *(esi + 0x1a0) = -1;
        L004288C0(esi + 0x18, 0x46f680);
        L004288C0(esi + 0x58, "\rFor all users");
        L0042A0D0(ebx + 0x2c, esi);
        esi = L0042E3A0(0x278);
        *(esi + 4) = 2;
        *(esi + 0x1b0) = 2;
        *(esi + 0x198) = -1;
        *(esi + 0x19c) = -1;
        *(esi + 0x1a0) = -1;
        L004288C0(esi + 0x18, "\nVoice Chat");
        L004288C0(esi + 0x58, "*Voice Chat with anyone who joins this chat");
        L0042A0D0(ebx + 0x2c, esi);
        esi = L0042E3A0(0x278);
        *(esi + 4) = 3;
        *(esi + 0x198) = *(esi + 0x198) | 0x80;
        *(esi + 0x19c) = *(esi + 0x19c) | 0x80;
        *(esi + 0x1a0) = *(esi + 0x1a0) | 0x80;
        L004288C0(esi + 0x18, 0x46f6d4);
        L004288C0(esi + 0x58, 0x46f6e4);
        L0042A0D0(ebx + 0x2c, esi);
    }
    ecx = ebx;
    eax = L00409A80(1);
    esi = eax;
    if(esi == 0) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    ebx = L00435380();
    eax = 458129845;
    asm("mul ebx");
    ebx = ebx - (edx >> 5) * 0x12c;
    if(ebx <= 9) {
        switch(ebx) {
            case 0:
L004099cb:
                edx = "MLook, no bigger than a chestnut, but he eats as if his siesta depended on it!";
                ebx = 0x46f754;
                goto L00409a47;
            case 1:
                edx = "4Never argue with a fool because he's doing the same.";
                ebx = 0x46f754;
                goto L00409a47;
            case 2:
                edx = "\"I am Gopher Boy, pondering reality";
                ebx = 0x46f7b4;
                goto L00409a47;
            case 3:
                edx = "@Don't wish for everything unless you have a really big cupboard.";
                ebx = 0x46f754;
                goto L00409a47;
            case 4:
                edx = "6To download, or not to download, that is the question.";
                ebx = 0x46f838;
                goto L00409a47;
            case 5:
                edx = "CSo what is going on here?? Since when do Tim Tams come in fingers?!$May your progress bars smile at you.";
                ebx = 0x46f754;
                goto L00409a47;
            case 6:
                edx = "$May your progress bars smile at you.";
                ebx = 0x46f8b4;
                goto L00409a47;
            case 7:
                edx = "FHow much wood would a woodchuck chuck if a woodchuck could chuck wood?";
                ebx = "\tA. Beaver";
                goto L00409a47;
            case 8:
                edx = 0x46f90c;
                ebx = "\tDiskartes";
                goto L00409a47;
            case 9:
                edx = "(Now I can't even remember what I forgot!";
                ebx = 0x46f754;
                goto L00409a47;
        }
        goto L004099cb;
    }
    L004288C0(esi + 0xd8, 0);
    L004288C0(esi + 0x158, 0);
    eax = L0042EF50();
    *(esi + 0x10) = eax;
    *(esi + 0x14) = edx;
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00409A80 - 0x00409AA2
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409860()
 *		L00409B60()
 *		L00409E60()
 *		L0040A4E0()
 *		L0040A620()
 *		L0040A760()
 *		L0040AA30()
 *		L0040AFD0()
 *		L0040B130()
 *		L0040B3A0()
 *		L0040B590()
 *		L0040B7E0()
 */

L00409A80(A4)
/* unknown */ void  A4;
{



    eax = *(ecx + 0x2c);
    if(eax != 0) {
        do {
            if(*(eax + 4) == A4) {
                goto L00409a95;
            }
            eax = *eax;
        } while(eax != 0);
        goto L00409a9e;
L00409a95:
        return;
    }
L00409a9e:
    return 0;
}

/*	Procedure: 0x00409AA3 - 0x00409AAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00409AA3()
{



}

/*	Procedure: 0x00409AB0 - 0x00409AEE
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401310()
 *		L0040A4E0()
 *		L0040AFD0()
 */

L00409AB0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(Ac == 0) {
        return;
    }
    L0042A150(A8 + 0x2c, Ac);
    L00429D80(Ac + 0x1a4);
    esp = ebp;
    return L0042E3E0( & Ac);
}

/*	Procedure: 0x00409AEF - 0x00409AEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00409AEF()
{



}

/*	Procedure: 0x00409AF0 - 0x00409B54
 *	Argument size: 20
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L00409E60()
 *		L0040A4E0()
 *		L0040A620()
 *		L0040A760()
 *		L0040AFD0()
 */

L00409AF0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    eax = A8;
    esi = *(eax + 0x1a8);
    ebx = 0;
    edi = *(eax + 0x1a4);
    if(esi > 0) {
        do {
            edx = *(edi + ebx * 4);
            if(edx != A18) {
                Vfffffff0 = esp;
                eax = L00431A10( *(edx + 8), Ac, 0, A10, A14);
            }
L00409b44:
            ebx = ebx + 1;
        } while(ebx < esi);
        goto L00409b4b;
        if(*(ebp - 0x1c) != 0) {
            ecx = *(ebp - 0x24);
            eax = *(ebp - 0x1c)(-1);
        }
        esp = *(ebp - 0x10);
        goto L00409b44;
    }
L00409b4b:
}

/*	Procedure: 0x00409B55 - 0x00409B5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00409B55()
{



}

/*	Procedure: 0x00409B60 - 0x00409E5F
 *	Argument size: 16
 *	Local size: 1056
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00409B60(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    ebx = ecx;
    if(!(( *(A8 + 0x4c) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    ecx = *(ebx + 0x2c);
    edi = 0;
    *(ebp + -1068) = ecx;
    if(ecx != 0) {
        esi = A8;
        do {
            if(!( *( *(ebp + -1068) + 0x1b0) & 65535 & 1)) {
                (save)esi;
                L00429DE0( *(ebp + -1068) + 0x1a4);
                (restore)ecx;
                if(al != 0) {
                    edi = edi + 1;
                }
            }
            edx = *( *(ebp + -1068));
            *(ebp + -1068) = edx;
        } while(edx != 0);
    }
    if(edi > 0xa) {
        L00429610(65550);
    }
    L00435380();
    for(edi = eax; 1; edi = edi + 1) {
        if(edi <= 1) {
            edi = 2;
        }
        ecx = ebx;
        eax = L00409A80(edi);
        *(ebp + -1068) = eax;
        if(eax == 0) {
            break;
        }
    }
    eax = L0042E3A0(0x278);
    *(ebp + -1068) = eax;
    Vfffffff0 = esp;
    *(eax + 4) = edi;
    *( *(ebp + -1068) + 8) = L00435380();
    *( *(ebp + -1068) + 0x1b0) = 1;
    *( *(ebp + -1068) + 0x198) = -1;
    *( *(ebp + -1068) + 0x19c) = -1;
    *( *(ebp + -1068) + 0x1a0) = -1;
    L004288C0( *(ebp + -1068) + 0x18, 0x46f960);
    *(ebx + 0x80) = *(ebx + 0x80) + 1;
    if(*(ebx + 0x80) > 0x3e7) {
        *(ebx + 0x80) = 1;
    }
    L00428CD0( *(ebp + -1068) + 0x18, *(ebx + 0x80) & 65535, 0);
    esi = *(ebp + -1068) + 0x1a4;
    if(A8 == 0) {
        L00429610(65538);
    }
    L00429A00(esi, A8);
    esi = ebp + -1064;
    L00434150(esi, 0x24);
    eax = edi << 8 & 16711680;
    eax = eax | edi >> 0x18;
    eax = eax | edi >> 8 & 65280;
    *(esi + 8) = eax | edi << 0x18;
    ecx = *( *(ebp + -1068) + 8);
    eax = ecx << 8 & 16711680;
    eax = eax | ecx >> 0x18;
    edi = ecx;
    ecx = ecx << 0x18;
    *(esi + 0xc) = eax | edi >> 8 & 65280 | ecx;
    *(esi + 0x16) = 0x100;
    Vffffffd8 = *( *(ebp + -1068) + 0x18) & 0xff;
    *(esi + 0x20) = Vffffffd8;
    edi = *(A8 + 0x30) & 65535;
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    edx = edx | edi >> 8 & 65280;
    edi = edi << 0x18;
    ecx = esi + 0x24;
    *ecx = edx | edi;
    L00428EA0( *(ebp + -1068) + 0x18, ecx + 4, Vffffffd8);
    L00431A10( *(A8 + 8), 0xd8, Ac, esi, Vffffffd8 + 0x28);
    goto L00409e24;
    L00429D80( *(ebp + -1068) + 0x1a4);
    L0042E3E0(ebp + -1068);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        (save)-1;
        ecx = Vffffffdc;
        Vffffffe4();
    }
    esp = *(ebp - 0x10);
L00409e24:
    L0042A0D0(ebx + 0x2c, *(ebp + -1068));
    return L00416790(ebx, A8, 0xc8, 0, *(ebp + -1068) + 0x18, 0, 0);
}

/*	Procedure: 0x00409E60 - 0x0040A4D3
 *	Argument size: 16
 *	Local size: 92
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00409E60(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffbc = ecx;
    if(!(( *(A8 + 0x4b) & 0xff) >> 1 & 1)) {
        L00429610(65556);
    }
    if(A14 < 8) {
        L00429610(65538);
    }
    ebx = A10;
    edi = *ebx;
    eax = edi << 8 & 16711680;
    esi = edi;
    edx = edi;
    eax = eax | esi >> 0x18;
    eax = eax | edx >> 8 & 65280;
    ecx = Vffffffbc;
    eax = L00409A80(eax | edi << 0x18);
    *(ebp - 0x68) = eax;
    if(eax == 0) {
        L00429610(65548);
    }
    if(!(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        esi = *(ebx + 4);
        edi = esi << 8 & 16711680;
        edx = esi;
        eax = esi;
        edi = edi | edx >> 0x18;
        edi = edi | eax >> 8 & 65280;
        edi = edi | esi << 0x18;
        if(*( *(ebp - 0x68) + 8) != edi) {
            goto L00409f4e;
        }
        ecx = *(A8 + 0x38) & 0xff & 0x1f;
        edi = ecx;
        eax = *(ebp - 0x68);
        edx = *((edi >> 3) + eax + 0x198) & 0xff;
        eax = 7 & ecx;
        if(!(edx >> 7 - eax & 1)) {
L00409f4e:
            L00429610(65556);
        }
    }
    eax = A8;
    Vffffffa8 = eax;
    (save)Vffffffa8;
    L00429DE0( *(ebp - 0x68) + 0x1a4);
    (restore)ecx;
    if(al != 0) {
        L00429610(65549);
    }
    if(A8 == 0) {
        L00429610(65538);
    }
    L00429A00( *(ebp - 0x68) + 0x1a4, Vffffffa8);
    eax = *(ebp - 0x68);
    Vffffffec = *(eax + 0x1a8);
    Vffffffe8 = *(eax + 0x18) & 0xff;
    Vffffffe4 = *( *(ebp - 0x68) + 0xd8) & 0xff;
    Vffffffe0 = *( *(ebp - 0x68) + 0x158) & 0xff;
    Vffffffb8 = Vffffffec;
    Vffffffb8 = Vffffffb8 << 2;
    Vfffffff0 = Vffffffb8;
    Vfffffff0 = Vfffffff0 + 0x24;
    Vfffffff0 = Vfffffff0 + Vffffffe8;
    Vfffffff0 = Vfffffff0 + Vffffffe4;
    Vfffffff0 = Vfffffff0 + Vffffffe0;
    Vfffffff0 = Vfffffff0 + ( *( *(ebp - 0x68) + 0x1b2) & 0xff);
    Vfffffff0 = Vfffffff0 + ( *( *(ebp - 0x68) + 0x232) & 0xff);
    eax = Vfffffff0;
    *(ebp - 0x60) = eax;
    eax = L0042E310( *(ebp - 0x60));
    esi = eax;
    Vffffffc4 = eax;
    *(ebp - 0x64) = eax;
    L00434150(esi, 0x24);
    eax = *(ebp - 0x68);
    ebx = *(eax + 0x14);
    ecx = *(eax + 0x10);
    eax = ebx << 8;
    edx = 0;
    eax = eax & 16711680;
    eax = eax | ebx >> 0x18;
    edx = ebx;
    ebx = ebx << 0x18;
    *esi = eax | edx >> 8 & 65280 | ebx;
    eax = ecx << 8 & 16711680;
    eax = eax | ecx >> 0x18;
    edx = ecx;
    ecx = ecx << 0x18;
    *(esi + 4) = eax | edx >> 8 & 65280 | ecx;
    ebx = *( *(ebp - 0x68) + 4);
    eax = ebx << 8 & 16711680;
    eax = eax | ebx >> 0x18;
    edx = ebx;
    ebx = ebx << 0x18;
    *(esi + 8) = eax | edx >> 8 & 65280 | ebx;
    ecx = *( *(ebp - 0x68) + 8);
    eax = ecx << 8 & 16711680;
    eax = eax | ecx >> 0x18;
    edx = ecx;
    ecx = ecx << 0x18;
    *(esi + 0xc) = eax | edx >> 8 & 65280 | ecx;
    ebx = *( *(ebp - 0x68) + 0x1b0) & 65535;
    eax = ebx;
    ebx = ebx >> 8;
    *(esi + 0x14) = eax << 8 | ebx;
    edi = Vffffffec & 65535;
    edx = edi << 8;
    *(esi + 0x16) = edx | edi >> 8;
    *(esi + 0x20) = Vffffffe8;
    *(esi + 0x21) = Vffffffe4;
    al = Vffffffe0;
    *(esi + 0x22) = al;
    *(esi + 0x23) = 0;
    *(esi + 0x1e) = *( *(ebp - 0x68) + 0x1b2) & 0xff;
    *(esi + 0x1f) = *( *(ebp - 0x68) + 0x232) & 0xff;
    ebx = *( *(ebp - 0x68) + 0x1a4);
    Vffffffc0 = esi;
    Vffffffc0 = Vffffffc0 + 0x24;
    edx = 0;
    if(Vffffffec > 0) {
        eax = Vffffffec;
        Vffffffa4 = eax;
        Vffffffa4 = Vffffffa4 - 8;
        if(eax > 8) {
            ecx = Vffffffc0;
            do {
                esi = *( *(ebx + edx * 4) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *ecx = eax | edi >> 8 & 65280 | esi;
                esi = *( *(ebx + edx * 4 + 4) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *(ecx + 4) = eax | edi >> 8 & 65280 | esi;
                esi = *( *(ebx + edx * 4 + 8) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *(ecx + 8) = eax | edi >> 8 & 65280 | esi;
                esi = *( *(ebx + edx * 4 + 0xc) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *(ecx + 0xc) = eax | edi >> 8 & 65280 | esi;
                esi = *( *(ebx + edx * 4 + 0x10) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *(ecx + 0x10) = eax | edi >> 8 & 65280 | esi;
                esi = *( *(ebx + edx * 4 + 0x14) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *(ecx + 0x14) = eax | edi >> 8 & 65280 | esi;
                esi = *( *(ebx + edx * 4 + 0x18) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *(ecx + 0x18) = eax | edi >> 8 & 65280 | esi;
                esi = *( *(ebx + edx * 4 + 0x1c) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                eax = eax | esi >> 8 & 65280;
                *(ecx + 0x1c) = eax | esi << 0x18;
                edx = edx + 8;
                ecx = ecx + 0x20;
            } while(edx < Vffffffa4);
        }
        if(edx < Vffffffec) {
            ecx = edx * 4 + Vffffffc0;
            do {
                esi = *( *(ebx + edx * 4) + 0x30) & 65535;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                eax = eax | esi >> 8 & 65280;
                *ecx = eax | esi << 0x18;
                edx = edx + 1;
                ecx = ecx + 4;
            } while(edx < Vffffffec);
        }
    }
    ebx = Vffffffc0 + Vffffffb8;
    L00428EA0( *(ebp - 0x68) + 0x18, ebx, Vffffffe8);
    ebx = ebx + Vffffffe8;
    L00428EA0( *(ebp - 0x68) + 0xd8, ebx, Vffffffe4);
    ebx = ebx + Vffffffe4;
    L00428EA0( *(ebp - 0x68) + 0x158, ebx, Vffffffe0);
    ebx = ebx + Vffffffe0;
    ebx = ebx + L00428EA0( *(ebp - 0x68) + 0x1b2, ebx, 0xff);
    eax = L00428EA0( *(ebp - 0x68) + 0x232, ebx, 0xff);
    ebx = ebx + eax;
    if(ebx != Vffffffc4 + Vfffffff0) {
        L00429610(65537);
    }
    Vffffffdc = esp;
    L00431A10( *(A8 + 8), 0xcb, Ac, Vffffffc4, *(ebp - 0x60));
    goto L0040a427;
    if(A8 != 0) {
        L00429BC0( *(ebp - 0x68) + 0x1a4, Vffffffa8);
    }
    L004234F0(0, 0, 0);
    if(Vffffffd0 != 0) {
        (save)-1;
        ecx = Vffffffc8;
        Vffffffd0();
    }
    esp = *(ebp - 0x24);
L0040a427:
    ecx = *( *(ebp - 0x68) + 4);
    eax = ecx << 8 & 16711680;
    eax = eax | ecx >> 0x18;
    ebx = ecx;
    ecx = ecx << 0x18;
    Vffffffac = eax | ebx >> 8 & 65280 | ecx;
    edx = *(A8 + 0x30) & 65535;
    eax = edx << 8 & 16711680;
    esi = edx;
    ebx = edx;
    eax = eax | esi >> 0x18;
    eax = eax | ebx >> 8 & 65280;
    Vffffffb0 = eax | edx << 0x18;
    Vffffffb4 = 0;
    ecx = Vffffffbc;
    L00409AF0( *(ebp - 0x68), 0xcd, & Vffffffac, 0xc, A8);
    L00416790(Vffffffbc, A8, 0xca, 0, *(ebp - 0x68) + 0x18, 0, 0);
    return L0042E3E0(ebp - 0x64);
}

/*	Procedure: 0x0040A4D4 - 0x0040A4DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040A4D4()
{



}

/*	Procedure: 0x0040A4E0 - 0x0040A619
 *	Argument size: 16
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040A4E0(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = ecx;
    if(A14 < 4) {
        return;
    }
    ecx = *A10;
    edi = ecx << 8 & 16711680;
    eax = ecx;
    edx = ecx;
    ecx = ecx << 0x18;
    edi = edi | eax >> 0x18;
    ecx = esi;
    eax = L00409A80(edi | edx >> 8 & 65280 | ecx);
    edi = eax;
    if(edi == 0) {
        esp = ebp - 0xc;
        return;
    }
    eax = A8 != 0 ? L00429BC0(edi + 0x1a4, A8) : 0;
    if(eax == -1) {
        esp = ebp - 0xc;
        return;
    }
    ecx = *(edi + 4);
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    eax = ecx;
    ecx = ecx << 0x18;
    *(ebp - 0x18) = edx | eax >> 8 & 65280 | ecx;
    eax = *(A8 + 0x30) & 65535;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    *(ebp - 0x14) = ecx | edx >> 8 & 65280 | eax;
    *(ebp - 0x10) = 1;
    ecx = esi;
    L00409AF0(edi, 0xce, ebp - 0x18, 0xc, 0);
    eax = L00416790(esi, A8, 0xcc, 0, edi + 0x18, 0, 0);
    if(*(edi + 0x1a8) == 0) {
        eax = *(edi + 0x1b0) & 65535;
        if(!(eax & 1)) {
            eax = L00409AB0(esi, edi);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0040A61A - 0x0040A61F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040A61A()
{



}

/*	Procedure: 0x0040A620 - 0x0040A75A
 *	Argument size: 16
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040A620(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    *(ebp - 0x10) = ecx;
    if(!( *(ebx + 0x4b) & 0xff & 1)) {
        eax = L00429610(65556);
    }
    if(A14 < 0xd) {
        return;
    }
    edi = A10;
    edx = *edi;
    esi = edx << 8 & 16711680;
    eax = edx;
    ecx = edx;
    esi = esi | eax >> 0x18;
    esi = esi | ecx >> 8 & 65280;
    ecx = *(ebp - 0x10);
    eax = L00409A80(esi | edx << 0x18);
    esi = eax;
    if(esi == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(!(( *(ebx + 0x48) & 0xff) >> 7 & 1)) {
        ecx = *(ebx + 0x38) & 0xff & 0x1f;
        edx = ecx >> 3;
        eax = 7 & ecx;
        ecx = 7 - eax;
        if(!(( *(edx + esi + 0x19c) & 0xff) >> cl & 1)) {
            L00429610(65556);
        }
    }
    (save)ebx;
    (restore)ecx;
    if(L00429DE0(esi + 0x1a4) == 0) {
        esp = ebp - 0xc;
        return;
    }
    eax = *(ebx + 0x30) & 65535;
    ebx = eax << 8 & 16711680;
    edx = eax;
    ecx = eax;
    ebx = ebx | edx >> 0x18;
    ebx = ebx | ecx >> 8 & 65280;
    *(edi + 4) = ebx | eax << 0x18;
    if(A14 > 0x1000) {
        A14 = 0x1000;
    }
    ecx = *(ebp - 0x10);
    eax = L00409AF0(esi, 0xd0, A10, A14, 0);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0040A75B - 0x0040A75F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040A75B()
{



}

/*	Procedure: 0x0040A760 - 0x0040AA2C
 *	Argument size: 16
 *	Local size: 784
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040A760(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    eax = A8;
    Vffffffec = ecx;
    esi = A14;
    if(!(( *(eax + 0x4c) & 0xff) >> 4 & 1)) {
        eax = L00429610(65556);
    }
    if(esi < 0xc) {
        return;
    }
    ebx = A10;
    eax = *(ebx + 0xa) & 0xff;
    Vfffffff0 = eax;
    if(esi < eax + 0xc) {
        esp = ebp - 0xc;
        return;
    }
    eax = *ebx;
    ecx = eax;
    *(ebp + -796) = eax;
    edx = eax;
    ecx = ecx >> 8 & 65280;
    eax = eax << 0x18;
    *(ebp + -796) = *(ebp + -796) << 8;
    *(ebp + -796) = *(ebp + -796) & 16711680;
    *(ebp + -796) = *(ebp + -796) | edx >> 0x18;
    *(ebp + -796) = *(ebp + -796) | ecx;
    *(ebp + -796) = *(ebp + -796) | eax;
    ecx = Vffffffec;
    eax = L00409A80( *(ebp + -796));
    edi = eax;
    if(edi == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(!(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        ecx = *(A8 + 0x38) & 0xff & 0x1f;
        eax = ecx >> 3;
        esi = 7 & ecx;
        ecx = 7 - esi;
        if(!(( *(eax + edi + 0x1a0) & 0xff) >> cl & 1)) {
            L00429610(65556);
        }
    }
    (save)A8;
    (restore)ecx;
    if(L00429DE0(edi + 0x1a4) == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(Vfffffff0 > 0x7f) {
        Vfffffff0 = 0x7f;
    }
    eax = Vfffffff0;
    Vffffffe8 = eax;
    eax = edi + 0xd8;
    L00428F50(eax, ebx + 0xc, Vffffffe8);
    L00428970(edi + 0x158, A8 + 0x98, 0x3f);
    eax = L0042EF50();
    esi = ebp + -792;
    *(edi + 0x10) = eax;
    ecx = edx << 8;
    ebx = 0;
    ecx = ecx & 16711680;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    *(edi + 0x14) = edx;
    *esi = ecx | edx << 0x18;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    *(esi + 4) = ecx | edx >> 8 & 65280 | eax;
    ecx = *(ebp + -796);
    ebx = *(ebp + -796);
    eax = *(ebp + -796);
    ebx = ebx >> 0x18;
    edx = *(ebp + -796) << 0x18;
    ecx = ecx << 8 & 16711680 | ebx;
    *(esi + 8) = ecx | eax >> 8 & 65280 | edx;
    ecx = *(A8 + 0x30) & 65535;
    ebx = ecx << 8 & 16711680;
    ebx = ebx | ecx >> 0x18;
    ebx = ebx | ecx >> 8 & 65280;
    *(esi + 0xc) = ebx | ecx << 0x18;
    *(esi + 0x10) = 0;
    *(esi + 0x14) = 0;
    *(esi + 0x18) = Vfffffff0;
    *(esi + 0x19) = *(edi + 0x158) & 0xff;
    *(esi + 0x1a) = 0;
    esi = esi + 0x1c;
    L00428EA0(edi + 0xd8, esi, Vffffffe8);
    esi = esi + Vfffffff0;
    L00428EA0(edi + 0x158, esi, ebx);
    ecx = Vfffffff0 + 0x1c + ebx;
    ecx = Vffffffec;
    L00409AF0(edi, 0xd2, ebp + -792, ecx, 0);
    eax = L00416790(Vffffffec, A8, 0xd1, 0, edi + 0x18, 0, 0);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0040AA2D - 0x0040AA2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040AA2D()
{



}

/*	Procedure: 0x0040AA30 - 0x0040AD19
 *	Argument size: 16
 *	Local size: 2096
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040AA30(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A14;
    Vffffffc8 = ecx;
    if(edi < 0x10) {
        L00429610(65538);
    }
    eax = A10;
    Vffffffe8 = eax;
    esi = *(Vffffffe8 + 8) & 65535;
    Vfffffff0 = esi;
    Vfffffff0 = Vfffffff0 << 8;
    Vfffffff0 = Vfffffff0 | Vfffffff0 >> 8;
    Vfffffff0 = Vfffffff0 & 65535;
    Vffffffe4 = *(Vffffffe8 + 0xf) & 0xff;
    Vffffffec = Vfffffff0;
    Vffffffec = Vffffffec << 2;
    if(edi < Vffffffec + 0x10 + Vffffffe4) {
        L00429610(65538);
    }
    edi = *Vffffffe8;
    eax = edi << 8 & 16711680;
    edx = edi;
    ecx = edi;
    eax = eax | edx >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    ecx = Vffffffc8;
    eax = L00409A80(eax | edi << 0x18);
    *(ebp + -2108) = eax;
    if(eax == 0) {
        L00429610(65548);
    }
    (save)A8;
    L00429DE0( *(ebp + -2108) + 0x1a4);
    (restore)ecx;
    if(al == 0) {
        L00429610(65556);
    }
    ebx = ebp + -2104;
    L00434150(ebx, 0x1c);
    edx = *( *(ebp + -2108) + 4);
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *ebx = eax | ecx >> 8 & 65280 | edx;
    esi = *( *(ebp + -2108) + 8);
    eax = esi << 8 & 16711680;
    eax = eax | esi >> 0x18;
    ecx = esi;
    esi = esi << 0x18;
    *(ebx + 4) = eax | ecx >> 8 & 65280 | esi;
    edx = *(A8 + 0x30) & 65535;
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *(ebx + 8) = eax | ecx >> 8 & 65280 | edx;
    esi = Vfffffff0 & 65535;
    eax = esi;
    esi = esi >> 8;
    *(ebx + 0xe) = eax << 8 | esi;
    edi = *( *(ebp + -2108) + 0x1a8) & 65535;
    ecx = edi << 8;
    *(ebx + 0x10) = ecx | edi >> 8;
    al = Vffffffe4;
    *(ebx + 0x18) = al;
    *(ebx + 0x19) = *( *(ebp + -2108) + 0x18) & 0xff;
    *(ebx + 0x1a) = *( *(ebp + -2108) + 0xd8) & 0xff;
    esi = ebx + 0x1c;
    L004342A0(esi, Vffffffe8 + Vffffffec + 0x10, Vffffffe4);
    esi = esi + Vffffffe4;
    esi = esi + L00428EA0( *(ebp + -2108) + 0x18, esi, 0xff);
    Vffffffec = esi + L00428EA0( *(ebp + -2108) + 0xd8, esi, 0xff);
    Vffffffec = Vffffffec - ebx;
    if(Vfffffff0 > 0x14) {
        Vfffffff0 = 0x14;
    }
    edi = Vffffffe8 + 0x10;
    if(!(Vfffffff0 = Vfffffff0 - 1)) {
        do {
            ecx = *edi;
            esi = ecx << 8 & 16711680;
            edx = ecx;
            eax = ecx;
            ecx = ecx << 0x18;
            esi = esi | edx >> 0x18;
            ecx = Vffffffc8;
            esi = L00401680(esi | eax >> 8 & 65280 | ecx);
            edi = edi + 4;
            if(esi != 0) {
                (save)esi;
                L00429DE0( *(ebp + -2108) + 0x1a4);
                (restore)ecx;
                if(al == 0) {
                    Vffffffe0 = esp;
                    L00431A10( *(esi + 8), 0xd4, 0, ebx, Vffffffec);
                }
            }
L0040ace3:
        } while(Vfffffff0 = Vfffffff0 - 1);
        goto L0040aced;
        if(Vffffffd4 != 0) {
            (save)-1;
            ecx = Vffffffcc;
            Vffffffd4();
        }
        esp = *(ebp - 0x20);
        goto L0040ace3;
    }
L0040aced:
    return L00416790(Vffffffc8, A8, 0xd3, 0, *(ebp + -2108) + 0x18, 0, 0);
}

/*	Procedure: 0x0040AD1A - 0x0040AD1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040AD1A()
{



}

/*	Procedure: 0x0040AD20 - 0x0040AFC5
 *	Argument size: 16
 *	Local size: 32
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040AD20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffe4 = ecx;
    edx = ( *(A8 + 0x4b) & 0xff) >> 1;
    if(!(edx & 1)) {
        L00429610(65556);
    }
    ebx = ( *(A8 + 0x4c) & 0xff) >> 2;
    *(ebp - 0x29) = 0;
    Vffffffe8 = *(A8 + 0x38) & 0xff;
    Vffffffe8 = Vffffffe8 & 0x1f;
    Vffffffec = 4;
    Vfffffff0 = 0;
    esi = *(Vffffffe4 + 0x2c);
    if(esi != 0) {
        edx = (Vffffffe8 & 0xff) >> 3;
        *(ebp - 0x24) = 7;
        *(ebp - 0x24) = *(ebp - 0x24) - (7 & Vffffffe8 & 0xff);
        do {
            if(*(ebp - 0x29) == 0) {
                ebx = *(edx + esi + 0x198) & 0xff;
                ecx = *(ebp - 0x24);
                if(ebx >> cl & 1 || *(esi + 0x1b0) & 65535 & 1) {
                    goto L0040adeb;
                }
            }
            Vfffffff0 = Vfffffff0 + 1;
            Vffffffec = Vffffffec + 0x14;
            Vffffffec = Vffffffec + ( *(esi + 0x18) & 0xff);
            Vffffffec = Vffffffec + ( *(esi + 0x58) & 0xff);
            Vffffffec = Vffffffec + 3;
            Vffffffec = Vffffffec & -4;
            eax = Vffffffec;
L0040adeb:
            esi = *esi;
        } while(esi != 0);
    }
    eax = Vffffffec;
    Vffffffe0 = eax;
    eax = L0042E3A0(Vffffffe0);
    *(ebp - 0x24) = eax;
    *(ebp - 0x28) = eax;
    edx = Vfffffff0;
    eax = Vfffffff0;
    Vfffffff0 = Vfffffff0 << 0x18;
    ecx = Vfffffff0 << 8 & 16711680 | edx >> 0x18;
    ecx = ecx | eax >> 8 & 65280 | Vfffffff0;
    *( *(ebp - 0x24)) = ecx;
    edi = *(ebp - 0x24);
    ebx = *(Vffffffe4 + 0x2c);
    edi = edi + 4;
    if(ebx != 0) {
        eax = Vffffffe8 & 0xff;
        Vfffffff0 = eax;
        Vfffffff0 = Vfffffff0 >> 3;
        Vffffffe8 = 7;
        Vffffffe8 = Vffffffe8 - (7 & eax);
        do {
            if(*(ebp - 0x29) == 0) {
                edx = *(Vfffffff0 + ebx + 0x198) & 0xff;
                ecx = Vffffffe8;
                if(edx >> cl & 1 || *(ebx + 0x1b0) & 65535 & 1) {
                    goto L0040af5c;
                }
            }
            edx = *(ebx + 4);
            esi = edx << 8 & 16711680;
            esi = esi | edx >> 0x18;
            eax = edx;
            edx = edx << 0x18;
            *edi = esi | eax >> 8 & 65280 | edx;
            esi = *(ebx + 8);
            ecx = esi << 8 & 16711680;
            ecx = ecx | esi >> 0x18;
            edx = esi;
            esi = esi << 0x18;
            *(edi + 4) = ecx | edx >> 8 & 65280 | esi;
            ecx = *(ebx + 0x1b0) & 65535;
            eax = ecx;
            ecx = ecx >> 8;
            *(edi + 0xe) = eax << 8 | ecx;
            edx = *(ebx + 0x1a8) & 65535;
            esi = edx;
            edx = edx >> 8;
            esi = esi << 8 | edx;
            *(edi + 0x10) = si;
            *(edi + 0x12) = *(ebx + 0x18) & 0xff;
            ecx = *(ebx + 0x58) & 0xff;
            edx = ebx + 0x18;
            *(edi + 0x13) = cl;
            esi = edi + 0x14;
            esi = esi + L00428EA0(edx, esi, 0xff);
            L00428EA0(ebx + 0x58, esi, 0xff);
            edx = ( *(ebx + 0x18) & 0xff) + 0x17;
            edi = (( *(ebx + 0x58) & 0xff) + edx & -4) + edi;
L0040af5c:
            ebx = *ebx;
        } while(ebx != 0);
    }
    if(Vffffffec != edi - *(ebp - 0x24)) {
        L00429610(65546);
    }
    L00431A10( *(A8 + 8), 0xd7, Ac, *(ebp - 0x24), Vffffffe0);
    L00416790(Vffffffe4, A8, 0xd6, 0, 0, 0, 0);
    return L0042E3E0(ebp - 0x28);
}

/*	Procedure: 0x0040AFC6 - 0x0040AFCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040AFC6()
{



}

/*	Procedure: 0x0040AFD0 - 0x0040B12C
 *	Argument size: 16
 *	Local size: 264
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040AFD0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = ecx;
    if(!(( *(A8 + 0x4c) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    if(A14 < 4) {
        L00429610(65538);
    }
    edx = *A10;
    eax = edx << 8 & 16711680;
    edi = edx;
    ecx = edx;
    eax = eax | edi >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    ecx = esi;
    edi = L00409A80(eax | edx << 0x18);
    if(edi == 0) {
        L00429610(65548);
    }
    if(*(edi + 4) == 1) {
        L00429610(65556);
    }
    ecx = *(edi + 4);
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    eax = ecx;
    ecx = ecx << 0x18;
    *(ebp + -276) = edx | eax >> 8 & 65280 | ecx;
    eax = *(A8 + 0x30) & 65535;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = ecx | eax << 0x18;
    *(ebp + -272) = ecx;
    ecx = esi;
    L00409AF0(edi, 0xdd, ebp + -276, 8, 0);
    eax = edi + 0x18;
    L004288C0(ebp + -268, eax);
    L00409AB0(esi, edi);
    L00431C20( *(A8 + 8), Ac, 0, 0xc9);
    L00416790(esi, A8, 0xc9, 0, ebp + -268, 0, 0);
    return L00413B90(esi);
}

/*	Procedure: 0x0040B12D - 0x0040B12F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040B12D()
{



}

/*	Procedure: 0x0040B130 - 0x0040B39F
 *	Argument size: 16
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040B130(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A14;
    esi = ecx;
    if(!(( *(A8 + 0x4c) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    if(edi < 0x30) {
        L00429610(65538);
    }
    Vfffffff0 = *(A10 + 0x2a) & 0xff;
    Vffffffec = *(A10 + 0x2b) & 0xff;
    *(ebp - 0x1c) = *(A10 + 0x2d) & 0xff;
    *(ebp - 0x18) = *(A10 + 0x2c) & 0xff;
    *(ebp - 0x18) = *(ebp - 0x18) + (Vffffffec & 0xff) + (Vfffffff0 & 0xff) + 0x30;
    *(ebp - 0x1c) = *(ebp - 0x1c) + *(ebp - 0x18);
    if(edi < *(ebp - 0x1c)) {
        L00429610(65538);
    }
    if(Vfffffff0 == 0) {
        L00429610(65538);
    }
    for(edi = L00435380(); 1; edi = edi + 1) {
        if(edi <= 1) {
            edi = 2;
        }
        ecx = esi;
        eax = L00409A80(edi);
        *(ebp - 0x20) = eax;
        if(eax == 0) {
            break;
        }
    }
    eax = L0042E3A0(0x278);
    *(ebp - 0x20) = eax;
    *( *(ebp - 0x20) + 4) = edi;
    ecx = *(A10 + 4);
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    eax = *(ebp - 0x20);
    edi = ecx;
    ecx = ecx << 0x18;
    *(eax + 8) = edx | edi >> 8 & 65280 | ecx;
    edi = *(A10 + 0x28) & 65535;
    ecx = edi;
    edi = edi >> 8;
    ecx = ecx << 8 | edi;
    *( *(ebp - 0x20) + 0x1b0) = cx;
    eax = *(ebp - 0x20);
    *(eax + 0x198) = *(A10 + 0x14);
    edi = *(ebp - 0x20);
    *(edi + 0x19c) = *(A10 + 0x18);
    ecx = *(A10 + 0x1c);
    *( *(ebp - 0x20) + 0x1a0) = ecx;
    ecx = *(ebp - 0x20);
    edx = Vfffffff0 & 0xff;
    ecx = ecx + 0x18;
    edx :: 0x3f;
    if(!(edi = A10 + 0x30)) {
        edx = 0x3f;
    }
    L00428F50(ecx, edi, edx);
    edx = *(ebp - 0x20);
    ecx = Vffffffec & 0xff;
    edi = edi + (Vfffffff0 & 0xff);
    edx = edx + 0x58;
    if(ecx >= 0x7f) {
        ecx = 0x7f;
    }
    L00428F50(edx, edi, ecx);
    ecx = *(ebp - 0x20);
    eax = *(A10 + 0x2c) & 0xff;
    edi = edi + (Vffffffec & 0xff);
    ecx = ecx + 0x1b2;
    if(eax >= 0x7f) {
        eax = 0x7f;
    }
    L00428F50(ecx, edi, eax);
    ecx = *(A10 + 0x2c) & 0xff;
    eax = *(ebp - 0x20);
    edx = *(A10 + 0x2d) & 0xff;
    edi = edi + ecx;
    eax = eax + 0x232;
    if(edx >= 0x3f) {
        edx = 0x3f;
    }
    L00428F50(eax, edi, edx);
    (save) *( *(ebp - 0x20) + 0x1b2) & 0xff;
    (restore)ecx;
    if(L00426820( *(ebp - 0x20) + 0x1b3) == 0) {
        (save) *( *(ebp - 0x20) + 0x232) & 0xff;
        (restore)ecx;
        if(L00426820( *(ebp - 0x20) + 0x233) == 0) {
            goto L0040b34b;
        }
    }
    L0042E3E0(ebp - 0x20);
    L00429610(65538);
L0040b34b:
    L0042A0D0(esi + 0x2c, *(ebp - 0x20));
    L00431C20( *(A8 + 8), Ac, 0, 0xd9);
    L00416790(esi, A8, 0xd9, 0, *(ebp - 0x20) + 0x18, 0, 0);
    return L00413B90(esi);
}

/*	Procedure: 0x0040B3A0 - 0x0040B582
 *	Argument size: 16
 *	Local size: 2052
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040B3A0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    *(ebp + -2064) = ecx;
    if(!(( *(A8 + 0x4c) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    if(A14 < 4) {
        L00429610(65538);
    }
    edi = *A10;
    ecx = edi << 8 & 16711680;
    edx = edi;
    eax = edi;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = *(ebp + -2064);
    esi = L00409A80(ecx | edi << 0x18);
    if(esi == 0) {
        L00429610(65548);
    }
    ebx = ebp + -2060;
    L00434150(ebx, 0x30);
    edx = *(esi + 4);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *ebx = ecx | eax >> 8 & 65280 | edx;
    ecx = *(esi + 8);
    edi = ecx << 8 & 16711680;
    edi = edi | ecx >> 0x18;
    edx = ecx;
    ecx = ecx << 0x18;
    *(ebx + 4) = edi | edx >> 8 & 65280 | ecx;
    edi = *(esi + 0x1b0) & 65535;
    eax = edi;
    edi = edi >> 8;
    *(ebx + 0x28) = eax << 8 | edi;
    edx = *(esi + 0x18) & 0xff;
    *(ebx + 0x2a) = dl;
    *(ebx + 0x2b) = *(esi + 0x58) & 0xff;
    *(ebx + 0x2c) = *(esi + 0x1b2) & 0xff;
    *(ebx + 0x2d) = *(esi + 0x232) & 0xff;
    *(ebx + 0x14) = *(esi + 0x198);
    *(ebx + 0x18) = *(esi + 0x19c);
    edx = *(esi + 0x1a0);
    ecx = esi + 0x18;
    *(ebx + 0x1c) = edx;
    edi = ebx + 0x30;
    edi = edi + L00428EA0(ecx, edi, 0x3f);
    edi = edi + L00428EA0(esi + 0x58, edi, 0x7f);
    edi = edi + L00428EA0(esi + 0x1b2, edi, 0x7f);
    edi = edi + L00428EA0(esi + 0x232, edi, 0x3f);
    edi = edi - ebp + -2060;
    if(edi > 0x800) {
        L00429610(65546);
    }
    L00431A10( *(A8 + 8), 0xdb, Ac, ebx, edi);
    return L00416790( *(ebp + -2064), A8, 0xda, 0, esi + 0x18, 0, 0);
}

/*	Procedure: 0x0040B583 - 0x0040B58F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040B583()
{



}

/*	Procedure: 0x0040B590 - 0x0040B7DD
 *	Argument size: 16
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040B590(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    *(ebp - 0x10) = ecx;
    esi = A14;
    if(!(( *(A8 + 0x4c) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    if(esi < 0x30) {
        L00429610(65538);
    }
    *(ebp - 0x18) = *(A10 + 0x2a) & 0xff;
    *(ebp - 0x14) = *(A10 + 0x2b) & 0xff;
    eax = ( *(ebp - 0x18) & 0xff) + 0x30;
    edx = ( *(ebp - 0x14) & 0xff) + eax;
    ecx = ( *(A10 + 0x2c) & 0xff) + edx;
    if(esi < ( *(A10 + 0x2d) & 0xff) + ecx) {
        L00429610(65538);
    }
    if(*(ebp - 0x18) == 0) {
        L00429610(65538);
    }
    ebx = *A10;
    ecx = ebx << 8 & 16711680;
    edx = ebx;
    eax = ebx;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = *(ebp - 0x10);
    esi = L00409A80(ecx | ebx << 0x18);
    if(esi == 0) {
        L00429610(65548);
    }
    if(!( *(esi + 0x1b0) & 65535 & 1)) {
        L00429610(65539);
    }
    *(esi + 0x198) = *(A10 + 0x14);
    *(esi + 0x19c) = *(A10 + 0x18);
    *(esi + 0x1a0) = *(A10 + 0x1c);
    ecx = *(A10 + 4);
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    *(esi + 8) = edx | ecx << 0x18;
    edx = *(A10 + 0x28) & 65535;
    eax = edx;
    edx = edx >> 8;
    *(esi + 0x1b0) = eax << 8 | edx;
    edx = *(ebp - 0x18) & 0xff;
    edx :: 0x3f;
    if(!(ebx = A10 + 0x30)) {
        edx = 0x3f;
    }
    L00428F50(esi + 0x18, ebx, edx);
    eax = *(ebp - 0x18) & 0xff;
    ecx = *(ebp - 0x14) & 0xff;
    ebx = ebx + eax;
    if(ecx >= 0x7f) {
        ecx = 0x7f;
    }
    L00428F50(esi + 0x58, ebx, ecx);
    ecx = *(ebp - 0x14) & 0xff;
    edx = *(A10 + 0x2c) & 0xff;
    ebx = ebx + ecx;
    if(edx >= 0x7f) {
        edx = 0x7f;
    }
    L00428F50(esi + 0x1b2, ebx, edx);
    edx = *(A10 + 0x2c) & 0xff;
    eax = *(A10 + 0x2d) & 0xff;
    ebx = ebx + edx;
    if(eax >= 0x3f) {
        eax = 0x3f;
    }
    L00428F50(esi + 0x232, ebx, eax);
    eax = *(esi + 0x1b2) & 0xff;
    (save)eax;
    (restore)ecx;
    if(L00426820(esi + 0x1b3) != 0) {
        *(esi + 0x1b2) = 0;
    }
    ecx = esi + 0x233;
    (save) *(esi + 0x232) & 0xff;
    (restore)ecx;
    if(L00426820(ecx) != 0) {
        *(esi + 0x232) = 0;
    }
    L00431C20( *(A8 + 8), Ac, 0, 0xdc);
    L00416790( *(ebp - 0x10), A8, 0xdc, 0, esi + 0x18, 0, 0);
    return L00413B90( *(ebp - 0x10));
}

/*	Procedure: 0x0040B7DE - 0x0040B7DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040B7DE()
{



}

/*	Procedure: 0x0040B7E0 - 0x0040B95B
 *	Argument size: 16
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040B7E0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = ecx;
    if(A14 < 4) {
        L00429610(65538);
    }
    esi = *A10;
    eax = esi << 8 & 16711680;
    edx = esi;
    edi = esi;
    eax = eax | edx >> 0x18;
    eax = eax | edi >> 8 & 65280;
    ecx = ebx;
    ebx = L00409A80(eax | esi << 0x18);
    if(ebx == 0) {
        L00429610(65548);
    }
    if(!( *(ebx + 0x1b0) & 65535 & 2)) {
        (save)A8;
        L00429DE0(ebx + 0x1a4);
        (restore)ecx;
        if(al != 0) {
            goto L0040b86b;
        }
    }
    L00429610(65556);
L0040b86b:
    eax = *(ebx + 0x1a8);
    Vffffffec = eax;
    Vfffffff0 = Vffffffec;
    Vfffffff0 = Vfffffff0 << 6;
    eax = L0042E310(Vfffffff0);
    *(ebp - 0x20) = eax;
    *(ebp - 0x1c) = *(ebp - 0x20);
    *(ebp - 0x18) = *(ebx + 0x1a4);
    esi = 0;
    edi = *(ebp - 0x20);
    if(Vffffffec > 0) {
        do {
            ebx = *( *(ebp - 0x18) + esi * 4);
            if(ebx != A8 && *(ebx + 0x36) != 0) {
                L00434150(edi, 0x10);
                eax = *(ebx + 0x30) & 65535;
                edx = eax << 8 & 16711680;
                edx = edx | eax >> 0x18;
                ecx = eax;
                eax = eax << 0x18;
                *edi = edx | ecx >> 8 & 65280 | eax;
                ecx = edi + 0x10;
                eax = ebx + 0x5d;
                *(edi + 0xe) = L004388F0(1, *(ebx + 0x36) & 65535, eax, *(ebx + 0x5c) & 0xff, ecx, 0x30);
                edi = ( *(edi + 0xe) + 0x13 & -4) + edi;
            }
            esi = esi + 1;
        } while(esi < Vffffffec);
    }
    ebx = edi - *(ebp - 0x20);
    if(ebx > Vfffffff0) {
        L00429610(65546);
    }
    L00431A10( *(A8 + 8), 0xdf, Ac, *(ebp - 0x20), ebx);
    return L0042E3E0(ebp - 0x1c);
}

/*	Procedure: 0x0040B95C - 0x0040B95F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040B95C()
{



}

/*	Procedure: 0x0040B960 - 0x0040B9AA
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00412F60()
 */

L0040B960(A4)
/* unknown */ void  A4;
{



    (save)ebx;
    ebx = *(A4 + 0x2c);
    eax = 0;
    do {
        if(!( *(ebx + 0x1b0) & 65535 & 1)) {
            edx = ( *(ebx + 0x18) & 0xff) + 0x33;
            ecx = ( *(ebx + 0x58) & 0xff) + edx;
            ecx = ecx + ( *(ebx + 0x1b2) & 0xff);
            eax = eax + (ecx + ( *(ebx + 0x232) & 0xff) & -4);
        }
        ebx = *ebx;
    } while(ebx != 0);
    (restore)ebx;
}

/*	Procedure: 0x0040B9AB - 0x0040B9AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040B9AB()
{



}

/*	Procedure: 0x0040B9B0 - 0x0040BB33
 *	Argument size: 12
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L00412F60()
 */

L0040B9B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    (save)A10;
    L00434150(Ac);
    esi = *(ebx + 0x2c);
    (restore)ecx;
    edi = Ac;
    do {
        if(!( *(esi + 0x1b0) & 65535 & 1)) {
            *(ebp - 0x10) = *(esi + 0x58) & 0xff;
            *(ebp - 0x10) = *(ebp - 0x10) + ( *(esi + 0x18) & 0xff) + 0x33;
            *(ebp - 0x10) = *(ebp - 0x10) + ( *(esi + 0x1b2) & 0xff);
            *(ebp - 0x10) = *(ebp - 0x10) + ( *(esi + 0x232) & 0xff);
            *(ebp - 0x10) = *(ebp - 0x10) & -4;
            if(A10 < *(ebp - 0x10)) {
                L00429610(65562);
            }
            A10 = A10 - *(ebp - 0x10);
            eax = *(esi + 4);
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            *edi = edx | ecx >> 8 & 65280 | eax;
            edx = *(esi + 8);
            ebx = edx << 8 & 16711680;
            ebx = ebx | edx >> 0x18;
            eax = edx;
            edx = edx << 0x18;
            *(edi + 4) = ebx | eax >> 8 & 65280 | edx;
            ebx = *(esi + 0x1b0) & 65535;
            ecx = ebx;
            ebx = ebx >> 8;
            *(edi + 0x28) = ecx << 8 | ebx;
            *(edi + 0x2a) = *(esi + 0x18) & 0xff;
            *(edi + 0x2b) = *(esi + 0x58) & 0xff;
            *(edi + 0x2c) = *(esi + 0x1b2) & 0xff;
            ebx = *(esi + 0x232) & 0xff;
            *(edi + 0x2d) = bl;
            *(edi + 0x14) = *(esi + 0x198);
            *(edi + 0x18) = *(esi + 0x19c);
            ecx = *(esi + 0x1a0);
            eax = esi + 0x18;
            *(edi + 0x1c) = ecx;
            ebx = edi + 0x30;
            ebx = ebx + L00428EA0(eax, ebx, 0x3f);
            ebx = ebx + L00428EA0(esi + 0x58, ebx, 0x7f);
            ebx = ebx + L00428EA0(esi + 0x1b2, ebx, 0x7f);
            L00428EA0(esi + 0x232, ebx, 0x3f);
            edi = edi + *(ebp - 0x10);
        }
        esi = *esi;
    } while(esi != 0);
    return edi - Ac;
}

/*	Procedure: 0x0040BB34 - 0x0040BB3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040BB34()
{



}

/*	Procedure: 0x0040BB40 - 0x0040BCEC
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00413D00()
 */

L0040BB40(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A10;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x10;
    edi = Ac;
    *(ebp - 0x10) = eax;
    if(eax > 0x30) {
        do {
            *(ebp - 0x14) = *(edi + 0x2a) & 0xff;
            *(ebp - 0x18) = *(edi + 0x2b) & 0xff;
            *(ebp - 0x1c) = *(edi + 0x2d) & 0xff;
            edx = *(ebp - 0x14) & 0xff;
            eax = *(ebp - 0x18) & 0xff;
            eax = eax + edx + 0x33;
            *(ebp - 0x1c) = *(ebp - 0x1c) + ( *(edi + 0x2c) & 0xff) + eax;
            *(ebp - 0x1c) = *(ebp - 0x1c) + ( *(edi + 0x2e) & 0xff);
            *(ebp - 0x1c) = *(ebp - 0x1c) + ( *(edi + 0x2f) & 0xff);
            *(ebp - 0x1c) = *(ebp - 0x1c) & -4;
            eax = *(ebp - 0x1c);
            if(*(ebp - 0x10) < eax) {
                break;
            }
            esi = L0042E3A0(0x278);
            edx = *edi;
            ecx = edx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            eax = edx;
            edx = edx << 0x18;
            *(esi + 4) = ecx | eax >> 8 & 65280 | edx;
            ecx = *(edi + 4);
            ebx = ecx << 8 & 16711680;
            ebx = ebx | ecx >> 0x18;
            edx = ecx;
            ecx = ecx << 0x18;
            *(esi + 8) = ebx | edx >> 8 & 65280 | ecx;
            ebx = *(edi + 0x28) & 65535;
            eax = ebx;
            ebx = ebx >> 8;
            *(esi + 0x1b0) = eax << 8 | ebx;
            *(esi + 0x198) = *(edi + 0x14);
            *(esi + 0x19c) = *(edi + 0x18);
            *(esi + 0x1a0) = *(edi + 0x1c);
            ecx = *(ebp - 0x14) & 0xff;
            ecx :: 0x3f;
            if(!(ebx = edi + 0x30)) {
                ecx = 0x3f;
            }
            L00428F50(esi + 0x18, ebx, ecx);
            ecx = *(ebp - 0x14) & 0xff;
            edx = *(ebp - 0x18) & 0xff;
            ebx = ebx + ecx;
            if(edx >= 0x7f) {
                edx = 0x7f;
            }
            L00428F50(esi + 0x58, ebx, edx);
            edx = *(ebp - 0x18) & 0xff;
            eax = *(edi + 0x2c) & 0xff;
            ebx = ebx + edx;
            if(eax >= 0x7f) {
                eax = 0x7f;
            }
            L00428F50(esi + 0x1b2, ebx, eax);
            eax = *(edi + 0x2c) & 0xff;
            ecx = *(edi + 0x2d) & 0xff;
            ebx = ebx + eax;
            if(ecx >= 0x3f) {
                ecx = 0x3f;
            }
            L00428F50(esi + 0x232, ebx, ecx);
            (save)esi;
            L0042A0D0(A8 + 0x2c);
            edi = edi + *(ebp - 0x1c);
            eax = *(ebp - 0x1c);
            (restore)ecx;
            *(ebp - 0x10) = *(ebp - 0x10) - eax;
        } while(*(ebp - 0x10) > 0x30);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0040BCED - 0x0040BCEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040BCED()
{



}

/*	Procedure: 0x0040BCF0 - 0x0040C0B4
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 */

L0040BCF0()
{



    ecx = ebp - 0x18;
    (save)ebx;
    (save)esi;
    esp = esp - 0xfc;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = 0;
    *(ebp - 0x10) = 0x1c2;
    *(ebp - 0xc) = 0xf6;
    eax = L00419240(0x38, ecx, 268435456, 0, "\nKDX Server");
    edx = ebp + -236;
    *(ebp - 0x7c) = eax;
    *(ebp + -240) = esp;
    *(ebp + -236) = 0;
    *(ebp + -232) = 0;
    *(ebp + -228) = 0x1c2;
    *(ebp + -224) = 0xf6;
    ebx = L0043C220(eax, edx, 0x100);
    ecx = ebp - 0x38;
    *(ebp - 0x38) = 0xa;
    *(ebp - 0x34) = 0xa;
    *(ebp - 0x30) = 0x2a;
    *(ebp - 0x2c) = 0x2a;
    esi = 0x46fb84;
    L0043BA80(ebx, ecx, 0x100, 3);
    edx = ebp - 0x48;
    *(ebp - 0x48) = 0x32;
    *(ebp - 0x44) = 0xa;
    *(ebp - 0x40) = 0x1ae;
    *(ebp - 0x3c) = 0x4a;
    L0043A240(ebx, edx, 0x100, esi, 0);
    eax = ebp - 0x58;
    *(ebp - 0x58) = 0xa;
    *(ebp - 0x54) = 0x50;
    *(ebp - 0x50) = 0x1b8;
    *(ebp - 0x4c) = 0xce;
    L0043AAA0(ebx, eax, 0x100, 1, 0, 0);
    ecx = ebp - 0x68;
    *(ebp - 0x68) = 0x14;
    *(ebp - 0x64) = 0x5f;
    *(ebp - 0x60) = 0x78;
    *(ebp - 0x5c) = 0x6f;
    L0043A240(ebx, ecx, 0x100, 0x46fc2c, 0);
    edx = ebp - 0x78;
    *(ebp - 0x78) = 0x14;
    *(ebp - 0x74) = 0x7d;
    *(ebp - 0x70) = 0xaa;
    *(ebp - 0x6c) = 0x8d;
    L0043A240(ebx, edx, 0x100, 0x46fc3c, 0);
    eax = ebp + -140;
    *(ebp + -140) = 0x14;
    *(ebp + -136) = 0x9b;
    *(ebp + -132) = 0xaa;
    *(ebp - 0x80) = 0xab;
    L0043A240(ebx, eax, 0x100, 0x46fc4c, 0);
    ecx = ebp + -156;
    *(ebp + -156) = 0xaa;
    *(ebp + -152) = 0x5a;
    *(ebp + -148) = 0x1ae;
    *(ebp + -144) = 0x74;
    eax = L004206D0(ebx, ecx, 0x100, 0, 0, 0);
    *( *(ebp - 0x7c) + 0x28) = eax;
    L0043C350(ebx, *( *(ebp - 0x7c) + 0x28));
    ecx = ebp + -172;
    *(ebp + -172) = 0xaa;
    *(ebp + -168) = 0x78;
    *(ebp + -164) = 0x1ae;
    *(ebp + -160) = 0x92;
    eax = L0043BC50(ebx, ecx, 0x100);
    *( *(ebp - 0x7c) + 0x2c) = eax;
    eax = ebp + -188;
    *(ebp + -188) = 0xaa;
    *(ebp + -184) = 0x96;
    *(ebp + -180) = 0x1ae;
    *(ebp + -176) = 0xb0;
    eax = L0043BC50(ebx, eax, 0x100);
    *( *(ebp - 0x7c) + 0x30) = eax;
    edx = ebp + -204;
    *(ebp + -204) = 0xaa;
    *(ebp + -200) = 0xb6;
    *(ebp + -196) = 0x172;
    *(ebp + -192) = 0xc8;
    eax = L0043B450(ebx, edx, 0x100, 0, 0x46fc60, 1, 0);
    *( *(ebp - 0x7c) + 0x34) = eax;
    eax = ebp + -220;
    *(ebp + -220) = 0x158;
    *(ebp + -216) = 0xd5;
    *(ebp + -212) = 0x1b8;
    *(ebp + -208) = 0xef;
    L00439DE0(ebx, eax, 0x500, 2, 0x46fc78, 0);
    edx = ebp - 0x28;
    *(ebp - 0x28) = 0xdc;
    *(ebp - 0x24) = 0xd8;
    *(ebp - 0x20) = 0x136;
    *(ebp - 0x1c) = 0xec;
    L00439DE0(ebx, edx, 0x100, 6, 0x46fc80, 0);
    *(ebx + 0x4c) = 2;
    *(ebx + 0x50) = 6;
    goto L0040c0ab;
    L004192E0(ebp - 0x7c);
    L004234F0(0, 0, 0);
    if(*(ebp + -252) != 0) {
        ecx = *(ebp + -260);
        *(ebp + -252)(-1);
    }
    esp = *(ebp + -240);
L0040c0ab:
    eax = *(ebp - 0x7c);
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0040C0B5 - 0x0040C0BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040C0B5()
{



}

/*	Procedure: 0x0040C10E - 0x0040C10F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040C10E()
{



}

/*	Procedure: 0x0040C110 - 0x0040C335
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L0040C640()
 *		L0040C970()
 */

L0040C110(A14, A18)
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebp = A18 >> 2;
    edx = 0;
    eax = -1697503135;
    if(ebp > 0) {
        ebp :: 8;
        if(!(ecx = ebp - 8)) {
            do {
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A14 + edx * 4) = *(A14 + edx * 4) ^ (esi | eax << 0x18);
                eax = eax * 1103515245 + 12345;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A14 + edx * 4 + 4) = *(A14 + edx * 4 + 4) ^ (esi | eax << 0x18);
                eax = eax * 1103515245 + 12345;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A14 + edx * 4 + 8) = *(A14 + edx * 4 + 8) ^ (esi | eax << 0x18);
                eax = eax * 1103515245 + 12345;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A14 + edx * 4 + 0xc) = *(A14 + edx * 4 + 0xc) ^ (esi | eax << 0x18);
                eax = eax * 1103515245 + 12345;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A14 + edx * 4 + 0x10) = *(A14 + edx * 4 + 0x10) ^ (esi | eax << 0x18);
                eax = eax * 1103515245 + 12345;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A14 + edx * 4 + 0x14) = *(A14 + edx * 4 + 0x14) ^ (esi | eax << 0x18);
                eax = eax * 1103515245 + 12345;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A14 + edx * 4 + 0x18) = *(A14 + edx * 4 + 0x18) ^ (esi | eax << 0x18);
                eax = eax * 1103515245 + 12345;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                edi = eax;
                eax = eax * 1103515245;
                *(A14 + edx * 4 + 0x1c) = *(A14 + edx * 4 + 0x1c) ^ (esi | edi << 0x18);
                edx = edx + 8;
                eax = eax + 12345;
            } while(edx < ecx);
        }
        do {
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            ecx = ecx | eax >> 8 & 65280;
            esi = eax;
            eax = eax * 1103515245;
            *(A14 + edx * 4) = *(A14 + edx * 4) ^ (ecx | esi << 0x18);
            edx = edx + 1;
            eax = eax + 12345;
        } while(edx < ebp);
    }
}

/*	Procedure: 0x0040C336 - 0x0040C33F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040C336()
{



}

/*	Procedure: 0x0040C340 - 0x0040C633
 *	Argument size: 12
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L0040C640()
 */

L0040C340(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    if(A10 < 0x60) {
        return;
    }
    esi = *Ac;
    edi = esi << 8 & 16711680;
    eax = esi;
    edx = esi;
    eax = eax >> 0x18;
    edi = edi | eax;
    edi = edi | edx >> 8 & 65280;
    if((edi | esi << 0x18) != 625689688) {
        esp = ebp - 0xc;
        return;
    }
    ecx = *(Ac + 4);
    edi = ecx << 8 & 16711680;
    eax = ecx;
    esi = ecx;
    eax = eax >> 0x18;
    edi = edi | eax;
    edi = edi | esi >> 8 & 65280;
    if((edi | ecx << 0x18) != 1095454292) {
        esp = ebp - 0xc;
        return;
    }
    edx = *(Ac + 8) & 65535;
    edi = edx << 8;
    if((edi | edx >> 8) != 1) {
        esp = ebp - 0xc;
        return;
    }
    eax = *(Ac + 0x10);
    esi = eax << 8 & 16711680;
    ecx = eax;
    edi = eax;
    eax = eax << 0x18;
    esi = esi | ecx >> 0x18;
    esi = esi | edi >> 8 & 65280 | eax;
    eax = A10;
    *(ebp - 0x14) = eax;
    if(esi >= eax) {
        esi = *(ebp - 0x14);
    }
    edx = *(Ac + 0x14);
    ecx = edx << 8 & 16711680;
    edi = edx;
    eax = edx;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = ecx | edx << 0x18;
    if(ecx >= *(ebp - 0x14)) {
        ecx = *(ebp - 0x14);
    }
    edi = ecx;
    if(ecx + esi > A10) {
        edi = A10 - esi;
    }
    *(ebp - 0x10) = edi != 0 ? L0042E350(esi + Ac, edi) : 0;
    esi = *(Ac + 0x18);
    eax = esi << 8 & 16711680;
    ecx = esi;
    edx = esi;
    eax = eax | ecx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    eax = eax | esi << 0x18;
    if(eax >= *(ebp - 0x14)) {
        eax = *(ebp - 0x14);
    }
    ecx = *(Ac + 0x1c);
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    edx = edx | ecx << 0x18;
    if(edx >= *(ebp - 0x14)) {
        edx = *(ebp - 0x14);
    }
    esi = edx;
    if(edx + eax > A10) {
        esi = A10 - eax;
    }
    eax = esi != 0 ? L0042E350(eax + Ac, esi) : 0;
    L00436370( *(A8 + 0x64), eax, esi, *(ebp - 0x10), edi);
    eax = *(Ac + 0x20);
    ecx = eax << 8 & 16711680;
    edx = eax;
    edi = eax;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | edi >> 8 & 65280;
    ecx = ecx | eax << 0x18;
    if(ecx >= *(ebp - 0x14)) {
        ecx = *(ebp - 0x14);
    }
    edx = *(Ac + 0x24);
    eax = edx << 8 & 16711680;
    edi = edx;
    esi = edx;
    eax = eax | edi >> 0x18;
    eax = eax | esi >> 8 & 65280;
    eax = eax | edx << 0x18;
    if(eax >= *(ebp - 0x14)) {
        eax = *(ebp - 0x14);
    }
    edi = eax;
    if(eax + ecx > A10) {
        edi = A10 - ecx;
    }
    *(ebp - 0x10) = edi != 0 ? L0042E350(ecx + Ac, edi) : 0;
    esi = *(Ac + 0x28);
    edx = esi << 8 & 16711680;
    eax = esi;
    ecx = esi;
    edx = edx | eax >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    edx = edx | esi << 0x18;
    if(edx >= *(ebp - 0x14)) {
        edx = *(ebp - 0x14);
    }
    eax = *(Ac + 0x2c);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = ecx | eax << 0x18;
    if(ecx >= *(ebp - 0x14)) {
        ecx = *(ebp - 0x14);
    }
    esi = ecx;
    if(ecx + edx > A10) {
        esi = A10 - edx;
    }
    eax = esi != 0 ? L0042E350(edx + Ac, esi) : 0;
    eax = L00436370( *(A8 + 0x60), eax, esi, *(ebp - 0x10), edi);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0040C634 - 0x0040C63F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040C634()
{



}

/*	Procedure: 0x0040C640 - 0x0040C960
 *	Argument size: 0
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00409390()
 */

L0040C640()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    *(ebp - 0x10) = ecx;
    eax = *(ecx + 0x58);
    if(eax == 0) {
        eax = L0042B600(1, 0, 0, M0047e310, 0x8f, M0047e440);
        *( *(ebp - 0x10) + 0x58) = eax;
    }
    edi = ebp - 0x18;
    *(ebp - 0x18) = 10485760;
    esi = L0042C600(eax, 0, 0, edi, 0);
    *(ebp - 0x14) = esi;
    if(*(ebp - 0x18) < 0x50) {
        esi = ebp - 0x14;
        return L0042E3E0(esi);
    }
    L0040C110(esi, *(ebp - 0x18));
    ebx = esi;
    edx = *ebx;
    edi = edx << 8 & 16711680;
    eax = edx >> 8 & 65280;
    edi = edi | edx >> 0x18 | eax;
    if((edi | edx << 0x18) != 625689688) {
        ebx = ebp - 0x14;
        eax = L0042E3E0(ebx);
        esp = ebp - 0xc;
        return;
    }
    edi = *(ebx + 4);
    ecx = edi << 8 & 16711680;
    eax = edi;
    edx = edi;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    if((ecx | edi << 0x18) != 1095454292) {
        esi = ebp - 0x14;
        eax = L0042E3E0(esi);
        esp = ebp - 0xc;
        return;
    }
    ecx = *(ebx + 8) & 65535;
    eax = ecx << 8;
    eax = (eax | ecx >> 8) & 65535;
    if(eax == 1) {
        L0040C340( *(ebp - 0x10), esi, *(ebp - 0x18));
        ecx = *(ebp - 0x10);
        L0040C970();
        eax = L0042E3E0(ebp - 0x14);
        esp = ebp - 0xc;
        return;
    }
    if(eax != 2) {
        ebx = ebp - 0x14;
        eax = L0042E3E0(ebx);
        esp = ebp - 0xc;
        return;
    }
    edi = *(ebx + 0x10);
    eax = edi << 8 & 16711680;
    esi = edi;
    ecx = edi;
    eax = eax | esi >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    edi = edi << 0x18;
    edx = *(ebp - 0x18);
    eax = eax | edi;
    if(eax >= edx) {
        eax = edx;
    }
    esi = *(ebx + 0x14);
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    ecx = ecx | esi << 0x18;
    if(ecx >= edx) {
        ecx = edx;
    }
    edx = ecx;
    if(ecx + eax > *(ebp - 0x18)) {
        edx = *(ebp - 0x18) - eax;
    }
    eax = L00436960(eax + ebx, edx, 0);
    ecx = *(ebp - 0x10) + 0x64;
    esi = eax;
    L00435A50(ecx);
    *( *(ebp - 0x10) + 0x64) = esi;
    edi = *(ebx + 0x18);
    edx = edi << 8 & 16711680;
    esi = edi;
    ecx = edi;
    edx = edx | esi >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    edi = edi << 0x18;
    eax = *(ebp - 0x18);
    edx = edx | edi;
    if(edx >= eax) {
        edx = eax;
    }
    esi = *(ebx + 0x1c);
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    ecx = ecx | esi << 0x18;
    if(ecx >= eax) {
        ecx = eax;
    }
    eax = ecx;
    if(ecx + edx > *(ebp - 0x18)) {
        eax = *(ebp - 0x18) - edx;
    }
    eax = L00436960(edx + ebx, eax, 0);
    ecx = *(ebp - 0x10) + 0x60;
    esi = eax;
    L00435A50(ecx);
    *( *(ebp - 0x10) + 0x60) = esi;
    edi = *(ebx + 0x20);
    eax = edi << 8 & 16711680;
    esi = edi;
    ecx = edi;
    eax = eax | esi >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    edi = edi << 0x18;
    edx = *(ebp - 0x18);
    eax = eax | edi;
    if(eax >= edx) {
        eax = edx;
    }
    esi = *(ebx + 0x24);
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    ecx = ecx | esi << 0x18;
    if(ecx >= edx) {
        ecx = edx;
    }
    edi = ecx;
    if(ecx + eax > *(ebp - 0x18)) {
        edi = *(ebp - 0x18) - eax;
    }
    if(edi != 0 && *(ebx + 0x4c) == 2) {
        eax = L00436960(eax + ebx, edi, 0);
        edx = *(ebp - 0x10) + 0x68;
        edi = eax;
        L00435A50(edx);
        *( *(ebp - 0x10) + 0x68) = edi;
    }
    eax = L0042E3E0(ebp - 0x14);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0040C961 - 0x0040C96F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040C961()
{



}

/*	Procedure: 0x0040C970 - 0x0040CB55
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00408E70()
 *		L0040C640()
 *		L0040CB60()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E5B0()
 *		L0040E830()
 *		L0040F110()
 *		L0040F570()
 *		L0040F6E0()
 *		L0040F8A0()
 *		L004154F0()
 */

L0040C970()
{
	/* unknown */ void  ebx;



    ebx = ecx;
    (save)esi;
    (save)edi;
    esp = esp - 0x1c;
    *(ebp - 0x14) = L00436670( *(ebx + 0x64));
    *(ebp - 0x28) = L00436670( *(ebx + 0x60));
    eax = L00436670( *(ebx + 0x68));
    edx = *(ebp - 0x28);
    *(ebp - 0x18) = eax;
    eax = *(ebp - 0x14);
    edx = edx + 7 & -8;
    *(ebp - 0x10) = eax;
    *(ebp - 0x10) = *(ebp - 0x10) + 7;
    *(ebp - 0x10) = *(ebp - 0x10) & -8;
    *(ebp - 0x10) = *(ebp - 0x10) + 0x50;
    *(ebp - 0x1c) = *(ebp - 0x10);
    *(ebp - 0x1c) = *(ebp - 0x1c) + edx;
    esi = ( *(ebp - 0x18) + 7 & -8) + *(ebp - 0x1c);
    eax = L0042E310(esi);
    edi = eax;
    *(ebp - 0x20) = eax;
    *(ebp - 0x24) = eax;
    L00434150(edi, 0x50);
    *edi = 1480870693;
    *(edi + 4) = 1414417217;
    *(edi + 8) = 0x200;
    *(edi + 0x10) = 1342177280;
    edx = *(ebp - 0x14);
    ecx = *(ebp - 0x14);
    eax = *(ebp - 0x14);
    ecx = ecx >> 0x18;
    edx = edx << 8 & 16711680 | ecx;
    ecx = *(ebp - 0x14) << 0x18;
    *(edi + 0x14) = edx | eax >> 8 & 65280 | ecx;
    eax = *(ebp - 0x10);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    *(edi + 0x18) = ecx | edx >> 8 & 65280 | eax;
    eax = *(ebp - 0x28);
    edx = *(ebp - 0x28);
    ecx = *(ebp - 0x28);
    edx = edx >> 0x18;
    eax = eax << 8 & 16711680 | edx;
    edx = *(ebp - 0x28) << 0x18;
    *(edi + 0x1c) = eax | ecx >> 8 & 65280 | edx;
    ecx = *(ebp - 0x1c);
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    eax = ecx;
    ecx = ecx << 0x18;
    *(edi + 0x20) = edx | eax >> 8 & 65280 | ecx;
    ecx = *(ebp - 0x18);
    eax = *(ebp - 0x18);
    edx = *(ebp - 0x18);
    eax = eax >> 0x18;
    ecx = ecx << 8 & 16711680 | eax;
    eax = *(ebp - 0x18);
    ecx = ecx | edx >> 8 & 65280;
    *(edi + 0x24) = ecx | eax << 0x18;
    *(edi + 0x4a) = 1;
    *(edi + 0x4b) = 1;
    *(edi + 0x4c) = 2;
    L004366B0( *(ebx + 0x64), edi + 0x50, *(ebp - 0x14));
    L004366B0( *(ebx + 0x60), edi + *(ebp - 0x10), *(ebp - 0x28));
    L004366B0( *(ebx + 0x68), edi + *(ebp - 0x1c), *(ebp - 0x18));
    L0040C110( *(ebp - 0x20), esi);
    *(ebp - 0x24) = 0;
    L0042C930( *(ebx + 0x58), ebp - 0x20, esi, 0);
    eax = L0042E3E0(ebp - 0x24);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0040CB56 - 0x0040CB5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040CB56()
{



}

/*	Procedure: 0x0040CB60 - 0x0040CFE7
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040CFF0()
 */

L0040CB60(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    A8 = ebp + -176;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0xa8;
    A10 = L00427C80(Ac, A10, A8, 0x80);
    eax = ebp + -176;
    Ac = eax;
    if(A10 == 5) {
        L00434380(eax, "guest", 5);
        if(al != 0) {
            goto L0040cbb8;
        }
    }
    if(A10 == 0 || A18 == 0) {
L0040cbb8:
        L00429610(65538);
    }
    A8 = *(A8 + 0x64);
    *(ebp - 0x1c) = A8;
    L00436020( *(ebp - 0x1c), 0);
    eax = L0042EF50();
    A8 = 0;
    A8 = edx;
    edi = A8 >> 0x18;
    *(ebp - 0x20) = A8;
    A8 = A8 << 0x18;
    *(ebp - 0x20) = *(ebp - 0x20) << 8;
    *(ebp - 0x20) = *(ebp - 0x20) & 16711680;
    *(ebp - 0x20) = *(ebp - 0x20) | edi;
    edi = eax << 8 & 16711680;
    *(ebp - 0x14) = edx;
    *(ebp - 0x20) = *(ebp - 0x20) | edx >> 8 & 65280;
    *(ebp - 0x20) = *(ebp - 0x20) | A8;
    edx = eax;
    A8 = eax;
    edx = edx >> 0x18 | edi;
    A8 = A8 >> 8 & 65280 | edx;
    eax = eax << 0x18;
    ebx = 0;
    esi = 0;
    eax = eax | A8;
    *(ebp - 0x18) = eax;
    *(ebp - 0x2c) = *(ebp - 0x18);
    do {
        eax = *(ebx * 4 + 0x47e314);
        *(ebp - 0x28) = eax;
        L00435B10( *(ebp - 0x1c), ebx, 0, ( *eax & 0xff) + 0x3b & -4, ebp - 0x24);
        L00434150( *(ebp - 0x24), 0x38);
        eax = *(esi + 0x47e344);
        A8 = eax << 8 & 16711680;
        A8 = A8 | eax >> 0x18;
        edi = eax;
        eax = eax << 0x18;
        A8 = A8 | edi >> 8 & 65280 | eax;
        *( *(ebp - 0x24)) = A8;
        edi = *(esi + 0x47e348);
        eax = edi << 8 & 16711680;
        eax = eax | edi >> 0x18;
        edx = *(ebp - 0x24);
        A8 = edi;
        edi = edi << 0x18;
        *(edx + 4) = eax | A8 >> 8 & 65280 | edi;
        A8 = *(esi + 0x47e34c);
        edi = A8 << 8 & 16711680;
        edi = edi | A8 >> 0x18;
        edx = A8;
        A8 = A8 << 0x18;
        edi = edi | edx >> 8 & 65280 | A8;
        *( *(ebp - 0x24) + 8) = edi;
        A8 = *(ebp - 0x24) + 0x10;
        *A8 = *(ebp - 0x20);
        *(A8 + 4) = *(ebp - 0x2c);
        edx = *( *(ebp - 0x28)) & 0xff;
        *( *(ebp - 0x24) + 0x34) = dl;
        *( *(ebp - 0x24) + 0x30) = bl;
        edi = *(ebp - 0x24);
        eax = *(ebx + 0x47e434) & 0xff;
        *(edi + 0x25) = al;
        edx = *(ebx * 4 + 0x47e404);
        edi = *(ebp - 0x24);
        *(edi + 0x31) = edx >> 8;
        A8 = *(ebp - 0x24);
        *(A8 + 0x32) = edx >> 0x10;
        edi = *(ebp - 0x24);
        *(edi + 0x33) = edx >> 0x18;
        L00428EA0( *(ebp - 0x28), *(ebp - 0x24) + 0x38, 0xff);
        ebx = ebx + 1;
        esi = esi + 0x10;
    } while(ebx < 0xc);
    edi = *(A8 + 0x60);
    esi = M0047e314;
    L00436020(edi, 0);
    edx = *esi & 0xff;
    L00435B10(edi, 0, 0, edx + A10 - -128 + 3 & -4, ebp + -180);
    L00434150( *(ebp + -180), 0x80);
    *( *(ebp + -180)) = *( *(ebp + -180)) | 0x80;
    *( *(ebp + -180) + 0x10) = *( *(ebp + -180) + 0x10) | 0x80;
    *( *(ebp + -180) + 6) = *( *(ebp + -180) + 6) | 2;
    *( *(ebp + -180) + 0x16) = *( *(ebp + -180) + 0x16) | 2;
    L00442070(A14, A18, *(ebp + -180) + 0x20);
    edx = *(ebp - 0x14) << 8 & 16711680;
    edx = edx | *(ebp - 0x14) >> 0x18;
    edx = edx | *(ebp - 0x14) >> 8 & 65280;
    edx = edx | *(ebp - 0x14) << 0x18;
    A8 = *(ebp + -180) + 0x40;
    *A8 = edx;
    *(A8 + 4) = *(ebp - 0x18);
    A8 = *(ebp + -180) + 0x48;
    *A8 = edx;
    *(A8 + 4) = *(ebp - 0x18);
    ebx = *(ebp + -180);
    *(ebx + 0x7a) = A10;
    eax = *(ebp + -180);
    *(eax + 0x7b) = *esi & 0xff;
    *( *(ebp + -180) + 0x76) = 0;
    L004342A0( *(ebp + -180) - -128, Ac, A10);
    L00428EA0(esi, *(ebp + -180) + A10 - -128, 0xff);
    *(ebp - 0x1c) = 0x46fd40;
    ebx = *( *(ebp - 0x1c)) & 0xff;
    esi = M0047e31c;
    L004364F0(edi, *(ebp - 0x1c) + 1, ebx, ebp - 0x30, 0x40c0c0, 0);
    A8 = *esi & 0xff;
    L00435B10(edi, *(ebp - 0x30), 0, A8 + ebx + 0x80 + 3 & -4, ebp + -180);
    L00434150( *(ebp + -180), 0x80);
    L00442070(0, 0, *(ebp + -180) + 0x20);
    if(A1c == 0) {
        *( *(ebp + -180)) = *( *(ebp + -180)) & 0xf7;
        *( *(ebp + -180) + 0x10) = *( *(ebp + -180) + 0x10) | 8;
    }
    edx = *(ebp - 0x14) << 8 & 16711680;
    edx = edx | *(ebp - 0x14) >> 0x18;
    edx = edx | *(ebp - 0x14) >> 8 & 65280;
    edx = edx | *(ebp - 0x14) << 0x18;
    A8 = *(ebp + -180) + 0x40;
    *A8 = edx;
    *(A8 + 4) = *(ebp - 0x18);
    A8 = *(ebp + -180) + 0x48;
    *A8 = edx;
    *(A8 + 4) = *(ebp - 0x18);
    *( *(ebp + -180) + 0x7a) = bl;
    edx = *(ebp + -180);
    *(edx + 0x7b) = *esi & 0xff;
    *( *(ebp + -180) + 0x76) = 2;
    L00428EA0( *(ebp - 0x1c), *(ebp + -180) - -128, 0xff);
    L00428EA0(esi, *(ebp + -180) + ebx - -128, 0xff);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return L0040C970();
}

/*	Procedure: 0x0040CFE8 - 0x0040CFEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040CFE8()
{



}

/*	Procedure: 0x0040CFF0 - 0x0040D0E4
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408B5A()
 */

L0040CFF0(A8)
/* unknown */ void  A8;
{



    (save)ebx;
    eax = ebp - 0x54;
    (save)esi;
    (save)edi;
    esp = esp - 0x4c;
    ebx = ecx;
    eax = L00443550( *( *(A8 + 0x28) + 0x2c), eax, 0x40);
    *(ebp - 0x14) = eax;
    eax = L00446BA0( *( *(A8 + 0x2c) + 0x28), ebp - 0x58);
    (save)ebp - 0x10;
    esi = eax;
    eax = L00446BA0( *( *(A8 + 0x30) + 0x28));
    (restore)ecx;
    if(*(ebp - 0x14) == 0 || *(ebp - 0x58) == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return L00447040();
    }
    edi = *(ebp - 0x10);
    ecx = *(ebp - 0x58);
    if(ecx == edi) {
        L00434380(esi, eax, edi);
        if(al != 0) {
            goto L0040d0a0;
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return L00439CA0(1, 1, 0, 0x46fd48, 0, 0);
L0040d0a0:
    eax = *( *(A8 + 0x34) + 0x26) & 0xff;
    L0040CB60(ebx, ebp - 0x54, *(ebp - 0x14), esi, *(ebp - 0x58), 0);
    ecx = ebx;
    L00408F30();
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return L004192E0( & A8);
}

/*	Procedure: 0x0040D0E5 - 0x0040D0EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040D0E5()
{



}

/*	Procedure: 0x0040D0F0 - 0x0040D5F3
 *	Argument size: 12
 *	Local size: 2096
 *	Save regs size: 12
 *	Called by:
 *		L0040DC10()
 *		L0040E830()
 */

L0040D0F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffff7d0;
	/* unknown */ void  Vfffff7d4;
	/* unknown */ void  Vfffff7d8;
	/* unknown */ void  Vfffff7dc;
	/* unknown */ void  Vfffff7e0;
	/* unknown */ void  Vfffff7e4;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe6;
	/* unknown */ void  Vffffffe7;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffeb;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vfffff7dc = ecx;
    eax = L00430420( *(A8 + 8));
    ebx = *(Vfffff7dc + 0x60);
    ecx = *eax & 0xff;
    if(L004364F0(ebx, eax + 1, ecx, ebp + -2108, 0x40c0c0, 0) == 0) {
        return 0;
    }
    eax = L00436310(ebx, *(ebp + -2108), & Vfffff7d8);
    edi = eax;
    if(Vfffff7d8 < 0x80) {
        esp = ebp - 0xc;
        return 0;
    }
    *(ebp + -2100) = *(edi + 0x76) & 0xff;
    Vfffff7d4 = *(Vfffff7dc + 0x64);
    Vfffff7e0 = 0;
    ebx = *(ebp + -2100) & 0xff;
    (save)ebx;
    L00435AE0(Vfffff7d4);
    (restore)ecx;
    if(al != 0) {
        Vfffff7e0 = L00436310(Vfffff7d4, ebx, & Vfffff7d0);
        if(Vfffff7d0 < 0x38) {
            Vfffff7e0 = 0;
        }
    }
    if(Vfffff7e0 != 0) {
        eax = Vfffff7e0;
        ecx = *(edi + 0x10);
        ebx = ecx & *edi;
        Vffffffe4 = ebx | !ecx & *eax;
        edx = *(edi + 0x14);
        ebx = edx & *(edi + 4);
        Vffffffe8 = ebx | !edx & *(eax + 4);
        ecx = *(edi + 0x18);
        ebx = ecx & *(edi + 8);
        Vffffffec = ebx | !ecx & *(eax + 8);
        edx = *(edi + 0x1c);
        ebx = edx & *(edi + 0xc);
        Vfffffff0 = ebx | !edx & *(eax + 0xc);
        *(A8 + 0x43) = *(eax + 0x25) & 0xff;
    } else {
        Vffffffe4 = *edi;
        Vffffffe8 = *(edi + 4);
        Vffffffec = *(edi + 8);
        Vfffffff0 = *(edi + 0xc);
        *(A8 + 0x43) = 0x28;
    }
    eax = Vffffffe4 & 0xff;
    Vfffff7d4 = eax;
    if(!(eax >> 7 & 1)) {
        *(ebp + -2104) = 0;
        eax = Vffffffe7 & 0xff;
        edx = (Vffffffeb & 0xff) >> 1;
        *(ebp + -2103) = 0;
        ecx = eax >> 7;
        *(ebp + -2102) = 0;
        ebx = (Vffffffe6 & 0xff) >> 1;
        *(ebp + -2101) = 0;
        eax = eax >> 5;
        dl = 0;
        ecx = (Vffffffe8 & 0xff) >> 3;
        bl = 0;
        eax = Vfffff7d4 >> 4;
        Vffffffe4 = -1;
        Vffffffe8 = -1;
        Vffffffec = -1;
        Vfffffff0 = -1;
        if(!(eax & 1)) {
            Vffffffe4 = Vffffffe4 & 0xef;
        }
        if(*(ebp + -2104) == 0) {
            Vffffffe6 = Vffffffe6 & 0xfe;
        }
        if(*(ebp + -2103) == 0) {
            Vffffffeb = Vffffffeb & 0xfd;
        }
        if(*(ebp + -2102) == 0) {
            Vffffffe7 = Vffffffe7 & 0x7f;
        }
        if(*(ebp + -2101) == 0) {
            Vffffffe6 = Vffffffe6 & 0xfd;
        }
        if(dl == 0) {
            Vffffffe7 = Vffffffe7 & 0xdf;
        }
        if(bl == 0) {
            Vffffffe8 = Vffffffe8 & 0xf7;
        }
        Vffffffe4 = Vffffffe4 & 0xdf;
    }
    if(A10 != 0) {
        if(!((Vffffffe4 & 0xff) >> 3 & 1)) {
            esp = ebp - 0xc;
            return 0;
        }
        (save)edi + 0x20;
        (restore)ecx;
        if(L00430540( *(A8 + 8)) == 0) {
            esp = ebp - 0xc;
            return 0;
        }
        *(A8 + 0x78) = *(edi + 0x20);
        *(A8 + 0x7c) = *(edi + 0x24);
        *(A8 + 0x80) = *(edi + 0x28);
        *(A8 + 0x84) = *(edi + 0x2c);
        *(A8 + 0x94) = L00435380();
        eax = L0042EF50();
        ecx = edx << 8;
        ebx = 0;
        ecx = ecx & 16711680;
        ecx = ecx | edx >> 0x18;
        ebx = edx;
        edx = edx << 0x18;
        *(edi + 0x50) = ecx | ebx >> 8 & 65280 | edx;
        ecx = eax << 8 & 16711680;
        edx = eax;
        ebx = eax;
        ecx = ecx | edx >> 0x18;
        ecx = ecx | ebx >> 8 & 65280;
        *(edi + 0x54) = ecx | eax << 0x18;
    }
    al = *(ebp + -2100);
    *(A8 + 0x38) = al;
    *(A8 + 0x48) = Vffffffe4;
    *(A8 + 0x4c) = Vffffffe8;
    *(A8 + 0x50) = Vffffffec;
    eax = Vfffffff0;
    *(A8 + 0x54) = eax;
    *(ebp + -2100) = 0;
    if(Vfffff7e0 != 0) {
        Vfffff7d4 = ( *(A8 + 0x15f) & 0xff) << 0x10;
        Vfffff7d4 = Vfffff7d4 | ( *(A8 + 0x15e) & 0xff) << 8;
        Vfffff7d4 = Vfffff7d4 | ( *(A8 + 0x160) & 0xff) << 0x18;
        if(!(( *(A8 + 0x48) & 0xff) >> 4 & 1)) {
            *(A8 + 0x15e) = *(edi + 0x77) & 0xff;
            *(A8 + 0x15f) = *(edi + 0x78) & 0xff;
            *(A8 + 0x160) = *(edi + 0x79) & 0xff;
        } else {
            *(A8 + 0x15e) = *(Vfffff7e0 + 0x31) & 0xff;
            *(A8 + 0x15f) = *(Vfffff7e0 + 0x32) & 0xff;
            *(A8 + 0x160) = *(Vfffff7e0 + 0x33) & 0xff;
        }
        ecx = ( *(A8 + 0x15f) & 0xff) << 0x10;
        ecx = ecx | ( *(A8 + 0x15e) & 0xff) << 8;
        if(Vfffff7d4 != (ecx | ( *(A8 + 0x160) & 0xff) << 0x18)) {
            *(ebp + -2100) = 1;
        }
        eax = *(Vfffff7e0 + 0x26) & 65535;
        edx = eax << 8;
        eax = eax >> 8;
        *(A8 + 0x34) = edx | eax;
    }
    if(!(( *(A8 + 0x4f) & 0xff) >> 3 & 1)) {
        edx = *(edi + 0x7b) & 0xff;
        edx :: 0;
        if(!(ebx = *(edi + 0x7a) & 0xff)) {
            eax = edx + ebx + 0x80;
            if(Vfffff7d8 >= eax) {
                ecx = A8 + 0x98;
                *(A8 + 0x98) = 0;
                ecx = Vfffff7dc;
                L00401790(ebx + edi + 0x80, edx, ecx);
            }
        }
    }
    ebx = *(A8 + 0x20);
    do {
        *(ebx + 0x48) = *(A8 + 0x48);
        *(ebx + 0x4c) = *(A8 + 0x4c);
        *(ebx + 0x50) = *(A8 + 0x50);
        eax = *(A8 + 0x54);
        *(ebx + 0x54) = eax;
        ebx = *ebx;
    } while(ebx != 0);
    if(Ac != 0 && *(ebp + -2100) != 0 && *(A8 + 0x3a) != 0) {
        ebx = L004018F0(A8, 0, & Vfffff7e4);
        if(ebx > 0x800) {
            L00429610(65537);
        }
        ecx = Vfffff7dc;
        eax = L00401730(0x66, & Vfffff7e4, ebx, 0);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0040D5F4 - 0x0040D5FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040D5F4()
{



}

/*	Procedure: 0x0040D600 - 0x0040D7D8
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004154F0()
 */

L0040D600(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    eax = 0x1010;
    L00434370();
    ebx = Ac;
    (save)A10;
    L00428D80(ebx);
    (restore)ecx;
    if(al == 0) {
        L004364F0( *(A8 + 0x60), A10 + 1, *A10 & 0xff, ebp + -4120, 0x40c0c0, 0);
        if(al != 0) {
            L00429610(65549);
        }
    }
    edx = ebx + 1;
    L004364F0( *(A8 + 0x60), edx, *ebx & 0xff, ebp + -4120, 0x40c0c0, 0);
    if(al == 0) {
        L00429610(65548);
    }
    *(ebp - 0x14) = L00436310( *(A8 + 0x60), *(ebp + -4120), ebp - 0x10);
    if(*(ebp - 0x10) > 0xf00 || *(ebp - 0x10) < 0x80) {
        L00429610(65546);
    }
    ebx = ( *( *(ebp - 0x14) + 0x7a) & 0xff) - -128;
    *(ebp + -4124) = ebx;
    if(*(ebp - 0x10) < ebx) {
        L00429610(65546);
    }
    edi = ebp + -4116;
    edi = edi + L004342A0(edi, *(ebp - 0x14), 0x80);
    edi = edi + L00428EA0(A10, edi, 0xff);
    L004342A0(edi, *(ebp - 0x14) + ebx, *(ebp - 0x10) - *(ebp + -4124));
    edi = ebp + -4116;
    *(edi + 0x7a) = *A10 & 0xff;
    if(A1c != 0) {
        L00442070(A14, A18, edi + 0x20);
    }
    eax = ( *(edi + 0x7a) & 0xff) + 0x83;
    ebx = ( *(edi + 0x7b) & 0xff) + eax;
    ebx = ebx + ( *(edi + 0x7c) & 0xff);
    ebx = ebx + ( *(edi + 0x7d) & 0xff) & -4;
    if(ebx > 0x1000) {
        L00429610(65546);
    }
    L00435CD0( *(A8 + 0x60), *(ebp + -4120));
    L004364F0( *(A8 + 0x60), A10 + 1, *A10 & 0xff, ebp + -4120, 0x40c0c0, 0);
    return L00435B10( *(A8 + 0x60), *(ebp + -4120), ebp + -4116, ebx, 0);
}

/*	Procedure: 0x0040D7D9 - 0x0040D7DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040D7D9()
{



}

/*	Procedure: 0x0040D7E0 - 0x0040D878
 *	Argument size: 8
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L00415380()
 */

L0040D7E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    edi = L00435AB0( *(A8 + 0x60));
    ebx = 0;
    if(edi > 0) {
        do {
            Ac = L00436310( *(A8 + 0x60), ebx, ebp - 0x14);
            if(*(ebp - 0x14) >= 0x80 && !(( *Ac & 0xff) >> 7 & 1) && !(( *(Ac + 0x10) & 0xff) >> 7 & 1)) {
                ecx = *(Ac + 0x7a) & 0xff;
                if(*(ebp - 0x14) >= (cl & 0xff) - -128) {
                    goto L0040d845;
                }
            }
            ebx = ebx + 1;
        } while(ebx < edi);
        goto L0040d869;
L0040d845:
        ecx = cl & 0xff;
        Ac = L00428F50(Ac, Ac - -128, ecx);
        return 1;
    }
L0040d869:
    *Ac = 0;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0040D879 - 0x0040D87F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040D879()
{



}

/*	Procedure: 0x0040D880 - 0x0040D9A2
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004154F0()
 */

L0040D880(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    (save)edi;
    esp = esp - 8;
    eax = ebp - 0x10;
    edi = A8;
    L004364F0( *(edi + 0x60), Ac + 1, *Ac & 0xff, eax, 0x40c0c0, 0);
    if(al != 0) {
        L00429610(65549);
    }
    ebx = ( *Ac & 0xff) - -131 & -4;
    L00435B10( *(edi + 0x60), *(ebp - 0x10), 0, ebx, ebp - 0x14);
    L00434150( *(ebp - 0x14), ebx);
    *( *(ebp - 0x14)) = *( *(ebp - 0x14)) | 0x80;
    *( *(ebp - 0x14) + 0x10) = *( *(ebp - 0x14) + 0x10) | 0x80;
    *( *(ebp - 0x14) + 6) = *( *(ebp - 0x14) + 6) | 2;
    *( *(ebp - 0x14) + 0x16) = *( *(ebp - 0x14) + 0x16) | 2;
    L00442070(A10, A14, *(ebp - 0x14) + 0x20);
    eax = L0042EF50();
    edi = edx << 8;
    ecx = 0;
    edi = edi & 16711680;
    edi = edi | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    edi = edi | ecx >> 8 & 65280 | edx;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    ecx = ecx | edx >> 8 & 65280 | eax;
    ebx = *(ebp - 0x14) + 0x40;
    *ebx = edi;
    *(ebx + 4) = ecx;
    edx = *(ebp - 0x14) + 0x48;
    *edx = edi;
    *(edx + 4) = ecx;
    eax = *Ac & 0xff;
    *( *(ebp - 0x14) + 0x7a) = al;
    eax = L00428EA0(Ac, *(ebp - 0x14) - -128, 0xff);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0040D9A3 - 0x0040D9AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040D9A3()
{



}

/*	Procedure: 0x0040D9B0 - 0x0040DB11
 *	Argument size: 20
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L0040DC10()
 *		L0040E200()
 *		L0040E830()
 */

L0040D9B0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(!(( *(Ac + 0x48) & 0xff) >> 7 & 1)) {
        return 0;
    }
    if(A18 != 0) {
        edi = 0;
        (save)A10;
        L00435AE0( *(A8 + 0x64));
        (restore)ecx;
        if(al != 0) {
            edi = L00436310( *(A8 + 0x64), A10, & Vfffffff0);
            if(Vfffffff0 < 0x38) {
                edi = 0;
            }
        }
        if(edi != 0) {
            eax = A18;
            edx = *eax;
            ecx = edx & *A14;
            *(ebp - 0x20) = ecx | !edx & *edi;
            eax = *(eax + 4);
            ecx = eax & *(A14 + 4);
            *(ebp - 0x1c) = ecx | !eax & *(edi + 4);
            eax = A18;
            edx = *(eax + 8);
            ecx = edx & *(A14 + 8);
            *(ebp - 0x18) = ecx | !edx & *(edi + 8);
            eax = *(eax + 0xc);
            ecx = eax & *(A14 + 0xc);
            eax = !eax & *(edi + 0xc);
            Vffffffec = ecx | eax;
        } else {
            *(ebp - 0x20) = *A14;
            *(ebp - 0x1c) = *(A14 + 4);
            eax = *(A14 + 8);
            *(ebp - 0x18) = eax;
            Vffffffec = *(A14 + 0xc);
        }
    } else {
        *(ebp - 0x20) = *A14;
        *(ebp - 0x1c) = *(A14 + 4);
        *(ebp - 0x18) = *(A14 + 8);
        Vffffffec = *(A14 + 0xc);
    }
    *(ebp - 0x20) = *(ebp - 0x20) & 0xef;
    *(ebp - 0x1c) = *(ebp - 0x1c) & 0xf7;
    if(!(( *(Ac + 0x4b) & 0xff) >> 7 & 1)) {
        *(ebp - 0x1e) = *(ebp - 0x1e) & 0xfe;
    }
    if(!( *(ebp - 0x20) & !( *(Ac + 0x48)))) {
        esp = ebp - 0xc;
        return 1;
    }
    eax = !( *(Ac + 0x4c));
    if(!( *(ebp - 0x1c) & eax)) {
        esp = ebp - 0xc;
        return 1;
    }
    if(!( *(ebp - 0x18) & !( *(Ac + 0x50)))) {
        esp = ebp - 0xc;
        return 1;
    }
    if(!(Vffffffec & !( *(Ac + 0x54)))) {
        esp = ebp - 0xc;
        return 1;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0040DB12 - 0x0040DB1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040DB12()
{



}

/*	Procedure: 0x0040DB20 - 0x0040DC03
 *	Argument size: 16
 *	Local size: 268
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040DB20(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vfffffff0 = ecx;
    if(!(( *(A8 + 0x4e) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    if(A14 < 1) {
        L00429610(65538);
    }
    edi = L00436310( *(Vfffffff0 + 0x64), *A10 & 0xff, ebp + -280);
    if(*(ebp + -280) < 0x38) {
        L00429610(65546);
    }
    eax = *(edi + 0x34) & 0xff;
    Vffffffec = eax;
    *(ebp + -280) :: Vffffffec + 0x38;
    if(!(esi = edi + 0x38)) {
        L00429610(65546);
    }
    L00431A10( *(A8 + 8), 0x1f7, Ac, edi, *(ebp + -280));
    L00428F50(ebp + -276, esi, Vffffffec);
    return L00416790(Vfffffff0, A8, 0x1f6, 0, ebp + -276, 0, 0);
}

/*	Procedure: 0x0040DC04 - 0x0040DC0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040DC04()
{



}

/*	Procedure: 0x0040DC10 - 0x0040DF4F
 *	Argument size: 16
 *	Local size: 608
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040DC10(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffdd4;
	/* unknown */ void  Vfffffed4;
	/* unknown */ void  Vfffffed8;
	/* unknown */ void  Vfffffedc;
	/* unknown */ void  Vfffffee0;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffee8;
	/* unknown */ void  Vfffffeec;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffef1;
	/* unknown */ void  Vfffffff0;



    Vfffffeec = ecx;
    ebx = A14;
    if(!(( *(A8 + 0x4e) & 0xff) >> 3 & 1)) {
        L00429610(65556);
    }
    if(ebx < 0x38) {
        L00429610(65538);
    }
    eax = ebp + -620;
    esi = A10;
    Vfffffee0 = L004303D0( *(A8 + 8), eax, 0x40, 0);
    Vfffffee4 = *(esi + 0x34) & 0xff;
    Vfffffee8 = *(esi + 0x35) & 0xff;
    Vfffffedc = *(esi + 0x30) & 0xff;
    if(ebx < Vfffffee4 + 0x38 + Vfffffee8) {
        L00429610(65538);
    }
    L0040D9B0(Vfffffeec, A8, 0, esi, 0);
    if(al != 0) {
        L00429610(6553605);
    }
    eax = Vfffffedc;
    Vfffffed4 = eax;
    Vfffffdd4 = 0;
    eax = L00436310( *(Vfffffeec + 0x64), Vfffffed4, & Vfffffed8);
    if(Vfffffed8 > 0x38) {
        ebx = *(eax + 0x34) & 0xff;
        if(Vfffffed8 >= ebx + 0x38) {
            L00428F50( & Vfffffdd4, eax + 0x38, ebx);
        }
    }
    L00427DA0(M0047e444, esi + 0x38, Vfffffee4, & Vfffffef1, 0xff);
    Vfffffef0 = al;
    Vfffffff0 = (Vfffffef0 & 0xff) + 0x3b;
    Vfffffff0 = Vfffffff0 + Vfffffee8;
    Vfffffff0 = Vfffffff0 + Vfffffee0;
    Vfffffff0 = Vfffffff0 & -4;
    ebx = L00436100( *(Vfffffeec + 0x64), Vfffffed4, Vfffffff0);
    L00434150(ebx, 0x38);
    *ebx = *esi;
    *(ebx + 4) = *(esi + 4);
    *(ebx + 8) = *(esi + 8);
    *(ebx + 0xc) = *(esi + 0xc);
    eax = L0042EF50();
    ecx = edx << 8;
    edi = 0;
    ecx = ecx & 16711680;
    ecx = ecx | edx >> 0x18;
    edi = edx;
    edx = edx << 0x18;
    *(ebx + 0x10) = ecx | edi >> 8 & 65280 | edx;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    *(ebx + 0x14) = ecx | edx >> 8 & 65280 | eax;
    *(ebx + 0x26) = *(esi + 0x26) & 65535;
    *(Vfffffeec + 0x2a0) = 1;
    al = Vfffffedc;
    *(ebx + 0x30) = al;
    ecx = *(esi + 0x25) & 0xff;
    *(ebx + 0x25) = cl;
    edx = *(esi + 0x31) & 0xff;
    *(ebx + 0x31) = dl;
    *(ebx + 0x32) = *(esi + 0x32) & 0xff;
    *(ebx + 0x33) = *(esi + 0x33) & 0xff;
    *(ebx + 0x34) = Vfffffef0 & 0xff;
    *(ebx + 0x35) = Vfffffee8;
    *(ebx + 0x36) = Vfffffee0;
    edi = ebx + 0x38;
    edi = edi + L00428EA0( & Vfffffef0, edi, 0xff);
    edi = edi + L004342A0(edi, esi + Vfffffee4 + 0x38, Vfffffee8);
    if(Vfffffff0 != (edi + L004342A0(edi, ebp + -620, Vfffffee0) - ebx + 3 & -4)) {
        L00429610(65537);
    }
    L00431C20( *(A8 + 8), Ac, 0, 0x1f8);
    L00416790(Vfffffeec, A8, 0x1f8, 0, & Vfffffdd4, 0, 0);
    ecx = Vfffffeec;
    L0040C970();
    eax = Vfffffeec;
    edi = *(eax + 0x1c);
    if(edi != 0) {
        do {
            esi = *edi;
            if(( *(edi + 0x38) & 0xff) == Vfffffedc) {
                ecx = Vfffffeec;
                L0040D0F0(edi, 1, 0);
            }
            edi = esi;
        } while(esi != 0);
    }
}

/*	Procedure: 0x0040DF50 - 0x0040E154
 *	Argument size: 16
 *	Local size: 32
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040DF50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    *(ebp - 0x24) = ecx;
    if(!(( *(A8 + 0x4e) & 0xff) >> 5 & 1) && !(( *(A8 + 0x51) & 0xff) >> 6 & 1) && !(( *(A8 + 0x4c) & 0xff) >> 2 & 1) && !(( *(A8 + 0x4b) & 0xff) >> 4 & 1)) {
        L00429610(65556);
    }
    ecx = *( *(ebp - 0x24) + 0x64);
    Vffffffe4 = ecx;
    ebx = 4;
    eax = L00435AB0(Vffffffe4);
    esi = 0;
    Vfffffff0 = eax;
    if(eax > 0) {
        do {
            eax = L00436310(Vffffffe4, esi, & Vffffffec);
            edx = Vffffffec < 0x38 ? 0 : *(eax + 0x34) & 0xff;
            if(Vffffffec < (dl & 0xff) + 0x38) {
                dl = 0;
            }
            ebx = ebx + 0x30;
            ebx = ebx + (dl & 0xff) + 3;
            esi = esi + 1;
            ebx = ebx & -4;
        } while(esi < Vfffffff0);
    }
    eax = L0042E3A0(ebx);
    edx = Vfffffff0;
    esi = eax;
    Vffffffe0 = eax;
    *(ebp - 0x28) = eax;
    edi = edx << 8 & 16711680;
    eax = edx;
    ecx = edx;
    edi = edi | eax >> 0x18;
    edi = edi | ecx >> 8 & 65280;
    *esi = edi | edx << 0x18;
    esi = esi + 4;
    Vffffffe8 = 0;
    if(Vfffffff0 > 0) {
        do {
            eax = L00436310(Vffffffe4, Vffffffe8, & Vffffffec);
            if(Vffffffec >= 0x38) {
                edx = *(eax + 0x34) & 0xff;
                *(ebp - 0x29) = dl;
                if(Vffffffec < (dl & 0xff) + 0x38) {
                    *(ebp - 0x29) = 0;
                }
                *esi = *eax;
                *(esi + 4) = *(eax + 4);
                *(esi + 8) = *(eax + 8);
                *(esi + 0xc) = *(eax + 0xc);
                *(esi + 0x10) = *(eax + 0x10);
                *(esi + 0x14) = *(eax + 0x14);
                cl = Vffffffe8;
                *(esi + 0x28) = cl;
                edx = *(eax + 0x31) & 0xff;
                *(esi + 0x29) = dl;
                *(esi + 0x2a) = *(eax + 0x32) & 0xff;
                *(esi + 0x2b) = *(eax + 0x33) & 0xff;
                cl = *(ebp - 0x29);
                eax = eax + 0x38;
                *(esi + 0x2c) = cl;
                L004342A0(esi + 0x30, eax, *(ebp - 0x29) & 0xff);
            } else {
                *(ebp - 0x29) = 0;
            }
            edx = (( *(ebp - 0x29) & 0xff) + 0x33 & -4) + esi;
            Vffffffe8 = Vffffffe8 + 1;
            esi = edx;
        } while(Vffffffe8 < Vfffffff0);
    }
    L00431A10( *(A8 + 8), 0x1fa, Ac, Vffffffe0, ebx);
    L00416790( *(ebp - 0x24), A8, 0x1f9, 0, 0, 0, 0);
    return L0042E3E0(ebp - 0x28);
}

/*	Procedure: 0x0040E155 - 0x0040E15F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040E155()
{



}

/*	Procedure: 0x0040E160 - 0x0040E1FC
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0040E200()
 *		L0040E830()
 */

L0040E160(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = Ac;
    esp = esp - 0xc;
    esi = A8;
    if(ebx == 0) {
        return 0;
    }
    if(ebx > 0x3f) {
        esp = ebp - 8;
        return 0;
    }
    eax = ebp - 0x14;
    edx = ebp - 0x10;
    *(ebp - 0x10) = esi;
    *(ebp - 0x14) = ebx;
    (save)eax;
    eax = L00427F40(edx);
    (restore)ecx;
    if(*(ebp - 0x14) != ebx) {
        esp = ebp - 8;
        return 0;
    }
    if(ebx != 0) {
        do {
            eax = L00428490(esi, ebx, ebp - 0xc) - 9;
            esi = esi + *(ebp - 0xc);
            ebx = ebx - *(ebp - 0xc);
            if(eax <= 1 || (eax = eax - 4) || (eax = eax - 0xd) || !(eax = eax - 0x86)) {
                goto L0040e1e4;
            }
L0040e1f0:
        } while(ebx != 0);
        goto L0040e1f4;
L0040e1e4:
        esp = ebp - 8;
        return 0;
        goto L0040e1f0;
    }
L0040e1f4:
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x0040E1FD - 0x0040E1FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040E1FD()
{



}

/*	Procedure: 0x0040E200 - 0x0040E5AD
 *	Argument size: 16
 *	Local size: 616
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040E200(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffdd0;
	/* unknown */ void  Vfffffed0;
	/* unknown */ void  Vfffffed4;
	/* unknown */ void  Vfffffed8;
	/* unknown */ void  Vfffffedc;
	/* unknown */ void  Vfffffee0;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffee8;
	/* unknown */ void  Vfffffee9;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffe8 = ecx;
    esi = A14;
    if(!(( *(A8 + 0x4e) & 0xff) >> 4 & 1)) {
        L00429610(65556);
    }
    if(esi < 0x80) {
        L00429610(65538);
    }
    Vffffffec = *(A10 + 0x7a) & 0xff;
    Vfffffed4 = *(A10 + 0x7b) & 0xff;
    eax = *(A10 + 0x7c) & 0xff;
    Vfffffed8 = eax;
    if(esi < Vffffffec - -128 + Vfffffed4 + Vfffffed8) {
        L00429610(65538);
    }
    L0040D9B0(Vffffffe8, A8, *(A10 + 0x76) & 0xff, A10, A10 + 0x10);
    if(al != 0) {
        L00429610(6553605);
    }
    eax = Vffffffec;
    Vfffffee0 = eax;
    Vfffffedc = A10;
    Vfffffedc = Vfffffedc - -128;
    (save)Vfffffee0;
    L0040E160(Vfffffedc);
    (restore)ecx;
    if(al == 0) {
        L00429610(65538);
    }
    esi = *(Vffffffe8 + 0x60);
    L004364F0(esi, Vfffffedc, Vfffffee0, ebp + -628, 0x40c0c0, 0);
    if(al != 0) {
        L00429610(65549);
    }
    (save) *(A10 + 0x76) & 0xff;
    L00435AE0( *(Vffffffe8 + 0x64));
    (restore)ecx;
    if(al == 0) {
        L00429610(65538);
    }
    edx = ebp + -624;
    Vfffffed0 = L004303D0( *(A8 + 8), edx, 0x40, 0);
    L00427DA0(M0047e444, A10 + Vffffffec - -128, Vfffffed4, & Vfffffee9, 0xff);
    Vfffffee8 = al;
    Vfffffff0 = Vfffffee8 & 0xff;
    Vfffffff0 = Vfffffff0 + Vffffffec + 0x83;
    Vfffffff0 = Vfffffff0 + Vfffffed8;
    Vfffffff0 = Vfffffff0 + Vfffffed0;
    Vfffffff0 = Vfffffff0 & -4;
    L00435B10(esi, *(ebp + -628), 0, Vfffffff0, & Vfffffee4);
    L00434150(Vfffffee4, 0x80);
    L004342A0(Vfffffee4, A10, 0x40);
    eax = L0042EF50();
    esi = edx << 8;
    ecx = 0;
    esi = esi & 16711680;
    esi = esi | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    esi = esi | ecx >> 8 & 65280 | edx;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    ecx = ecx | edx >> 8 & 65280 | eax;
    edi = Vfffffee4 + 0x40;
    *edi = esi;
    *(edi + 4) = ecx;
    eax = Vfffffee4 + 0x48;
    *eax = esi;
    *(eax + 4) = ecx;
    eax = *(A10 + 0x76) & 0xff;
    *(Vfffffee4 + 0x76) = al;
    edx = *(A10 + 0x77) & 0xff;
    *(Vfffffee4 + 0x77) = dl;
    *(Vfffffee4 + 0x78) = *(A10 + 0x78) & 0xff;
    *(Vfffffee4 + 0x79) = *(A10 + 0x79) & 0xff;
    al = Vffffffec;
    *(Vfffffee4 + 0x7a) = al;
    *(Vfffffee4 + 0x7b) = Vfffffee8 & 0xff;
    *(Vfffffee4 + 0x7c) = Vfffffed8;
    *(Vfffffee4 + 0x7d) = Vfffffed0;
    edi = Vfffffee4 - -128;
    esi = A10 + 0x80;
    edi = edi + L004342A0(edi, esi, Vfffffee0);
    esi = esi + Vffffffec;
    eax = L00428EA0( & Vfffffee8, edi, 0xff);
    esi = esi + Vfffffed4;
    edi = edi + eax;
    edi = edi + L004342A0(edi, esi, Vfffffed8);
    if(Vfffffff0 != (edi + L004342A0(edi, ebp + -624, Vfffffed0) - Vfffffee4 + 3 & -4)) {
        L00429610(65537);
    }
    L00431C20( *(A8 + 8), Ac, 0, 0x1fb);
    L00428F50( & Vfffffdd0, Vfffffedc, Vfffffee0);
    L00416790(Vffffffe8, A8, 0x1fb, 0, & Vfffffdd0, 0, 0);
    ecx = Vffffffe8;
    return L0040C970();
}

/*	Procedure: 0x0040E5AE - 0x0040E5AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040E5AE()
{



}

/*	Procedure: 0x0040E5B0 - 0x0040E6FA
 *	Argument size: 16
 *	Local size: 264
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040E5B0(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = ecx;
    if(!(( *(A8 + 0x4e) & 0xff) >> 3 & 1)) {
        L00429610(65556);
    }
    if(A14 != 0) {
        L004364F0( *(esi + 0x60), A10, A14, ebp + -272, 0x40c0c0, 0);
        if(al != 0) {
            goto L0040e60e;
        }
    }
    L00429610(65548);
L0040e60e:
    edi = L00436310( *(esi + 0x60), *(ebp + -272), ebp + -276);
    if(*(ebp + -276) >= 0x80) {
        if(!(( *edi & 0xff) >> 7 & 1) && !(( *(edi + 0x10) & 0xff) >> 7 & 1)) {
            L00429610(65556);
        }
        if(!(( *(edi + 6) & 0xff) >> 1 & 1) && !(( *(edi + 0x16) & 0xff) >> 1 & 1) && !(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
            L00429610(65556);
        }
    }
    L00435CD0( *(esi + 0x60), *(ebp + -272));
    ecx = esi;
    L0040C970();
    L00431A10( *(A8 + 8), 0x203, 0, A10, A14);
    L00428F50(ebp + -268, A10, A14);
    return L00416790(esi, A8, 0x1fc, 0, ebp + -268, 0, 0);
}

/*	Procedure: 0x0040E6FB - 0x0040E6FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040E6FB()
{



}

/*	Procedure: 0x0040E700 - 0x0040E825
 *	Argument size: 16
 *	Local size: 272
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040E700(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vfffffff0 = ecx;
    if(!(( *(A8 + 0x4e) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    ebx = *(Vfffffff0 + 0x60);
    if(A14 != 0) {
        L004364F0(ebx, A10, A14, ebp + -284, 0x40c0c0, 0);
        if(al != 0) {
            goto L0040e764;
        }
    }
    L00429610(65548);
L0040e764:
    edi = L00436310(ebx, *(ebp + -284), ebp + -280);
    if(*(ebp + -280) < 0x80) {
        L00429610(65546);
    }
    eax = L0042E350(edi, *(ebp + -280));
    edi = eax;
    Vffffffec = eax;
    L00442140(edi + 0x20);
    bl = 0;
    L00434150(edi + 0x20, 0x20);
    *(edi + 0x20) = bl;
    L00431A10( *(A8 + 8), 0x1fe, Ac, edi, *(ebp + -280));
    L00428F50(ebp + -276, A10, A14);
    L00416790(Vfffffff0, A8, 0x1fd, 0, ebp + -276, 0, 0);
    return L0042E3E0( & Vffffffec);
}

/*	Procedure: 0x0040E826 - 0x0040E82F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040E826()
{



}

/*	Procedure: 0x0040E830 - 0x0040EDF6
 *	Argument size: 16
 *	Local size: 684
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040E830(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffd88;
	/* unknown */ void  Vfffffe88;
	/* unknown */ void  Vfffffe8c;
	/* unknown */ void  Vfffffe94;
	/* unknown */ void  Vfffffe9c;
	/* unknown */ void  Vfffffea0;
	/* unknown */ void  Vfffffec0;
	/* unknown */ void  Vfffffec4;
	/* unknown */ void  Vfffffec8;
	/* unknown */ void  Vfffffecc;
	/* unknown */ void  Vfffffecd;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffe8 = ecx;
    ebx = A14;
    if(!(( *(A8 + 0x4e) & 0xff) >> 3 & 1)) {
        L00429610(65556);
    }
    if(ebx < 0x80) {
        L00429610(65538);
    }
    esi = A10;
    Vfffffec8 = *(esi + 0x7a) & 0xff;
    Vfffffec4 = *(esi + 0x7b) & 0xff;
    Vffffffcc = *(esi + 0x7c) & 0xff;
    eax = *(esi + 0x7d) & 0xff;
    Vffffffd4 = eax;
    if(ebx < Vfffffec8 - -128 + Vfffffec4 + Vffffffcc + Vffffffd4) {
        L00429610(65538);
    }
    L0040D9B0(Vffffffe8, A8, *(esi + 0x76) & 0xff, esi, esi + 0x10);
    if(al != 0) {
        L00429610(6553605);
    }
    Vffffffec = esi;
    Vffffffec = Vffffffec - -128;
    Vffffffdc = Vffffffec;
    Vffffffdc = Vffffffdc + Vfffffec8;
    Vffffffdc = Vffffffdc + Vfffffec4;
    Vffffffdc = Vffffffdc + Vffffffcc;
    ecx = *(Vffffffe8 + 0x60);
    Vfffffff0 = ecx;
    if(Vffffffd4 != 0) {
        L004364F0(ecx, Vffffffdc, Vffffffd4, & Vffffffe0, 0x40c0c0, 0);
        if(al != 0) {
            goto L0040e93e;
        }
    }
    L00429610(65548);
L0040e93e:
    edi = & Vfffffe88;
    ebx = L00436310(Vfffffff0, Vffffffe0, edi);
    if(Vfffffe88 >= 0x80 && !(( *(ebx + 6) & 0xff) >> 1 & 1) && !(( *(ebx + 0x16) & 0xff) >> 1 & 1) && !(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    (save) *(esi + 0x76) & 0xff;
    L00435AE0( *(Vffffffe8 + 0x64));
    (restore)ecx;
    if(al == 0) {
        L00429610(65538);
    }
    cl = 0;
    edi = 0;
    do {
        if(*(esi + edi * 4 + 0x20) != 0) {
            goto L0040e9c7;
        }
        edi = edi + 1;
    } while(edi < 8);
    goto L0040e9d8;
L0040e9c7:
    cl = 1;
L0040e9d8:
    if(Vfffffe88 >= 0x80) {
        eax = cl != 0 ? esi + 0x20 : ebx + 0x20;
        L004342A0( & Vfffffea0, eax, 0x20);
        Vfffffe8c = *(ebx + 0x40);
        eax = *(ebx + 0x50);
        edi = *(ebx + 0x44);
        Vfffffe94 = eax;
        Vfffffe9c = *(ebx + 0x54);
    } else {
        if(cl != 0) {
            edx = esi + 0x20;
            (save)0x20;
            (save)edx;
            (save) & Vfffffea0;
            L004342A0();
        } else {
            L00442070(0, 0, & Vfffffea0);
        }
        Vfffffe8c = L0042EF50();
        edi = edx;
        Vfffffe94 = 0;
        Vfffffe9c = 0;
    }
    ecx = ebp + -696;
    Vfffffec0 = L004303D0( *(A8 + 8), ecx, 0x40, 0);
    L00427DA0(M0047e444, esi + Vfffffec8 - -128, Vfffffec4, & Vfffffecd, 0xff);
    Vfffffecc = al;
    Vffffffe4 = Vfffffecc & 0xff;
    Vffffffe4 = Vffffffe4 + Vfffffec8 + 0x83;
    Vffffffe4 = Vffffffe4 + Vffffffcc;
    Vffffffe4 = Vffffffe4 + Vfffffec0;
    eax = Vfffffec8;
    Vffffffe4 = Vffffffe4 & -4;
    if(Vffffffd4 == eax) {
        Vffffffd0 = eax;
        if(L00434380(Vffffffdc, Vffffffec, eax) != 0) {
            goto L0040ebc1;
        }
    }
    eax = Vfffffec8;
    Vffffffd0 = eax;
    (save)Vffffffd0;
    L0040E160(Vffffffec);
    (restore)ecx;
    if(al == 0) {
        L00429610(65538);
    }
    L004364F0(Vfffffff0, Vffffffec, Vffffffd0, & Vffffffd8, 0x40c0c0, 0);
    if(al != 0) {
        L00429610(65549);
    }
    edx = Vffffffe0;
    eax = Vffffffd8;
    if(edx == eax) {
        (save)Vffffffe4;
        (save)edx;
    } else {
        L00435B10(Vfffffff0, Vffffffd8, 0, Vffffffe4, 0);
        if(Vffffffd8 <= Vffffffe0) {
            Vffffffe0 = Vffffffe0 + 1;
        }
        (save)Vffffffe0;
        L00435CD0(Vfffffff0);
        (restore)ecx;
        if(Vffffffe0 < Vffffffd8) {
            Vffffffd8 = Vffffffd8 - 1;
        }
        (save)0;
        (save)Vffffffd8;
        (save)Vfffffff0;
        eax = L00436310();
        goto L0040ebd0;
L0040ebc1:
        (save)Vffffffe4;
        (save)Vffffffe0;
    }
    (save)Vfffffff0;
    L00436100();
L0040ebd0:
    esp = esp + 0xc;
    ebx = eax;
    L00434150(ebx, 0x80);
    L004342A0(ebx, esi, 0x20);
    L004342A0(ebx + 0x20, & Vfffffea0, 0x20);
    *(ebx + 0x40) = Vfffffe8c;
    *(ebx + 0x44) = edi;
    eax = L0042EF50();
    ecx = edx << 8;
    edi = 0;
    ecx = ecx & 16711680;
    ecx = ecx | edx >> 0x18;
    edi = edx;
    edx = edx << 0x18;
    *(ebx + 0x48) = ecx | edi >> 8 & 65280 | edx;
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edi = eax;
    eax = eax << 0x18;
    *(ebx + 0x4c) = ecx | edi >> 8 & 65280 | eax;
    *(ebx + 0x50) = Vfffffe94;
    *(ebx + 0x54) = Vfffffe9c;
    ecx = *(esi + 0x76) & 0xff;
    *(ebx + 0x76) = cl;
    edx = *(esi + 0x77) & 0xff;
    *(ebx + 0x77) = dl;
    *(ebx + 0x78) = *(esi + 0x78) & 0xff;
    *(ebx + 0x79) = *(esi + 0x79) & 0xff;
    *(ebx + 0x7a) = Vfffffec8;
    *(ebx + 0x7b) = Vfffffecc & 0xff;
    *(ebx + 0x7c) = Vffffffcc;
    *(ebx + 0x7d) = Vfffffec0;
    esi = Vffffffec;
    edi = ebx + 0x80;
    edi = edi + L004342A0(edi, esi, Vffffffd0);
    esi = esi + Vfffffec8;
    eax = L00428EA0( & Vfffffecc, edi, 0xff);
    esi = esi + Vfffffec4;
    edi = edi + eax;
    edi = edi + L004342A0(edi, esi, Vffffffcc);
    if(Vffffffe4 != (edi + L004342A0(edi, ebp + -696, Vfffffec0) - ebx + 3 & -4)) {
        L00429610(65537);
    }
    L00431C20( *(A8 + 8), Ac, 0, 0x1ff);
    ebx = Vffffffd4;
    L00428F50( & Vfffffd88, Vffffffdc, ebx);
    L00416790(Vffffffe8, A8, 0x1ff, 0, & Vfffffd88, 0, 0);
    ecx = Vffffffe8;
    L0040C970();
    *(Vffffffe8 + 0x2a0) = 1;
    eax = Vffffffe8;
    edi = *(eax + 0x1c);
    if(edi != 0) {
        do {
            esi = *edi;
            eax = L00430420( *(edi + 8));
            if(( *eax & 0xff) == Vffffffd4 && L00434380(eax + 1, Vffffffdc, ebx) != 0) {
                L00430450( *(edi + 8), Vffffffec, Vffffffd0, 0);
                ecx = Vffffffe8;
                eax = L0040D0F0(edi, 1, 0);
            }
            edi = esi;
        } while(esi != 0);
    }
}

/*	Procedure: 0x0040EDF7 - 0x0040EDFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040EDF7()
{



}

/*	Procedure: 0x0040EE00 - 0x0040F10F
 *	Argument size: 16
 *	Local size: 48
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040EE00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffd8 = ecx;
    if(!(( *(A8 + 0x4e) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    ecx = *(Vffffffd8 + 0x60);
    Vffffffdc = ecx;
    Vffffffe8 = 4;
    eax = L00435AB0(Vffffffdc);
    esi = 0;
    Vffffffe4 = eax;
    if(eax > 0) {
        do {
            eax = L00436310(Vffffffdc, esi, & Vffffffec);
            if(Vffffffec >= 0x80) {
                edx = *(eax + 0x7a) & 0xff;
                ebx = *(eax + 0x7b) & 0xff;
                cl = dl;
                edx = (dl & 0xff) - -128;
                al = bl;
                if(Vffffffec >= (bl & 0xff) + edx) {
                    goto L0040ee89;
                }
            }
            al = 0;
            cl = 0;
L0040ee89:
            edx = al & 0xff;
            Vffffffe8 = Vffffffe8 + 0x28;
            Vffffffe8 = Vffffffe8 + (cl & 0xff);
            Vffffffe8 = Vffffffe8 + edx;
            Vffffffe8 = Vffffffe8 + 3;
            Vffffffe8 = Vffffffe8 & -4;
            esi = esi + 1;
            eax = Vffffffe8;
        } while(esi < Vffffffe4);
    }
    eax = Vffffffe8;
    Vffffffd0 = eax;
    eax = L0042E3A0(Vffffffd0);
    edx = Vffffffe4;
    edi = eax;
    ecx = edx << 8 & 16711680;
    esi = edx;
    ebx = edx;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | ebx >> 8 & 65280;
    Vffffffe0 = eax;
    Vfffffff0 = eax;
    *edi = ecx | edx << 0x18;
    *(ebp - 0x34) = *(Vffffffd8 + 0x64);
    edi = edi + 4;
    Vffffffd4 = 0;
    if(Vffffffe4 > 0) {
        do {
            esi = L00436310(Vffffffdc, Vffffffd4, & Vffffffec);
            if(Vffffffec >= 0x80) {
                ebx = *(esi + 0x7a) & 0xff;
                *(ebp - 0x39) = bl;
                eax = *(esi + 0x7b) & 0xff;
                ecx = (bl & 0xff) - -128;
                *(ebp - 0x3a) = al;
                if(Vffffffec < (al & 0xff) + ecx) {
                    *(ebp - 0x3a) = 0;
                    al = *(ebp - 0x3a);
                    *(ebp - 0x39) = al;
                }
                *edi = *(esi + 0x48);
                *(edi + 4) = *(esi + 0x4c);
                *(edi + 8) = *(esi + 0x50);
                *(edi + 0xc) = *(esi + 0x54);
                eax = *(esi + 0x10);
                ecx = *esi;
                edx = 0;
                if(eax & ecx || *(esi + 4) & *(esi + 0x14) || *(esi + 8) & *(esi + 0x18) || !( *(esi + 0xc) & *(esi + 0x1c))) {
                    edx = edx | 1;
                }
                if(!(eax & !ecx)) {
                    ebx = !( *(esi + 4));
                    if(!( *(esi + 0x14) & ebx)) {
                        eax = !( *(esi + 8));
                        if(!( *(esi + 0x18) & eax)) {
                            ecx = !( *(esi + 0xc));
                            if(*(esi + 0x1c) & ecx) {
                                goto L0040efc7;
                            }
                        }
                    }
                }
                edx = edx | 2;
L0040efc7:
                ebx = edx << 8 & 16711680;
                ebx = ebx | edx >> 0x18;
                ebx = ebx | edx >> 8 & 65280;
                *(edi + 0x18) = ebx | edx << 0x18;
                ebx = *(esi + 0x76) & 0xff;
                *(edi + 0x20) = bl;
                if(!(( *(esi + 0x10) & 0xff) >> 4 & 1) && !(( *esi & 0xff) >> 4 & 1)) {
                    goto L0040f015;
                }
                (save)ebx;
                L00435AE0( *(ebp - 0x34));
                (restore)ecx;
                if(al != 0) {
                    eax = L00436310( *(ebp - 0x34), ebx, ebp - 0x38);
                    if(*(ebp - 0x38) >= 0x38) {
                        ebx = *(eax + 0x31) & 0xff;
                        *(edi + 0x21) = bl;
                        *(edi + 0x22) = *(eax + 0x32) & 0xff;
                        *(edi + 0x23) = *(eax + 0x33) & 0xff;
                        goto L0040f062;
L0040f015:
                        *(edi + 0x21) = *(esi + 0x77) & 0xff;
                        ebx = *(esi + 0x78) & 0xff;
                        *(edi + 0x22) = bl;
                        *(edi + 0x23) = *(esi + 0x79) & 0xff;
                    }
                }
L0040f062:
                *(edi + 0x24) = *(ebp - 0x39);
                *(edi + 0x25) = *(ebp - 0x3a);
                eax = *(ebp - 0x39) & 0xff;
                ebx = ( *(ebp - 0x3a) & 0xff) + eax;
                ecx = esi + 0x80;
                L004342A0(edi + 0x28, ecx, ebx);
            } else {
                *(ebp - 0x3a) = 0;
                *(ebp - 0x39) = *(ebp - 0x3a);
            }
            eax = ( *(ebp - 0x39) & 0xff) + 0x2b;
            ebx = (( *(ebp - 0x3a) & 0xff) + eax & -4) + edi;
            Vffffffd4 = Vffffffd4 + 1;
            edi = ebx;
        } while(Vffffffd4 < Vffffffe4);
    }
    if(Vffffffe8 != edi - Vffffffe0) {
        L00429610(65546);
    }
    L00431A10( *(A8 + 8), 0x201, Ac, Vffffffe0, Vffffffd0);
    L00416790(Vffffffd8, A8, 0x200, 0, 0, 0, 0);
    return L0042E3E0( & Vfffffff0);
}

/*	Procedure: 0x0040F110 - 0x0040F1FC
 *	Argument size: 16
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040F110(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = ecx;
    if(!(( *(A8 + 0x4e) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    if(A14 < 0x20) {
        L00429610(65538);
    }
    *(ebp - 0x10) = A10;
    eax = L00430420( *(A8 + 8));
    edx = *eax & 0xff;
    L004364F0( *(esi + 0x60), eax + 1, edx, ebp - 0x14, 0x40c0c0, 0);
    if(al == 0) {
        L00429610(65548);
    }
    edi = L00436310( *(esi + 0x60), *(ebp - 0x14), ebp - 0x18);
    if(*(ebp - 0x18) < 0x80) {
        L00429610(65546);
    }
    L004342A0(edi + 0x20, *(ebp - 0x10), 0x20);
    ecx = esi;
    L0040C970();
    L00431A10( *(A8 + 8), 0x227, Ac, 0, 0);
    return L00416790(esi, A8, 0x226, 0, 0, 0, 0);
}

/*	Procedure: 0x0040F1FD - 0x0040F1FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040F1FD()
{



}

/*	Procedure: 0x0040F200 - 0x0040F262
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040F570()
 *		L0040F8A0()
 */

L0040F200(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    (save)ebx;
    if(A8 == 0) {
        (restore)ebx;
        return 0;
    }
    if(A8 > 0x3f) {
        (restore)ebx;
        return 0;
    }
    ebx = 0;
    if(A8 > 0) {
        do {
            eax = *(ebx + A4) & 0xff;
            if(al < 0x80) {
                eax = al & 0xff;
                if(eax < 0x61) {
                    goto L0040f23b;
                }
                if(eax > 0x7a) {
L0040f23b:
                    if(eax < 0x41) {
                        goto L0040f245;
                    }
                    if(eax > 0x5a) {
L0040f245:
                        if(eax < 0x30) {
                            goto L0040f24f;
                        }
                        if(eax > 0x39) {
L0040f24f:
                            if(eax != 0x2d) {
                                goto L0040f256;
                            }
                        }
                    }
                }
            }
            ebx = ebx + 1;
        } while(ebx < A8);
        goto L0040f25f;
L0040f256:
        (restore)ebx;
        return 0;
    }
L0040f25f:
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x0040F263 - 0x0040F26F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040F263()
{



}

/*	Procedure: 0x0040F2C1 - 0x0040F2CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040F2C1()
{



}

/*	Procedure: 0x0040F2D0 - 0x0040F566
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 *		L0040FF60()
 */

L0040F2D0(A8)
/* unknown */ void  A8;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x10;
    eax = L00435AB0( *(A8 + 0x68));
    if(eax != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    edx = ebp - 0x1c;
    *(ebp - 0x14) = 0;
    *(ebp - 0x14) = *(ebp - 0x14) | 0x80;
    *(ebp - 0x14) = *(ebp - 0x14) | 0x10;
    *(ebp - 0x14) = *(ebp - 0x14) | 8;
    *(ebp - 0x14) = *(ebp - 0x14) | 4;
    *(ebp - 0x14) = *(ebp - 0x14) | 1;
    *(ebp - 0x13) = *(ebp - 0x13) | 0x40;
    *(ebp - 0x18) = 0;
    *(ebp - 0x18) = *(ebp - 0x18) | 0x80;
    *(ebp - 0x18) = *(ebp - 0x18) | 0x40;
    *(ebp - 0x18) = *(ebp - 0x18) | 0x20;
    *(ebp - 0x17) = *(ebp - 0x17) | 0x80;
    *(ebp - 0x17) = *(ebp - 0x17) | 0x20;
    *(ebp - 0x10) = *(ebp - 0x14) | *(ebp - 0x18);
    *(ebp - 0xf) = *(ebp - 0xf) | 0x10;
    *(ebp - 0x10) = *(ebp - 0x10) | 2;
    *(ebp - 0xf) = *(ebp - 0xf) | 8;
    *(ebp - 0xf) = *(ebp - 0xf) | 4;
    *(ebp - 0xf) = *(ebp - 0xf) | 2;
    edi = 0x46fd60;
    esi = 0x46fd64;
    ebx = ( *L0046FD64 & 0xff) + ( *L0046FD60 & 0xff) + 0xb8 + 3 & -4;
    L00435B10( *(A8 + 0x68), 0, 0, ebx, edx);
    L00434150( *(ebp - 0x1c), ebx);
    *( *(ebp - 0x1c) + 4) = 33554432;
    *( *(ebp - 0x1c) + 8) = 738197504;
    L00434080( *(ebp - 0x1c) + 0xc, 0x20, *(ebp - 0x14));
    ebx = *(ebp - 0x1c);
    *(ebx + 0xc) = *(ebp - 0x10);
    eax = *(ebp - 0x1c);
    *(eax + 0x8c) = *(ebp - 0x10);
    ebx = *(ebp - 0x1c);
    *(ebx + 0xad) = *edi & 0xff;
    eax = *(ebp - 0x1c);
    *(eax + 0xaf) = *esi & 0xff;
    ebx = *(ebp - 0x1c) + 0xb8;
    L00428EA0(esi, ebx + L00428EA0(edi, ebx, 0xff), 0xff);
    eax = ebp - 0x1c;
    edi = 0x46fd70;
    esi = 0x46fd74;
    ebx = ( *L0046FD74 & 0xff) + ( *L0046FD70 & 0xff) + 0xb8 + 3 & -4;
    L00435B10( *(A8 + 0x68), 1, 0, ebx, eax);
    L00434150( *(ebp - 0x1c), ebx);
    *( *(ebp - 0x1c) + 8) = 721420288;
    L00434080( *(ebp - 0x1c) + 0xc, 0x20, *(ebp - 0x14) | *(ebp - 0x18));
    edx = *(ebp - 0x1c);
    *(edx + 0xc) = *(ebp - 0x10);
    ebx = *(ebp - 0x1c);
    *(ebx + 0xad) = *edi & 0xff;
    edx = *(ebp - 0x1c);
    *(edx + 0xaf) = *esi & 0xff;
    ebx = *(ebp - 0x1c) + 0xb8;
    L00428EA0(esi, ebx + L00428EA0(edi, ebx, 0xff), 0xff);
    ecx = ebp - 0x1c;
    esi = "XIf a folder and its parents do not specify an access item, this item is used by default.";
    ebx = ( *esi & 0xff) + ( *M0047e448 & 0xff) + 0xb8 + 3 & -4;
    edi = M0047e448;
    L00435B10( *(A8 + 0x68), 2, 0, ebx, ecx);
    L00434150( *(ebp - 0x1c), ebx);
    *( *(ebp - 0x1c) + 4) = 16777216;
    L00434080( *(ebp - 0x1c) + 0xc, 0x20, *(ebp - 0x18));
    edx = *(ebp - 0x1c);
    *(edx + 0xc) = *(ebp - 0x10);
    eax = *(ebp - 0x1c);
    *(eax + 0xad) = *edi & 0xff;
    edx = *(ebp - 0x1c);
    *(edx + 0xaf) = *esi & 0xff;
    ebx = *(ebp - 0x1c) + 0xb8;
    eax = L00428EA0(esi, ebx + L00428EA0(edi, ebx, 0xff), 0xff);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0040F567 - 0x0040F56F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040F567()
{



}

/*	Procedure: 0x0040F570 - 0x0040F6DF
 *	Argument size: 20
 *	Local size: 264
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040F570(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    eax = Ac;
    ecx = ( *(eax + 0x4b) & 0xff) >> 3;
    if(!(ecx & 1)) {
        eax = L00429610(65556);
    }
    if(A18 < 0xb8) {
        eax = L00429610(65546);
    }
    *(ebp + -272) = A14;
    edx = *(ebp + -272) + 0xad;
    eax = 0xb8;
    ecx = 0;
    do {
        eax = eax + ( *(edx + ecx) & 0xff);
        eax = eax + ( *(edx + ecx + 1) & 0xff);
        eax = eax + ( *(edx + ecx + 2) & 0xff);
        eax = eax + ( *(edx + ecx + 3) & 0xff);
        ebx = *(edx + ecx + 4) & 0xff;
        ecx = ecx + 5;
        eax = eax + ebx;
    } while(ecx < 6);
    if(A18 != (eax + ( *(edx + ecx) & 0xff) + 3 & -4)) {
        L00429610(65546);
    }
    eax = *(ebp + -272);
    esi = *(ebp + -272) + 0xb8;
    ebx = *(eax + 0xad) & 0xff;
    (save)ebx;
    L0040F200(esi);
    (restore)ecx;
    if(al == 0) {
        L00429610(65566);
    }
    L004364F0( *(A8 + 0x68), esi, ebx, ebp + -276, 0x40f270, 0);
    if(al != 0) {
        L00429610(65549);
    }
    L00435B10( *(A8 + 0x68), *(ebp + -276), A14, A18, 0);
    L00431C20( *(Ac + 8), A10, 0, 0x44c);
    L00428F50(ebp + -268, esi, ebx);
    L00416790(A8, Ac, 0x44c, 0, ebp + -268, 0, 0);
    ecx = A8;
    return L0040C970();
}

/*	Procedure: 0x0040F6E0 - 0x0040F7A2
 *	Argument size: 20
 *	Local size: 260
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040F6E0(A8, Ac, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    if(!(( *(Ac + 0x4b) & 0xff) >> 3 & 1)) {
        L00429610(65556);
    }
    if(A18 != 0) {
        L004364F0( *(A8 + 0x68), A14, A18, ebp + -272, 0x40f270, 0);
        if(al != 0) {
            goto L0040f73f;
        }
    }
    L00429610(65548);
L0040f73f:
    L00435CD0( *(A8 + 0x68), *(ebp + -272));
    ecx = A8;
    L0040C970();
    L00431A10( *(Ac + 8), 0x44e, 0, A14, A18);
    L00428F50(ebp + -268, A14, A18);
    return L00416790(A8, Ac, 0x44d, 0, ebp + -268, 0, 0);
}

/*	Procedure: 0x0040F7A3 - 0x0040F7AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040F7A3()
{



}

/*	Procedure: 0x0040F7B0 - 0x0040F893
 *	Argument size: 20
 *	Local size: 264
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040F7B0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  edi;



    if(!(( *(Ac + 0x4b) & 0xff) >> 4 & 1)) {
        L00429610(65556);
    }
    if(A18 != 0) {
        L004364F0( *(A8 + 0x68), A14, A18, ebp + -276, 0x40f270, 0);
        if(al != 0) {
            goto L0040f810;
        }
    }
    L00429610(65548);
L0040f810:
    edi = L00436310( *(A8 + 0x68), *(ebp + -276), ebp + -272);
    if(*(ebp + -272) < 0xb8) {
        L00429610(65546);
    }
    L00431A10( *(Ac + 8), 0x450, A10, edi, *(ebp + -272));
    L00428F50(ebp + -268, A14, A18);
    return L00416790(A8, Ac, 0x44f, 0, ebp + -268, 0, 0);
}

/*	Procedure: 0x0040F894 - 0x0040F89F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040F894()
{



}

/*	Procedure: 0x0040F8A0 - 0x0040FADE
 *	Argument size: 20
 *	Local size: 280
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040F8A0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(!(( *(Ac + 0x4b) & 0xff) >> 3 & 1)) {
        L00429610(65556);
    }
    if(A18 < 0xb8) {
        L00429610(65546);
    }
    eax = 0xb8;
    ebx = A14 + 0xad;
    ecx = 0;
    do {
        eax = eax + ( *(ebx + ecx) & 0xff);
        eax = eax + ( *(ebx + ecx + 1) & 0xff);
        eax = eax + ( *(ebx + ecx + 2) & 0xff);
        eax = eax + ( *(ebx + ecx + 3) & 0xff);
        edx = *(ebx + ecx + 4) & 0xff;
        ecx = ecx + 5;
        eax = eax + edx;
    } while(ecx < 6);
    if(A18 != (eax + ( *(ebx + ecx) & 0xff) + 3 & -4)) {
        L00429610(65546);
    }
    Vffffffec = *(A14 + 0xad) & 0xff;
    Vffffffe0 = A14;
    Vffffffe0 = Vffffffe0 + 0xb8;
    eax = ( *(A14 + 0xae) & 0xff) + (Vffffffec & 0xff) + Vffffffe0;
    edx = ( *(A14 + 0xaf) & 0xff) + eax;
    Vffffffe8 = ( *(A14 + 0xb0) & 0xff) + edx;
    ebx = *(A14 + 0xb1) & 0xff;
    if(bl != 0) {
        L004364F0( *(A8 + 0x68), Vffffffe8, bl & 0xff, & Vfffffff0, 0x40f270, 0);
        if(al != 0) {
            goto L0040f9a6;
        }
    }
    L00429610(65548);
L0040f9a6:
    ebx = bl & 0xff;
    Vffffffec = Vffffffec & 0xff;
    *(ebp + -289) = 0;
    if(ebx == Vffffffec) {
        L00434380(Vffffffe8, Vffffffe0, Vffffffec);
        if(al != 0) {
            *(ebp + -289) = 1;
        }
    }
    if(*(ebp + -289) == 0) {
        (save)Vffffffec;
        L0040F200(Vffffffe0);
        (restore)ecx;
        if(al == 0) {
            L00429610(65566);
        }
        L004364F0( *(A8 + 0x68), Vffffffe0, Vffffffec, & Vffffffe4, 0x40f270, 0);
        if(al != 0) {
            L00429610(65549);
        }
        edx = Vfffffff0;
        if(edx == Vffffffe4) {
            (save)A18;
            (save)A14;
            (save)edx;
            goto L0040fa7c;
        }
        L00435B10( *(A8 + 0x68), Vffffffe4, A14, A18, 0);
        if(Vffffffe4 <= Vfffffff0) {
            Vfffffff0 = Vfffffff0 + 1;
        }
        L00435CD0( *(A8 + 0x68), Vfffffff0);
    } else {
        (save)A18;
        (save)A14;
        (save)Vfffffff0;
L0040fa7c:
        (save) *(A8 + 0x68);
        L004362E0();
        esp = esp + 0x10;
    }
    L00431C20( *(Ac + 8), A10, 0, 0x451);
    L00428F50(ebp + -288, Vffffffe8, ebx);
    L00416790(A8, Ac, 0x451, 0, ebp + -288, 0, 0);
    ecx = A8;
    return L0040C970();
}

/*	Procedure: 0x0040FADF - 0x0040FADF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040FADF()
{



}

/*	Procedure: 0x0040FAE0 - 0x0040FD9A
 *	Argument size: 20
 *	Local size: 36
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L0040FAE0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(A18 < 4) {
        esi = 0;
    } else {
        edx = *A14;
        esi = edx << 8 & 16711680;
        eax = edx;
        ecx = edx;
        esi = esi | eax >> 0x18;
        esi = esi | ecx >> 8 & 65280;
        esi = esi | edx << 0x18;
    }
    eax = Ac;
    if(!(( *(eax + 0x4b) & 0xff) >> 4 & 1)) {
        if(!(esi & 1)) {
            return;
        }
        L00429610(65556);
    }
    ecx = *(A8 + 0x68);
    Vffffffec = ecx;
    edi = 4;
    eax = L00435AB0(Vffffffec);
    Vffffffe0 = eax;
    Vffffffe4 = 0;
    if(eax > 0) {
        do {
            eax = L00436310(Vffffffec, Vffffffe4, & Vffffffdc);
            if(Vffffffdc >= 0xb8) {
                Vffffffe8 = *(eax + 0xad) & 0xff;
                *(ebp - 0x28) = Vffffffe8;
                ebx = *(eax + 0xae) & 0xff;
                *(ebp - 0x2c) = *(eax + 0xaf) & 0xff;
                eax = bl & 0xff;
                dl = bl;
                eax = eax + (Vffffffe8 & 0xff) + 0xb8;
                cl = *(ebp - 0x2c);
                if(Vffffffdc >= eax + ( *(ebp - 0x2c) & 0xff)) {
                    goto L0040fbd4;
                }
            }
            cl = 0;
            dl = 0;
            *(ebp - 0x28) = 0;
L0040fbd4:
            edi = edi + 0x14;
            edi = edi + ( *(ebp - 0x28) & 0xff);
            edi = edi + (dl & 0xff);
            edi = edi + (cl & 0xff) + 3;
            edi = edi & -4;
            Vffffffe4 = Vffffffe4 + 1;
        } while(Vffffffe4 < Vffffffe0);
    }
    Vffffffe4 = edi;
    eax = L0042E3A0(edi);
    ebx = Vffffffe0;
    esi = eax;
    Vffffffe8 = eax;
    Vfffffff0 = eax;
    eax = ebx << 8 & 16711680;
    ecx = ebx;
    edx = ebx;
    eax = eax | ecx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    *esi = eax | ebx << 0x18;
    esi = esi + 4;
    *(ebp - 0x28) = 0;
    if(Vffffffe0 > 0) {
        do {
            eax = L00436310(Vffffffec, *(ebp - 0x28), & Vffffffdc);
            if(Vffffffdc >= 0xb8) {
                ebx = *(eax + 0xad) & 0xff;
                *(ebp - 0x2e) = bl;
                edx = *(eax + 0xae) & 0xff;
                *(ebp - 0x2d) = dl;
                *(ebp - 0x2c) = *(eax + 0xaf) & 0xff;
                *(ebp - 0x2f) = *(ebp - 0x2c);
                ecx = dl & 0xff;
                ecx = ecx + (bl & 0xff) + 0xb8;
                if(Vffffffdc < ecx + ( *(ebp - 0x2c) & 0xff)) {
                    *(ebp - 0x2f) = 0;
                    cl = *(ebp - 0x2f);
                    *(ebp - 0x2d) = cl;
                    *(ebp - 0x2e) = *(ebp - 0x2d);
                }
                *esi = *(eax + 4);
                *(esi + 4) = *(eax + 8);
                ebx = *(eax + 0xac) & 0xff;
                *(esi + 0x10) = bl;
                *(esi + 0x11) = *(ebp - 0x2e);
                *(esi + 0x12) = *(ebp - 0x2d);
                *(esi + 0x13) = *(ebp - 0x2f);
                edx = *(ebp - 0x2e) & 0xff;
                ecx = ( *(ebp - 0x2d) & 0xff) + edx;
                ecx = ecx + ( *(ebp - 0x2f) & 0xff);
                eax = eax + 0xb8;
                L004342A0(esi + 0x14, eax, ecx);
            } else {
                *(ebp - 0x2f) = 0;
                al = *(ebp - 0x2f);
                *(ebp - 0x2d) = al;
                *(ebp - 0x2e) = *(ebp - 0x2d);
            }
            eax = ( *(ebp - 0x2e) & 0xff) + 0x17;
            ecx = ( *(ebp - 0x2d) & 0xff) + eax;
            ecx = (ecx + ( *(ebp - 0x2f) & 0xff) & -4) + esi;
            *(ebp - 0x28) = *(ebp - 0x28) + 1;
            esi = ecx;
        } while(*(ebp - 0x28) < Vffffffe0);
    }
    if(edi != esi - Vffffffe8) {
        L00429610(65546);
    }
    L00431A10( *(Ac + 8), 0x453, A10, Vffffffe8, Vffffffe4);
    L00416790(A8, Ac, 0x452, 0, 0, 0, 0);
    esp = ebp - 0xc;
    return L0042E3E0( & Vfffffff0);
}

/*	Procedure: 0x0040FD9B - 0x0040FD9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040FD9B()
{



}

/*	Procedure: 0x0040FDA0 - 0x0040FE36
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00404640()
 *		L0040FE40()
 *		L004101C0()
 */

L0040FDA0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    esi = Ac;
    (save)A8;
    if(esi > 4 && ( *(A8 + esi - 4) & 0xff) == 0x2e) {
        edx = *(A8 + esi - 1) & 0xff;
        if(edx == 0x6b) {
            goto L0040fdcd;
        }
        if(edx == 0x4b) {
L0040fdcd:
            eax = *(A8 + esi - 2) & 0xff;
            if(eax == 0x6e) {
                goto L0040fddc;
            }
            if(eax == 0x4e) {
L0040fddc:
                edx = *(A8 + esi - 3) & 0xff;
                if(edx == 0x6c) {
                    goto L0040fdeb;
                }
                if(edx == 0x4c) {
L0040fdeb:
                    esi = esi - 4;
                }
            }
        }
    }
    if(esi >= 4 && *(A8 + esi - 1) == 0x5d) {
        eax = L004348B0(0x5b, A8, esi - 1);
        if(eax != 0 && eax != A8) {
            edx = A8 + esi - 1;
            *A10 = edx - eax + 1;
            esp = ebp - 0xc;
            (restore)A8;
            return eax + 1;
        }
    }
    *A10 = 0;
    esp = ebp - 0xc;
    (restore)A8;
    return 0;
}

/*	Procedure: 0x0040FE37 - 0x0040FE3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040FE37()
{



}

/*	Procedure: 0x0040FE40 - 0x0040FF54
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404010()
 *		L00404990()
 *		L0040FF60()
 */

L0040FE40(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x14;
    edi = ebp - 0x10;
    esi = A8;
    eax = L0040FDA0(Ac, A10, edi);
    *(ebp - 0x14) = eax;
    edi = 0;
    eax = L00434880(0x2c, eax, *(ebp - 0x10));
    *(ebp - 0x20) = eax;
    if(eax != 0) {
        eax = eax - *(ebp - 0x14);
        *(ebp - 0x20) = *(ebp - 0x20) + 1;
        *(ebp - 0x10) = eax;
        edi = *(ebp - 0x14) + *(ebp - 0x10) - *(ebp - 0x20);
    }
    if(*(ebp - 0x10) != 0) {
        L004364F0( *(esi + 0x68), *(ebp - 0x14), *(ebp - 0x10), ebp - 0x1c, 0x40f270, 0);
        if(al != 0) {
            esi = L00436310( *(esi + 0x68), *(ebp - 0x1c), ebp - 0x18);
            if(*(ebp - 0x18) >= 0xb8) {
                if(A14 == 0) {
                    goto L0040ff3a;
                }
                edx = *(esi + 4);
                ecx = edx << 8 & 16711680;
                ecx = ecx | edx >> 0x18;
                ecx = ecx | edx >> 8 & 65280;
                if(!((ecx | edx << 0x18) & 2)) {
                    (save)edi;
                    (save) *(ebp - 0x20);
                    goto L0040ff31;
                }
                eax = ( *(esi + 0xad) & 0xff) + 0xb8;
                edx = *(esi + 0xae) & 0xff;
                if(*(ebp - 0x18) >= edx + eax) {
                    (save)edx;
                    (save)eax + esi;
L0040ff31:
                    (save)A14;
                    L00428F50();
                    esp = esp + 0xc;
L0040ff3a:
                    esp = ebp - 0xc;
                    return esi;
                }
            }
        }
    }
    if(A14 != 0) {
        *A14 = 0;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0040FF55 - 0x0040FF5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0040FF55()
{



}

/*	Procedure: 0x0040FF60 - 0x004100E1
 *	Argument size: 20
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L004100F0()
 */

L0040FF60(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = Ac;
    ecx = A10;
    Vffffffec = ebx;
    Vffffffec = Vffffffec + ecx;
    esi = ebx;
    if(ecx >= 6) {
        *(ebp - 0x24) = ( *esi & 0xff) << 8;
        *(ebp - 0x24) = *(ebp - 0x24) | *(esi + 1) & 0xff;
        *(ebp - 0x24) = *(ebp - 0x24) & 65535;
    } else {
        *(ebp - 0x24) = 0;
    }
    if(*(ebp - 0x24) > 0x400) {
        *(ebp - 0x24) = 0x400;
    }
    esi = esi + 2;
    if(A14 != 0 && *(ebp - 0x24) != 0) {
        *(ebp - 0x24) = *(ebp - 0x24) - 1;
    }
    Vffffffe8 = 0;
    if(!( *(ebp - 0x24) = *(ebp - 0x24) - 1)) {
        do {
            if(esi + 3 >= Vffffffec) {
                break;
            }
            ecx = *(esi + 2) & 0xff;
            esi = esi + 3;
            ebx = cl & 0xff;
            if(ebx + esi > Vffffffec) {
                break;
            }
            eax = L0040FE40(A8, esi, cl & 0xff, A18);
            if(eax != 0) {
                Vffffffe8 = eax;
                *(ebp - 0x20) = *A18 & 0xff;
            }
            esi = esi + ebx;
        } while(*(ebp - 0x24) = *(ebp - 0x24) - 1);
    }
    if(Vffffffe8 != 0) {
        *A18 = *(ebp - 0x20);
        return Vffffffe8;
    }
    *A18 = 0;
    L004364F0( *(A8 + 0x68), M0047e448 + 1, *M0047e448 & 0xff, & Vfffffff0, 0x40f270, 0);
    if(al != 0) {
        eax = L00436310( *(A8 + 0x68), Vfffffff0, ebp - 0x1c);
        if(*(ebp - 0x1c) >= 0xb8) {
            esp = ebp - 0xc;
            return;
        }
    }
    L00436020( *(A8 + 0x68), 0);
    L0040F2D0(A8);
    L004364F0( *(A8 + 0x68), M0047e448 + 1, *M0047e448 & 0xff, & Vfffffff0, 0x40f270, 0);
    edx = ebp - 0x1c;
    eax = L00436310( *(A8 + 0x68), Vfffffff0, edx);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004100E2 - 0x004100EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004100E2()
{



}

/*	Procedure: 0x004100F0 - 0x004101B6
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404010()
 *		L00404640()
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L004051B0()
 *		L00405970()
 *		L00405D00()
 *		L00406950()
 *		L00416000()
 */

L004100F0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A10;
    esp = esp - 0x100;
    if(*(esi + 0x3b) != 0) {
        esi = *(esi + 0x168);
    }
    if(!(( *(esi + 0x48) & 0xff) >> 7 & 1)) {
        return 1;
    }
    ecx = ebp + -268;
    eax = L0040FF60(A8, A14, A18, A1c & 0xff, ecx);
    ebx = *(esi + 0x38) & 0xff & 0x1f;
    edi = eax;
    if(*(ebp + -268) != 0) {
        eax = L00430420( *(esi + 8));
        (save)eax;
        (restore)ecx;
        if(L00428D80(ebp + -268) != 0) {
            ebx = 0x20;
        }
    }
    esi = edi + ebx * 4 + 0xc;
    edx = ( *esi & 0xff) >> 7;
    al = 0;
    if(!(edx & 1)) {
        ecx = Ac & 0xff;
        edx = *(esi + (ecx >> 3)) & 0xff;
        esi = 7 & ecx;
        if(!(edx >> 7 - esi & 1)) {
            eax = 1 & 0xff;
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x004101B7 - 0x004101BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004101B7()
{



}

/*	Procedure: 0x004101C0 - 0x00410217
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00405970()
 */

L004101C0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    ecx = ebp - 0x10;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    eax = L0040FDA0(A8, Ac, ecx);
    esi = eax;
    eax = L0040FDA0(A10, A14, ebx);
    edi = *(ebp - 0x14);
    edx = *(ebp - 0x10);
    bl = 0;
    if(!(ebx = ebp - 0x14)) {
        bl = 0;
    }
    esp = ebp - 0xc;
    al = bl;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00410218 - 0x0041021F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00410218()
{



}

/*	Procedure: 0x00410220 - 0x00410242
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004102F0()
 *		L004104E0()
 *		L004105F0()
 *		L004107E0()
 *		L00410EB0()
 *		L004110F0()
 *		L004112D0()
 *		L00411640()
 */

L00410220(A4)
/* unknown */ void  A4;
{



    eax = *(ecx + 0x3c);
    if(eax != 0) {
        do {
            if(*(eax + 0x10) == A4) {
                goto L00410235;
            }
            eax = *eax;
        } while(eax != 0);
        goto L0041023e;
L00410235:
        return;
    }
L0041023e:
    return 0;
}

/*	Procedure: 0x00410243 - 0x0041024F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00410243()
{



}

/*	Procedure: 0x00410250 - 0x004102E0
 *	Argument size: 20
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L004112D0()
 */

L00410250(A8, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffff0;



    eax = A8;
    ebx = *(eax + 0x1c);
    if(ebx != 0) {
        do {
            ecx = *(ebx + 0x38) & 0xff & 0x1f;
            eax = *(ebp + (ecx >> 3) + 0xc) & 0xff;
            edx = 7 & ecx;
            ecx = 7 - edx;
            eax = eax >> cl;
            if(eax & 1 || !(( *(ebx + 0x48) & 0xff) >> 7 & 1)) {
                Vfffffff0 = esp;
                eax = L00431A10( *(ebx + 8), A10, 0, A14, A18);
            }
L004102d3:
            ebx = *ebx;
        } while(ebx != 0);
        goto L004102d9;
        if(*(ebp - 0x1c) != 0) {
            ecx = *(ebp - 0x24);
            *(ebp - 0x1c)(-1);
        }
        esp = *(ebp - 0x10);
        goto L004102d3;
    }
L004102d9:
}

/*	Procedure: 0x004102E1 - 0x004102EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004102E1()
{



}

/*	Procedure: 0x004102F0 - 0x004104DB
 *	Argument size: 16
 *	Local size: 40
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004102F0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = A14;
    ebx = ecx;
    if(!(( *(A8 + 0x51) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    if(esi < 0x40) {
        L00429610(65538);
    }
    eax = A10;
    Vfffffff0 = eax;
    Vffffffec = *(Vfffffff0 + 0x3c) & 0xff;
    eax = *(Vfffffff0 + 0x3d) & 0xff;
    Vffffffe8 = eax;
    if(esi < Vffffffec + 0x40 + Vffffffe8) {
        L00429610(65538);
    }
    if(Vffffffec == 0) {
        L00429610(65538);
    }
    edi = *(ebx + 0x4c);
    do {
        if(!(edi = edi + 1)) {
            edi = 1;
        }
        esi = edi;
        ecx = ebx;
    } while(L00410220(esi) != 0);
    *(ebp - 0x34) = L0042E3A0(0xe8);
    Vffffffe4 = esp;
    *( *(ebp - 0x34) + 4) = L00435A30();
    goto L004103d3;
    L0042E3E0(ebp - 0x34);
    L004234F0(0, 0, 0);
    if(Vffffffd8 != 0) {
        (save)-1;
        ecx = *(ebp - 0x30);
        Vffffffd8();
    }
    esp = *(ebp - 0x1c);
L004103d3:
    *( *(ebp - 0x34) + 0x10) = esi;
    *( *(ebp - 0x34) + 0x14) = 1;
    ecx = *(ebp - 0x34);
    *(ecx + 0x18) = *(Vfffffff0 + 0x18);
    *( *(ebp - 0x34) + 0x1c) = *(Vfffffff0 + 0x1c);
    *( *(ebp - 0x34) + 0x20) = *(Vfffffff0 + 0x20);
    edx = *(Vfffffff0 + 0x32) & 65535;
    esi = edx << 8;
    esi = (esi | edx >> 8) & 65535;
    if(esi < 4) {
        esi = 4;
    }
    if(esi > 0x400) {
        esi = 0x400;
    }
    ecx = esi << 0xa;
    *( *(ebp - 0x34) + 0xe4) = ecx;
    ecx = *(ebp - 0x34);
    edx = Vffffffec;
    esi = Vfffffff0 + 0x40;
    ecx = ecx + 0x24;
    if(edx >= 0x3f) {
        edx = 0x3f;
    }
    L00428F50(ecx, esi, edx);
    eax = *(ebp - 0x34);
    esi = esi + Vffffffec;
    eax = eax + 0x64;
    if(Vffffffe8 >= 0x7f) {
        Vffffffe8 = 0x7f;
    }
    L00428F50(eax, esi, Vffffffe8);
    L0042A0D0(ebx + 0x3c, *(ebp - 0x34));
    L00431C20( *(A8 + 8), Ac, 0, 0x258);
    L00416790(ebx, A8, 0x258, 0, *(ebp - 0x34) + 0x24, 0, 0);
    ecx = ebx;
    return L00412280();
}

/*	Procedure: 0x004104DC - 0x004104DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004104DC()
{



}

/*	Procedure: 0x004104E0 - 0x004105E9
 *	Argument size: 16
 *	Local size: 260
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004104E0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = ecx;
    if(!(( *(A8 + 0x51) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    if(A14 < 4) {
        L00429610(65538);
    }
    ecx = *A10;
    edi = ecx << 8 & 16711680;
    eax = ecx;
    edx = ecx;
    ecx = ecx << 0x18;
    edi = edi | eax >> 0x18;
    ecx = esi;
    eax = L00410220(edi | edx >> 8 & 65280 | ecx);
    *(ebp + -272) = eax;
    if(eax == 0) {
        L00429610(65548);
    }
    edx = *(ebp + -272) + 0x24;
    L004288C0(ebp + -268, edx);
    L0042A150(esi + 0x3c, *(ebp + -272));
    L00435A50( *(ebp + -272) + 4);
    L0042E3E0(ebp + -272);
    L00431C20( *(A8 + 8), Ac, 0, 0x259);
    L00416790(esi, A8, 0x259, 0, ebp + -268, 0, 0);
    ecx = esi;
    return L00412280();
}

/*	Procedure: 0x004105EA - 0x004105EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004105EA()
{



}

/*	Procedure: 0x004105F0 - 0x004107D8
 *	Argument size: 16
 *	Local size: 1028
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004105F0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    *(ebp + -1040) = ecx;
    if(!(( *(A8 + 0x51) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    if(A14 < 4) {
        L00429610(65538);
    }
    edx = *A10;
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    ecx = *(ebp + -1040);
    esi = L00410220(eax | edx << 0x18);
    if(esi == 0) {
        L00429610(65548);
    }
    ebx = ebp + -1036;
    L00434150(ebx, 0x40);
    eax = *(esi + 0x10);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    *ebx = ecx | edx >> 8 & 65280 | eax;
    edi = *(esi + 0xc);
    ecx = *(esi + 8);
    edx = 0;
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    eax = edi;
    edi = edi << 0x18;
    *(ebx + 0x10) = edx | eax >> 8 & 65280 | edi;
    edx = ecx << 8 & 16711680;
    eax = ecx;
    edi = ecx;
    edx = edx | eax >> 0x18;
    edx = edx | edi >> 8 & 65280;
    *(ebx + 0x14) = edx | ecx << 0x18;
    L00435AB0( *(esi + 4));
    eax = ax & 65535;
    edx = eax;
    eax = eax >> 8;
    *(ebx + 0x30) = edx << 8 | eax;
    edi = *(esi + 0xe4) >> 0xa & 65535;
    ecx = edi;
    edi = edi >> 8;
    *(ebx + 0x32) = ecx << 8 | edi;
    *(ebx + 0x3c) = *(esi + 0x24) & 0xff;
    *(ebx + 0x3d) = *(esi + 0x64) & 0xff;
    *(ebx + 0x18) = *(esi + 0x18);
    *(ebx + 0x1c) = *(esi + 0x1c);
    eax = *(esi + 0x20);
    ecx = esi + 0x24;
    *(ebx + 0x20) = eax;
    edi = ebx + 0x40;
    edi = edi + L00428EA0(ecx, edi, 0x3f);
    edi = edi + L00428EA0(esi + 0x64, edi, 0x7f);
    edi = edi - ebp + -1036;
    if(edi > 0x400) {
        L00429610(65546);
    }
    L00431A10( *(A8 + 8), 0x25b, Ac, ebx, edi);
    return L00416790( *(ebp + -1040), A8, 0x25a, 0, esi + 0x24, 0, 0);
}

/*	Procedure: 0x004107D9 - 0x004107DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004107D9()
{



}

/*	Procedure: 0x004107E0 - 0x00410954
 *	Argument size: 16
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004107E0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    *(ebp - 0x10) = ecx;
    edi = A14;
    if(!(( *(A8 + 0x51) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    if(edi < 0x40) {
        L00429610(65538);
    }
    esi = A10;
    *(ebp - 0x14) = *(esi + 0x3c) & 0xff;
    edx = *(ebp - 0x14) + 0x40;
    ebx = *(esi + 0x3d) & 0xff;
    if(edi < edx + ebx) {
        L00429610(65538);
    }
    if(*(ebp - 0x14) == 0) {
        L00429610(65538);
    }
    ecx = *esi;
    eax = ecx << 8 & 16711680;
    edi = ecx;
    edx = ecx;
    ecx = ecx << 0x18;
    eax = eax | edi >> 0x18;
    ecx = *(ebp - 0x10);
    edi = L00410220(eax | edx >> 8 & 65280 | ecx);
    if(edi == 0) {
        L00429610(65548);
    }
    *(edi + 0x18) = *(esi + 0x18);
    *(edi + 0x1c) = *(esi + 0x1c);
    *(edi + 0x20) = *(esi + 0x20);
    edx = *(esi + 0x32) & 65535;
    eax = edx << 8;
    eax = (eax | edx >> 8) & 65535;
    if(eax < 4) {
        eax = 4;
    }
    if(eax > 0x400) {
        eax = 0x400;
    }
    *(edi + 0xe4) = eax << 0xa;
    edx = *(ebp - 0x14);
    esi = esi + 0x40;
    if(edx >= 0x3f) {
        edx = 0x3f;
    }
    L00428F50(edi + 0x24, esi, edx);
    esi = esi + *(ebp - 0x14);
    if(ebx >= 0x7f) {
        ebx = 0x7f;
    }
    L00428F50(edi + 0x64, esi, ebx);
    L00431C20( *(A8 + 8), Ac, 0, 0x25c);
    L00416790( *(ebp - 0x10), A8, 0x25c, 0, edi + 0x24, 0, 0);
    ecx = *(ebp - 0x10);
    return L00412280();
}

/*	Procedure: 0x00410955 - 0x0041095F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00410955()
{



}

/*	Procedure: 0x00410960 - 0x00410C1C
 *	Argument size: 16
 *	Local size: 40
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00410960(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffdc = ecx;
    edx = ( *(A8 + 0x50) & 0xff) >> 1;
    if(!(edx & 1)) {
        L00429610(65556);
    }
    ebx = ( *(A8 + 0x51) & 0xff) >> 6;
    *(ebp - 0x31) = 0;
    Vffffffec = *(A8 + 0x38) & 0xff;
    Vffffffec = Vffffffec & 0x1f;
    Vffffffe8 = 4;
    Vfffffff0 = 0;
    edi = *(Vffffffdc + 0x3c);
    if(edi != 0) {
        edx = (Vffffffec & 0xff) >> 3;
        ecx = 7 - (7 & Vffffffec & 0xff);
        do {
            if(( *(edx + edi + 0x18) & 0xff) >> cl & 1 || ( *(edx + edi + 0x1c) & 0xff) >> cl & 1 || *(ebp - 0x31) != 0) {
                Vfffffff0 = Vfffffff0 + 1;
                Vffffffe8 = Vffffffe8 + 0x18;
                Vffffffe8 = Vffffffe8 + ( *(edi + 0x24) & 0xff);
                Vffffffe8 = Vffffffe8 + ( *(edi + 0x64) & 0xff);
                Vffffffe8 = Vffffffe8 + 3;
                Vffffffe8 = Vffffffe8 & -4;
                eax = Vffffffe8;
            }
            edi = *edi;
        } while(edi != 0);
    }
    eax = Vffffffe8;
    Vffffffd8 = eax;
    eax = L0042E3A0(Vffffffd8);
    edx = Vfffffff0;
    ecx = Vfffffff0;
    Vfffffff0 = Vfffffff0 << 0x18;
    edi = Vfffffff0 << 8 & 16711680 | edx >> 0x18;
    *(ebp - 0x30) = eax;
    Vffffffe4 = eax;
    *Vffffffe4 = edi | ecx >> 8 & 65280 | Vfffffff0;
    esi = *(Vffffffdc + 0x3c);
    ebx = Vffffffe4 + 4;
    if(esi != 0) {
        ecx = Vffffffec & 0xff;
        Vfffffff0 = ecx;
        Vfffffff0 = Vfffffff0 >> 3;
        Vffffffec = 7;
        Vffffffec = Vffffffec - (7 & ecx);
        do {
            eax = *(Vfffffff0 + esi + 0x18) & 0xff;
            ecx = Vffffffec;
            if(!(eax >> cl & 1)) {
                edx = *(Vfffffff0 + esi + 0x1c) & 0xff;
                ecx = Vffffffec;
                if(!(edx >> cl & 1) && *(ebp - 0x31) == 0) {
                    goto L00410bb3;
                }
            }
            eax = *(esi + 0xc);
            ecx = *(esi + 8);
            edx = eax << 8;
            edi = 0;
            edx = edx & 16711680;
            edx = edx | eax >> 0x18;
            edi = eax;
            eax = eax << 0x18;
            *ebx = edx | edi >> 8 & 65280 | eax;
            edi = ecx << 8 & 16711680;
            edi = edi | ecx >> 0x18;
            edx = ecx;
            ecx = ecx << 0x18;
            *(ebx + 4) = edi | edx >> 8 & 65280 | ecx;
            edi = *(esi + 0x10);
            eax = edi << 8 & 16711680;
            edx = edi;
            ecx = edi;
            eax = eax | edx >> 0x18;
            eax = eax | ecx >> 8 & 65280;
            *(ebx + 8) = eax | edi << 0x18;
            L00435AB0( *(esi + 4));
            edx = ax & 65535;
            ecx = edx << 8;
            *(ebx + 0x10) = ecx | edx >> 8;
            *(ebp - 0x2c) = *(esi + 0x24) & 0xff;
            *(ebx + 0x16) = *(ebp - 0x2c);
            Vffffffe0 = *(esi + 0x64) & 0xff;
            *(ebx + 0x17) = Vffffffe0;
            eax = esi + 0x24;
            edi = ebx + 0x18;
            L00428EA0(eax, edi, *(ebp - 0x2c));
            edi = edi + *(ebp - 0x2c);
            L00428EA0(esi + 0x64, edi, Vffffffe0);
            ebx = ( *(ebp - 0x2c) + 0x1b + Vffffffe0 & -4) + ebx;
L00410bb3:
            esi = *esi;
        } while(esi != 0);
    }
    if(Vffffffe8 != ebx - Vffffffe4) {
        L00429610(65546);
    }
    L00431A10( *(A8 + 8), 0x25e, Ac, Vffffffe4, Vffffffd8);
    L00416790(Vffffffdc, A8, 0x25d, 0, 0, 0, 0);
    return L0042E3E0(ebp - 0x30);
}

/*	Procedure: 0x00410C1D - 0x00410C1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00410C1D()
{



}

/*	Procedure: 0x00410C20 - 0x00410DBA
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00410EB0()
 */

L00410C20(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x18;
    esi = Ac;
    ebx = A18;
    eax = L0042E310(A1c + 0x10);
    edx = eax;
    *(ebp - 0x18) = eax;
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    *edx = ecx | esi << 0x18;
    *(edx + 4) = A10 << 8 & 16711680 | A10 >> 0x18 | A10 >> 8 & 65280 | A10 << 0x18;
    *(edx + 8) = 0;
    *(edx + 0xc) = A14 << 8 & 16711680 | A14 >> 0x18 | A14 >> 8 & 65280 | A14 << 0x18;
    if(A8 != 0) {
        L004342A0(edx + 0x10, ebx, A1c);
        ebx = A1c + 0x10;
        *A20 = ebx;
        return *(ebp - 0x18);
    }
    for(esi = edx + 0x10; A1c >= 0x20; esi = esi & -4) {
        *(ebp - 0x14) = *(ebx + 0x1c) & 0xff;
        *(ebp - 0x20) = *(ebx + 0x1d) & 0xff;
        *(ebp - 0x1c) = *(ebx + 0x1e) & 0xff;
        ecx = *(ebx + 0x18) & 65535;
        *(ebp - 0x10) = ecx;
        *(ebp - 0x10) = *(ebp - 0x10) << 8;
        *(ebp - 0x10) = *(ebp - 0x10) | *(ebp - 0x10) >> 8;
        *(ebp - 0x10) = *(ebp - 0x10) & 65535;
        *(ebp - 0x24) = *(ebp - 0x14);
        *(ebp - 0x24) = *(ebp - 0x24) + 0x23;
        *(ebp - 0x24) = *(ebp - 0x24) + *(ebp - 0x20);
        *(ebp - 0x24) = *(ebp - 0x24) + *(ebp - 0x1c);
        *(ebp - 0x24) = *(ebp - 0x24) + *(ebp - 0x10);
        *(ebp - 0x24) = *(ebp - 0x24) & -4;
        eax = *(ebp - 0x24);
        if(A1c < eax) {
            break;
        }
        A1c = A1c - eax;
        L004342A0(esi, ebx, 0x20);
        *(esi + 0x1d) = 0;
        esi = esi + 0x20;
        edi = ebx + 0x20;
        L004342A0(esi, edi, *(ebp - 0x14));
        edi = edi + *(ebp - 0x14);
        esi = esi + *(ebp - 0x14);
        edi = edi + *(ebp - 0x20);
        esi = esi + L004342A0(esi, edi, *(ebp - 0x1c) + *(ebp - 0x10)) + 3;
        ebx = ebx + *(ebp - 0x24);
    }
    *A20 = esi - *(ebp - 0x18);
    eax = *(ebp - 0x18);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00410DBB - 0x00410DBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00410DBB()
{



}

/*	Procedure: 0x00410DC0 - 0x00410EAF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004110F0()
 */

L00410DC0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = Ac;
    esp = esp - 0x18;
    if(esi < 0x20) {
        L00429610(65546);
    }
    ebx = A8;
    *(ebp - 0x10) = *(ebx + 0x1c) & 0xff;
    *(ebp - 0x20) = *(ebx + 0x1d) & 0xff;
    *(ebp - 0x14) = *(ebx + 0x1e) & 0xff;
    edx = *(ebx + 0x18) & 65535;
    *(ebp - 0x24) = edx;
    *(ebp - 0x24) = *(ebp - 0x24) << 8;
    *(ebp - 0x24) = *(ebp - 0x24) | *(ebp - 0x24) >> 8;
    eax = *(ebp - 0x24) & 65535;
    *(ebp - 0x24) = eax;
    if(esi < ( *(ebp - 0x10) + 0x23 + *(ebp - 0x20) + *(ebp - 0x14) + eax & -4)) {
        L00429610(65546);
    }
    edi = *(ebp - 0x10) + 0x23 + *(ebp - 0x14) + *(ebp - 0x24) & -4;
    *(ebp - 0x1c) = edi;
    eax = L0042E3A0(edi);
    esi = eax;
    *(ebp - 0x18) = eax;
    L004342A0(esi, ebx, 0x20);
    *(esi + 0x1d) = 0;
    ebx = ebx + 0x20;
    esi = esi + 0x20;
    L004342A0(esi, ebx, *(ebp - 0x10));
    ebx = ebx + *(ebp - 0x10);
    esi = esi + *(ebp - 0x10);
    ebx = ebx + *(ebp - 0x20);
    if(esi + L004342A0(esi, ebx, *(ebp - 0x14) + *(ebp - 0x24)) - *(ebp - 0x18) > edi) {
        L00429610(65546);
    }
    *A10 = *(ebp - 0x1c);
    return *(ebp - 0x18);
}

/*	Procedure: 0x00410EB0 - 0x004110EA
 *	Argument size: 16
 *	Local size: 44
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00410EB0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    Vffffffdc = ecx;
    if(!(( *(A8 + 0x50) & 0xff) >> 1 & 1)) {
        L00429610(65556);
    }
    if(A14 < 4) {
        L00429610(65538);
    }
    edx = *A10;
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    ecx = Vffffffdc;
    eax = L00410220(eax | edx << 0x18);
    *(ebp - 0x38) = eax;
    if(eax == 0) {
        L00429610(65548);
    }
    ebx = *(A8 + 0x38) & 0xff & 0x1f;
    edi = ebx;
    ebx = ebx & 7;
    edi = edi >> 3;
    ecx = 7 - ebx;
    if(!(( *(edi + *(ebp - 0x38) + 0x18) & 0xff) >> cl & 1) && !(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        if(!(( *(edi + *(ebp - 0x38) + 0x1c) & 0xff) >> cl & 1)) {
            edi = & Vffffffe0;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            edx = *( *(ebp - 0x38) + 0x10);
            edi = edx << 8 & 16711680;
            ecx = edx;
            eax = edx;
            edi = edi | ecx >> 0x18;
            edi = edi | eax >> 8 & 65280;
            Vffffffe0 = edi | edx << 0x18;
            Vffffffe4 = 16777216;
            return L00431A10( *(A8 + 8), 0x260, Ac, & Vffffffe0, 0x10);
        }
        L00429610(65556);
    }
    edi = *( *(ebp - 0x38) + 4);
    Vffffffd8 = L004364A0(edi, ebp - 0x34, 0);
    eax = L00435AB0(edi);
    Vfffffff0 = 4;
    if(!(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        Vfffffff0 = 7;
    } else {
        if(!( *(A8 + 0x50) & 0xff & 1)) {
            ecx = *(ebp - 0x38);
            ebx = *(A8 + 0x38) & 0xff & 0x1f;
            edx = *((ebx >> 3) + ecx + 0x1c) & 0xff;
            edi = 7 & ebx;
            if(!(edx >> 7 - edi & 1)) {
                Vfffffff0 = Vfffffff0 | 1;
            }
        }
        if(!(( *(A8 + 0x51) & 0xff) >> 7 & 1)) {
            Vfffffff0 = Vfffffff0 | 2;
        }
    }
    ebx = ( *(A8 + 0x51) & 0xff) >> 5;
    eax = L00410C20(0, *( *(ebp - 0x38) + 0x10), Vfffffff0, eax, Vffffffd8, *(ebp - 0x34), & Vffffffd4);
    *(ebp - 0x30) = eax;
    L00431A10( *(A8 + 8), 0x260, Ac, *(ebp - 0x30), Vffffffd4);
    L00416790(Vffffffdc, A8, 0x25f, 0, *(ebp - 0x38) + 0x24, 0, 0);
    eax = L0042E3E0(ebp - 0x30);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004110EB - 0x004110EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004110EB()
{



}

/*	Procedure: 0x004110F0 - 0x004112C1
 *	Argument size: 16
 *	Local size: 16
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004110F0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    esi = ecx;
    if(!(( *(A8 + 0x50) & 0xff) >> 1 & 1)) {
        L00429610(65556);
    }
    if(A14 < 8) {
        L00429610(65538);
    }
    ebx = A10;
    edi = *ebx;
    ecx = edi << 8 & 16711680;
    edx = edi;
    eax = edi;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = esi;
    esi = L00410220(ecx | edi << 0x18);
    if(esi == 0) {
        L00429610(65548);
    }
    ecx = *(A8 + 0x38) & 0xff & 0x1f;
    edx = ecx >> 3;
    edi = 7 & ecx;
    ecx = 7 - edi;
    if(!(( *(edx + esi + 0x18) & 0xff) >> cl & 1) && !(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    edi = *(ebx + 4);
    eax = *(esi + 4);
    ebx = edi << 8 & 16711680;
    ecx = edi;
    edx = edi;
    ebx = ebx | ecx >> 0x18;
    ebx = ebx | edx >> 8 & 65280;
    Vfffffff0 = eax;
    ebx = ebx | edi << 0x18;
    if(!(esi = L00435AB0(eax) - 1)) {
        do {
            eax = L00436310(Vfffffff0, esi, ebp - 0x1c);
            if(*(ebp - 0x1c) >= 0x20) {
                ecx = *(eax + 0xc);
                edx = ecx << 8 & 16711680;
                edx = edx | ecx >> 0x18;
                edx = edx | ecx >> 8 & 65280;
                if(ebx == (edx | ecx << 0x18)) {
                    goto L0041123f;
                }
            }
        } while(esi = esi - 1);
        goto L004112ad;
L0041123f:
        if(!(( *(A8 + 0x51) & 0xff) >> 5 & 1)) {
            eax = L00431A10( *(A8 + 8), 0x262, Ac, eax, *(ebp - 0x1c));
        } else {
            esi = ebp - 0x18;
            eax = L00410DC0(eax, *(ebp - 0x1c), esi);
            *(ebp - 0x14) = eax;
            L00431A10( *(A8 + 8), 0x262, Ac, *(ebp - 0x14), *(ebp - 0x18));
            eax = L0042E3E0(ebp - 0x14);
        }
        return;
    }
L004112ad:
    esp = ebp - 0xc;
    return L00429610(65548);
}

/*	Procedure: 0x004112C2 - 0x004112CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004112C2()
{



}

/*	Procedure: 0x004112D0 - 0x00411635
 *	Argument size: 16
 *	Local size: 112
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004112D0(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffe4 = ecx;
    edi = A14;
    if(!( *(A8 + 0x50) & 0xff & 1)) {
        L00429610(65556);
    }
    if(edi < 0x10) {
        L00429610(65538);
    }
    esi = A10;
    ebx = *(esi + 0xc) & 65535;
    Vfffffff0 = ebx;
    Vfffffff0 = Vfffffff0 << 8;
    Vfffffff0 = Vfffffff0 | Vfffffff0 >> 8;
    Vfffffff0 = Vfffffff0 & 65535;
    eax = *(esi + 0xe) & 0xff;
    Vffffffe8 = eax;
    if(edi < Vfffffff0 + 0x10 + Vffffffe8) {
        L00429610(65538);
    }
    Vffffffcc = esi;
    Vffffffcc = Vffffffcc + 0x10;
    Vffffffc8 = Vffffffcc;
    eax = Vffffffe8;
    Vffffffc8 = Vffffffc8 + eax;
    if(eax > 0x80) {
        Vffffffe8 = 0x80;
    }
    if(Vfffffff0 > 16384) {
        Vfffffff0 = 16384;
    }
    edx = *esi;
    ebx = edx << 8 & 16711680;
    eax = edx;
    edi = edx;
    ebx = ebx | eax >> 0x18;
    ebx = ebx | edi >> 8 & 65280;
    ebx = ebx | edx << 0x18;
    ecx = Vffffffe4;
    esi = L00410220(ebx);
    if(esi == 0) {
        L00429610(65548);
    }
    ecx = *(A8 + 0x38) & 0xff & 0x1f;
    eax = ecx >> 3;
    edi = 7 & ecx;
    ecx = 7 - edi;
    if(!(( *(eax + esi + 0x1c) & 0xff) >> cl & 1) && !(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    eax = L004303D0( *(A8 + 8), ebp - 0x78, 0x40, 0);
    Vffffffdc = eax;
    eax = *(A8 + 0x98) & 0xff;
    edx = eax + 0x23;
    Vffffffe0 = eax;
    L00435B10( *(esi + 4), -1, 0, edx + Vffffffdc + Vffffffe8 + Vfffffff0 & -4, & Vffffffec);
    L00434150(Vffffffec, 0x20);
    eax = L0042EF50();
    *(esi + 8) = eax;
    *(esi + 0xc) = edx;
    *(ebp - 0x7c) = Vffffffec;
    edi = edx << 8;
    ecx = 0;
    edi = edi & 16711680;
    edi = edi | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    edi = edi | ecx >> 8 & 65280 | edx;
    *( *(ebp - 0x7c)) = edi;
    edi = eax << 8 & 16711680;
    edi = edi | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    edi = edi | edx >> 8 & 65280 | eax;
    *( *(ebp - 0x7c) + 4) = edi;
    ecx = ebx;
    eax = ebx << 0x18;
    edi = ebx;
    ecx = ecx >> 8 & 65280;
    *(ebp - 0x7c) = ebx;
    *(ebp - 0x7c) = *(ebp - 0x7c) << 8;
    *(ebp - 0x7c) = *(ebp - 0x7c) & 16711680;
    *(ebp - 0x7c) = *(ebp - 0x7c) | edi >> 0x18;
    *(ebp - 0x7c) = *(ebp - 0x7c) | ecx;
    *(ebp - 0x7c) = *(ebp - 0x7c) | eax;
    *(Vffffffec + 8) = *(ebp - 0x7c);
    if(!(ebx = *(esi + 0x14) + 1)) {
        ebx = 1;
    }
    edi = ebx << 8 & 16711680;
    edi = edi | ebx >> 0x18;
    edi = edi | ebx >> 8 & 65280;
    edi = edi | ebx << 0x18;
    *(esi + 0x14) = ebx;
    *(Vffffffec + 0xc) = edi;
    ecx = Vfffffff0 & 65535;
    edx = ecx;
    ecx = ecx >> 8;
    edx = edx << 8 | ecx;
    *(Vffffffec + 0x18) = dx;
    *(Vffffffec + 0x1c) = Vffffffe0;
    *(Vffffffec + 0x1d) = Vffffffdc;
    *(Vffffffec + 0x1e) = Vffffffe8;
    ebx = Vffffffec + 0x20;
    L004342A0(ebx, A8 + 0x99, Vffffffe0);
    ebx = ebx + Vffffffe0;
    L004342A0(ebx, ebp - 0x78, Vffffffdc);
    ebx = ebx + Vffffffdc;
    L004342A0(ebx, Vffffffcc, Vffffffe8);
    L004342A0(ebx + Vffffffe8, Vffffffc8, Vfffffff0);
    Vffffffd0 = *(ebp - 0x7c);
    Vffffffd4 = edi;
    eax = L00435AB0( *(esi + 4));
    edi = eax << 8 & 16711680;
    ecx = eax;
    ebx = eax;
    edi = edi | ecx >> 0x18;
    edi = edi | ebx >> 8 & 65280;
    edi = edi | eax << 0x18;
    Vffffffd8 = edi;
    L00410250(Vffffffe4, *(esi + 0x18), 0x265, & Vffffffd0, 0xc);
    L00416790(Vffffffe4, A8, 0x263, 0, esi + 0x24, 0, 0);
    L00412880(Vffffffe4, esi);
    ecx = Vffffffe4;
    return L00412280();
}

/*	Procedure: 0x00411636 - 0x0041163F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00411636()
{



}

/*	Procedure: 0x00411640 - 0x00411910
 *	Argument size: 16
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00411640(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffe0 = ecx;
    if(A14 < 8) {
        L00429610(65538);
    }
    edi = A10;
    esi = *edi;
    edx = esi;
    Vffffffe4 = esi;
    ebx = esi;
    edx = edx >> 8 & 65280;
    esi = esi << 0x18;
    Vffffffe4 = Vffffffe4 << 8;
    Vffffffe4 = Vffffffe4 & 16711680;
    Vffffffe4 = Vffffffe4 | ebx >> 0x18;
    Vffffffe4 = Vffffffe4 | edx;
    Vffffffe4 = Vffffffe4 | esi;
    ecx = Vffffffe0;
    eax = L00410220(Vffffffe4);
    Vffffffec = eax;
    if(eax == 0) {
        return;
    }
    ecx = *(A8 + 0x38) & 0xff & 0x1f;
    ebx = ecx >> 3;
    esi = 7 & ecx;
    ecx = 7 - esi;
    if(!(( *(ebx + Vffffffec + 0x18) & 0xff) >> cl & 1) && !(( *(A8 + 0x48) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    eax = *(edi + 4);
    ecx = eax;
    Vfffffff0 = eax;
    esi = eax;
    eax = eax << 0x18;
    ecx = ecx >> 8 & 65280;
    Vfffffff0 = Vfffffff0 << 8;
    Vfffffff0 = Vfffffff0 & 16711680;
    Vfffffff0 = Vfffffff0 | esi >> 0x18;
    Vfffffff0 = Vfffffff0 | ecx;
    Vfffffff0 = Vfffffff0 | eax;
    *(ebp - 0x38) = Vfffffff0;
    ecx = *(Vffffffec + 4);
    Vffffffd8 = ecx;
    eax = L00435AB0(Vffffffd8);
    ebx = 0;
    Vffffffe8 = eax;
    if(eax > 0) {
        do {
            esi = ebx;
            edi = L00436310(Vffffffd8, esi, ebp - 0x3c);
            if(*(ebp - 0x3c) >= 0x20) {
                eax = *(edi + 0xc);
                ecx = eax << 8 & 16711680;
                ecx = ecx | eax >> 0x18;
                ecx = ecx | eax >> 8 & 65280;
                if(*(ebp - 0x38) == (ecx | eax << 0x18)) {
                    goto L0041179c;
                }
            }
            ebx = ebx + 1;
        } while(ebx < Vffffffe8);
        goto L004118df;
L0041179c:
        if(!(( *(A8 + 0x51) & 0xff) >> 7 & 1)) {
            if(ebx != Vffffffe8 - 1) {
                goto L00411820;
            }
            *(ebp - 0x38) = *(edi + 0x1c) & 0xff;
            edx = *(ebp - 0x38) + 0x20;
            ebx = *(edi + 0x1d) & 0xff;
            if(*(ebp - 0x3c) < edx + ebx) {
                goto L00411820;
            }
            eax = L00430420( *(A8 + 8));
            Vffffffdc = eax;
            L00428DE0(Vffffffdc, 0x47001c, 1);
            if(al != 0) {
                goto L00411820;
            }
            *(ebp - 0x3d) = 0;
            if(( *Vffffffdc & 0xff) == ebx) {
                L00434380(Vffffffdc + 1, edi + 0x20 + *(ebp - 0x38), ebx);
                if(al != 0) {
                    *(ebp - 0x3d) = 1;
                }
            }
            if(*(ebp - 0x3d) == 0) {
L00411820:
                L00429610(65556);
            }
        }
        L00435CD0(Vffffffd8, esi);
        ecx = Vffffffe8 - 1;
        Vffffffcc = Vffffffe4 << 8 & 16711680 | Vffffffe4 >> 0x18 | Vffffffe4 >> 8 & 65280 | Vffffffe4 << 0x18;
        Vffffffd0 = Vfffffff0 << 8 & 16711680 | Vfffffff0 >> 0x18 | Vfffffff0 >> 8 & 65280 | Vfffffff0 << 0x18;
        esi = ecx << 8 & 16711680;
        edi = ecx;
        ebx = ecx;
        ecx = ecx << 0x18;
        esi = esi | edi >> 0x18;
        esi = esi | ebx >> 8 & 65280 | ecx;
        Vffffffd4 = esi;
        ecx = Vffffffe0;
        L00401730(0x266, & Vffffffcc, 0xc, 0);
    }
L004118df:
    L00416790(Vffffffe0, A8, 0x264, 0, Vffffffec + 0x24, 0, 0);
    ecx = Vffffffe0;
    esp = ebp - 0xc;
    return L00412280();
}

/*	Procedure: 0x00411911 - 0x0041191F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00411911()
{



}

/*	Procedure: 0x00411920 - 0x00411DE3
 *	Argument size: 12
 *	Local size: 64
 *	Save regs size: 12
 *	Called by:
 *		L00411DF0()
 */

L00411920(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(A10 < 0x40) {
        return;
    }
    eax = Ac;
    Vffffffec = eax;
    esi = *Vffffffec;
    ecx = esi << 8 & 16711680;
    ebx = esi;
    eax = esi;
    ecx = ecx | ebx >> 0x18;
    eax = eax >> 8 & 65280;
    ecx = ecx | eax;
    if((ecx | esi << 0x18) != 625689688) {
        esp = ebp - 0xc;
        return;
    }
    eax = Vffffffec;
    edx = *(eax + 4);
    edi = edx << 8 & 16711680;
    ecx = edx;
    ebx = edx;
    edi = edi | ecx >> 0x18;
    edi = edi | ebx >> 8 & 65280;
    if((edi | edx << 0x18) != 1314215258) {
        esp = ebp - 0xc;
        return;
    }
    esi = *(Vffffffec + 8) & 65535;
    eax = esi << 8;
    if((eax | esi >> 8) != 1) {
        esp = ebp - 0xc;
        return;
    }
    edi = *(Vffffffec + 0x18);
    ecx = edi << 8 & 16711680;
    ebx = edi;
    edx = edi;
    ecx = ecx | ebx >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    edi = edi << 0x18;
    eax = A10;
    ecx = ecx | edi;
    *(ebp - 0x4c) = eax;
    if(ecx >= eax) {
        ecx = *(ebp - 0x4c);
    }
    eax = *(Vffffffec + 0x1c);
    edi = eax << 8 & 16711680;
    esi = eax;
    ebx = eax;
    edi = edi | esi >> 0x18;
    edi = edi | ebx >> 8 & 65280;
    eax = eax << 0x18;
    edi = edi | eax;
    if(edi >= *(ebp - 0x4c)) {
        edi = *(ebp - 0x4c);
    }
    Vffffffe4 = edi;
    if(edi + ecx > A10) {
        eax = A10;
        Vffffffe4 = eax;
        Vffffffe4 = Vffffffe4 - ecx;
    }
    edi = Vffffffec + ecx;
    if(Vffffffe4 >= 0x58) {
        do {
            Vffffffc4 = *(edi + 0x54) & 0xff;
            eax = *(edi + 0x55) & 0xff;
            Vffffffc0 = eax;
            esi = Vffffffc4 + 0x5b + eax;
            esi = esi + ( *(edi + 0x56) & 0xff) & -4;
            if(Vffffffe4 < esi) {
                break;
            }
            Vffffffe4 = Vffffffe4 - esi;
            Vffffffe0 = 0;
            *(ebp - 0x44) = 0;
            *(ebp - 0x48) = 0;
            Vfffffff0 = L0042E3A0(0xe8);
            Vffffffdc = esp;
            eax = L00435A30();
            Vffffffe0 = eax;
            *(Vfffffff0 + 4) = Vffffffe0;
            edx = *edi;
            ebx = edx << 8 & 16711680;
            ecx = edx;
            eax = edx;
            ebx = ebx | ecx >> 0x18;
            ebx = ebx | eax >> 8 & 65280;
            ebx = ebx | edx << 0x18;
            if(ebx >= *(ebp - 0x4c)) {
                ebx = *(ebp - 0x4c);
            }
            ecx = *(edi + 4);
            eax = ecx << 8 & 16711680;
            eax = eax | ecx >> 0x18;
            eax = eax | ecx >> 8 & 65280;
            eax = eax | ecx << 0x18;
            if(eax >= *(ebp - 0x4c)) {
                eax = *(ebp - 0x4c);
            }
            Vffffffe8 = eax;
            if(eax + ebx > A10) {
                Vffffffe8 = A10;
                Vffffffe8 = Vffffffe8 - ebx;
            }
            eax = Vffffffe8 == 0 ? 0 : L0042E350(Vffffffec + ebx, Vffffffe8);
            *(ebp - 0x44) = eax;
            ebx = *(edi + 8);
            edx = ebx << 8 & 16711680;
            eax = ebx;
            ecx = ebx;
            edx = edx | eax >> 0x18;
            edx = edx | ecx >> 8 & 65280;
            edx = edx | ebx << 0x18;
            if(edx >= *(ebp - 0x4c)) {
                edx = *(ebp - 0x4c);
            }
            eax = *(edi + 0xc);
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            ecx = ecx | eax >> 8 & 65280;
            ecx = ecx | eax << 0x18;
            if(ecx >= *(ebp - 0x4c)) {
                ecx = *(ebp - 0x4c);
            }
            ebx = ecx;
            if(ecx + edx > A10) {
                ebx = A10 - edx;
            }
            eax = ebx == 0 ? 0 : L0042E350(Vffffffec + edx, ebx);
            *(ebp - 0x48) = eax;
            L00436370(Vffffffe0, eax, ebx, *(ebp - 0x44), Vffffffe8);
L00411c33:
            ecx = *(edi + 0x28);
            ebx = *(edi + 0x2c);
            Vffffffe8 = 0;
            edx = ecx << 8 & 16711680;
            edx = edx | ecx >> 0x18;
            eax = ecx;
            ecx = ecx << 0x18;
            edx = edx | eax >> 8 & 65280 | ecx;
            eax = ebx << 8 & 16711680;
            eax = eax | ebx >> 0x18;
            ecx = ebx;
            ebx = ebx << 0x18;
            eax = eax | ecx >> 8 & 65280 | ebx | Vffffffe8;
            ebx = Vfffffff0;
            *(ebx + 8) = eax;
            *(ebx + 0xc) = edx;
            eax = *(edi + 0x18);
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            ebx = eax;
            eax = eax << 0x18;
            ecx = ecx | ebx >> 8 & 65280 | eax;
            *(Vfffffff0 + 0x10) = ecx;
            ebx = *(edi + 0x10);
            eax = ebx << 8 & 16711680;
            eax = eax | ebx >> 0x18;
            edx = ebx;
            ebx = ebx << 0x18;
            eax = eax | edx >> 8 & 65280 | ebx;
            *(Vfffffff0 + 0x14) = eax;
            edx = *(edi + 0x30);
            ebx = edx << 8 & 16711680;
            ebx = ebx | edx >> 0x18;
            ecx = edx;
            edx = edx << 0x18;
            ebx = ebx | ecx >> 8 & 65280 | edx;
            *(Vfffffff0 + 0x18) = ebx;
            ecx = *(edi + 0x34);
            edx = ecx << 8 & 16711680;
            edx = edx | ecx >> 0x18;
            eax = ecx;
            ecx = ecx << 0x18;
            *(Vfffffff0 + 0x1c) = edx | eax >> 8 & 65280 | ecx;
            eax = *(edi + 0x38);
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            ecx = ecx | eax >> 8 & 65280;
            ecx = ecx | eax << 0x18;
            *(Vfffffff0 + 0x20) = ecx;
            edx = Vffffffc4 >= 0x3f ? 0x3f : Vffffffc4;
            L00428F50(Vfffffff0 + 0x24, edi + 0x58, edx);
            if(Vffffffc0 >= 0x7f) {
                Vffffffc0 = 0x7f;
            }
            L00428F50(Vfffffff0 + 0x64, edi + 0x58 + Vffffffc4, Vffffffc0);
            (save)Vfffffff0;
            eax = L0042A0D0(A8 + 0x3c);
            edi = edi + esi;
            (restore)ecx;
        } while(Vffffffe4 >= 0x58);
        goto L00411ddc;
        L00435A50( & Vffffffe0);
        L0042E3E0(ebp - 0x44);
        L0042E3E0(ebp - 0x48);
        L0042E3E0( & Vfffffff0);
        L004234F0(0, 0, 0);
        if(Vffffffd0 != 0) {
            (save)-1;
            ecx = Vffffffc8;
            Vffffffd0();
        }
        esp = *(ebp - 0x24);
        goto L00411c33;
    }
L00411ddc:
    esp = ebp - 0xc;
}

/*	Procedure: 0x00411DE4 - 0x00411DEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00411DE4()
{



}

/*	Procedure: 0x00411DF0 - 0x0041227D
 *	Argument size: 0
 *	Local size: 60
 *	Save regs size: 12
 *	Called by:
 *		L00409390()
 */

L00411DF0()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffe8 = ecx;
    eax = *(ecx + 0x5c);
    if(eax == 0) {
        eax = L0042B600(1, 0, 0, M0047e450, 0x8f, M0047e440);
        *(Vffffffe8 + 0x5c) = eax;
    }
    Vfffffff0 = 16777216;
    eax = L0042C600(eax, 0, 0, & Vfffffff0, 0);
    Vffffffdc = eax;
    if(Vfffffff0 < 0x40) {
        return L0042E3E0( & Vffffffdc);
    }
    Vffffffec = eax;
    ebx = *eax;
    ecx = ebx << 8 & 16711680;
    edx = ebx;
    esi = ebx;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    if((ecx | ebx << 0x18) != 625689688) {
        esp = ebp - 0xc;
        return L0042E3E0( & Vffffffdc);
    }
    ecx = *(Vffffffec + 4);
    edx = ecx << 8 & 16711680;
    esi = ecx;
    ebx = ecx;
    edx = edx | esi >> 0x18;
    edx = edx | ebx >> 8 & 65280;
    if((edx | ecx << 0x18) != 1314215258) {
        esp = ebp - 0xc;
        return L0042E3E0( & Vffffffdc);
    }
    edi = *(Vffffffec + 8) & 65535;
    edx = edi << 8;
    edx = (edx | edi >> 8) & 65535;
    if(edx == 1) {
        L00411920(Vffffffe8, eax, Vfffffff0);
        ecx = Vffffffe8;
        L00412280();
        esp = ebp - 0xc;
        return L0042E3E0( & Vffffffdc);
    }
    if(edx != 2) {
        esp = ebp - 0xc;
        return L0042E3E0( & Vffffffdc);
    }
    ebx = *(Vffffffec + 0xc);
    ecx = ebx << 8 & 16711680;
    ecx = ecx | ebx >> 0x18;
    ecx = ecx | ebx >> 8 & 65280;
    ecx = ecx | ebx << 0x18;
    *(Vffffffe8 + 0x4c) = ecx;
    esi = *(Vffffffec + 0x18);
    ecx = esi << 8 & 16711680;
    eax = esi;
    edi = esi;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | edi >> 8 & 65280;
    esi = esi << 0x18;
    edx = Vfffffff0;
    ecx = ecx | esi;
    if(ecx >= edx) {
        ecx = edx;
    }
    ebx = *(Vffffffec + 0x1c);
    eax = ebx << 8 & 16711680;
    edi = ebx;
    esi = ebx;
    eax = eax | edi >> 0x18;
    eax = eax | esi >> 8 & 65280;
    eax = eax | ebx << 0x18;
    if(eax >= edx) {
        eax = edx;
    }
    Vffffffe0 = eax;
    if(eax + ecx > Vfffffff0) {
        Vffffffe0 = Vfffffff0;
        Vffffffe0 = Vffffffe0 - ecx;
    }
    esi = Vffffffec + ecx;
    if(Vffffffe0 >= 0x58) {
        do {
            Vffffffd4 = *(esi + 0x54) & 0xff;
            eax = *(esi + 0x55) & 0xff;
            Vffffffd8 = eax;
            ebx = Vffffffd4 + 0x5b + Vffffffd8 + ( *(esi + 0x56) & 0xff) & -4;
            if(Vffffffe0 < ebx) {
                break;
            }
            Vffffffe0 = Vffffffe0 - ebx;
            *(ebp - 0x48) = L0042E3A0(0xe8);
            Vffffffe4 = Vfffffff0;
            Vffffffd0 = esp;
            eax = *esi;
            edx = eax << 8 & 16711680;
            edi = eax;
            ecx = eax;
            edx = edx | edi >> 0x18;
            edx = edx | ecx >> 8 & 65280;
            edx = edx | eax << 0x18;
            if(edx >= Vffffffe4) {
                edx = Vffffffe4;
            }
            edi = *(esi + 4);
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            ecx = ecx | edi >> 8 & 65280;
            ecx = ecx | edi << 0x18;
            if(ecx >= Vffffffe4) {
                ecx = Vffffffe4;
            }
            edi = ecx;
            if(ecx + edx > Vfffffff0) {
                edi = Vfffffff0 - edx;
            }
            eax = L00436960(Vffffffec + edx, edi, 0);
            *( *(ebp - 0x48) + 4) = eax;
L004120f4:
            ecx = *(esi + 0x28);
            edx = *(esi + 0x2c);
            Vffffffe4 = 0;
            eax = ecx << 8 & 16711680;
            eax = eax | ecx >> 0x18;
            edi = ecx;
            ecx = ecx << 0x18;
            eax = eax | edi >> 8 & 65280 | ecx;
            edi = edx << 8 & 16711680;
            edi = edi | edx >> 0x18;
            ecx = edx;
            edx = edx << 0x18;
            edi = edi | ecx >> 8 & 65280 | edx | Vffffffe4;
            edx = *(ebp - 0x48);
            *(edx + 8) = edi;
            *(edx + 0xc) = eax;
            eax = *(esi + 0x18);
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            edx = eax;
            eax = eax << 0x18;
            ecx = ecx | edx >> 8 & 65280 | eax;
            *( *(ebp - 0x48) + 0x10) = ecx;
            eax = *(esi + 8);
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            edx = edx | ecx >> 8 & 65280 | eax;
            *( *(ebp - 0x48) + 0x14) = edx;
            eax = *(esi + 0x4a) & 65535;
            edi = eax << 8;
            edi = edi | eax >> 8;
            edi = di & 65535;
            if(edi < 4) {
                edi = 4;
            }
            if(edi > 0x400) {
                edi = 0x400;
            }
            eax = *(ebp - 0x48);
            *(eax + 0xe4) = edi << 0xa;
            edx = *(ebp - 0x48);
            *(edx + 0x18) = *(esi + 0x30);
            eax = *(ebp - 0x48);
            *(eax + 0x1c) = *(esi + 0x34);
            ecx = *(ebp - 0x48);
            *(ecx + 0x20) = *(esi + 0x38);
            edi = Vffffffd4 >= 0x3f ? 0x3f : Vffffffd4;
            L00428F50( *(ebp - 0x48) + 0x24, esi + 0x58, edi);
            if(Vffffffd8 >= 0x7f) {
                Vffffffd8 = 0x7f;
            }
            L00428F50( *(ebp - 0x48) + 0x64, esi + 0x58 + Vffffffd4, Vffffffd8);
            (save) *(ebp - 0x48);
            L0042A0D0(Vffffffe8 + 0x3c);
            esi = esi + ebx;
            (restore)ecx;
        } while(Vffffffe0 >= 0x58);
        goto L0041226c;
        L0042E3E0(ebp - 0x48);
        L004234F0(0, 0, 0);
        if(Vffffffc4 != 0) {
            (save)-1;
            ecx = *(ebp - 0x44);
            Vffffffc4();
        }
        esp = *(ebp - 0x30);
        goto L004120f4;
    }
L0041226c:
    esp = ebp - 0xc;
    return L0042E3E0( & Vffffffdc);
}

/*	Procedure: 0x0041227E - 0x0041227F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041227E()
{



}

/*	Procedure: 0x00412280 - 0x004125AE
 *	Argument size: 0
 *	Local size: 36
 *	Save regs size: 12
 *	Called by:
 *		L004102F0()
 *		L004104E0()
 *		L004107E0()
 *		L004112D0()
 *		L00411640()
 *		L00411DF0()
 */

L00412280()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffe4 = ecx;
    Vffffffec = 0x40;
    esi = *(ecx + 0x3c);
    edi = 0;
    ebx = 0;
    do {
        ecx = *(esi + 0x24) & 0xff;
        edx = *(esi + 0x64) & 0xff;
        edi = edi + 0x58 + ecx + edx + 3;
        ebx = ebx + 1;
        edi = edi & -4;
        Vffffffec = Vffffffec + (L00436670( *(esi + 4)) + 7 & -8);
        esi = *esi;
    } while(esi != 0);
    esi = edi + 7 & -8;
    Vffffffec = Vffffffec + esi;
    eax = Vffffffec;
    *(ebp - 0x28) = eax;
    eax = L0042E310( *(ebp - 0x28));
    edx = eax;
    Vffffffdc = eax;
    *(ebp - 0x30) = eax;
    *(ebp - 0x2c) = edx;
    L00434150( *(ebp - 0x30), edi + 0x40);
    ecx = bx & 65535;
    Vfffffff0 = esi;
    Vfffffff0 = Vfffffff0 + 0x40;
    *( *(ebp - 0x30)) = 1480870693;
    *( *(ebp - 0x30) + 4) = 1515541838;
    esi = ecx;
    ecx = ecx >> 8;
    *( *(ebp - 0x30) + 8) = 0x200;
    esi = esi << 8 | ecx;
    *( *(ebp - 0x30) + 0xa) = si;
    edx = edi;
    *( *(ebp - 0x30) + 0x18) = 1073741824;
    edx = edx << 8 & 16711680;
    edx = edx | edi >> 0x18;
    edx = edx | edi >> 8 & 65280;
    edx = edx | edi << 0x18;
    *( *(ebp - 0x30) + 0x1c) = edx;
    *( *(ebp - 0x30) + 0x3c) = 1;
    ecx = *(Vffffffe4 + 0x4c);
    ebx = ecx << 8 & 16711680;
    edx = ecx;
    eax = ecx;
    ebx = ebx | edx >> 0x18;
    ebx = ebx | eax >> 8 & 65280;
    ebx = ebx | ecx << 0x18;
    *( *(ebp - 0x30) + 0xc) = ebx;
    esi = *(ebp - 0x30);
    ebx = *(Vffffffe4 + 0x3c);
    esi = esi + 0x40;
    do {
        edi = Vfffffff0;
        eax = L004366B0( *(ebx + 4), *(ebp - 0x30) + edi, Vffffffec - edi);
        Vfffffff0 = Vfffffff0 + (eax + 7 & -8);
        edx = edi << 8 & 16711680;
        edx = edx | edi >> 0x18;
        ecx = edi;
        edi = edi << 0x18;
        *esi = edx | ecx >> 8 & 65280 | edi;
        edx = eax << 8 & 16711680;
        edx = edx | eax >> 0x18;
        edi = eax;
        eax = eax << 0x18;
        *(esi + 4) = edx | edi >> 8 & 65280 | eax;
        ecx = *(ebx + 0x14);
        eax = ecx << 8 & 16711680;
        eax = eax | ecx >> 0x18;
        edx = ecx;
        ecx = ecx << 0x18;
        *(esi + 8) = eax | edx >> 8 & 65280 | ecx;
        eax = *(ebx + 0x10);
        edi = eax << 8 & 16711680;
        edi = edi | eax >> 0x18;
        ecx = eax;
        eax = eax << 0x18;
        *(esi + 0x18) = edi | ecx >> 8 & 65280 | eax;
        edx = *(ebx + 0xc);
        edi = *(ebx + 8);
        ecx = 0;
        ecx = edx << 8 & 16711680;
        ecx = ecx | edx >> 0x18;
        eax = edx;
        edx = edx << 0x18;
        *(esi + 0x28) = ecx | eax >> 8 & 65280 | edx;
        ecx = edi << 8 & 16711680;
        eax = edi;
        edx = edi;
        ecx = ecx | eax >> 0x18;
        ecx = ecx | edx >> 8 & 65280;
        *(esi + 0x2c) = ecx | edi << 0x18;
        L00435AB0( *(ebx + 4));
        edx = ax & 65535;
        eax = edx;
        edx = edx >> 8;
        *(esi + 0x48) = eax << 8 | edx;
        edi = *(ebx + 0xe4) >> 0xa;
        edi = di & 65535;
        ecx = edi;
        edi = edi >> 8;
        *(esi + 0x4a) = ecx << 8 | edi;
        *(esi + 0x30) = *(ebx + 0x18);
        *(esi + 0x34) = *(ebx + 0x1c);
        *(esi + 0x38) = *(ebx + 0x20);
        Vffffffe8 = *(ebx + 0x24) & 0xff;
        *(esi + 0x54) = Vffffffe8;
        Vffffffe0 = *(ebx + 0x64) & 0xff;
        *(esi + 0x55) = Vffffffe0;
        eax = ebx + 0x24;
        edi = esi + 0x58;
        L00428EA0(eax, edi, Vffffffe8);
        edi = edi + Vffffffe8;
        L00428EA0(ebx + 0x64, edi, Vffffffe0);
        ecx = (Vffffffe8 + 0x5b + Vffffffe0 & -4) + esi;
        ebx = *ebx;
        esi = ecx;
    } while(ebx != 0);
    if(Vfffffff0 != Vffffffec) {
        L00429610(65546);
    }
    *(ebp - 0x2c) = 0;
    L0042C930( *(Vffffffe4 + 0x5c), & Vffffffdc, *(ebp - 0x28), 0);
    return L0042E3E0(ebp - 0x2c);
}

/*	Procedure: 0x004125AF - 0x004125AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004125AF()
{



}

/*	Procedure: 0x004125B0 - 0x00412870
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00412880()
 */

L004125B0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x238;
    edi = ebp + -536;
    *(ebp + -580) = *(A8 + 4);
    *edi = 0;
    *(edi + 4) = 0;
    *(edi + 8) = 0;
    L00429760(edi, A14 + 0xfff & -4096);
    L00429870(ebp + -536, 0x470024, 3);
    *(ebp + -548) = esp;
    if(!(A10 = A10 - 1)) {
        do {
            edi = L00436310( *(ebp + -580), Ac, ebp + -576);
            if(*(ebp + -576) < 0x20) {
                L00429610(65546);
            }
            *(ebp + -544) = *(edi + 0x1c) & 0xff;
            *(ebp + -540) = *(edi + 0x1d) & 0xff;
            ecx = *(edi + 0x18) & 65535;
            esi = ecx << 8;
            esi = esi | ecx >> 8;
            edx = *(ebp + -544) + 0x23 + *(ebp + -540);
            ebx = *(edi + 0x1e) & 0xff;
            edx = edx + ebx;
            esi = si & 65535;
            if(*(ebp + -576) < (edx + esi & -4)) {
                L00429610(65546);
            }
            eax = ebp + -524;
            *(ebp + -572) = edi;
            *(ebp + -572) = *(ebp + -572) + 0x20;
            ecx = *(ebp + -572) + *(ebp + -544) + *(ebp + -540);
            *(ebp + -540) = ecx;
            *(ebp + -540) = *(ebp + -540) + ebx;
            ebx = L00427DA0(0x470028, ecx, ebx, eax, 0x100);
            *(ebp + ebx + -524) = 0xa;
            *(ebp + ebx + -523) = 0x3c;
            ebx = ebx + 2;
            ebx = ebx + L00427DA0(0x470028, *(ebp + -572), *(ebp + -544), ebp + ebx + -524, 0x80);
            *(ebp + ebx + -524) = 0x3e;
            *(ebp + ebx + -523) = 0x20;
            *(ebp + ebx + -522) = 0x20;
            edx = *edi;
            eax = *(edi + 4);
            ebx = ebx + 3;
            ecx = edx;
            edi = ebp + ebx + -524;
            ecx = ecx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            edi = edx;
            edx = edx << 0x18;
            ecx = ecx | edi >> 8 & 65280 | edx;
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            edx = edx | eax >> 8 & 65280;
            edx = edx | eax << 0x18;
            *(ebp + -544) = 0;
            edx = edx | *(ebp + -544);
            ebx = ebx + L004372D0(edx, ecx, edi, 0x40, 0x1420);
            edx = ">\n____________________________________________________________\n";
            *(ebp + ebx + -524) = 0xa;
            ecx = *edx & 0xff;
            edx = edx + 1;
            L00429870(ebp + -536, edx, ecx);
            ecx = ebp + -524;
            edx = ebp + -536;
            L00429870(edx, ecx, ebx + 1);
            L00429870(ebp + -536, *(ebp + -540), esi);
            Ac = Ac + 1;
        } while(A10 = A10 - 1);
        goto L00412858;
        L0042E3E0(ebp + -536);
        L004234F0(0, 0, 0);
        if(*(ebp + -560) != 0) {
            ecx = *(ebp + -568);
            *(ebp + -560)(-1);
        }
        esp = *(ebp + -548);
    }
L00412858:
    *A18 = *(ebp + -532);
    eax = *(ebp + -536);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00412871 - 0x0041287F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00412871()
{



}

/*	Procedure: 0x00412880 - 0x00412B85
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004112D0()
 */

L00412880(Ac)
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x258;
    ecx = *(Ac + 4);
    *(ebp + -556) = ecx;
    L004364A0(ecx, ebp + -612, 0);
    eax = Ac;
    ecx = *(eax + 0xe4);
    *(ebp + -580) = ecx;
    if(*(ebp + -612) < ( *(ebp + -580) >> 1) + *(ebp + -580)) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    eax = L00435AB0( *(ebp + -556));
    edi = 0;
    ebx = 0;
    *(ebp - 0x10) = eax;
    if(eax > 0) {
        do {
            if(edi >= *(ebp + -580)) {
                break;
            }
            (save)ebx;
            eax = L004360B0( *(ebp + -556));
            ebx = ebx + 1;
            edi = edi + eax;
            (restore)ecx;
        } while(ebx < *(ebp - 0x10));
    }
    L004125B0(Ac, 0, ebx, edi, ebp + -608);
    *(ebp + -584) = eax;
    *(ebp + -592) = eax;
    L00428970(ebp + -272, Ac + 0x24, 0x80);
    L00428D50(ebp + -272, 0x20);
    L00436F90(0x100, ebp + -576);
    (save)0x802;
    edi = *(ebp + -572) >> 0x1f;
    eax = 1374389535;
    asm("imul edx");
    edi = (edi + (edx >> 5)) * 0x64;
    edx = ebp + -272;
    (save)ecx - edi;
    (save)edx;
    L00428CD0();
    esp = esp + 0xc;
    L00428CD0(ebp + -272, *(ebp + -570), 0x802);
    eax = *(ebp + -568);
    L00428CD0(ebp + -272, eax, 0x802);
    L0042BA30(1, 0, 0, "\rNews Archives", 0x80);
    *(ebp + -596) = eax;
    L0042BA30(eax, 0, 0, Ac + 0x24, 0x80);
    *(ebp - 0x10) = eax;
    *(ebp + -604) = eax;
    edi = 1;
L00412a20:
    eax = ebp + -272;
    (save)eax;
    L004288C0(ebp + -552);
    (restore)ecx;
    if(edi > 1) {
        L00428D50(ebp + -552, 0x2d);
        L00428CD0(ebp + -552, edi, 0);
    }
    L00428A30(ebp + -552, 0x470088);
    *(ebp + -276) = esp;
    *(ebp + -588) = L0042B600( *(ebp - 0x10), 0, 0, ebp + -552, 2, "\ntext/plain");
    goto L00412b0b;
    eax = *(ebp + -284);
    esi = eax;
    if(*eax == 196723 && edi < 0x63) {
        edi = edi + 1;
        if(*(ebp + -288) != 0) {
            (save)-1;
            ecx = *(ebp + -296);
            *(ebp + -288)();
        }
        esp = *(ebp + -276);
        goto L00412a20;
    }
    L004234F0(0, 0, 0);
    if(*(ebp + -288) != 0) {
        (save)-1;
        ecx = *(ebp + -296);
        *(ebp + -288)();
    }
    esp = *(ebp + -276);
L00412b0b:
    eax = *(ebp + -588);
    *(ebp + -600) = eax;
    *(ebp + -592) = 0;
    L0042C930(eax, ebp + -584, *(ebp + -608), 0);
    L0042BD00(ebp + -600);
    L00435E50( *(ebp + -556), 0, ebx);
    L0042BD00(ebp + -604);
    L0042BD00(ebp + -596);
    eax = L0042E3E0(ebp + -592);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00412B86 - 0x00412B8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00412B86()
{



}

/*	Procedure: 0x00412B90 - 0x00412E48
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00413D00()
 *		L004154F0()
 */

L00412B90(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = Ac;
    esp = esp - 0x154;
    if(*(A8 + 0x260) != eax) {
        eax = L00432610(0x4086b0, 0x47e000, 0, 1, 0);
        *(ebp + -352) = eax;
        *(ebp + -272) = esp;
        L00432C80( *(ebp + -352), Ac, 1);
        goto L00412c26;
        L00432760(ebp + -352);
        L004234F0(0, 0, 0);
        if(*(ebp + -284) != 0) {
            (save)-1;
            ecx = *(ebp + -292);
            *(ebp + -284)();
        }
        esp = *(ebp + -272);
L00412c26:
        L00432760(A8 + 8);
        *(A8 + 8) = *(ebp + -352);
        *(A8 + 0x260) = Ac;
        L004288C0(ebp + -268, 0x470450);
        L00428CD0(ebp + -268, Ac, 0);
        ecx = A8;
        eax = L00401190(ebp + -268);
    }
    if(*(A8 + 0x264) != A10) {
        if(A10 != 0) {
            eax = L00432610(0x4086b0, 0x47e000, 0, 1, 0);
            *(ebp + -348) = eax;
            *(ebp + -320) = esp;
            L00432C80( *(ebp + -348), A10, 1);
            goto L00412cf6;
            L00432760(ebp + -348);
            L004234F0(0, 0, 0);
            if(*(ebp + -332) != 0) {
                (save)-1;
                ecx = *(ebp + -340);
                *(ebp + -332)();
            }
            esp = *(ebp + -320);
L00412cf6:
            L00432760(A8 + 0xc);
            *(A8 + 0xc) = *(ebp + -348);
            *(A8 + 0x264) = A10;
            L004288C0(ebp + -268, " Alternate port number change to ");
            eax = L00428CD0(ebp + -268, A10, 0);
            (save)ebp + -268;
        } else {
            eax = L00432760(A8 + 0xc);
            *(A8 + 0x264) = A10;
            (save)0x47048c;
        }
        ecx = A8;
        L00401190();
    }
    if(*(A8 + 0x268) != A14) {
        if(A14 != 0) {
            eax = L00432610(0x4086b0, 0x47e000, 0, 1, 0);
            *(ebp + -344) = eax;
            *(ebp + -296) = esp;
            L00432C80( *(ebp + -344), A14, 1);
            goto L00412dde;
            L00432760(ebp + -344);
            L004234F0(0, 0, 0);
            if(*(ebp + -308) != 0) {
                (save)-1;
                ecx = *(ebp + -316);
                *(ebp + -308)();
            }
            esp = *(ebp + -296);
L00412dde:
            L00432760(A8 + 0x10);
            eax = ebp + -268;
            *(A8 + 0x10) = *(ebp + -344);
            *(A8 + 0x268) = A14;
            L004288C0(eax, "$File Transfer port number change to ");
            L00428CD0(ebp + -268, A14, 0);
            (save)ebp + -268;
        } else {
            L00432760(A8 + 0x10);
            *(A8 + 0x268) = A14;
            (save)"\"File Transfer port number disabled";
        }
        ecx = A8;
        eax = L00401190();
    }
}

/*	Procedure: 0x00412E49 - 0x00412E4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00412E49()
{



}

/*	Procedure: 0x00412E50 - 0x00412ED0
 *	Argument size: 16
 *	Local size: 8
 *	Save regs size: 8
 *	Called by:
 *		L00406020()
 */

L00412E50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esi = ecx;
    if(!(( *(A8 + 0x4f) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    L00414EE0(esi);
    eax = L00412F60(esi, ebp - 0xc, 0);
    *(ebp - 0x10) = eax;
    L00431A10( *(A8 + 8), 0xab, Ac, *(ebp - 0x10), *(ebp - 0xc));
    L00416790(esi, A8, 0xaa, 0, 0, 0, 0);
    return L0042E3E0(ebp - 0x10);
}

/*	Procedure: 0x00412ED1 - 0x00412EDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00412ED1()
{



}

/*	Procedure: 0x00412EE0 - 0x00412F59
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00406020()
 */

L00412EE0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;



    esi = ecx;
    if(!(( *(A8 + 0x4f) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    L00413D00(esi, A10, A14, 0);
    L00413B90(esi);
    L00431A10( *(A8 + 8), 0xad, Ac, 0, 0);
    L00416790(esi, A8, 0xac, 0, 0, 0, 0);
    return L00414C70(esi);
}

/*	Procedure: 0x00412F5A - 0x00412F5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00412F5A()
{



}

/*	Procedure: 0x00412F60 - 0x00413B8D
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00412E50()
 *		L00413B90()
 */

L00412F60(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    (save)esi;
    (save)edi;
    esp = esp - 0x44;
    *(ebp - 0x2c) = 0x5c;
    *(ebp - 0x2c) = *(ebp - 0x2c) + ( *(A8 + 0xa0) & 0xff);
    *(ebp - 0x2c) = *(ebp - 0x2c) + ( *(A8 + 0xe0) & 0xff);
    *(ebp - 0x2c) = *(ebp - 0x2c) + ( *(A8 + 0x1e0) & 0xff);
    *(ebp - 0x2c) = *(ebp - 0x2c) + 3;
    *(ebp - 0x2c) = *(ebp - 0x2c) & -4;
    eax = A8;
    *(ebp - 0x34) = *(eax + 0x288);
    ecx = *(eax + 0x28c);
    *(ebp - 0x24) = ecx;
    edx = 0;
    *(ebp - 0x18) = 0;
    if(ecx > 0) {
        do {
            esi = *( *(ebp - 0x34) + edx * 4);
            *(ebp - 0x18) = *(ebp - 0x18) + 0x20;
            if(esi != 0) {
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0xc)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x10)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x14)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x18)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x1c)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x20)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x24)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x28)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x2c)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x30)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x34)) & 0xff);
                *(ebp - 0x18) = *(ebp - 0x18) + ( *( *(esi + 0x38)) & 0xff);
            }
            *(ebp - 0x18) = *(ebp - 0x18) + 3;
            *(ebp - 0x18) = *(ebp - 0x18) & -4;
            edx = edx + 1;
            eax = *(ebp - 0x18);
        } while(edx < *(ebp - 0x24));
    }
    eax = A8;
    *(ebp - 0x20) = *(eax + 0x94);
    *(ebp - 0x30) = *(eax + 0x98);
    ebx = 0;
    ecx = 0;
    if(*(ebp - 0x30) > 0) {
        eax = *(ebp - 0x30);
        *(ebp - 0x38) = eax;
        *(ebp - 0x38) = *(ebp - 0x38) - 8;
        if(eax > 8) {
            do {
                edi = *( *(ebp - 0x20) + ecx * 4);
                edx = *( *(edi + 0xc)) & 0xff;
                eax = *(edi + 0x10);
                esi = *(edi + 0x14);
                ebx = ebx + 0x1c + edx;
                ebx = ebx + ( *eax & 0xff);
                ebx = ebx + ( *esi & 0xff);
                edx = *( *(ebp - 0x20) + ecx * 4 + 4);
                eax = *( *(edx + 0xc)) & 0xff;
                edi = *(edx + 0x10);
                esi = *(edx + 0x14);
                ebx = (ebx + 3 & -4) + 0x1c + eax;
                ebx = ebx + ( *edi & 0xff);
                ebx = (ebx + ( *esi & 0xff) + 3 & -4) + 0x1c;
                eax = *( *(ebp - 0x20) + ecx * 4 + 8);
                edx = *( *(eax + 0xc)) & 0xff;
                esi = *(eax + 0x10);
                ebx = ebx + edx;
                edx = *esi & 0xff;
                edi = *(eax + 0x14);
                ebx = ebx + edx;
                ebx = ebx + ( *edi & 0xff);
                edx = *( *(ebp - 0x20) + ecx * 4 + 0xc);
                eax = *( *(edx + 0xc)) & 0xff;
                edi = *(edx + 0x10);
                esi = *(edx + 0x14);
                ebx = (ebx + 3 & -4) + 0x1c + eax;
                ebx = ebx + ( *edi & 0xff);
                ebx = (ebx + ( *esi & 0xff) + 3 & -4) + 0x1c;
                eax = *( *(ebp - 0x20) + ecx * 4 + 0x10);
                edx = *( *(eax + 0xc)) & 0xff;
                esi = *(eax + 0x10);
                ebx = ebx + edx;
                edx = *esi & 0xff;
                edi = *(eax + 0x14);
                ebx = ebx + edx;
                ebx = ebx + ( *edi & 0xff);
                edx = *( *(ebp - 0x20) + ecx * 4 + 0x14);
                eax = *( *(edx + 0xc)) & 0xff;
                edi = *(edx + 0x10);
                esi = *(edx + 0x14);
                ebx = (ebx + 3 & -4) + 0x1c + eax;
                ebx = ebx + ( *edi & 0xff);
                ebx = (ebx + ( *esi & 0xff) + 3 & -4) + 0x1c;
                eax = *( *(ebp - 0x20) + ecx * 4 + 0x18);
                edx = *( *(eax + 0xc)) & 0xff;
                esi = *(eax + 0x10);
                ebx = ebx + edx;
                edx = *esi & 0xff;
                edi = *(eax + 0x14);
                ebx = ebx + edx;
                ebx = ebx + ( *edi & 0xff);
                edx = *( *(ebp - 0x20) + ecx * 4 + 0x1c);
                ebx = ebx + 3 & -4;
                eax = *( *(edx + 0xc)) & 0xff;
                ebx = ebx + 0x1c + eax;
                ebx = ebx + ( *( *(edx + 0x10)) & 0xff);
                ebx = ebx + ( *( *(edx + 0x14)) & 0xff) + 3;
                ecx = ecx + 8;
                ebx = ebx & -4;
            } while(ecx < *(ebp - 0x38));
        }
        do {
            ebx = ebx + 0x1c;
            eax = *( *(ebp - 0x20) + ecx * 4);
            ebx = ebx + ( *( *(eax + 0xc)) & 0xff);
            ebx = ebx + ( *( *(eax + 0x10)) & 0xff);
            ebx = ebx + ( *( *(eax + 0x14)) & 0xff) + 3;
            ecx = ecx + 1;
            ebx = ebx & -4;
        } while(ecx < *(ebp - 0x30));
    }
    eax = A8;
    ecx = *(eax + 0x27c);
    *(ebp - 0x50) = ecx;
    edi = ecx + 3 & -4;
    *(ebp - 0x1c) = 0;
    if(A10 != 0) {
        *(ebp - 0x1c) = L0040B960(eax);
    }
    esi = *(ebp - 0x2c) + 0x70 + *(ebp - 0x18) + ebx + edi + *(A8 + 0x298) + *(ebp - 0x1c);
    *Ac = esi;
    eax = L0042E3A0(esi);
    *(ebp - 0x38) = eax;
    *(ebp - 0x4c) = *(ebp - 0x38);
    *(ebp - 0x28) = *(ebp - 0x2c);
    *(ebp - 0x28) = *(ebp - 0x28) + 0x70;
    *(ebp - 0x3c) = *(ebp - 0x28);
    *(ebp - 0x3c) = *(ebp - 0x3c) + *(ebp - 0x18);
    *(ebp - 0x44) = *(ebp - 0x3c);
    *(ebp - 0x44) = *(ebp - 0x44) + ebx;
    *(ebp - 0x40) = *(ebp - 0x44);
    *(ebp - 0x40) = *(ebp - 0x40) + edi;
    *(ebp - 0x48) = *(ebp - 0x40);
    *(ebp - 0x48) = *(ebp - 0x48) + *(A8 + 0x298);
    *( *(ebp - 0x38)) = 1480870693;
    *( *(ebp - 0x38) + 4) = 1196708691;
    *( *(ebp - 0x38) + 8) = 0x100;
    *( *(ebp - 0x38) + 0xc) = 1879048192;
    ecx = *(ebp - 0x2c) << 8 & 16711680;
    ecx = ecx | *(ebp - 0x2c) >> 0x18;
    edi = *(ebp - 0x2c);
    *(ebp - 0x2c) = *(ebp - 0x2c) << 0x18;
    eax = *(ebp - 0x38);
    *(eax + 0x10) = ecx | edi >> 8 & 65280 | *(ebp - 0x2c);
    eax = *(ebp - 0x28);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    esi = eax;
    eax = eax << 0x18;
    edx = edx | esi >> 8 & 65280 | eax;
    *( *(ebp - 0x38) + 0x14) = edx;
    edi = *(ebp - 0x18);
    eax = *(ebp - 0x38);
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    esi = edi;
    edi = edi << 0x18;
    *(eax + 0x18) = edx | esi >> 8 & 65280 | edi;
    eax = *(ebp - 0x3c);
    edi = ebx;
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    esi = eax;
    eax = eax << 0x18;
    edx = edx | esi >> 8 & 65280 | eax;
    *( *(ebp - 0x38) + 0x1c) = edx;
    eax = *(ebp - 0x38);
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    esi = edi;
    edi = edi << 0x18;
    *(eax + 0x20) = edx | esi >> 8 & 65280 | edi;
    eax = *(ebp - 0x44);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    esi = eax;
    eax = eax << 0x18;
    edx = edx | esi >> 8 & 65280 | eax;
    *( *(ebp - 0x38) + 0x24) = edx;
    edi = *(ebp - 0x50) << 8 & 16711680;
    edi = edi | *(ebp - 0x50) >> 0x18;
    ecx = *(ebp - 0x50);
    *(ebp - 0x50) = *(ebp - 0x50) << 0x18;
    eax = *(ebp - 0x38);
    *(eax + 0x28) = edi | ecx >> 8 & 65280 | *(ebp - 0x50);
    esi = *(ebp - 0x40);
    edi = esi << 8 & 16711680;
    edi = edi | esi >> 0x18;
    eax = *(ebp - 0x38);
    edx = esi;
    esi = esi << 0x18;
    *(eax + 0x34) = edi | edx >> 8 & 65280 | esi;
    ecx = *(A8 + 0x298);
    edi = ecx << 8 & 16711680;
    edi = edi | ecx >> 0x18;
    eax = *(ebp - 0x38);
    edx = ecx;
    ecx = ecx << 0x18;
    *(eax + 0x38) = edi | edx >> 8 & 65280 | ecx;
    esi = *(ebp - 0x48);
    edi = esi << 8 & 16711680;
    edi = edi | esi >> 0x18;
    eax = *(ebp - 0x38);
    edx = esi;
    esi = esi << 0x18;
    *(eax + 0x44) = edi | edx >> 8 & 65280 | esi;
    ecx = *(ebp - 0x1c);
    edi = *(ebp - 0x1c);
    eax = *(ebp - 0x1c);
    edx = *(ebp - 0x1c);
    ecx = ecx << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    eax = *(ebp - 0x38);
    *(eax + 0x48) = ecx | edx << 0x18;
    *( *(ebp - 0x38) + 0x64) = 1;
    *( *(ebp - 0x38) + 0x65) = 1;
    *( *(ebp - 0x38) + 0x66) = 1;
    *( *(ebp - 0x38) + 0x67) = 1;
    *( *(ebp - 0x38) + 0x69) = 1;
    *( *(ebp - 0x38) + 0x6b) = 2;
    eax = *(ebp - 0x38);
    cl = *(ebp - 0x24);
    *(eax + 0x6f) = cl;
    *(ebp - 0x50) = *(ebp - 0x38);
    *(ebp - 0x50) = *(ebp - 0x50) + 0x70;
    esi = 0;
    if(*(A8 + 0x284) != 0) {
        esi = 1;
    }
    if(*(A8 + 0x285) != 0) {
        esi = esi | 2;
    }
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    eax = esi;
    esi = esi << 0x18;
    ecx = ecx | eax >> 8 & 65280 | esi;
    *( *(ebp - 0x50) + 0x20) = ecx;
    edx = *(A8 + 0x260);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    esi = edx;
    edx = edx << 0x18;
    ecx = ecx | esi >> 8 & 65280 | edx;
    *( *(ebp - 0x50) + 0x24) = ecx;
    eax = *(A8 + 0x264);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    esi = eax;
    eax = eax << 0x18;
    ecx = ecx | esi >> 8 & 65280 | eax;
    *( *(ebp - 0x50) + 0x14) = ecx;
    edx = *(A8 + 0x268);
    ecx = edx << 8 & 16711680;
    edi = edx;
    esi = edx;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    ecx = ecx | edx << 0x18;
    *( *(ebp - 0x50) + 0x10) = ecx;
    if(A10 != 0) {
        eax = *(A8 + 0x26c);
        ecx = eax << 8 & 16711680;
        ecx = ecx | eax >> 0x18;
        esi = eax;
        eax = eax << 0x18;
        ecx = ecx | esi >> 8 & 65280 | eax;
        *( *(ebp - 0x50) + 0x2c) = ecx;
        edx = *(A8 + 0x270);
        ecx = edx << 8 & 16711680;
        ecx = ecx | edx >> 0x18;
        esi = edx;
        edx = edx << 0x18;
        ecx = ecx | esi >> 8 & 65280 | edx;
        *( *(ebp - 0x50) + 0x30) = ecx;
        eax = *(A8 + 0x274);
        ecx = eax << 8 & 16711680;
        ecx = ecx | eax >> 0x18;
        esi = eax;
        eax = eax << 0x18;
        ecx = ecx | esi >> 8 & 65280 | eax;
        *( *(ebp - 0x50) + 0x34) = ecx;
        edx = *(A8 + 0x2a4) & 65535;
        ecx = edx;
        edx = edx >> 8;
        ecx = ecx << 8 | edx;
        *( *(ebp - 0x50)) = cx;
        edi = *(A8 + 0x2a8) & 65535;
        esi = edi << 8;
        esi = esi | edi >> 8;
        *( *(ebp - 0x50) + 2) = si;
        eax = *(A8 + 0x2ac) & 65535;
        ecx = eax;
        eax = eax >> 8;
        ecx = ecx << 8 | eax;
        *( *(ebp - 0x50) + 4) = cx;
        edx = *(A8 + 0x2b0) & 65535;
        esi = edx << 8;
        esi = esi | edx >> 8;
        *( *(ebp - 0x50) + 6) = si;
    }
    edi = *(A8 + 0x29c);
    ecx = edi << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    eax = edi;
    edi = edi << 0x18;
    ecx = ecx | eax >> 8 & 65280 | edi;
    *( *(ebp - 0x50) + 0x38) = ecx;
    edx = *(A8 + 0x2cc);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    ecx = ecx | eax >> 8 & 65280 | edx;
    *( *(ebp - 0x50) + 0x18) = ecx;
    edi = *(A8 + 0x2d0);
    ecx = edi << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | edi >> 8 & 65280;
    eax = *(ebp - 0x50);
    *(eax + 0x1c) = ecx | edi << 0x18;
    edx = *(A8 + 0xa0) & 0xff;
    *( *(ebp - 0x50) + 0x52) = dl;
    *( *(ebp - 0x50) + 0x53) = *(A8 + 0xe0) & 0xff;
    *( *(ebp - 0x50) + 0x55) = *(A8 + 0x1e0) & 0xff;
    esi = *(ebp - 0x50) + 0x5c;
    eax = L00428EA0(A8 + 0xa0, esi, 0xff);
    esi = esi + eax;
    esi = esi + L00428EA0(A8 + 0xe0, esi, 0xff);
    L00428EA0(A8 + 0x1e0, esi, 0xff);
    *(ebp - 0x2c) = *(ebp - 0x38);
    *(ebp - 0x2c) = *(ebp - 0x2c) + *(ebp - 0x28);
    edi = *(ebp - 0x2c);
    *(ebp - 0x28) = 0;
    if(*(ebp - 0x24) > 0) {
        do {
            eax = *(ebp - 0x34);
            esi = *(eax + *(ebp - 0x28) * 4);
            *(ebp - 0x50) = edi;
            *(ebp - 0x50) = *(ebp - 0x50) + 0x20;
            if(esi != 0) {
                L004342A0(edi + 8, esi, 0xc);
                eax = *( *(esi + 0xc)) & 0xff;
                *(edi + 0x14) = al;
                edx = *( *(esi + 0x10)) & 0xff;
                *(edi + 0x15) = dl;
                ecx = *( *(esi + 0x14)) & 0xff;
                *(edi + 0x16) = cl;
                eax = *( *(esi + 0x18)) & 0xff;
                *(edi + 0x17) = al;
                edx = *( *(esi + 0x1c)) & 0xff;
                *(edi + 0x18) = dl;
                ecx = *( *(esi + 0x20)) & 0xff;
                *(edi + 0x19) = cl;
                eax = *( *(esi + 0x24)) & 0xff;
                *(edi + 0x1a) = al;
                edx = *( *(esi + 0x28)) & 0xff;
                *(edi + 0x1b) = dl;
                ecx = *( *(esi + 0x2c)) & 0xff;
                *(edi + 0x1c) = cl;
                *(edi + 0x1d) = *( *(esi + 0x30)) & 0xff;
                *(edi + 0x1e) = *( *(esi + 0x34)) & 0xff;
                *(edi + 0x1f) = *( *(esi + 0x38)) & 0xff;
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0xc), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x10), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x14), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x18), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x1c), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x20), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x24), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x28), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x2c), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x30), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x34), *(ebp - 0x50), 0xff);
                *(ebp - 0x50) = *(ebp - 0x50) + L00428EA0( *(esi + 0x38), *(ebp - 0x50), 0xff);
            }
            edi = *(ebp - 0x50) + 3;
            eax = *(ebp - 0x24);
            edi = edi & -4;
            *(ebp - 0x28) = *(ebp - 0x28) + 1;
        } while(*(ebp - 0x28) < eax);
    }
    if(*(ebp - 0x18) != edi - *(ebp - 0x2c)) {
        L00429610(65537);
    }
    *(ebp - 0x34) = *(ebp - 0x38);
    *(ebp - 0x34) = *(ebp - 0x34) + *(ebp - 0x3c);
    edi = *(ebp - 0x34);
    *(ebp - 0x24) = 0;
    if(*(ebp - 0x30) > 0) {
        do {
            eax = *(ebp - 0x20);
            esi = *(eax + *(ebp - 0x24) * 4);
            *(ebp - 0x14) = *esi;
            eax = *(esi + 4);
            edx = eax << 8;
            ecx = 0;
            edx = edx & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            *edi = edx | ecx >> 8 & 65280 | eax;
            edx = *(ebp - 0x14) << 8 & 16711680;
            edx = edx | *(ebp - 0x14) >> 0x18;
            eax = *(ebp - 0x14);
            *(ebp - 0x14) = *(ebp - 0x14) << 0x18;
            *(edi + 4) = edx | eax >> 8 & 65280 | *(ebp - 0x14);
            ecx = *(esi + 8) & 65535;
            edx = ecx;
            ecx = ecx >> 8;
            *(edi + 0x10) = edx << 8 | ecx;
            *(edi + 0x12) = 0;
            *(edi + 0x14) = 0;
            *(edi + 0x16) = 0;
            *(edi + 0x18) = *( *(esi + 0xc)) & 0xff;
            *(edi + 0x19) = *( *(esi + 0x10)) & 0xff;
            *(edi + 0x1a) = *( *(esi + 0x14)) & 0xff;
            edi = edi + 0x1c;
            edi = edi + L00428EA0( *(esi + 0xc), edi, 0xff);
            edi = edi + L00428EA0( *(esi + 0x10), edi, 0xff);
            edi = edi + L00428EA0( *(esi + 0x14), edi, 0xff) + 3;
            eax = *(ebp - 0x30);
            edi = edi & -4;
            *(ebp - 0x24) = *(ebp - 0x24) + 1;
        } while(*(ebp - 0x24) < eax);
    }
    if(ebx != edi - *(ebp - 0x34)) {
        L00429610(65537);
    }
    eax = A8;
    L004342A0( *(ebp - 0x38) + *(ebp - 0x44), *(eax + 0x278), *(eax + 0x27c));
    eax = A8;
    L004342A0( *(ebp - 0x38) + *(ebp - 0x40), *(eax + 0x294), *(eax + 0x298));
    if(A10 != 0) {
        L0040B9B0(A8, *(ebp - 0x38) + *(ebp - 0x48), *(ebp - 0x1c));
    }
    ecx = ebp - 0x4c;
    edi = *(ebp - 0x4c);
    *(ebp - 0x4c) = 0;
    L0042E3E0(ecx);
    eax = edi;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00413B8E - 0x00413B8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00413B8E()
{



}

/*	Procedure: 0x00413B90 - 0x00413BF0
 *	Argument size: 4
 *	Local size: 12
 *	Save regs size: 4
 *	Called by:
 *		L00408E70()
 *		L0040AFD0()
 *		L0040B130()
 *		L0040B590()
 *		L00412EE0()
 *		L004154F0()
 */

L00413B90(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;



    ebx = L0042B600(1, 0, 0, M0047e458, 0x82, M0047e45c);
    Vfffffff4 = ebx;
    eax = L00412F60(A8, ebp - 0x10, 1);
    Vfffffff8 = eax;
    L0042C930(ebx, & Vfffffff8, *(ebp - 0x10), 0);
    return L0042BD00( & Vfffffff4);
}

/*	Procedure: 0x00413BF1 - 0x00413BFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00413BF1()
{



}

/*	Procedure: 0x00413C00 - 0x00413CFE
 *	Argument size: 12
 *	Local size: 16
 *	Save regs size: 12
 *	Called by:
 *		L00413D00()
 */

L00413C00(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    if(A10 != 0) {
        *A10 = 0;
    }
    if(Ac < 0x20) {
        return 0;
    }
    eax = A8;
    edx = 0;
    *(ebp - 0x1c) = eax;
    esi = *(ebp - 0x1c) + 0x14;
    ecx = 0;
    do {
        edx = edx + ( *(esi + ecx) & 0xff);
        edx = edx + ( *(esi + ecx + 1) & 0xff);
        edx = edx + ( *(esi + ecx + 2) & 0xff);
        edx = edx + ( *(esi + ecx + 3) & 0xff);
        edx = edx + ( *(esi + ecx + 4) & 0xff);
        eax = *(esi + ecx + 5) & 0xff;
        ecx = ecx + 6;
        edx = edx + eax;
    } while(ecx < 0xc);
    edi = edx + 0x23 & -4;
    if(Ac < edi) {
        esp = ebp - 0xc;
        return 0;
    }
    if(A10 != 0) {
        *A10 = edi;
    }
    eax = L0042E310(edx + 0x48);
    Vfffffff0 = eax;
    L004342A0(Vfffffff0, *(ebp - 0x1c) + 8, 0xc);
    0;
    eax = Vfffffff0;
    *(ebp - 0x1c) = *(ebp - 0x1c) + 0x20;
    *(ebp - 0x14) = eax;
    *(ebp - 0x14) = *(ebp - 0x14) + 0x3c;
    *(ebp - 0x18) = eax;
    *(ebp - 0x18) = *(ebp - 0x18) + 0xc;
    edi = 0;
    do {
        eax = *(ebp - 0x18);
        *(eax + edi * 4) = *(ebp - 0x14);
        ebx = *(esi + edi) & 0xff;
        L00428F50( *(ebp - 0x14), *(ebp - 0x1c), ebx);
        eax = ebx + 1;
        edi = edi + 1;
        *(ebp - 0x14) = *(ebp - 0x14) + eax;
        *(ebp - 0x1c) = *(ebp - 0x1c) + ebx;
    } while(edi < 0xc);
    esp = ebp - 0xc;
    return Vfffffff0;
}

/*	Procedure: 0x00413CFF - 0x00413CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00413CFF()
{



}

/*	Procedure: 0x00413D00 - 0x004147F1
 *	Argument size: 16
 *	Local size: 92
 *	Save regs size: 12
 *	Called by:
 *		L00412EE0()
 *		L00414800()
 */

L00413D00(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(A10 < 0x70) {
        return 0;
    }
    eax = Ac;
    Vfffffff0 = eax;
    ebx = *eax;
    edx = ebx << 8 & 16711680;
    esi = ebx;
    ecx = ebx;
    edx = edx | esi >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    if((edx | ebx << 0x18) != 625689688) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = *(Vfffffff0 + 4);
    edi = eax << 8 & 16711680;
    edx = eax;
    esi = eax;
    edi = edi | edx >> 0x18;
    edi = edi | esi >> 8 & 65280;
    eax = eax << 0x18;
    if((edi | eax) != 1397969991) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = Vfffffff0;
    ecx = *(eax + 8) & 65535;
    ebx = ecx << 8;
    if((ebx | ecx >> 8) != 1) {
        esp = ebp - 0xc;
        return 0;
    }
    edi = *(Vfffffff0 + 0xc);
    edx = edi << 8 & 16711680;
    esi = edi;
    eax = edi;
    edx = edx | esi >> 0x18;
    edx = edx | eax >> 8 & 65280;
    edi = edi << 0x18;
    eax = A10;
    edx = edx | edi;
    Vffffffec = eax;
    if(edx >= eax) {
        edx = Vffffffec;
    }
    ebx = *(Vfffffff0 + 0x10);
    ecx = ebx << 8 & 16711680;
    esi = ebx;
    eax = ebx;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    ecx = ecx | ebx << 0x18;
    if(ecx >= Vffffffec) {
        ecx = Vffffffec;
    }
    if(ecx + edx <= A10) {
        eax = Vfffffff0;
        if(*(eax + 0x64) == 1 && ecx >= 0x5c) {
            esi = edx + eax;
            Vffffffdc = *(esi + 0x52) & 0xff;
            *(ebp - 0x68) = *(esi + 0x53) & 0xff;
            Vffffffe8 = *(esi + 0x55) & 0xff;
            if(ecx >= Vffffffdc + 0x5c + *(ebp - 0x68) + Vffffffe8) {
                ebx = *(esi + 0x20);
                edi = ebx << 8 & 16711680;
                edi = edi | ebx >> 0x18;
                eax = ebx;
                ebx = ebx << 0x18;
                edi = edi | eax >> 8 & 65280 | ebx;
                *(A8 + 0x284) = 0;
                *(A8 + 0x285) = 0;
                eax = *(esi + 0x24);
                edx = eax;
                Vffffffe4 = eax;
                ebx = eax;
                edx = edx >> 8 & 65280;
                Vffffffe4 = Vffffffe4 << 8;
                Vffffffe4 = Vffffffe4 & 16711680;
                Vffffffe4 = Vffffffe4 | ebx >> 0x18;
                Vffffffe4 = Vffffffe4 | edx;
                if((Vffffffe4 = Vffffffe4 | eax << 0x18) || Vffffffe4 >= 65535) {
                    Vffffffe4 = 10700;
                }
                ecx = *(esi + 0x14);
                ebx = ecx << 8 & 16711680;
                edx = ecx;
                edi = ecx;
                ebx = ebx | edx >> 0x18;
                ebx = ebx | edi >> 8 & 65280;
                ebx = ebx | ecx << 0x18;
                if(ebx >= 65535) {
                    ebx = 0;
                }
                eax = *(esi + 0x10);
                edx = eax << 8 & 16711680;
                edi = eax;
                ecx = eax;
                edx = edx | edi >> 0x18;
                edx = edx | ecx >> 8 & 65280;
                edx = edx | eax << 0x18;
                if(edx >= 65535) {
                    edx = 0;
                }
                if(A14 != 0) {
                    edi = *(esi + 0x2c);
                    ecx = edi << 8 & 16711680;
                    ecx = ecx | edi >> 0x18;
                    eax = edi;
                    edi = edi << 0x18;
                    ecx = ecx | eax >> 8 & 65280 | edi;
                    *(A8 + 0x26c) = ecx;
                    eax = *(esi + 0x30);
                    ecx = eax << 8 & 16711680;
                    ecx = ecx | eax >> 0x18;
                    edi = eax;
                    eax = eax << 0x18;
                    ecx = ecx | edi >> 8 & 65280 | eax;
                    *(A8 + 0x270) = ecx;
                    edi = *(esi + 0x34);
                    ecx = edi << 8 & 16711680;
                    ecx = ecx | edi >> 0x18;
                    eax = edi;
                    edi = edi << 0x18;
                    ecx = ecx | eax >> 8 & 65280 | edi;
                    *(A8 + 0x274) = ecx;
                    eax = *esi & 65535;
                    ecx = eax;
                    eax = eax >> 8;
                    ecx = ecx << 8 | eax;
                    edi = cx;
                    *(A8 + 0x2a4) = edi;
                    ecx = *(esi + 2) & 65535;
                    eax = ecx;
                    ecx = ecx >> 8;
                    eax = eax << 8 | ecx;
                    edi = ax;
                    *(A8 + 0x2a8) = edi;
                    eax = *(esi + 4) & 65535;
                    ecx = eax;
                    eax = eax >> 8;
                    edi = ecx << 8 | eax;
                    *(A8 + 0x2ac) = edi;
                    ecx = *(esi + 6) & 65535;
                    eax = ecx;
                    ecx = ecx >> 8;
                    edi = eax << 8 | ecx;
                    *(A8 + 0x2b0) = edi;
                    *(A8 + 0x260) = Vffffffe4;
                    *(A8 + 0x264) = ebx;
                    *(A8 + 0x268) = edx;
                } else {
                    L00412B90(A8, Vffffffe4, ebx, edx);
                }
                eax = *(esi + 0x38);
                ebx = eax << 8 & 16711680;
                edx = eax;
                ecx = eax;
                eax = eax << 0x18;
                ebx = ebx | edx >> 0x18;
                ebx = ebx | ecx >> 8 & 65280 | eax;
                *(A8 + 0x29c) = ebx;
                *(A8 + 0x2a0) = 1;
                Vffffffdc :: 0x3f;
                ecx = !(edi = esi + 0x5c) ? Vffffffdc : 0x3f;
                L00428F50(A8 + 0xa0, edi, ecx);
                edi = edi + Vffffffdc;
                ebx = *(ebp - 0x68) < 0xff ? *(ebp - 0x68) : 0xff;
                L00428F50(A8 + 0xe0, edi, ebx);
                edi = edi + *(ebp - 0x68);
                if(Vffffffe8 >= 0x7f) {
                    Vffffffe8 = 0x7f;
                }
                L00428F50(A8 + 0x1e0, edi, Vffffffe8);
                eax = A8;
                if(*(eax + 0xa0) == 0) {
                    *(eax + 0x284) = 0;
                }
                edx = *(esi + 0x18);
                ebx = edx << 8 & 16711680;
                ebx = ebx | edx >> 0x18;
                edi = edx;
                edx = edx << 0x18;
                ebx = ebx | edi >> 8 & 65280 | edx;
                *(A8 + 0x2cc) = ebx;
                ebx = *(esi + 0x1c);
                edx = ebx << 8 & 16711680;
                eax = ebx;
                ecx = ebx;
                edx = edx | eax >> 0x18;
                edx = edx | ecx >> 8 & 65280;
                if(!(edx = edx | ebx << 0x18)) {
                    edx = 1048576;
                } else {
                    if(edx < 16384) {
                        edx = 16384;
                    } else {
                        if(edx > 1073741824) {
                            edx = 1073741824;
                        }
                    }
                }
                *(A8 + 0x2d0) = edx;
            }
        }
    }
    Vffffffe8 = 0;
    edi = *(Vfffffff0 + 0x14);
    eax = edi;
    *(ebp - 0x68) = edi;
    edx = edi;
    eax = eax >> 8 & 65280;
    edi = edi << 0x18;
    *(ebp - 0x68) = *(ebp - 0x68) << 8;
    *(ebp - 0x68) = *(ebp - 0x68) & 16711680;
    *(ebp - 0x68) = *(ebp - 0x68) | edx >> 0x18;
    *(ebp - 0x68) = *(ebp - 0x68) | eax;
    *(ebp - 0x68) = *(ebp - 0x68) | edi;
    if(*(ebp - 0x68) >= Vffffffec) {
        *(ebp - 0x68) = Vffffffec;
    }
    ecx = *(Vfffffff0 + 0x18);
    eax = ecx << 8 & 16711680;
    esi = ecx;
    ebx = ecx;
    eax = eax | esi >> 0x18;
    eax = eax | ebx >> 8 & 65280;
    eax = eax | ecx << 0x18;
    if(eax >= Vffffffec) {
        eax = Vffffffec;
    }
    Vffffffd0 = eax;
    if(*(ebp - 0x68) + eax <= A10 && *(Vfffffff0 + 0x65) == 1) {
        eax = A8;
        edi = *(eax + 0x28c);
        esi = 0;
        ebx = *(eax + 0x288);
        if(edi > 0) {
            do {
                L0042E3E0(ebx);
                esi = esi + 1;
                ebx = ebx + 4;
            } while(esi < edi);
        }
        L00429D80(A8 + 0x288);
        eax = *(Vfffffff0 + 0x6f) & 0xff;
        edi = Vfffffff0 + *(ebp - 0x68);
        esi = 0;
        Vffffffd8 = eax;
        if(eax <= 0) {
            goto L0041434e;
        }
        do {
            eax = L00413C00(edi, Vffffffd0, ebp - 0x64);
            Vffffffd4 = eax;
            if(eax == 0) {
                break;
            }
            eax = *(ebp - 0x64);
            ebx = Vffffffd4;
            edi = edi + *(ebp - 0x64);
            Vffffffd0 = Vffffffd0 - eax;
            Vffffffcc = esp;
            if(ebx == 0) {
                L00429610(65538);
            }
            L00429A00(A8 + 0x288, ebx);
L00414333:
            if(*( *(Vffffffd4 + 0x14)) != 0) {
                Vffffffe8 = 1;
            }
            esi = esi + 1;
        } while(esi < Vffffffd8);
        goto L0041434e;
        L0042E3E0( & Vffffffd4);
        L004234F0(0, 0, 0);
        if(Vffffffc0 != 0) {
            (save)-1;
            ecx = Vffffffb8;
            Vffffffc0();
        }
        esp = *(ebp - 0x34);
        goto L00414333;
    }
L0041434e:
    if(Vffffffe8 == 0) {
        *(A8 + 0x284) = 0;
    }
    ecx = *(Vfffffff0 + 0x1c);
    eax = ecx;
    Vffffffe8 = ecx;
    edx = ecx;
    eax = eax >> 8 & 65280;
    ecx = ecx << 0x18;
    Vffffffe8 = Vffffffe8 << 8;
    Vffffffe8 = Vffffffe8 & 16711680;
    Vffffffe8 = Vffffffe8 | edx >> 0x18;
    Vffffffe8 = Vffffffe8 | eax;
    Vffffffe8 = Vffffffe8 | ecx;
    if(Vffffffe8 >= Vffffffec) {
        Vffffffe8 = Vffffffec;
    }
    edi = *(Vfffffff0 + 0x20);
    edx = edi;
    *(ebp - 0x68) = edi;
    ebx = edi;
    edx = edx >> 8 & 65280;
    edi = edi << 0x18;
    *(ebp - 0x68) = *(ebp - 0x68) << 8;
    *(ebp - 0x68) = *(ebp - 0x68) & 16711680;
    *(ebp - 0x68) = *(ebp - 0x68) | ebx >> 0x18;
    *(ebp - 0x68) = *(ebp - 0x68) | edx;
    *(ebp - 0x68) = *(ebp - 0x68) | edi;
    if(*(ebp - 0x68) >= Vffffffec) {
        *(ebp - 0x68) = Vffffffec;
    }
    Vffffffdc = *(ebp - 0x68);
    if(Vffffffe8 + *(ebp - 0x68) <= A10 && *(Vfffffff0 + 0x66) == 1) {
        eax = A8;
        ebx = *(eax + 0x98);
        edi = 0;
        esi = *(eax + 0x94);
        if(ebx > 0) {
            do {
                L0042E3E0(esi);
                edi = edi + 1;
                esi = esi + 4;
            } while(edi < ebx);
        }
        L00429D80(A8 + 0x94);
        ebx = Vfffffff0 + Vffffffe8;
        if(*(ebp - 0x68) < 0x1c) {
            goto L004145c0;
        }
        do {
            Vffffffe8 = *(ebx + 0x18) & 0xff;
            Vffffffe4 = *(ebx + 0x19) & 0xff;
            *(ebp - 0x68) = *(ebx + 0x1a) & 0xff;
            Vffffffd8 = *(ebx + 0x1b) & 0xff;
            Vffffffd8 = Vffffffd8 + Vffffffe8 + 0x1f + Vffffffe4 + *(ebp - 0x68);
            Vffffffd8 = Vffffffd8 & -4;
            eax = Vffffffd8;
            if(Vffffffdc < eax) {
                break;
            }
            Vffffffdc = Vffffffdc - eax;
            Vffffffe0 = L0042E3A0(Vffffffe8 + 0x1b + Vffffffe4 + *(ebp - 0x68));
            esi = *ebx;
            eax = *(ebx + 4);
            Vffffffd0 = 0;
            ecx = esi << 8 & 16711680;
            ecx = ecx | esi >> 0x18;
            edi = esi;
            esi = esi << 0x18;
            ecx = ecx | edi >> 8 & 65280 | esi;
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            esi = eax;
            eax = eax << 0x18;
            edx = edx | esi >> 8 & 65280 | eax | Vffffffd0;
            esi = Vffffffe0;
            *esi = edx;
            *(esi + 4) = ecx;
            edx = *(ebx + 0x10) & 65535;
            ecx = edx;
            edx = edx >> 8;
            ecx = ecx << 8 | edx;
            *(Vffffffe0 + 8) = cx;
            esi = Vffffffe0 + 0x18;
            *(Vffffffe0 + 0xc) = esi;
            edi = ebx + 0x1c;
            esi = esi + L00428F50(esi, edi, Vffffffe8) + 1;
            edi = edi + Vffffffe8;
            *(Vffffffe0 + 0x10) = esi;
            eax = L00428F50(esi, edi, Vffffffe4);
            edi = edi + Vffffffe4;
            esi = esi + eax + 1;
            *(Vffffffe0 + 0x14) = esi;
            L00428F50(esi, edi, *(ebp - 0x68));
            edi = Vffffffe0;
            Vffffffb4 = esp;
            if(edi == 0) {
                L00429610(65538);
            }
            L00429A00(A8 + 0x94, edi);
L004145b3:
            ebx = ebx + Vffffffd8;
        } while(Vffffffdc >= 0x1c);
        goto L004145c0;
        L0042E3E0( & Vffffffe0);
        L004234F0(0, 0, 0);
        if(Vffffffa8 != 0) {
            (save)-1;
            ecx = *(ebp - 0x60);
            Vffffffa8();
        }
        esp = *(ebp - 0x4c);
        goto L004145b3;
    }
L004145c0:
    esi = *(Vfffffff0 + 0x24);
    edx = esi << 8 & 16711680;
    ecx = esi;
    edi = esi;
    edx = edx | ecx >> 0x18;
    edx = edx | edi >> 8 & 65280;
    edx = edx | esi << 0x18;
    if(edx >= Vffffffec) {
        edx = Vffffffec;
    }
    eax = *(Vfffffff0 + 0x28);
    ecx = eax << 8 & 16711680;
    edi = eax;
    ebx = eax;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | ebx >> 8 & 65280;
    ecx = ecx | eax << 0x18;
    if(ecx >= Vffffffec) {
        ecx = Vffffffec;
    }
    esi = ecx;
    if(ecx + edx <= A10) {
        eax = Vfffffff0;
        if(*(eax + 0x67) == 1 && ecx > 4) {
            ecx :: 65535;
            if(!(ebx = edx + eax)) {
                esi = 65535;
            }
            edi = L0042E350(ebx, esi);
            L0042E3E0(A8 + 0x278);
            *(A8 + 0x278) = edi;
            *(A8 + 0x27c) = esi;
            goto L0041469d;
        }
    }
    L0042E3E0(A8 + 0x278);
    *(A8 + 0x27c) = 0;
L0041469d:
    ecx = *(Vfffffff0 + 0x34);
    edx = ecx << 8 & 16711680;
    edi = ecx;
    esi = ecx;
    edx = edx | edi >> 0x18;
    edx = edx | esi >> 8 & 65280;
    edx = edx | ecx << 0x18;
    if(edx >= Vffffffec) {
        edx = Vffffffec;
    }
    eax = *(Vfffffff0 + 0x38);
    ebx = eax << 8 & 16711680;
    edi = eax;
    ecx = eax;
    ebx = ebx | edi >> 0x18;
    ebx = ebx | ecx >> 8 & 65280;
    eax = eax << 0x18;
    ebx = ebx | eax;
    if(ebx >= Vffffffec) {
        ebx = Vffffffec;
    }
    esi = ebx;
    if(ebx + edx <= A10) {
        eax = Vfffffff0;
        if(*(eax + 0x69) == 1) {
            if(ebx > 16384) {
                esi = 16384;
            }
            edi = esi != 0 ? L0042E350(Vfffffff0 + edx, esi) : 0;
            L0042E3E0(A8 + 0x294);
            *(A8 + 0x294) = edi;
            eax = A8;
            *(eax + 0x298) = esi;
        }
    }
    if(A14 != 0) {
        edi = *(Vfffffff0 + 0x44);
        ecx = edi << 8 & 16711680;
        edx = edi;
        eax = edi;
        ecx = ecx | edx >> 0x18;
        ecx = ecx | eax >> 8 & 65280;
        ecx = ecx | edi << 0x18;
        if(ecx >= Vffffffec) {
            ecx = Vffffffec;
        }
        ebx = *(Vfffffff0 + 0x48);
        edx = ebx << 8 & 16711680;
        eax = ebx;
        esi = ebx;
        eax = eax >> 0x18;
        edx = edx | eax;
        edx = edx | esi >> 8 & 65280;
        edx = edx | ebx << 0x18;
        if(edx >= Vffffffec) {
            edx = Vffffffec;
        }
        if(edx + ecx <= A10) {
            eax = Vfffffff0;
            if(*(eax + 0x6b) == 2) {
                eax = L0040BB40(A8, eax + ecx, edx);
            }
        }
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x004147F2 - 0x004147FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004147F2()
{



}

/*	Procedure: 0x00414800 - 0x00414897
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409390()
 */

L00414800(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    esp = esp - 0x24;
    *(ebp - 8) = 1048576;
    *(ebp - 0x14) = esp;
    eax = L0042B460(1, 0, 0, M0047e458, 1);
    *(ebp - 0xc) = eax;
    eax = L0042C600( *(ebp - 0xc), 0, 0, ebp - 8, 0);
    edx = ebp - 0xc;
    ebx = eax;
    L0042BD00(edx);
    goto L00414870;
    if(*(ebp - 0x20) != 0) {
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)(-1);
    }
    esp = *(ebp - 0x14);
    esp = ebp - 4;
    return 0;
L00414870:
    *(ebp - 0x10) = ebx;
    L00413D00(A8, ebx, *(ebp - 8), 1);
    ecx = ebp - 0x10;
    bl = al;
    eax = L0042E3E0(ecx);
    al = bl;
    esp = ebp - 4;
}

/*	Procedure: 0x00414898 - 0x0041489F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00414898()
{



}

/*	Procedure: 0x004148A0 - 0x00414C52
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00414C70()
 */

L004148A0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = 0x1238;
    L00434370();
    edi = ebp + -4676;
    L00434150(edi, 0x40);
    *edi = 1480870693;
    *(edi + 4) = 0x1000;
    edx = *(A8 + 0x26c);
    ebx = edx << 8 & 16711680;
    ebx = ebx | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *(edi + 0xc) = ebx | ecx >> 8 & 65280 | edx;
    esi = *(A8 + 0x270);
    ebx = esi << 8 & 16711680;
    ebx = ebx | esi >> 0x18;
    ecx = esi;
    esi = esi << 0x18;
    *(edi + 0x10) = ebx | ecx >> 8 & 65280 | esi;
    edx = *(A8 + 0x274);
    ebx = edx << 8 & 16711680;
    ebx = ebx | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *(edi + 0x14) = ebx | ecx >> 8 & 65280 | edx;
    esi = *(A8 + 0x260);
    ebx = esi << 8 & 16711680;
    ebx = ebx | esi >> 0x18;
    ebx = ebx | esi >> 8 & 65280;
    *(edi + 0x18) = ebx | esi << 0x18;
    edx = ( *(A8 + 0x280) & 65535 ^ 11177) & 65535;
    ebx = edx << 8;
    *(edi + 0x24) = ebx | edx >> 8;
    *(edi + 0x35) = *(A8 + 0xa0) & 0xff;
    *(edi + 0x36) = *(A8 + 0xe0) & 0xff;
    eax = A8;
    *(ebp + -572) = *(eax + 0x14);
    *(ebp + -576) = *(eax + 0x288);
    ecx = *(eax + 0x28c);
    *(ebp + -308) = ecx;
    *(ebp - 0x28) = 0;
    if(*(ebp + -308) > 0) {
        *(ebp + -304) = edi;
        *(ebp + -304) = *(ebp + -304) + 0x40;
        do {
            eax = *(ebp + -576);
            esi = *(eax + *(ebp - 0x28) * 4);
            eax = *(esi + 0x14);
            *(ebp + -300) = eax;
            if(*( *(ebp + -300)) != 0) {
                ebx = *(ebp + -304);
                *(edi + 0x34) = L00428EA0( *(esi + 0x18), ebx, 0xff);
                ebx = ebx + *(edi + 0x34);
                ebx = ebx + L00428EA0(A8 + 0xa0, ebx, 0xff);
                ebx = ebx + L00428EA0(A8 + 0xe0, ebx, 0xff);
                *(edi + 0x38) = L00428EA0( *(esi + 0x24), ebx, 0xff);
                ebx = ebx + *(edi + 0x38);
                *(edi + 0x39) = L00428EA0( *(esi + 0x28), ebx, 0xff);
                ebx = ebx + *(edi + 0x39);
                *(edi + 0x3a) = L00428EA0( *(esi + 0x2c), ebx, 0xff);
                ebx = ebx + *(edi + 0x3a);
                *(edi + 0x3b) = L00428EA0( *(esi + 0x30), ebx, 0xff);
                ebx = ebx + *(edi + 0x3b);
                *(edi + 0x3c) = L00428EA0( *(esi + 0x34), ebx, 0xff);
                ebx = ebx + *(edi + 0x3c);
                *(edi + 0x3d) = L00428EA0( *(esi + 0x38), ebx, 0xff);
                ebx = ebx + *(edi + 0x3d) - edi + 3 & -4;
                *(edi + 8) = -870394934;
                eax = L00434EA0(edi, ebx, -559038737);
                ecx = eax << 8 & 16711680;
                ecx = ecx | eax >> 0x18;
                ecx = ecx | eax >> 8 & 65280;
                *(edi + 8) = ecx | eax << 0x18;
                (save)0x3a;
                (restore)ecx;
                if(L00428E20( *(ebp + -300)) == 0) {
                    L004288C0(ebp + -296, *(ebp + -300));
                    L00428D50(ebp + -296, 0x3a);
                    L00428CD0(ebp + -296, 10800, 0);
                    *(ebp + -300) = ebp + -296;
                }
                *(ebp - 0x10) = esp;
                eax = L0042E310(ebx);
                *(ebp + -568) = eax;
                L004177D0( *(ebp + -568), edi, ebx);
                L00433580( *(ebp + -572), *(ebp + -300) + 1, *( *(ebp + -300)) & 0xff, ebp + -568, ebx, 0);
            }
L00414c38:
            eax = *(ebp + -308);
            *(ebp - 0x28) = *(ebp - 0x28) + 1;
        } while(*(ebp - 0x28) < eax);
        goto L00414c4b;
        eax = *(ebp - 0x18);
        *(ebp + -580) = eax;
        L004288C0(ebp + -564, "\tTracker: ");
        L00428B20(ebp + -564, *(esi + 0x14), 0x40);
        L00408CB0(A8, *(ebp + -580), ebp + -564);
        if(*(ebp - 0x1c) != 0) {
            ecx = *(ebp - 0x24);
            *(ebp - 0x1c)(-1);
        }
        esp = *(ebp - 0x10);
        goto L00414c38;
    }
L00414c4b:
}

/*	Procedure: 0x00414C53 - 0x00414C5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00414C53()
{



}

/*	Procedure: 0x00414C70 - 0x00414CAE
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00408F30()
 *		L00412EE0()
 */

L00414C70(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x284) != 0) {
        L004148A0(A8);
        eax = L0042F1C0( *(A8 + 0x18), 400000, 1);
    } else {
        eax = L0042F250( *(A8 + 0x18));
    }
}

/*	Procedure: 0x00414CAF - 0x00414CAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00414CAF()
{



}

/*	Procedure: 0x00414CB0 - 0x00414DC9
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00402D10()
 *		L00405E70()
 */

L00414CB0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = Ac;
    esp = esp - 0x1c;
    if(ebx == 0) {
        L00429610(65538);
    }
    edx = *(ebx + 0xc);
    ecx = edx != 0 ? *edx & 0xff : 0;
    esi = *(ebx + 0x10);
    eax = esi != 0 ? *esi & 0xff : 0;
    esi = *(ebx + 0x14);
    edx = esi != 0 ? *esi & 0xff : 0;
    eax = L0042E310(eax + ecx + 0x1b + edx);
    ecx = eax;
    *(ebp - 0x24) = eax;
    *eax = *ebx;
    *(eax + 4) = *(ebx + 4);
    eax = *(ebp - 0x24);
    *(eax + 8) = *(ebx + 8) & 65535;
    *(ecx + 0xc) = *(ebx + 0xc);
    *(ecx + 0x10) = *(ebx + 0x10);
    *(ecx + 0x14) = *(ebx + 0x14);
    esi = *(ebp - 0x24) + 0x18;
    *( *(ebp - 0x24) + 0xc) = esi;
    esi = esi + L004288C0(esi, *(ebx + 0xc)) + 1;
    *( *(ebp - 0x24) + 0x10) = esi;
    esi = esi + L004288C0(esi, *(ebx + 0x10)) + 1;
    *( *(ebp - 0x24) + 0x14) = esi;
    L004288C0(esi, *(ebx + 0x14));
    ebx = *(ebp - 0x24);
    *(ebp - 0xc) = esp;
    if(ebx == 0) {
        L00429610(65538);
    }
    eax = L00429A00(A8 + 0x94, ebx);
    goto L00414dc3;
    L0042E3E0(ebp - 0x24);
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x18) != 0) {
        ecx = *(ebp - 0x20);
        *(ebp - 0x18)(-1);
    }
    esp = *(ebp - 0xc);
L00414dc3:
}

/*	Procedure: 0x00414DCA - 0x00414DCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00414DCA()
{



}

/*	Procedure: 0x00414DD0 - 0x00414EDC
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00414DD0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x14;
    ebx = *(ebp + 8);
    eax = L004348B0(0x3a, *(ebp + 0xc), *(ebp + 0x10));
    if(eax != 0) {
        *(ebp + 0x10) = eax - *(ebp + 0xc);
    }
    if(*(ebp + 0x10) == 9 && L00434380( *(ebp + 0xc), "127.0.0.1", 9) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    *(ebp - 0x14) = L0042EF50();
    *(ebp - 0x18) = edx;
    eax = *(ebx + 0x98);
    edi = *(ebx + 0x94);
    esi = 0;
    *(ebp - 0x1c) = eax;
    if(eax > 0) {
        do {
            eax = *(edi + esi * 4);
            ecx = eax;
            *(ebp - 0x20) = eax;
            edx = *ecx;
            ecx = *(ecx + 4);
            if(!(eax = edx | ecx) && ecx <= *(ebp - 0x18)) {
                != ? 0x414e63 : ;
                if(edx < *(ebp - 0x14)) {
                    goto L00414e63;
                }
            }
            edx = *( *(ebp - 0x20) + 0xc);
            ecx = *edx & 0xff;
            if(L00428330( *(ebp + 0xc), *(ebp + 0x10), edx + 1, ecx) != 0) {
                goto L00414eb3;
            }
            esi = esi + 1;
            continue;
L00414e63:
            L00429C40(ebx + 0x94, esi);
            L0042E3E0(ebp - 0x20);
            eax = *(ebx + 0x98);
            edi = *(ebx + 0x94);
            *(ebp - 0x1c) = eax;
        } while(esi < *(ebp - 0x1c));
        goto L00414ed3;
L00414eb3:
        eax = *( *(ebp - 0x20) + 8) & 65535;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        al = 0;
        return;
    }
L00414ed3:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return 0;
}

/*	Procedure: 0x00414EDD - 0x00414EDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00414EDD()
{



}

/*	Procedure: 0x00414EE0 - 0x00414F6F
 *	Argument size: 4
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L00412E50()
 */

L00414EE0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;



    Vffffffec = L0042EF50();
    *(ebp - 0x18) = edx;
    eax = *(A8 + 0x98);
    edx = *(A8 + 0x94);
    esi = 0;
    *(ebp - 0x20) = eax;
    if(eax > 0) {
        do {
            ecx = *(edx + esi * 4);
            eax = ecx;
            *(ebp - 0x1c) = ecx;
            edi = *(eax + 4);
            ecx = *eax;
            if(!(eax = ecx | edi) && edi <= *(ebp - 0x18)) {
                != ? 0x414f2f : ;
                if(ecx < Vffffffec) {
                    goto L00414f2f;
                }
            }
            esi = esi + 1;
            continue;
L00414f2f:
            L00429C40(A8 + 0x94, esi);
            L0042E3E0(ebp - 0x1c);
            eax = *(A8 + 0x98);
            edx = *(A8 + 0x94);
            *(ebp - 0x20) = eax;
        } while(esi < *(ebp - 0x20));
    }
}

/*	Procedure: 0x00414F70 - 0x00414F9E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040853A()
 */

L00414F70(A8)
/* unknown */ void  A8;
{



    ecx = *(A8 + 0x70) & 0xff;
    if(!(ecx & 4)) {
        (save)0x11;
    } else {
        if(ecx & 2) {
            goto L00414f96;
        }
        (save)0x12;
    }
    L0042FE40();
    (restore)ecx;
L00414f96:
    return L00438BF0();
}

/*	Procedure: 0x00414F9F - 0x00414F9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00414F9F()
{



}

/*	Procedure: 0x00414FA0 - 0x0041511F
 *	Argument size: 16
 *	Local size: 1032
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00414FA0(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    *(ebp + -1044) = ecx;
    esi = A14;
    if(!(( *(A8 + 0x50) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    if(esi < 4) {
        L00429610(65538);
    }
    eax = A10;
    Vfffffff0 = eax;
    ecx = *Vfffffff0 & 65535;
    ebx = ecx << 8;
    if(!((ebx | ecx >> 8) & 65535 & 7)) {
        L00429610(65538);
    }
    *( *(ebp + -1044) + 0x70) = bl;
    ebx = esi - 4;
    if(ebx >= 0xff) {
        ebx = 0xff;
    }
    edi = ebp + -1040;
    L00434150(edi, 0x14);
    edx = *(A8 + 0x30) & 65535;
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    *edi = eax | edx << 0x18;
    *(edi + 0xc) = 0x400;
    *(edi + 0x12) = bl;
    *(edi + 0x13) = *(A8 + 0x98) & 0xff;
    esi = edi + 0x14;
    L004342A0(esi, Vfffffff0 + 4, ebx);
    esi = esi + ebx;
    ecx = *(ebp + -1044);
    L00401730(0x97, edi, esi + L00428EA0(A8 + 0x98, esi, 0xff) - edi, 0);
    L00432760( *(ebp + -1044) + 8);
    L00432760( *(ebp + -1044) + 0xc);
    L0042F0B0(0x414f70, *(ebp + -1044), 0x1388, 0);
    return L00416790( *(ebp + -1044), A8, 0xae, 0, 0, 0, 0);
}

/*	Procedure: 0x00415120 - 0x0041534D
 *	Argument size: 16
 *	Local size: 1076
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00415120(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    *(ebp + -1088) = ecx;
    Vfffffff0 = 0x47052c;
    Vffffffd4 = "0Upgrading server software, be back in 5 seconds!";
    edi = "\rKDXServer.exe";
    esi = 0x470544;
    if(( *(A8 + 0x50) & 0xff) >> 7 & 1 || !(( *(A8 + 0x52) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    L0042BED0(1, 0, 0, edi, 0);
    if(al == 0) {
        L00429610(65548);
    }
    esi = L0042B5E0(1, 0, 0, esi, 2);
    Vffffffcc = esi;
    Vffffffec = esp;
    edi = L0042B460(Vffffffcc, 0, 0, edi, 1);
    goto L00415207;
    eax = L0042B5E0(esi, 0, 0, 0x470580, 1);
    Vffffffd0 = eax;
    eax = L0042B460(Vffffffd0, 0, 0, edi, 1);
    edi = eax;
    L0042BD00( & Vffffffd0);
    if(Vffffffe0 != 0) {
        (save)-1;
        ecx = Vffffffd8;
        Vffffffe0();
    }
    esp = *(ebp - 0x14);
L00415207:
    Vffffffc4 = edi;
    eax = L0042B070(1, 0, 0, Vfffffff0, 1);
    Vfffffff0 = eax;
    Vffffffc8 = Vfffffff0;
    edi = ebp + -1084;
    L00434150(edi, 0x14);
    edx = *(A8 + 0x30) & 65535;
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    *edi = eax | edx << 0x18;
    *(edi + 0xc) = 0x400;
    *(edi + 0x12) = *Vffffffd4 & 0xff;
    *(edi + 0x13) = *(A8 + 0x98) & 0xff;
    esi = edi + 0x14;
    esi = esi + L00428EA0(Vffffffd4, esi, 0xff);
    ecx = *(ebp + -1088);
    L00401730(0x97, edi, esi + L00428EA0(A8 + 0x98, esi, 0xff) - edi, 0);
    L00432760( *(ebp + -1088) + 8);
    L00432760( *(ebp + -1088) + 0xc);
    *( *(ebp + -1088) + 0x70) = 1;
    L0042F0B0(0x414f70, *(ebp + -1088), 0xd48, 0);
    L00416790( *(ebp + -1088), A8, 0xaf, 0, 0, 0, 0);
    L0042DF80(Vfffffff0, 0);
    L0042BD00( & Vffffffc8);
    L0042BD00( & Vffffffc4);
    return L0042BD00( & Vffffffcc);
}

/*	Procedure: 0x0041534E - 0x0041534F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041534E()
{



}

/*	Procedure: 0x00415350 - 0x00415373
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00415380()
 */

L00415350()
{



    return L00419A30(0xc0, 1937010279, 0x47e460, 6, 0, 0);
}

/*	Procedure: 0x00415374 - 0x0041537F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00415374()
{



}

/*	Procedure: 0x00415380 - 0x004154E1
 *	Argument size: 4
 *	Local size: 284
 *	Save regs size: 4
 *	Called by:
 *		L00408B5A()
 */

L00415380(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffee5;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff8;



    ebx = A8;
    ecx = *(ebx + 4);
    *(ebp + -288) = ecx;
    if(ecx != 0) {
        ebx = ecx;
        return L0041D1C0( *(ebx + 0xc));
    }
    L0040D7E0(ebx, & Vfffffee4);
    eax = L00415350();
    *(ebp + -288) = eax;
    Vfffffff8 = esp;
    L00443CD0( *( *(eax + 0x34) + 0x2c), *(ebx + 0x260), 0);
    eax = *(ebx + 0x264);
    if(eax != 0) {
        L00443CD0( *( *( *(ebp + -288) + 0x38) + 0x2c), eax, 0);
    }
    ecx = *(ebx + 0x268);
    if(ecx != 0) {
        L00443CD0( *( *( *(ebp + -288) + 0x3c) + 0x2c), ecx, 0);
    }
    if(Vfffffee4 != 0) {
        L00428970( *(ebp + -288) + 0x40, & Vfffffee4, 0x7f);
        L00443480( *( *( *(ebp + -288) + 0x28) + 0x2c), & Vfffffee5, Vfffffee4 & 0xff);
        L00446C60( *( *( *(ebp + -288) + 0x2c) + 0x28));
        L00446C60( *( *( *(ebp + -288) + 0x30) + 0x28));
    }
    eax = L0041CBA0( *( *(ebp + -288) + 0xc), 1);
    goto L004154d3;
    L004192E0(ebp + -288);
    eax = L004234F0(0, 0, 0);
    if(Vffffffec != 0) {
        ecx = Vffffffe4;
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L004154d3:
    *(ebx + 4) = *(ebp + -288);
    esp = ebp - 4;
}

/*	Procedure: 0x004154E2 - 0x004154EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004154E2()
{



}

/*	Procedure: 0x004154F0 - 0x00415780
 *	Argument size: 8
 *	Local size: 152
 *	Save regs size: 12
 *	Called by:
 *		L00408B5A()
 */

L004154F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffff68;
	/* unknown */ void  Vffffff6c;
	/* unknown */ void  Vffffff70;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff75;



    ebx = Ac;
    edi = & Vffffff75;
    L00443550( *( *(ebx + 0x28) + 0x2c), edi, 0x7f);
    Vffffff74 = al;
    L00429190( & Vffffff74);
    L00427DA0(0x470588, edi, Vffffff74 & 0xff, edi, 0x7f);
    Vffffff74 = al;
    L00427C80(edi, Vffffff74 & 0xff, edi, 0x7f);
    Vffffff74 = al;
    if(Vffffff74 == 0) {
        ebx = 0x47058c;
    } else {
        eax = L00446BA0( *( *(ebx + 0x2c) + 0x28), & Vffffff68);
        *(ebp + -160) = eax;
        eax = L00446BA0( *( *(ebx + 0x30) + 0x28), ebp + -164);
        ecx = *(ebx + 0x2c);
        edi = eax;
        L00446CF0( *(ecx + 0x28));
        ecx = *(ebp + -164);
        *(ebp + -153) = 0;
        if(Vffffff68 == ecx) {
            L00434380( *(ebp + -160), edi, ecx);
            if(al != 0) {
                goto L004155f0;
            }
        }
        ebx = 0x4705a4;
        goto L00415766;
L004155f0:
        if(*(ebp + -153) != 0 && Vffffff68 == 0) {
            ebx = 0x4705bc;
        } else {
            eax = L00443C90( *( *(ebx + 0x34) + 0x2c), 0);
            Vffffff70 = eax;
            if(eax < 1 || eax >= 65535) {
                ebx = "5You must enter a port number in the range 1 to 65534.";
            } else {
                eax = L00443C90( *( *(ebx + 0x38) + 0x2c), 0);
                Vffffff6c = eax;
                if(eax >= 65535) {
                    ebx = "3Alternate port number must in the range 1 to 65534.7File Transfer port number must in the range 1 to 65534.2Main and alternate port numbers must be different.";
                } else {
                    (save)0;
                    edi = L00443C90( *( *(ebx + 0x3c) + 0x2c));
                    (restore)ecx;
                    if(edi >= 65535) {
                        ebx = "7File Transfer port number must in the range 1 to 65534.2Main and alternate port numbers must be different.";
                    } else {
                        if(Vffffff70 == Vffffff6c) {
                            ebx = "2Main and alternate port numbers must be different.";
                        } else {
                            if(edi == Vffffff70 || edi == Vffffff6c) {
                                edi = 0;
                            }
                            *(A8 + 0x71) = 1;
                            if(*(ebx + 0x40) != 0) {
                                if(*(ebp + -153) == 0) {
                                    (save) & Vffffff74;
                                    L00428D80(ebx + 0x40);
                                    (restore)ecx;
                                    if(al != 0) {
                                        goto L00415733;
                                    }
                                }
                                ecx = *(ebp + -153) & 0xff;
                                L0040D600(A8, ebx + 0x40, & Vffffff74, *(ebp + -160), Vffffff68, ecx);
                            } else {
                                L0040D880(A8, & Vffffff74, *(ebp + -160), Vffffff68);
                            }
                            ecx = A8;
                            L0040C970();
L00415733:
                            L00412B90(A8, Vffffff70, Vffffff6c, edi);
                            L00413B90(A8);
                            *(A8 + 0x71) = 0;
                            return L004192E0(A8 + 4);
                        }
                    }
                }
            }
        }
    }
L00415766:
    eax = L00439CA0(1, 1, 0, ebx, 0, 0);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00415781 - 0x0041578F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00415781()
{



}

/*	Procedure: 0x00415790 - 0x004157A3
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408B5A()
 */

L00415790(A8)
/* unknown */ void  A8;
{



    return L004192E0(A8 + 4);
}

/*	Procedure: 0x004157A4 - 0x004157AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004157A4()
{



}

/*	Procedure: 0x004157B0 - 0x004159C9
 *	Argument size: 16
 *	Local size: 660
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L004157B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffff60;
	/* unknown */ void  Vffffff64;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    ebx = ecx;
    if(!(( *(A8 + 0x4f) & 0xff) >> 2 & 1)) {
        L00429610(65556);
    }
    edi = ebp + -672;
    L00434150(edi, 0x30);
    esi = *(ebx + 0x7c);
    eax = *(ebx + 0x78);
    ecx = esi << 8;
    edx = 0;
    ecx = ecx & 16711680;
    ecx = ecx | esi >> 0x18;
    edx = esi;
    esi = esi << 0x18;
    *(edi + 0x10) = ecx | edx >> 8 & 65280 | esi;
    ecx = eax << 8 & 16711680;
    edx = eax;
    esi = eax;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    *(edi + 0x14) = ecx | eax << 0x18;
    eax = L0042EF50();
    Vffffffec = eax;
    esi = Vffffffec;
    Vffffffe4 = edx;
    Vffffffe8 = edx;
    eax = L0042EFD0() * 0x3e8;
    if(eax < 0) {
        ecx = 0;
        esi = esi - ~eax;
        asm("sbb [ebp-0x18],ecx");
    } else {
        edx = 0;
        esi = esi + eax;
        asm("adc [ebp-0x18],edx");
    }
    eax = Vffffffe8;
    edx = eax << 8 & 16711680;
    ecx = 0;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    *(edi + 0x18) = edx | ecx >> 8 & 65280 | eax;
    ecx = esi << 8 & 16711680;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    *(edi + 0x1c) = ecx | esi << 0x18;
    eax = Vffffffec - *(ebx + 0x78);
    edx = Vffffffe4;
    asm("sbb edx,[ebx+0x7c]");
    eax = L004357C0(eax, edx, 0x3e8, 0);
    esi = eax;
    eax = eax << 8 & 16711680;
    ecx = esi;
    edx = esi;
    eax = eax | ecx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    *(edi + 0x20) = eax | esi << 0x18;
    eax = L0042FF90( & Vffffff60, & Vffffff64);
    *(edi + 0x2c) = Vffffff64 & 0xff;
    *(edi + 0x24) = Vffffff60 << 8 & 16711680 | Vffffff60 >> 0x18 | Vffffff60 >> 8 & 65280 | Vffffff60 << 0x18;
    esi = eax << 8 & 16711680;
    edx = eax;
    ebx = eax;
    esi = esi | edx >> 0x18;
    esi = esi | ebx >> 8 & 65280;
    *(edi + 0x28) = esi | eax << 0x18;
    ecx = edi + 0x30;
    edx = ebp + -672;
    return L00431A10( *(A8 + 8), 0x72, Ac, edx, L00428EA0( & Vffffff64, ecx, 0x7f) + 0x30);
}

/*	Procedure: 0x004159CA - 0x004159CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004159CA()
{



}

/*	Procedure: 0x004159D0 - 0x00415A59
 *	Argument size: 0
 *	Local size: 36
 *	Save regs size: 4
 *	Called by:
 *		L00409390()
 */

L004159D0()
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;



    ebx = ecx;
    Vfffffff8 = 0;
    Vffffffec = esp;
    eax = L0042B460(1, 0, 0, M0047e490, 1);
    Vfffffff0 = eax;
    Vfffffff4 = 268435456;
    eax = L0042C600(Vfffffff0, 0, 0, & Vfffffff4, 0);
    Vfffffff8 = eax;
    *(ebx + 0x84) = L00447050(Vfffffff8, Vfffffff4, 0);
    eax = L0042BD00( & Vfffffff0);
    goto L00415a54;
    eax = L0042E3E0( & Vfffffff8);
    if(Vffffffe0 != 0) {
        ecx = *(ebp - 0x28);
        eax = Vffffffe0(-1);
    }
    esp = *(ebp - 0x14);
L00415a54:
}

/*	Procedure: 0x00415A5A - 0x00415A5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00415A5A()
{



}

/*	Procedure: 0x00415A60 - 0x00415B9C
 *	Argument size: 16
 *	Local size: 28
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00415A60(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A8;
    esi = ecx;
    if(!(( *(ebx + 0x4f) & 0xff) >> 2 & 1)) {
        eax = L00429610(65556);
    }
    if(A14 >= 4) {
        edx = *A10;
        edi = edx << 8 & 16711680;
        ecx = edx;
        eax = edx;
        edi = edi | ecx >> 0x18;
        eax = eax >> 8 & 65280;
        edi = edi | eax;
        edi = edi | edx << 0x18;
    } else {
        edi = 0;
    }
    if(!(edi & 1)) {
        if(*(esi + 0x8c) == ebx) {
            ebx = esi + 0x88;
            eax = L00447170(ebx);
            *(esi + 0x8c) = 0;
        }
        return;
    }
    if(*(esi + 0x88) != 0) {
        L00429610(196725);
    }
    eax = L00447050(0, 0, 4);
    Vfffffff0 = eax;
    Vffffffec = esp;
    L00447780(Vfffffff0, *(esi + 0x54), 0x415ba0, esi);
    ecx = esi;
    L004011C0(ebx, 0x470af4);
    goto L00415b63;
    L00447170( & Vfffffff0);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x20) != 0) {
        (save)-1;
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)();
    }
    esp = *(ebp - 0x14);
L00415b63:
    *(esi + 0x88) = Vfffffff0;
    *(esi + 0x8c) = ebx;
    *(esi + 0x90) = 0;
    eax = L00416790(esi, ebx, 0x1c2, 0, 0, 0, 0);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00415B9D - 0x00415DDB
 *	Argument size: 4
 *	Local size: 76
 *	Save regs size: 12
 */

L00415B9D(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A8;
    esi = *(edi + 0x88);
    ebx = *(edi + 0x8c);
    Vffffffe8 = esp;
    if(L004479C0(esi) == 0) {
        eax = L0042B600(1, 0, 0, M0047e490, 0x82, M0047e440);
        Vffffffb8 = eax;
        *(ebp - 0x54) = Vffffffb8;
        L0042CA40(Vffffffb8, L00447DB0(esi, ebp - 0x50), *(ebp - 0x50), 0);
        L00447170(edi + 0x84);
        *(edi + 0x84) = esi;
        *(edi + 0x88) = 0;
        *(edi + 0x8c) = 0;
        if(ebx != 0) {
            L00447D00(esi, 0, ebp - 0x58, 0, 0);
            ecx = *(ebp - 0x58) << 8 & 16711680;
            esi = *(ebp - 0x58);
            edx = *(ebp - 0x58);
            ecx = ecx | esi >> 0x18;
            edx = edx >> 8 & 65280;
            eax = *(ebp - 0x58);
            ecx = ecx | edx;
            Vfffffff0 = ecx | eax << 0x18;
            Vffffffec = 16777216;
            L00431A10( *(ebx + 8), 0x1c3, 0, & Vffffffec, 8);
        }
        esi = ebp - 0x54;
        return L0042BD00(esi);
    }
    if(ebx != 0 && L00447D00(esi, 0, ebp - 0x58, 0, 0) != 0) {
        eax = L0042EF00();
        if(eax - *(edi + 0x90) > 0x7d0) {
            *(edi + 0x90) = eax;
            Vffffffec = 0;
            esi = *(ebp - 0x58);
            eax = *(ebp - 0x58);
            edx = *(ebp - 0x58);
            ecx = *(ebp - 0x58);
            esi = esi << 8 & 16711680;
            esi = esi | eax >> 0x18;
            esi = esi | edx >> 8 & 65280;
            Vfffffff0 = esi | ecx << 0x18;
            eax = L00431A10( *(ebx + 8), 0x1c3, 0, & Vffffffec, 8);
            goto L00415dd4;
            Vffffffb4 = Vffffffe0;
            eax = L00447170(edi + 0x88);
            *(edi + 0x8c) = 0;
            if(ebx != 0) {
                Vffffffd0 = esp;
                Vffffffec = 33554432;
                ecx = *Vffffffb4;
                edi = ecx << 8 & 16711680;
                eax = ecx;
                esi = ecx;
                edi = edi | eax >> 0x18;
                edi = edi | esi >> 8 & 65280;
                edi = edi | ecx << 0x18;
                Vfffffff0 = edi;
                eax = L00431A10( *(ebx + 8), 0x1c3, 0, & Vffffffec, 8);
                goto L00415dc3;
                if(Vffffffc4 != 0) {
                    (save)-1;
                    ecx = Vffffffbc;
                    Vffffffc4();
                }
                esp = *(ebp - 0x30);
            }
L00415dc3:
            if(Vffffffdc != 0) {
                ecx = Vffffffd4;
                eax = Vffffffdc(-1);
            }
            esp = *(ebp - 0x18);
        }
    }
L00415dd4:
    esp = ebp - 0xc;
}

/*	Procedure: 0x00415DDC - 0x00415DDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00415DDC()
{



}

/*	Procedure: 0x00415DE0 - 0x00415FF1
 *	Argument size: 4
 *	Local size: 780
 *	Save regs size: 12
 *	Called by:
 *		L00416000()
 */

L00415DE0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffdf0;
	/* unknown */ void  Vfffffdf1;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffef4;
	/* unknown */ void  Vfffffef5;



    ebx = A8;
    esi = ecx;
    if(!(( *(ebx + 0x4b) & 0xff) >> 7 & 1)) {
        return 0;
    }
    Vfffffef0 = *(esi + 0x84);
    if(!( *(ebx + 0x4a) & 0xff & 1)) {
        edi = L00430420( *(ebx + 8));
        eax = *edi & 0xff;
        *(ebp + -788) = eax;
        eax = L00448580(Vfffffef0, 0, edi + 1, eax, 1);
        if(eax == 0) {
            ecx = edi + 1;
            L00428F50(ebp + -784, ecx, *(ebp + -788));
            L00428A30(ebp + -784, 0x47e494);
            ecx = *(ebp + -784) & 0xff;
            eax = L00448580(Vfffffef0, 0, ebp + -783, ecx, 1);
        }
        if(eax != 0) {
            esp = ebp - 0xc;
            return;
        }
        esi = *(esi + 0x64);
        ebx = *(ebx + 0x38) & 0xff;
        (save)ebx;
        L00435AE0(esi);
        (restore)ecx;
        if(al != 0) {
            esi = L00436310(esi, ebx, ebp + -792);
            if(*(ebp + -792) >= 0x38) {
                ebx = *(esi + 0x34) & 0xff;
                if(*(ebp + -792) >= ebx + 0x38) {
                    eax = L00448580(Vfffffef0, 0, esi + 0x38, ebx, 1);
                    if(eax == 0) {
                        eax = esi + 0x38;
                        L00428F50( & Vfffffef4, eax, ebx);
                        L00428A30( & Vfffffef4, 0x47e494);
                        eax = L00448580(Vfffffef0, 0, & Vfffffef5, Vfffffef4 & 0xff, 1);
                    }
                    if(eax != 0) {
                        esp = ebp - 0xc;
                        return;
                    }
                }
            }
        }
    }
    eax = L00448580(Vfffffef0, 0, "Default", 7, 1);
    if(eax == 0) {
        L00428F50( & Vfffffdf0, "Default", 7);
        L00428A30( & Vfffffdf0, 0x47e494);
        eax = L00448580(Vfffffef0, 0, & Vfffffdf1, Vfffffdf0 & 0xff, 1);
    }
    if(eax != 0) {
        esp = ebp - 0xc;
        return;
    }
    esp = ebp - 0xc;
    return eax | -1;
}

/*	Procedure: 0x00415FF2 - 0x00415FFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00415FF2()
{



}

/*	Procedure: 0x00416000 - 0x004166D9
 *	Argument size: 16
 *	Local size: 1132
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00416000(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V464;



    esp = esp & -8;
    ebx = & V464;
    edi = A14;
    *(ebx + -1020) = ecx;
    if(edi < 0x58) {
        L00429610(65538);
    }
    ecx = *( *(ebx + -1020) + 0x84);
    esi = A10;
    *(ebx + -1032) = ecx;
    if(ecx == 0) {
        L00429610(6553601);
    }
    L00434150(ebx + -1016, 0x290);
    eax = *(esi + 0x54) & 0xff;
    *(ebx - 0x60) = eax;
    if(eax < 3 || edi < eax + 0x58) {
        L00429610(65538);
    }
    ecx = ebx + -940;
    L00428F50(ecx, esi + 0x58, *(ebx - 0x60));
    *(ebx + -944) = 0x64;
    ecx = *(ebx + -1020);
    *(ebx + -1120) = L00415DE0(A8);
    edx = ebx + -1040;
    eax = L00448690( *(ebx + -1032), *(ebx + -1120), ebx + -1016, edx);
    *(ebx + -1024) = eax;
    if(eax == 0) {
        L00431A10( *(A8 + 8), 0x1c5, Ac, 0, 0);
        return L00416790( *(ebx + -1020), A8, 0x1c4, 0, ebx + -940, 0, 0);
    }
    eax = *(ebx + -1024);
    *(ebx + -1128) = eax;
    *(ebx - 8) = ebx + -352;
    *(ebx - 4) = 0;
    *(ebx + -1048) = 0;
    *(ebx + -1044) = 0;
    *(ebx + -1108) = 0x1000;
    eax = L0042E310(0x1000);
    *(ebx - 0x44) = eax;
    *(ebx + -1116) = *(ebx - 0x44);
    *(ebx - 0x50) = 4;
    *(ebx - 0x48) = *(ebx + -1040) * 0x138 + 0xfff;
    *(ebx - 0x48) = *(ebx - 0x48) & -4096;
    eax = L0042E310( *(ebx - 0x48));
    *(ebx - 0x54) = eax;
    *(ebx + -1124) = *(ebx - 0x54);
    eax = *(ebx + -1040);
    *(ebx - 0x5c) = eax;
    if(!( *(ebx + -1040) = *(ebx + -1040) - 1)) {
        *(ebx - 0x60) = ebx + -351;
        do {
            ecx = *( *(ebx + -1024));
            *(ebx + -1036) = ecx;
            *(ebx + -1024) = *(ebx + -1024) + 4;
            *(ebx - 0x4c) = 2;
            esi = *(ebx - 0x44);
            *(ebx - 0xc) = esi + 4;
            L00447FF0( *(ebx + -1032), ecx, ebx - 0x40, 0);
            if(al == 0) {
                L00429610(65537);
            }
            *(esi + 2) = 0;
            *(esi + 3) = 0;
            *(ebx - 0x4c) = *(ebx - 0x4c) + ( *(esi + 4) & 0xff) + 3;
            for(*(ebx + -1028) = 1; 1; *(ebx + -1028) = *(ebx + -1028) + 1) {
                if(*(ebx + -1108) < *(ebx - 0x4c) + 0x102) {
                    *(ebx + -1108) = *(ebx + -1108) + 0x1000;
                    eax = L0042E410( *(ebx - 0x44), *(ebx + -1108));
                    *(ebx - 0x44) = eax;
                    *(ebx + -1116) = *(ebx - 0x44);
                }
                esi = *(ebx - 0x44) + *(ebx - 0x4c);
                eax = esi + 2;
                *(ebx + -1052) = eax;
                L004483B0( *(ebx + -1032), *(ebx + -1036), ebx + -1036, ebx + -1104);
                if(al == 0 || *(ebx + -1036) == *(ebx + -1120)) {
                    break;
                }
                *esi = 0;
                *(esi + 1) = 0;
                *(ebx - 0x4c) = *(ebx - 0x4c) + ( *(esi + 2) & 0xff) + 3;
            }
            L00437700( *(ebx - 0x60), *(ebx + -352) & 0xff);
            eax = al & 0xff;
            *(ebx - 0x58) = eax;
            if(eax != 0) {
                *(ebx + -352) = 0;
            }
            eax = *(ebx - 0x50);
            *(ebx - 0x50) = *(ebx - 0x50) + 0x38;
            *(ebx + -1112) = eax;
            eax = *(ebx - 0x4c);
            *(ebx - 0x50) = *(ebx - 0x50) + ( *(ebx + -352) & 0xff);
            *(ebx - 0x50) = *(ebx - 0x50) + eax;
            *(ebx - 0x50) = *(ebx - 0x50) + 3;
            *(ebx - 0x50) = *(ebx - 0x50) & -4;
            eax = *(ebx - 0x50);
            if(*(ebx - 0x50) > *(ebx - 0x48)) {
                *(ebx - 0x48) = *(ebx - 0x50);
                *(ebx - 0x48) = *(ebx - 0x48) + 8191;
                *(ebx - 0x48) = *(ebx - 0x48) & -4096;
                eax = L0042E410( *(ebx - 0x54), *(ebx - 0x48));
                *(ebx - 0x54) = eax;
                *(ebx + -1124) = *(ebx - 0x54);
            }
            esi = *(ebx - 0x3c);
            ecx = *(ebx - 0x40);
            eax = *(ebx - 0x54);
            edx = esi;
            *(ebx + -356) = eax;
            *(ebx + -356) = *(ebx + -356) + *(ebx + -1112);
            edx = edx << 8;
            edi = 0;
            edx = edx & 16711680;
            edx = edx | esi >> 0x18;
            eax = esi;
            esi = esi << 0x18;
            edx = edx | eax >> 8 & 65280 | esi;
            edi = ecx;
            *( *(ebx + -356)) = edx;
            edi = edi << 8 & 16711680;
            edi = edi | ecx >> 0x18;
            eax = ecx;
            ecx = ecx << 0x18;
            edi = edi | eax >> 8 & 65280 | ecx;
            *( *(ebx + -356) + 4) = edi;
            edi = *(ebx - 0x34);
            edx = *(ebx - 0x38);
            ecx = edi << 8;
            esi = 0;
            ecx = ecx & 16711680;
            ecx = ecx | edi >> 0x18;
            eax = edi;
            edi = edi << 0x18;
            ecx = ecx | eax >> 8 & 65280 | edi;
            *( *(ebx + -356) + 8) = ecx;
            esi = edx << 8 & 16711680;
            esi = esi | edx >> 0x18;
            eax = *(ebx + -356);
            edi = edx;
            edx = edx << 0x18;
            *(eax + 0xc) = esi | edi >> 8 & 65280 | edx;
            eax = *(ebx - 0x2c);
            esi = *(ebx - 0x30);
            edx = eax << 8;
            edi = 0;
            edx = edx & 16711680;
            edx = edx | eax >> 0x18;
            edi = eax;
            eax = eax << 0x18;
            edx = edx | edi >> 8 & 65280 | eax;
            *( *(ebx + -356) + 0x10) = edx;
            ecx = esi << 8 & 16711680;
            ecx = ecx | esi >> 0x18;
            eax = esi;
            esi = esi << 0x18;
            ecx = ecx | eax >> 8 & 65280 | esi;
            *( *(ebx + -356) + 0x14) = ecx;
            ecx = *(ebx - 0x4c);
            eax = *(ebx + -356);
            edi = ecx << 8 & 16711680;
            edi = edi | ecx >> 0x18;
            esi = ecx;
            ecx = ecx << 0x18;
            *(eax + 0x18) = edi | esi >> 8 & 65280 | ecx;
            *( *(ebx + -356) + 0x1c) = 0;
            eax = *(ebx - 0x20);
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            edx = edx | ecx >> 8 & 65280 | eax;
            *( *(ebx + -356) + 0x20) = edx;
            *( *(ebx + -356) + 0x24) = 0;
            *( *(ebx + -356) + 0x28) = 0;
            *( *(ebx + -356) + 0x2c) = 0;
            edx = *(ebx - 0x10) & 65535;
            eax = *(ebx + -356);
            esi = edx << 8;
            esi = esi | edx >> 8;
            *(eax + 0x2e) = si;
            *( *(ebx + -356) + 0x30) = 0;
            *( *(ebx + -356) + 0x32) = 0;
            eax = *(ebx + -356);
            cl = *(ebx - 0x58);
            *(eax + 0x34) = cl;
            *( *(ebx + -356) + 0x35) = 0;
            ecx = *(ebx + -352) & 0xff;
            *( *(ebx + -356) + 0x36) = cl;
            *( *(ebx + -356) + 0x37) = 0;
            *(ebx + -356) = *(ebx + -356) + 0x38;
            eax = L00428EA0(ebx + -352, *(ebx + -356), 0xff);
            edx = *(ebx + -1028) & 65535;
            *(ebx + -356) = *(ebx + -356) + eax;
            ecx = edx << 8;
            ecx = ecx | edx >> 8;
            eax = *(ebx + -356);
            esi = *(ebx - 0x44);
            *eax = cx;
            *(ebx + -356) = *(ebx + -356) + *(ebx - 0x4c);
            esi = esi + 2;
            if(!( *(ebx + -1028) = *(ebx + -1028) - 1)) {
                do {
                    eax = ( *(esi + 2) & 0xff) + 3;
                    *(ebx - 0x58) = eax;
                    *(ebx + -356) = *(ebx + -356) - eax;
                    L004342A0( *(ebx + -356), esi, eax);
                    esi = esi + *(ebx - 0x58);
                } while(*(ebx + -1028) = *(ebx + -1028) - 1);
            }
            L004100F0( *(ebx + -1020), 1, A8, *(ebx + -356) - 2, *(ebx - 0x4c), 1);
            if(al == 0) {
                *(ebx - 0x50) = *(ebx + -1112);
                *(ebx - 0x5c) = *(ebx - 0x5c) - 1;
            }
        } while(*(ebx + -1040) = *(ebx + -1040) - 1);
    }
    edx = *(ebx - 0x5c) << 8 & 16711680;
    edx = edx | *(ebx - 0x5c) >> 0x18;
    ecx = *(ebx - 0x5c);
    *(ebx - 0x5c) = *(ebx - 0x5c) << 0x18;
    edx = edx | ecx >> 8 & 65280 | *(ebx - 0x5c);
    *( *(ebx - 0x54)) = edx;
    L00431A10( *(A8 + 8), 0x1c5, Ac, *(ebx - 0x54), *(ebx - 0x50));
    L00416790( *(ebx + -1020), A8, 0x1c4, 0, ebx + -940, 0, 0);
    L0042E3E0(ebx + -1124);
    L0042E3E0(ebx + -1116);
    eax = L0042E3E0(ebx + -1128);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004166DA - 0x004166DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004166DA()
{



}

/*	Procedure: 0x004166E0 - 0x0041678D
 *	Argument size: 4
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L00416790()
 */

L004166E0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    eax = *(A8 + 0x2b4);
    *(ebp - 0x14) = eax;
    edx = eax;
    *(ebp - 0x10) = eax;
    *(ebp - 0x10) = *(ebp - 0x10) + *(A8 + 0x2b8);
    eax = *(ebp - 0x10);
    ebx = 0;
    if(edx < eax) {
        do {
            eax = *(edx + 0x46) & 0xff;
            ecx = 0x4c + eax;
            ecx = ecx + ( *(edx + 0x47) & 0xff);
            ecx = ecx + ( *(edx + 0x48) & 0xff);
            ecx = ecx + ( *(edx + 0x49) & 0xff);
            ecx = ecx + ( *(edx + 0x4a) & 0xff);
            ecx = ecx + ( *(edx + 0x4b) & 0xff);
            eax = *(edx + 0x42) & 65535;
            esi = eax;
            eax = eax >> 8;
            esi = esi << 8 | eax;
            edx = edx + (ecx + (si & 65535) + 3 & -4);
            eax = edx - *(ebp - 0x14);
            ebx = ebx + 1;
            if(eax >= 32768) {
                break;
            }
        } while(edx < *(ebp - 0x10));
    }
    eax = L004342A0( *(ebp - 0x14), edx, *(ebp - 0x10) - edx);
    *(A8 + 0x2b8) = eax;
    *(A8 + 0x2bc) = *(A8 + 0x2bc) - ebx;
    return *(A8 + 0x2b8);
}

/*	Procedure: 0x0041678E - 0x0041678F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041678E()
{



}

/*	Procedure: 0x00416790 - 0x00416EFA
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401310()
 *		L00401D10()
 *		L00402400()
 *		L00402460()
 *		L00402D10()
 *		L00403190()
 *		L00403980()
 *		L00403D00()
 *		L00404010()
 *		L00404640()
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L004051B0()
 *		L00405970()
 *		L00405B70()
 *		L00405D00()
 *		L00405DF0()
 *		L00406020()
 *		L00406950()
 *		L00408F30()
 *		L00409B60()
 *		L00409E60()
 *		L0040A4E0()
 *		L0040A760()
 *		L0040AA30()
 *		L0040AD20()
 *		L0040AFD0()
 *		L0040B130()
 *		L0040B3A0()
 *		L0040B590()
 *		L0040DB20()
 *		L0040DC10()
 *		L0040DF50()
 *		L0040E200()
 *		L0040E5B0()
 *		L0040E700()
 *		L0040E830()
 *		L0040EE00()
 *		L0040F110()
 *		L0040F570()
 *		L0040F6E0()
 *		L0040F7B0()
 *		L0040F8A0()
 *		L0040FAE0()
 *		L004102F0()
 *		L004104E0()
 *		L004105F0()
 *		L004107E0()
 *		L00410960()
 *		L00410EB0()
 *		L004112D0()
 *		L00411640()
 *		L00412E50()
 *		L00412EE0()
 *		L00414FA0()
 *		L00415120()
 *		L00415A60()
 *		L00416000()
 *		L00416F00()
 *		L00417050()
 *		L00417EC0()
 *		L00418340()
 *		L00418DBB()
 */

L00416790(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    eax = Ac;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x6f0;
    *(ebp - 0x78) = eax;
    if(*(eax + 0x3b) != 0) {
        Ac = *(eax + 0x168);
    }
    if(A20 > 8192) {
        A20 = 8192;
    }
    esi = *(Ac + 8);
    *(ebp - 0x18) = esi != 0 ? L00430420(esi) : 0x470ce8;
    edi = 0x4c + ( *(Ac + 0x5c) & 0xff) + ( *(Ac + 0x98) & 0xff) + ( *( *(ebp - 0x18)) & 0xff);
    eax = A18 != 0 ? *A18 & 0xff : 0;
    edi = edi + eax + A20;
    eax = A8;
    *(ebp - 0x5c) = edi;
    *(ebp - 0x5c) = *(ebp - 0x5c) + 3;
    *(ebp - 0x5c) = *(ebp - 0x5c) & -4;
    if(*(eax + 0x2b8) + *(ebp - 0x5c) > 204800) {
        L004166E0(eax);
    }
    eax = A8;
    edi = *(eax + 0x2b4) + *(eax + 0x2b8);
    L00434150(edi, 0x4c);
    ebx = edx;
    *(ebp + -152) = edx;
    edx = edx << 8;
    esi = 0;
    edx = edx & 16711680;
    edx = edx | ebx >> 0x18;
    esi = ebx;
    ebx = ebx << 0x18;
    *(ebp - 0x14) = L0042EF50();
    *edi = edx | esi >> 8 & 65280 | ebx;
    eax = *(ebp - 0x14) << 8 & 16711680;
    eax = eax | *(ebp - 0x14) >> 0x18;
    eax = eax | *(ebp - 0x14) >> 8 & 65280;
    *(edi + 4) = eax | *(ebp - 0x14) << 0x18;
    *(edi + 8) = A10 << 8 & 16711680 | A10 >> 0x18 | A10 >> 8 & 65280 | A10 << 0x18;
    esi = *(Ac + 0x30) & 65535;
    ebx = esi << 8 & 16711680;
    ebx = ebx | esi >> 0x18;
    edx = esi;
    esi = esi << 0x18;
    *(edi + 0xc) = ebx | edx >> 8 & 65280 | esi;
    *(edi + 0x10) = A14 << 8 & 16711680 | A14 >> 0x18 | A14 >> 8 & 65280 | A14 << 0x18;
    *(edi + 0x3c) = 0;
    esi = A20 & 65535;
    ecx = esi << 8;
    *(edi + 0x42) = ecx | esi >> 8;
    *(edi + 0x45) = *(Ac + 0x38) & 0xff;
    eax = *(Ac + 0x5c) & 0xff;
    *(edi + 0x46) = al;
    *(edi + 0x47) = *(Ac + 0x98) & 0xff;
    *(edi + 0x48) = *( *(ebp - 0x18)) & 0xff;
    eax = A18 != 0 ? *A18 & 0xff : 0;
    *(edi + 0x49) = al;
    ebx = edi + 0x4c;
    eax = L00428EA0(Ac + 0x5c, ebx, 0xff);
    ebx = ebx + eax;
    ebx = ebx + L00428EA0(Ac + 0x98, ebx, 0xff);
    ebx = ebx + L00428EA0( *(ebp - 0x18), ebx, 0xff);
    L004342A0(ebx + L00428EA0(A18, ebx, 0xff), A1c, A20);
    *(A8 + 0x2b8) = *(A8 + 0x2b8) + *(ebp - 0x5c);
    *(A8 + 0x2bc) = *(A8 + 0x2bc) + 1;
    eax = A8;
    ecx = *(eax + 0x2c4);
    esi = *(eax + 0x2c0);
    ebx = 0;
    *(ebp + -1436) = ecx;
    if(ecx > 0) {
        do {
            *(ebp - 0x80) = esp;
            L00431A10( *( *(esi + ebx * 4) + 8), 0xb7, 0, edi, *(ebp - 0x5c));
L00416a68:
            ebx = ebx + 1;
        } while(ebx < *(ebp + -1436));
        goto L00416a73;
        if(*(ebp + -140) != 0) {
            (save)-1;
            ecx = *(ebp + -148);
            *(ebp + -140)();
        }
        esp = *(ebp - 0x80);
        goto L00416a68;
    }
L00416a73:
    eax = *(A8 + 0x2cc);
    if(eax != 0) {
        if(!(ecx = A10 - 0x96)) {
            if((ecx = ecx - 0x14) || (ecx = ecx - 2)) {
                goto L00416bd0;
            }
            if(ecx = ecx - 0xc) {
                goto L00416b86;
            }
            if(!(ecx = ecx - 1)) {
                if(ecx = ecx - 1) {
                    goto L00416b97;
                }
                if(ecx = ecx - 1) {
                    goto L00416ba0;
                }
                if(ecx = ecx - 1) {
                    goto L00416b97;
                }
                if(ecx = ecx - 1) {
                    goto L00416ba0;
                }
                if(ecx = ecx - 0xd3) {
                    goto L00416bb0;
                }
                ecx = ecx - 2;
                if(ecx <= 1) {
                    goto L00416bb7;
                }
                ecx = ecx - 2;
                if(ecx <= 1) {
                    goto L00416ba7;
                }
                ecx = ecx - 2;
                if(ecx <= 3 || (ecx = ecx - 5)) {
                    goto L00416bb7;
                }
                if(ecx = ecx - 1) {
                    goto L00416b97;
                }
                if(ecx = ecx - 3) {
                    goto L00416ba0;
                }
                ecx = ecx - 5;
                if(ecx <= 1 || (ecx = ecx - 0x1e) || (ecx = ecx - 2)) {
                    goto L00416bb7;
                }
                ecx = ecx - 0x30;
                if(ecx <= 2) {
                    goto L00416bc7;
                }
                ecx = ecx - 4;
                if(ecx <= 1) {
                    goto L00416bc7;
                }
                ecx = ecx - 3;
                if(ecx <= 1) {
                    goto L00416bc0;
                }
                if(ecx = ecx - 2) {
                    goto L00416bc7;
                }
                if(ecx = ecx - 2) {
                    goto L00416bc0;
                }
                if((ecx = ecx - 1) || (ecx = ecx - 0x26)) {
                    goto L00416bc7;
                }
                ecx = ecx - 0x226;
                if(ecx <= 1 || (ecx = ecx - 3) || ecx - 2 <= 1) {
                    goto L00416bc7;
                }
                goto L00416bd7;
L00416b86:
                ebx = 1;
                goto L00416bdc;
            }
        }
        ebx = 2;
        goto L00416bdc;
L00416b97:
        ebx = 4;
        goto L00416bdc;
L00416ba0:
        ebx = 8;
        goto L00416bdc;
L00416ba7:
        ebx = 0x10;
        goto L00416bdc;
L00416bb0:
        ebx = 0x20;
        goto L00416bdc;
L00416bb7:
        ebx = 0x40;
        goto L00416bdc;
L00416bc0:
        ebx = 0x80;
        goto L00416bdc;
L00416bc7:
        ebx = 0x100;
        goto L00416bdc;
L00416bd0:
        ebx = 0x200;
        goto L00416bdc;
L00416bd7:
        ebx = 0x400;
L00416bdc:
        if(!(ebx & eax)) {
            esi = ebp + -1432;
            esi = esi + L004372D0( *(ebp - 0x14), *(ebp + -152), esi, 0x20, 12352);
            *esi = 9;
            esi = esi + 1;
            esi = esi + L00428EA0(L004170A0(A10), esi, 0x30);
            *esi = 9;
            esi = esi + 1;
            esi = esi + L00428EA0(Ac + 0x98, esi, 0x40);
            *esi = 9;
            esi = esi + 1;
            esi = esi + L00428EA0( *(ebp - 0x18), esi, 0x40);
            *esi = 9;
            esi = esi + 1;
            eax = A18 != 0 ? *A18 & 0xff : 0;
            if(eax == 0) {
                if(A20 != 0) {
                    L00437390(A1c, A20, 0, 0, ebp + -1784);
                    eax = *(ebp + -1784);
                    A18 = eax;
                    eax = eax != 0 ? *eax & 0xff : 0;
                } else {
                    if(A10 == 0xb8) {
                        ecx = ebp + -1691;
                        eax = L00428EA0(Ac + 0x5c, ecx, 0xff);
                        ecx = ebp + -1692;
                        *(ebp + -1692) = al;
                        A18 = ecx;
                    }
                }
            }
            ecx = A18 + 1;
            edi = 0;
            if(eax > 0) {
                do {
                    if(( *(ecx + edi) & 0xff) == 9) {
                        edx = 0x2a;
                    }
                    *(esi + edi) = dl;
                    edi = edi + 1;
                } while(edi < eax);
            }
            esi = esi + eax;
            *esi = 9;
            esi = esi + 1;
            if(A14 == 0) {
                *esi = 0x30;
                esi = esi + 1;
            } else {
                eax = 0;
                edx = ebp + -1780;
                edi = ebp + -1780;
                ecx = 0x16;
                asm("rep stosd");
                *(ebp + -1780) = A14;
                esi = esi + L00429350(edx, esi, 0x20);
            }
            eax = A10 - 0xba;
            if(eax <= 3 || (eax = eax - 0xe2) || !(eax = eax - 3)) {
                *esi = 9;
                esi = esi + 1;
                eax = *(ebp - 0x78);
                esi = esi + L00426DC0( *(eax + 0x188), *(eax + 0x18c), esi, 0x40, 0x800);
                *esi = 9;
                esi = esi + 1;
                eax = *(ebp - 0x78);
                esi = esi + L00426DC0( *(eax + 0x190), *(eax + 0x194), esi, 0x40, 0x800);
            }
            *esi = 0xa;
            *(ebp - 0x60) = esp;
            edi = *(A8 + 0x2d4);
            *(ebp - 0x7c) = edi;
            if(edi == 0) {
                L004288C0(ebp - 0x58, 0x470cec);
                ebx = *(ebp - 0x58) & 0xff;
                ebx = ebx + ebp - 0x58 + 1;
                *(ebp - 0x58) = *(ebp - 0x58) + L004372D0( *(ebp - 0x14), *(ebp + -152), ebx, 0x20, 12352);
                edi = 0;
                if(eax > 0) {
                    do {
                        ecx = *(ebx + edi) & 0xff;
                        if(ecx == 0x3a || ecx == 0x2f) {
                            *(ebx + edi) = 0x2d;
                        }
                        edi = edi + 1;
                    } while(edi < eax);
                }
                L00428A30(ebp - 0x58, 0x470cf4);
                eax = L0042BA30(1, 0, 0, 0x470cfc, 0x82);
                *(ebp + -1788) = eax;
                eax = L00448EC0(eax, 0, 0, ebp - 0x58, "\ntext/plain", 1);
                ecx = eax;
                *(ebp - 0x7c) = eax;
                *(A8 + 0x2d4) = ecx;
                L0042BD00(ebp + -1788);
            }
            edi = ebp + -1432;
            ecx = edi;
            L00449060( *(ebp - 0x7c), ecx, esi + 1 - edi);
            eax = L00449200( *(ebp - 0x7c));
            ebx = *(A8 + 0x2d0);
            if(edx >= 0) {
                != ? 0x416ec2 : ;
                if(eax > ebx) {
                    L00449010(ebp - 0x7c);
                    eax = A8;
                    *(eax + 0x2d4) = 0;
                    goto L00416ef3;
                    if(*(ebp - 0x6c) != 0) {
                        ecx = *(ebp - 0x74);
                        *(ebp - 0x6c)(-1);
                    }
                    esp = *(ebp - 0x60);
                }
            }
        }
    }
L00416ef3:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00416EFB - 0x00416EFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00416EFB()
{



}

/*	Procedure: 0x00416F00 - 0x0041704C
 *	Argument size: 16
 *	Local size: 44
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 */

L00416F00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = ecx;
    if(!( *(A8 + 0x4f) & 0xff & 1)) {
        L00429610(65556);
    }
    Vffffffec = A8;
    (save)A8;
    L00429DE0(esi + 0x2c0);
    (restore)ecx;
    if(al != 0) {
        L00429610(65549);
    }
    Vffffffdc = esp;
    L00416790(esi, A8, 0xb4, 0, 0, 0, 0);
    if(A8 == 0) {
        L00429610(65538);
    }
    L00429A00(esi + 0x2c0, Vffffffec);
    eax = *(esi + 0x2b8);
    Vffffffe4 = eax;
    Vfffffff0 = Vffffffe4;
    Vfffffff0 = Vfffffff0 + 8;
    eax = L0042E310(Vfffffff0);
    edx = eax;
    Vffffffe8 = eax;
    Vffffffe0 = eax;
    *edx = 0;
    eax = *(esi + 0x2bc);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    *(edx + 4) = ecx | eax << 0x18;
    L004342A0(edx + 8, *(esi + 0x2b4), Vffffffe4);
    L00431A10( *(A8 + 8), 0xb5, Ac, Vffffffe8, Vfffffff0);
    eax = L0042E3E0( & Vffffffe0);
    goto L00417043;
    if(A8 != 0) {
        L00429BC0(esi + 0x2c0, Vffffffec);
    }
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x30) != 0) {
        ecx = *(ebp - 0x38);
        *(ebp - 0x30)(-1);
    }
    esp = *(ebp - 0x24);
L00417043:
}

/*	Procedure: 0x0041704D - 0x0041704F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041704D()
{



}

/*	Procedure: 0x00417050 - 0x00417096
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00406020()
 */

L00417050(A8)
/* unknown */ void  A8;
{



    (save)esi;
    esi = ecx;
    eax = A8 != 0 ? L00429BC0(esi + 0x2c0, A8) : 0;
    if(eax != -1) {
        eax = L00416790(esi, A8, 0xb6, 0, 0, 0, 0);
    }
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00417097 - 0x0041709F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00417097()
{



}

/*	Procedure: 0x004170A0 - 0x004177CF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00416790()
 */

L004170A0(A4)
/* unknown */ void  A4;
{



    eax = A4;
    if(eax > 0x453) {
        goto L004176e8;
    }
    switch(eax) {
        case 0:
L004170b6:
            eax = 0x470e00;
            goto L004176ed;
        case 1:
L004176e8:
            return 0x471a00;
        case 2:
            goto L004176e8;
        case 3:
            goto L004176e8;
        case 4:
            goto L004176e8;
        case 5:
            goto L004176e8;
        case 6:
            goto L004176e8;
        case 7:
            goto L004176e8;
        case 8:
            goto L004176e8;
        case 9:
            goto L004176e8;
        case 0xa:
            goto L004176e8;
        case 0xb:
            goto L004176e8;
        case 0xc:
            goto L004176e8;
        case 0xd:
            goto L004176e8;
        case 0xe:
            goto L004176e8;
        case 0xf:
            goto L004176e8;
        case 0x10:
            goto L004176e8;
        case 0x11:
            goto L004176e8;
        case 0x12:
            goto L004176e8;
        case 0x13:
            goto L004176e8;
        case 0x14:
            goto L004176e8;
        case 0x15:
            goto L004176e8;
        case 0x16:
            goto L004176e8;
        case 0x17:
            goto L004176e8;
        case 0x18:
            goto L004176e8;
        case 0x19:
            goto L004176e8;
        case 0x1a:
            goto L004176e8;
        case 0x1b:
            goto L004176e8;
        case 0x1c:
            goto L004176e8;
        case 0x1d:
            goto L004176e8;
        case 0x1e:
            goto L004176e8;
        case 0x1f:
            goto L004176e8;
        case 0x20:
            goto L004176e8;
        case 0x21:
            goto L004176e8;
        case 0x22:
            goto L004176e8;
        case 0x23:
            goto L004176e8;
        case 0x24:
            goto L004176e8;
        case 0x25:
            goto L004176e8;
        case 0x26:
            goto L004176e8;
        case 0x27:
            goto L004176e8;
        case 0x28:
            goto L004176e8;
        case 0x29:
            goto L004176e8;
        case 0x2a:
            goto L004176e8;
        case 0x2b:
            goto L004176e8;
        case 0x2c:
            goto L004176e8;
        case 0x2d:
            goto L004176e8;
        case 0x2e:
            goto L004176e8;
        case 0x2f:
            goto L004176e8;
        case 0x30:
            goto L004176e8;
        case 0x31:
            goto L004176e8;
        case 0x32:
            goto L004176e8;
        case 0x33:
            goto L004176e8;
        case 0x34:
            goto L004176e8;
        case 0x35:
            goto L004176e8;
        case 0x36:
            goto L004176e8;
        case 0x37:
            goto L004176e8;
        case 0x38:
            goto L004176e8;
        case 0x39:
            goto L004176e8;
        case 0x3a:
            goto L004176e8;
        case 0x3b:
            goto L004176e8;
        case 0x3c:
            goto L004176e8;
        case 0x3d:
            goto L004176e8;
        case 0x3e:
            goto L004176e8;
        case 0x3f:
            goto L004176e8;
        case 0x40:
            goto L004176e8;
        case 0x41:
            goto L004176e8;
        case 0x42:
            goto L004176e8;
        case 0x43:
            goto L004176e8;
        case 0x44:
            goto L004176e8;
        case 0x45:
            goto L004176e8;
        case 0x46:
            goto L004176e8;
        case 0x47:
            goto L004176e8;
        case 0x48:
            goto L004176e8;
        case 0x49:
            goto L004176e8;
        case 0x4a:
            goto L004176e8;
        case 0x4b:
            goto L004176e8;
        case 0x4c:
            goto L004176e8;
        case 0x4d:
            goto L004176e8;
        case 0x4e:
            goto L004176e8;
        case 0x4f:
            goto L004176e8;
        case 0x50:
            goto L004176e8;
        case 0x51:
            goto L004176e8;
        case 0x52:
            goto L004176e8;
        case 0x53:
            goto L004176e8;
        case 0x54:
            goto L004176e8;
        case 0x55:
            goto L004176e8;
        case 0x56:
            goto L004176e8;
        case 0x57:
            goto L004176e8;
        case 0x58:
            goto L004176e8;
        case 0x59:
            goto L004176e8;
        case 0x5a:
            goto L004176e8;
        case 0x5b:
            goto L004176e8;
        case 0x5c:
            goto L004176e8;
        case 0x5d:
            goto L004176e8;
        case 0x5e:
            goto L004176e8;
        case 0x5f:
            goto L004176e8;
        case 0x60:
            goto L004176e8;
        case 0x61:
            goto L004176e8;
        case 0x62:
            goto L004176e8;
        case 0x63:
            goto L004176e8;
        case 0x64:
            eax = 0x470e08;
            goto L004176ed;
        case 0x65:
            eax = "\tUser List";
            goto L004176ed;
        case 0x66:
            eax = 0x470e24;
            goto L004176ed;
        case 0x67:
            eax = 0x470e34;
            goto L004176ed;
        case 0x68:
            eax = "\rUser Departed";
            goto L004176ed;
        case 0x69:
            eax = 0x470e50;
            goto L004176ed;
        case 0x6a:
            eax = 0x470e5c;
            goto L004176ed;
        case 0x6b:
            eax = 0x470e68;
            goto L004176ed;
        case 0x6c:
            eax = 0x470e78;
            goto L004176ed;
        case 0x6d:
            eax = 0x470e80;
            goto L004176ed;
        case 0x6e:
            eax = 0x470e88;
            goto L004176ed;
        case 0x6f:
            eax = 0x470e9c;
            goto L004176ed;
        case 0x70:
            goto L004176e8;
        case 0x71:
            eax = 0x470eb4;
            goto L004176ed;
        case 0x72:
            eax = 0x470ecc;
            goto L004176ed;
        case 0x73:
            eax = 0x470ee0;
            goto L004176ed;
        case 0x74:
            eax = 0x470ef0;
            goto L004176ed;
        case 0x75:
            eax = 0x470f00;
            goto L004176ed;
        case 0x76:
            goto L004176e8;
        case 0x77:
            goto L004176e8;
        case 0x78:
            goto L004176e8;
        case 0x79:
            goto L004176e8;
        case 0x7a:
            goto L004176e8;
        case 0x7b:
            goto L004176e8;
        case 0x7c:
            goto L004176e8;
        case 0x7d:
            goto L004176e8;
        case 0x7e:
            goto L004176e8;
        case 0x7f:
            goto L004176e8;
        case 0x80:
            goto L004176e8;
        case 0x81:
            goto L004176e8;
        case 0x82:
            goto L004176e8;
        case 0x83:
            goto L004176e8;
        case 0x84:
            goto L004176e8;
        case 0x85:
            goto L004176e8;
        case 0x86:
            goto L004176e8;
        case 0x87:
            goto L004176e8;
        case 0x88:
            goto L004176e8;
        case 0x89:
            goto L004176e8;
        case 0x8a:
            goto L004176e8;
        case 0x8b:
            goto L004176e8;
        case 0x8c:
            eax = 0x470f08;
            goto L004176ed;
        case 0x8d:
            eax = 0x470f20;
            goto L004176ed;
        case 0x8e:
            eax = 0x470f3c;
            goto L004176ed;
        case 0x8f:
            eax = 0x470f58;
            goto L004176ed;
        case 0x90:
            goto L004176e8;
        case 0x91:
            goto L004176e8;
        case 0x92:
            goto L004176e8;
        case 0x93:
            goto L004176e8;
        case 0x94:
            goto L004176e8;
        case 0x95:
            goto L004176e8;
        case 0x96:
            eax = 0x470f70;
            goto L004176ed;
        case 0x97:
            eax = 0x470f80;
            goto L004176ed;
        case 0x98:
            eax = "\rGet User Info";
            goto L004176ed;
        case 0x99:
            eax = "\tUser Info";
            goto L004176ed;
        case 0x9a:
            eax = 0x470fb0;
            goto L004176ed;
        case 0x9b:
            eax = 0x470fc8;
            goto L004176ed;
        case 0x9c:
            goto L004176e8;
        case 0x9d:
            goto L004176e8;
        case 0x9e:
            goto L004176e8;
        case 0x9f:
            goto L004176e8;
        case 0xa0:
            goto L004176e8;
        case 0xa1:
            goto L004176e8;
        case 0xa2:
            goto L004176e8;
        case 0xa3:
            goto L004176e8;
        case 0xa4:
            goto L004176e8;
        case 0xa5:
            goto L004176e8;
        case 0xa6:
            goto L004176e8;
        case 0xa7:
            goto L004176e8;
        case 0xa8:
            goto L004176e8;
        case 0xa9:
            goto L004176e8;
        case 0xaa:
            eax = 0x470fe0;
            goto L004176ed;
        case 0xab:
            eax = 0x470ff4;
            goto L004176ed;
        case 0xac:
            eax = 0x47100c;
            goto L004176ed;
        case 0xad:
            eax = 0x471020;
            goto L004176ed;
        case 0xae:
            eax = 0x47103c;
            goto L004176ed;
        case 0xaf:
            eax = 0x47104c;
            goto L004176ed;
        case 0xb0:
            goto L004176e8;
        case 0xb1:
            goto L004176e8;
        case 0xb2:
            goto L004176e8;
        case 0xb3:
            goto L004176e8;
        case 0xb4:
            eax = 0x471064;
            goto L004176ed;
        case 0xb5:
            eax = 0x471078;
            goto L004176ed;
        case 0xb6:
            eax = 0x471090;
            goto L004176ed;
        case 0xb7:
            eax = 0x4710a8;
            goto L004176ed;
        case 0xb8:
            eax = 0x4710c0;
            goto L004176ed;
        case 0xb9:
            eax = 0x4710c8;
            goto L004176ed;
        case 0xba:
            eax = 0x4710d8;
            goto L004176ed;
        case 0xbb:
            eax = 0x4710ec;
            goto L004176ed;
        case 0xbc:
            eax = 0x471100;
            goto L004176ed;
        case 0xbd:
            eax = 0x471118;
            goto L004176ed;
        case 0xbe:
            eax = 0x471130;
            goto L004176ed;
        case 0xbf:
            eax = 0x471140;
            goto L004176ed;
        case 0xc0:
            goto L004176e8;
        case 0xc1:
            goto L004176e8;
        case 0xc2:
            goto L004176e8;
        case 0xc3:
            goto L004176e8;
        case 0xc4:
            goto L004176e8;
        case 0xc5:
            goto L004176e8;
        case 0xc6:
            goto L004176e8;
        case 0xc7:
            goto L004176e8;
        case 0xc8:
            eax = 0x471150;
            goto L004176ed;
        case 0xc9:
            eax = 0x471164;
            goto L004176ed;
        case 0xca:
            eax = "\tJoin Chat";
            goto L004176ed;
        case 0xcb:
            eax = 0x47117c;
            goto L004176ed;
        case 0xcc:
            eax = "\nLeave Chat";
            goto L004176ed;
        case 0xcd:
            eax = 0x47119c;
            goto L004176ed;
        case 0xce:
            eax = 0x4711b0;
            goto L004176ed;
        case 0xcf:
            eax = 0x4711c4;
            goto L004176ed;
        case 0xd0:
            eax = 0x4711d4;
            goto L004176ed;
        case 0xd1:
            eax = "Set Chat Topic";
            goto L004176ed;
        case 0xd2:
            eax = "Chat Topic Changed";
            goto L004176ed;
        case 0xd3:
            eax = 0x47120c;
            goto L004176ed;
        case 0xd4:
            eax = 0x471218;
            goto L004176ed;
        case 0xd5:
            eax = "Must Join Chat";
            goto L004176ed;
        case 0xd6:
            eax = "\rGet Chat List";
            goto L004176ed;
        case 0xd7:
            eax = "\tChat List";
            goto L004176ed;
        case 0xd8:
            eax = 0x471254;
            goto L004176ed;
        case 0xd9:
            eax = 0x47126c;
            goto L004176ed;
        case 0xda:
            eax = "Get Chat";
            goto L004176ed;
        case 0xdb:
            eax = "\tChat Info";
            goto L004176ed;
        case 0xdc:
            eax = "Set Chat";
            goto L004176ed;
        case 0xdd:
            eax = "Chat Deleted";
            goto L004176ed;
        case 0xde:
            eax = "Get Chat DCC Addresses";
            goto L004176ed;
        case 0xdf:
            eax = "Chat DCC Addresses";
            goto L004176ed;
        case 0xe0:
            goto L004176e8;
        case 0xe1:
            goto L004176e8;
        case 0xe2:
            goto L004176e8;
        case 0xe3:
            goto L004176e8;
        case 0xe4:
            goto L004176e8;
        case 0xe5:
            goto L004176e8;
        case 0xe6:
            goto L004176e8;
        case 0xe7:
            goto L004176e8;
        case 0xe8:
            goto L004176e8;
        case 0xe9:
            goto L004176e8;
        case 0xea:
            goto L004176e8;
        case 0xeb:
            goto L004176e8;
        case 0xec:
            goto L004176e8;
        case 0xed:
            goto L004176e8;
        case 0xee:
            goto L004176e8;
        case 0xef:
            goto L004176e8;
        case 0xf0:
            goto L004176e8;
        case 0xf1:
            goto L004176e8;
        case 0xf2:
            goto L004176e8;
        case 0xf3:
            goto L004176e8;
        case 0xf4:
            goto L004176e8;
        case 0xf5:
            goto L004176e8;
        case 0xf6:
            goto L004176e8;
        case 0xf7:
            goto L004176e8;
        case 0xf8:
            goto L004176e8;
        case 0xf9:
            goto L004176e8;
        case 0xfa:
            goto L004176e8;
        case 0xfb:
            goto L004176e8;
        case 0xfc:
            goto L004176e8;
        case 0xfd:
            goto L004176e8;
        case 0xfe:
            goto L004176e8;
        case 0xff:
            goto L004176e8;
        case 0x100:
            goto L004176e8;
        case 0x101:
            goto L004176e8;
        case 0x102:
            goto L004176e8;
        case 0x103:
            goto L004176e8;
        case 0x104:
            goto L004176e8;
        case 0x105:
            goto L004176e8;
        case 0x106:
            goto L004176e8;
        case 0x107:
            goto L004176e8;
        case 0x108:
            goto L004176e8;
        case 0x109:
            goto L004176e8;
        case 0x10a:
            goto L004176e8;
        case 0x10b:
            goto L004176e8;
        case 0x10c:
            goto L004176e8;
        case 0x10d:
            goto L004176e8;
        case 0x10e:
            goto L004176e8;
        case 0x10f:
            goto L004176e8;
        case 0x110:
            goto L004176e8;
        case 0x111:
            goto L004176e8;
        case 0x112:
            goto L004176e8;
        case 0x113:
            goto L004176e8;
        case 0x114:
            goto L004176e8;
        case 0x115:
            goto L004176e8;
        case 0x116:
            goto L004176e8;
        case 0x117:
            goto L004176e8;
        case 0x118:
            goto L004176e8;
        case 0x119:
            goto L004176e8;
        case 0x11a:
            goto L004176e8;
        case 0x11b:
            goto L004176e8;
        case 0x11c:
            goto L004176e8;
        case 0x11d:
            goto L004176e8;
        case 0x11e:
            goto L004176e8;
        case 0x11f:
            goto L004176e8;
        case 0x120:
            goto L004176e8;
        case 0x121:
            goto L004176e8;
        case 0x122:
            goto L004176e8;
        case 0x123:
            goto L004176e8;
        case 0x124:
            goto L004176e8;
        case 0x125:
            goto L004176e8;
        case 0x126:
            goto L004176e8;
        case 0x127:
            goto L004176e8;
        case 0x128:
            goto L004176e8;
        case 0x129:
            goto L004176e8;
        case 0x12a:
            goto L004176e8;
        case 0x12b:
            goto L004176e8;
        case 0x12c:
            eax = "Send Private Message";
            goto L004176ed;
        case 0x12d:
            eax = "Incoming Private Message";
            goto L004176ed;
        case 0x12e:
            goto L004176e8;
        case 0x12f:
            goto L004176e8;
        case 0x130:
            goto L004176e8;
        case 0x131:
            goto L004176e8;
        case 0x132:
            goto L004176e8;
        case 0x133:
            goto L004176e8;
        case 0x134:
            goto L004176e8;
        case 0x135:
            goto L004176e8;
        case 0x136:
            goto L004176e8;
        case 0x137:
            goto L004176e8;
        case 0x138:
            goto L004176e8;
        case 0x139:
            goto L004176e8;
        case 0x13a:
            goto L004176e8;
        case 0x13b:
            goto L004176e8;
        case 0x13c:
            goto L004176e8;
        case 0x13d:
            goto L004176e8;
        case 0x13e:
            goto L004176e8;
        case 0x13f:
            goto L004176e8;
        case 0x140:
            goto L004176e8;
        case 0x141:
            goto L004176e8;
        case 0x142:
            goto L004176e8;
        case 0x143:
            goto L004176e8;
        case 0x144:
            goto L004176e8;
        case 0x145:
            goto L004176e8;
        case 0x146:
            goto L004176e8;
        case 0x147:
            goto L004176e8;
        case 0x148:
            goto L004176e8;
        case 0x149:
            goto L004176e8;
        case 0x14a:
            goto L004176e8;
        case 0x14b:
            goto L004176e8;
        case 0x14c:
            goto L004176e8;
        case 0x14d:
            goto L004176e8;
        case 0x14e:
            goto L004176e8;
        case 0x14f:
            goto L004176e8;
        case 0x150:
            goto L004176e8;
        case 0x151:
            goto L004176e8;
        case 0x152:
            goto L004176e8;
        case 0x153:
            goto L004176e8;
        case 0x154:
            goto L004176e8;
        case 0x155:
            goto L004176e8;
        case 0x156:
            goto L004176e8;
        case 0x157:
            goto L004176e8;
        case 0x158:
            goto L004176e8;
        case 0x159:
            goto L004176e8;
        case 0x15a:
            goto L004176e8;
        case 0x15b:
            goto L004176e8;
        case 0x15c:
            goto L004176e8;
        case 0x15d:
            goto L004176e8;
        case 0x15e:
            goto L004176e8;
        case 0x15f:
            goto L004176e8;
        case 0x160:
            goto L004176e8;
        case 0x161:
            goto L004176e8;
        case 0x162:
            goto L004176e8;
        case 0x163:
            goto L004176e8;
        case 0x164:
            goto L004176e8;
        case 0x165:
            goto L004176e8;
        case 0x166:
            goto L004176e8;
        case 0x167:
            goto L004176e8;
        case 0x168:
            goto L004176e8;
        case 0x169:
            goto L004176e8;
        case 0x16a:
            goto L004176e8;
        case 0x16b:
            goto L004176e8;
        case 0x16c:
            goto L004176e8;
        case 0x16d:
            goto L004176e8;
        case 0x16e:
            goto L004176e8;
        case 0x16f:
            goto L004176e8;
        case 0x170:
            goto L004176e8;
        case 0x171:
            goto L004176e8;
        case 0x172:
            goto L004176e8;
        case 0x173:
            goto L004176e8;
        case 0x174:
            goto L004176e8;
        case 0x175:
            goto L004176e8;
        case 0x176:
            goto L004176e8;
        case 0x177:
            goto L004176e8;
        case 0x178:
            goto L004176e8;
        case 0x179:
            goto L004176e8;
        case 0x17a:
            goto L004176e8;
        case 0x17b:
            goto L004176e8;
        case 0x17c:
            goto L004176e8;
        case 0x17d:
            goto L004176e8;
        case 0x17e:
            goto L004176e8;
        case 0x17f:
            goto L004176e8;
        case 0x180:
            goto L004176e8;
        case 0x181:
            goto L004176e8;
        case 0x182:
            goto L004176e8;
        case 0x183:
            goto L004176e8;
        case 0x184:
            goto L004176e8;
        case 0x185:
            goto L004176e8;
        case 0x186:
            goto L004176e8;
        case 0x187:
            goto L004176e8;
        case 0x188:
            goto L004176e8;
        case 0x189:
            goto L004176e8;
        case 0x18a:
            goto L004176e8;
        case 0x18b:
            goto L004176e8;
        case 0x18c:
            goto L004176e8;
        case 0x18d:
            goto L004176e8;
        case 0x18e:
            goto L004176e8;
        case 0x18f:
            goto L004176e8;
        case 0x190:
            eax = "\rGet File List";
            goto L004176ed;
        case 0x191:
            eax = "\tFile List";
            goto L004176ed;
        case 0x192:
            eax = "\rCreate Folder";
            goto L004176ed;
        case 0x193:
            eax = "Create Alias";
            goto L004176ed;
        case 0x194:
            eax = "Delete File/Folder";
            goto L004176ed;
        case 0x195:
            eax = "\rMove To Trash";
            goto L004176ed;
        case 0x196:
            eax = "Rename File/Folder";
            goto L004176ed;
        case 0x197:
            eax = "Move File/Folder";
            goto L004176ed;
        case 0x198:
            eax = "Copy File/Folder";
            goto L004176ed;
        case 0x199:
            eax = "Get File/Folder Info";
            goto L004176ed;
        case 0x19a:
            eax = "File/Folder Info";
            goto L004176ed;
        case 0x19b:
            eax = "Set File/Folder Info";
            goto L004176ed;
        case 0x19c:
            eax = "\rDownload File";
            goto L004176ed;
        case 0x19d:
            eax = 0x4713fc;
            goto L004176ed;
        case 0x19e:
            eax = 0x471410;
            goto L004176ed;
        case 0x19f:
            eax = 0x471424;
            goto L004176ed;
        case 0x1a0:
            eax = 0x471430;
            goto L004176ed;
        case 0x1a1:
            eax = 0x471440;
            goto L004176ed;
        case 0x1a2:
            eax = 0x471450;
            goto L004176ed;
        case 0x1a3:
            eax = 0x471460;
            goto L004176ed;
        case 0x1a4:
            eax = 0x471474;
            goto L004176ed;
        case 0x1a5:
            eax = 0x471480;
            goto L004176ed;
        case 0x1a6:
            eax = 0x47148c;
            goto L004176ed;
        case 0x1a7:
            eax = 0x471498;
            goto L004176ed;
        case 0x1a8:
            goto L004176e8;
        case 0x1a9:
            goto L004176e8;
        case 0x1aa:
            goto L004176e8;
        case 0x1ab:
            goto L004176e8;
        case 0x1ac:
            goto L004176e8;
        case 0x1ad:
            goto L004176e8;
        case 0x1ae:
            goto L004176e8;
        case 0x1af:
            goto L004176e8;
        case 0x1b0:
            goto L004176e8;
        case 0x1b1:
            goto L004176e8;
        case 0x1b2:
            goto L004176e8;
        case 0x1b3:
            goto L004176e8;
        case 0x1b4:
            goto L004176e8;
        case 0x1b5:
            goto L004176e8;
        case 0x1b6:
            goto L004176e8;
        case 0x1b7:
            goto L004176e8;
        case 0x1b8:
            goto L004176e8;
        case 0x1b9:
            goto L004176e8;
        case 0x1ba:
            goto L004176e8;
        case 0x1bb:
            goto L004176e8;
        case 0x1bc:
            goto L004176e8;
        case 0x1bd:
            goto L004176e8;
        case 0x1be:
            goto L004176e8;
        case 0x1bf:
            goto L004176e8;
        case 0x1c0:
            goto L004176e8;
        case 0x1c1:
            goto L004176e8;
        case 0x1c2:
            eax = 0x4714a8;
            goto L004176ed;
        case 0x1c3:
            eax = 0x4714bc;
            goto L004176ed;
        case 0x1c4:
            eax = 0x4714d4;
            goto L004176ed;
        case 0x1c5:
            eax = 0x4714e0;
            goto L004176ed;
        case 0x1c6:
            goto L004176e8;
        case 0x1c7:
            goto L004176e8;
        case 0x1c8:
            goto L004176e8;
        case 0x1c9:
            goto L004176e8;
        case 0x1ca:
            goto L004176e8;
        case 0x1cb:
            goto L004176e8;
        case 0x1cc:
            goto L004176e8;
        case 0x1cd:
            goto L004176e8;
        case 0x1ce:
            goto L004176e8;
        case 0x1cf:
            goto L004176e8;
        case 0x1d0:
            goto L004176e8;
        case 0x1d1:
            goto L004176e8;
        case 0x1d2:
            goto L004176e8;
        case 0x1d3:
            goto L004176e8;
        case 0x1d4:
            goto L004176e8;
        case 0x1d5:
            goto L004176e8;
        case 0x1d6:
            goto L004176e8;
        case 0x1d7:
            goto L004176e8;
        case 0x1d8:
            goto L004176e8;
        case 0x1d9:
            goto L004176e8;
        case 0x1da:
            goto L004176e8;
        case 0x1db:
            goto L004176e8;
        case 0x1dc:
            goto L004176e8;
        case 0x1dd:
            goto L004176e8;
        case 0x1de:
            goto L004176e8;
        case 0x1df:
            goto L004176e8;
        case 0x1e0:
            goto L004176e8;
        case 0x1e1:
            goto L004176e8;
        case 0x1e2:
            goto L004176e8;
        case 0x1e3:
            goto L004176e8;
        case 0x1e4:
            goto L004176e8;
        case 0x1e5:
            goto L004176e8;
        case 0x1e6:
            goto L004176e8;
        case 0x1e7:
            goto L004176e8;
        case 0x1e8:
            goto L004176e8;
        case 0x1e9:
            goto L004176e8;
        case 0x1ea:
            goto L004176e8;
        case 0x1eb:
            goto L004176e8;
        case 0x1ec:
            goto L004176e8;
        case 0x1ed:
            goto L004176e8;
        case 0x1ee:
            goto L004176e8;
        case 0x1ef:
            goto L004176e8;
        case 0x1f0:
            goto L004176e8;
        case 0x1f1:
            goto L004176e8;
        case 0x1f2:
            goto L004176e8;
        case 0x1f3:
            goto L004176e8;
        case 0x1f4:
            goto L004176e8;
        case 0x1f5:
            goto L004176e8;
        case 0x1f6:
            eax = 0x4714f0;
            goto L004176ed;
        case 0x1f7:
            eax = 0x471504;
            goto L004176ed;
        case 0x1f8:
            eax = 0x471518;
            goto L004176ed;
        case 0x1f9:
            eax = 0x47152c;
            goto L004176ed;
        case 0x1fa:
            eax = 0x471544;
            goto L004176ed;
        case 0x1fb:
            eax = 0x471558;
            goto L004176ed;
        case 0x1fc:
            eax = 0x471568;
            goto L004176ed;
        case 0x1fd:
            eax = 0x471578;
            goto L004176ed;
        case 0x1fe:
            eax = 0x471584;
            goto L004176ed;
        case 0x1ff:
            eax = 0x471594;
            goto L004176ed;
        case 0x200:
            eax = 0x4715a0;
            goto L004176ed;
        case 0x201:
            eax = 0x4715b4;
            goto L004176ed;
        case 0x202:
            eax = 0x4715c4;
            goto L004176ed;
        case 0x203:
            eax = 0x4715d4;
            goto L004176ed;
        case 0x204:
            goto L004176e8;
        case 0x205:
            goto L004176e8;
        case 0x206:
            goto L004176e8;
        case 0x207:
            goto L004176e8;
        case 0x208:
            goto L004176e8;
        case 0x209:
            goto L004176e8;
        case 0x20a:
            goto L004176e8;
        case 0x20b:
            goto L004176e8;
        case 0x20c:
            goto L004176e8;
        case 0x20d:
            goto L004176e8;
        case 0x20e:
            goto L004176e8;
        case 0x20f:
            goto L004176e8;
        case 0x210:
            goto L004176e8;
        case 0x211:
            goto L004176e8;
        case 0x212:
            goto L004176e8;
        case 0x213:
            goto L004176e8;
        case 0x214:
            goto L004176e8;
        case 0x215:
            goto L004176e8;
        case 0x216:
            goto L004176e8;
        case 0x217:
            goto L004176e8;
        case 0x218:
            goto L004176e8;
        case 0x219:
            goto L004176e8;
        case 0x21a:
            goto L004176e8;
        case 0x21b:
            goto L004176e8;
        case 0x21c:
            goto L004176e8;
        case 0x21d:
            goto L004176e8;
        case 0x21e:
            goto L004176e8;
        case 0x21f:
            goto L004176e8;
        case 0x220:
            goto L004176e8;
        case 0x221:
            goto L004176e8;
        case 0x222:
            goto L004176e8;
        case 0x223:
            goto L004176e8;
        case 0x224:
            goto L004176e8;
        case 0x225:
            goto L004176e8;
        case 0x226:
            eax = 0x4715e4;
            goto L004176ed;
        case 0x227:
            eax = 0x4715f8;
            goto L004176ed;
        case 0x228:
            goto L004176e8;
        case 0x229:
            goto L004176e8;
        case 0x22a:
            goto L004176e8;
        case 0x22b:
            goto L004176e8;
        case 0x22c:
            goto L004176e8;
        case 0x22d:
            goto L004176e8;
        case 0x22e:
            goto L004176e8;
        case 0x22f:
            goto L004176e8;
        case 0x230:
            goto L004176e8;
        case 0x231:
            goto L004176e8;
        case 0x232:
            goto L004176e8;
        case 0x233:
            goto L004176e8;
        case 0x234:
            goto L004176e8;
        case 0x235:
            goto L004176e8;
        case 0x236:
            goto L004176e8;
        case 0x237:
            goto L004176e8;
        case 0x238:
            goto L004176e8;
        case 0x239:
            goto L004176e8;
        case 0x23a:
            goto L004176e8;
        case 0x23b:
            goto L004176e8;
        case 0x23c:
            goto L004176e8;
        case 0x23d:
            goto L004176e8;
        case 0x23e:
            goto L004176e8;
        case 0x23f:
            goto L004176e8;
        case 0x240:
            goto L004176e8;
        case 0x241:
            goto L004176e8;
        case 0x242:
            goto L004176e8;
        case 0x243:
            goto L004176e8;
        case 0x244:
            goto L004176e8;
        case 0x245:
            goto L004176e8;
        case 0x246:
            goto L004176e8;
        case 0x247:
            goto L004176e8;
        case 0x248:
            goto L004176e8;
        case 0x249:
            goto L004176e8;
        case 0x24a:
            goto L004176e8;
        case 0x24b:
            goto L004176e8;
        case 0x24c:
            goto L004176e8;
        case 0x24d:
            goto L004176e8;
        case 0x24e:
            goto L004176e8;
        case 0x24f:
            goto L004176e8;
        case 0x250:
            goto L004176e8;
        case 0x251:
            goto L004176e8;
        case 0x252:
            goto L004176e8;
        case 0x253:
            goto L004176e8;
        case 0x254:
            goto L004176e8;
        case 0x255:
            goto L004176e8;
        case 0x256:
            goto L004176e8;
        case 0x257:
            goto L004176e8;
        case 0x258:
            eax = 0x471614;
            goto L004176ed;
        case 0x259:
            eax = 0x471628;
            goto L004176ed;
        case 0x25a:
            eax = "\rGet Newsgroup";
            goto L004176ed;
        case 0x25b:
            eax = 0x47164c;
            goto L004176ed;
        case 0x25c:
            eax = "\rSet Newsgroup";
            goto L004176ed;
        case 0x25d:
            eax = 0x47166c;
            goto L004176ed;
        case 0x25e:
            eax = 0x471680;
            goto L004176ed;
        case 0x25f:
            eax = 0x471690;
            goto L004176ed;
        case 0x260:
            eax = "\rNews Messages";
            goto L004176ed;
        case 0x261:
            eax = 0x4716b4;
            goto L004176ed;
        case 0x262:
            eax = 0x4716c8;
            goto L004176ed;
        case 0x263:
            eax = 0x4716d8;
            goto L004176ed;
        case 0x264:
            eax = 0x4716ec;
            goto L004176ed;
        case 0x265:
            eax = 0x471700;
            goto L004176ed;
        case 0x266:
            eax = 0x471714;
            goto L004176ed;
        case 0x267:
            goto L004176e8;
        case 0x268:
            goto L004176e8;
        case 0x269:
            goto L004176e8;
        case 0x26a:
            goto L004176e8;
        case 0x26b:
            goto L004176e8;
        case 0x26c:
            goto L004176e8;
        case 0x26d:
            goto L004176e8;
        case 0x26e:
            goto L004176e8;
        case 0x26f:
            goto L004176e8;
        case 0x270:
            goto L004176e8;
        case 0x271:
            goto L004176e8;
        case 0x272:
            goto L004176e8;
        case 0x273:
            goto L004176e8;
        case 0x274:
            goto L004176e8;
        case 0x275:
            goto L004176e8;
        case 0x276:
            goto L004176e8;
        case 0x277:
            goto L004176e8;
        case 0x278:
            goto L004176e8;
        case 0x279:
            goto L004176e8;
        case 0x27a:
            goto L004176e8;
        case 0x27b:
            goto L004176e8;
        case 0x27c:
            goto L004176e8;
        case 0x27d:
            goto L004176e8;
        case 0x27e:
            goto L004176e8;
        case 0x27f:
            goto L004176e8;
        case 0x280:
            goto L004176e8;
        case 0x281:
            goto L004176e8;
        case 0x282:
            goto L004176e8;
        case 0x283:
            goto L004176e8;
        case 0x284:
            goto L004176e8;
        case 0x285:
            goto L004176e8;
        case 0x286:
            goto L004176e8;
        case 0x287:
            goto L004176e8;
        case 0x288:
            goto L004176e8;
        case 0x289:
            goto L004176e8;
        case 0x28a:
            goto L004176e8;
        case 0x28b:
            goto L004176e8;
        case 0x28c:
            goto L004176e8;
        case 0x28d:
            goto L004176e8;
        case 0x28e:
            goto L004176e8;
        case 0x28f:
            goto L004176e8;
        case 0x290:
            goto L004176e8;
        case 0x291:
            goto L004176e8;
        case 0x292:
            goto L004176e8;
        case 0x293:
            goto L004176e8;
        case 0x294:
            goto L004176e8;
        case 0x295:
            goto L004176e8;
        case 0x296:
            goto L004176e8;
        case 0x297:
            goto L004176e8;
        case 0x298:
            goto L004176e8;
        case 0x299:
            goto L004176e8;
        case 0x29a:
            goto L004176e8;
        case 0x29b:
            goto L004176e8;
        case 0x29c:
            goto L004176e8;
        case 0x29d:
            goto L004176e8;
        case 0x29e:
            goto L004176e8;
        case 0x29f:
            goto L004176e8;
        case 0x2a0:
            goto L004176e8;
        case 0x2a1:
            goto L004176e8;
        case 0x2a2:
            goto L004176e8;
        case 0x2a3:
            goto L004176e8;
        case 0x2a4:
            goto L004176e8;
        case 0x2a5:
            goto L004176e8;
        case 0x2a6:
            goto L004176e8;
        case 0x2a7:
            goto L004176e8;
        case 0x2a8:
            goto L004176e8;
        case 0x2a9:
            goto L004176e8;
        case 0x2aa:
            goto L004176e8;
        case 0x2ab:
            goto L004176e8;
        case 0x2ac:
            goto L004176e8;
        case 0x2ad:
            goto L004176e8;
        case 0x2ae:
            goto L004176e8;
        case 0x2af:
            goto L004176e8;
        case 0x2b0:
            goto L004176e8;
        case 0x2b1:
            goto L004176e8;
        case 0x2b2:
            goto L004176e8;
        case 0x2b3:
            goto L004176e8;
        case 0x2b4:
            goto L004176e8;
        case 0x2b5:
            goto L004176e8;
        case 0x2b6:
            goto L004176e8;
        case 0x2b7:
            goto L004176e8;
        case 0x2b8:
            goto L004176e8;
        case 0x2b9:
            goto L004176e8;
        case 0x2ba:
            goto L004176e8;
        case 0x2bb:
            goto L004176e8;
        case 0x2bc:
            eax = 0x47172c;
            goto L004176ed;
        case 0x2bd:
            eax = 0x471744;
            goto L004176ed;
        case 0x2be:
            eax = 0x471758;
            goto L004176ed;
        case 0x2bf:
            eax = 0x471770;
            goto L004176ed;
        case 0x2c0:
            goto L004176e8;
        case 0x2c1:
            goto L004176e8;
        case 0x2c2:
            goto L004176e8;
        case 0x2c3:
            goto L004176e8;
        case 0x2c4:
            goto L004176e8;
        case 0x2c5:
            goto L004176e8;
        case 0x2c6:
            eax = 0x471784;
            goto L004176ed;
        case 0x2c7:
            eax = 0x4717a0;
            goto L004176ed;
        case 0x2c8:
            eax = 0x4717bc;
            goto L004176ed;
        case 0x2c9:
            eax = 0x4717d8;
            goto L004176ed;
        case 0x2ca:
            goto L004176e8;
        case 0x2cb:
            goto L004176e8;
        case 0x2cc:
            goto L004176e8;
        case 0x2cd:
            goto L004176e8;
        case 0x2ce:
            goto L004176e8;
        case 0x2cf:
            goto L004176e8;
        case 0x2d0:
            eax = 0x4717f8;
            goto L004176ed;
        case 0x2d1:
            eax = 0x471814;
            goto L004176ed;
        case 0x2d2:
            goto L004176e8;
        case 0x2d3:
            goto L004176e8;
        case 0x2d4:
            goto L004176e8;
        case 0x2d5:
            goto L004176e8;
        case 0x2d6:
            goto L004176e8;
        case 0x2d7:
            goto L004176e8;
        case 0x2d8:
            goto L004176e8;
        case 0x2d9:
            goto L004176e8;
        case 0x2da:
            goto L004176e8;
        case 0x2db:
            goto L004176e8;
        case 0x2dc:
            goto L004176e8;
        case 0x2dd:
            goto L004176e8;
        case 0x2de:
            goto L004176e8;
        case 0x2df:
            goto L004176e8;
        case 0x2e0:
            goto L004176e8;
        case 0x2e1:
            goto L004176e8;
        case 0x2e2:
            goto L004176e8;
        case 0x2e3:
            goto L004176e8;
        case 0x2e4:
            goto L004176e8;
        case 0x2e5:
            goto L004176e8;
        case 0x2e6:
            goto L004176e8;
        case 0x2e7:
            goto L004176e8;
        case 0x2e8:
            goto L004176e8;
        case 0x2e9:
            goto L004176e8;
        case 0x2ea:
            goto L004176e8;
        case 0x2eb:
            goto L004176e8;
        case 0x2ec:
            goto L004176e8;
        case 0x2ed:
            goto L004176e8;
        case 0x2ee:
            goto L004176e8;
        case 0x2ef:
            goto L004176e8;
        case 0x2f0:
            goto L004176e8;
        case 0x2f1:
            goto L004176e8;
        case 0x2f2:
            goto L004176e8;
        case 0x2f3:
            goto L004176e8;
        case 0x2f4:
            goto L004176e8;
        case 0x2f5:
            goto L004176e8;
        case 0x2f6:
            goto L004176e8;
        case 0x2f7:
            goto L004176e8;
        case 0x2f8:
            goto L004176e8;
        case 0x2f9:
            goto L004176e8;
        case 0x2fa:
            goto L004176e8;
        case 0x2fb:
            goto L004176e8;
        case 0x2fc:
            goto L004176e8;
        case 0x2fd:
            goto L004176e8;
        case 0x2fe:
            goto L004176e8;
        case 0x2ff:
            goto L004176e8;
        case 0x300:
            goto L004176e8;
        case 0x301:
            goto L004176e8;
        case 0x302:
            goto L004176e8;
        case 0x303:
            goto L004176e8;
        case 0x304:
            goto L004176e8;
        case 0x305:
            goto L004176e8;
        case 0x306:
            goto L004176e8;
        case 0x307:
            goto L004176e8;
        case 0x308:
            goto L004176e8;
        case 0x309:
            goto L004176e8;
        case 0x30a:
            goto L004176e8;
        case 0x30b:
            goto L004176e8;
        case 0x30c:
            goto L004176e8;
        case 0x30d:
            goto L004176e8;
        case 0x30e:
            goto L004176e8;
        case 0x30f:
            goto L004176e8;
        case 0x310:
            goto L004176e8;
        case 0x311:
            goto L004176e8;
        case 0x312:
            goto L004176e8;
        case 0x313:
            goto L004176e8;
        case 0x314:
            goto L004176e8;
        case 0x315:
            goto L004176e8;
        case 0x316:
            goto L004176e8;
        case 0x317:
            goto L004176e8;
        case 0x318:
            goto L004176e8;
        case 0x319:
            goto L004176e8;
        case 0x31a:
            goto L004176e8;
        case 0x31b:
            goto L004176e8;
        case 0x31c:
            goto L004176e8;
        case 0x31d:
            goto L004176e8;
        case 0x31e:
            goto L004176e8;
        case 0x31f:
            goto L004176e8;
        case 0x320:
            eax = 0x47182c;
            goto L004176ed;
        case 0x321:
            eax = 0x471844;
            goto L004176ed;
        case 0x322:
            eax = 0x47185c;
            goto L004176ed;
        case 0x323:
            eax = 0x471870;
            goto L004176ed;
        case 0x324:
            eax = 0x471880;
            goto L004176ed;
        case 0x325:
            goto L004176e8;
        case 0x326:
            goto L004176e8;
        case 0x327:
            goto L004176e8;
        case 0x328:
            goto L004176e8;
        case 0x329:
            goto L004176e8;
        case 0x32a:
            goto L004176e8;
        case 0x32b:
            goto L004176e8;
        case 0x32c:
            goto L004176e8;
        case 0x32d:
            goto L004176e8;
        case 0x32e:
            goto L004176e8;
        case 0x32f:
            goto L004176e8;
        case 0x330:
            goto L004176e8;
        case 0x331:
            goto L004176e8;
        case 0x332:
            goto L004176e8;
        case 0x333:
            goto L004176e8;
        case 0x334:
            goto L004176e8;
        case 0x335:
            goto L004176e8;
        case 0x336:
            goto L004176e8;
        case 0x337:
            goto L004176e8;
        case 0x338:
            goto L004176e8;
        case 0x339:
            goto L004176e8;
        case 0x33a:
            goto L004176e8;
        case 0x33b:
            goto L004176e8;
        case 0x33c:
            goto L004176e8;
        case 0x33d:
            goto L004176e8;
        case 0x33e:
            goto L004176e8;
        case 0x33f:
            goto L004176e8;
        case 0x340:
            goto L004176e8;
        case 0x341:
            goto L004176e8;
        case 0x342:
            goto L004176e8;
        case 0x343:
            goto L004176e8;
        case 0x344:
            goto L004176e8;
        case 0x345:
            goto L004176e8;
        case 0x346:
            goto L004176e8;
        case 0x347:
            goto L004176e8;
        case 0x348:
            goto L004176e8;
        case 0x349:
            goto L004176e8;
        case 0x34a:
            goto L004176e8;
        case 0x34b:
            goto L004176e8;
        case 0x34c:
            goto L004176e8;
        case 0x34d:
            goto L004176e8;
        case 0x34e:
            goto L004176e8;
        case 0x34f:
            goto L004176e8;
        case 0x350:
            goto L004176e8;
        case 0x351:
            goto L004176e8;
        case 0x352:
            goto L004176e8;
        case 0x353:
            goto L004176e8;
        case 0x354:
            goto L004176e8;
        case 0x355:
            goto L004176e8;
        case 0x356:
            goto L004176e8;
        case 0x357:
            goto L004176e8;
        case 0x358:
            goto L004176e8;
        case 0x359:
            goto L004176e8;
        case 0x35a:
            goto L004176e8;
        case 0x35b:
            goto L004176e8;
        case 0x35c:
            goto L004176e8;
        case 0x35d:
            goto L004176e8;
        case 0x35e:
            goto L004176e8;
        case 0x35f:
            goto L004176e8;
        case 0x360:
            goto L004176e8;
        case 0x361:
            goto L004176e8;
        case 0x362:
            goto L004176e8;
        case 0x363:
            goto L004176e8;
        case 0x364:
            goto L004176e8;
        case 0x365:
            goto L004176e8;
        case 0x366:
            goto L004176e8;
        case 0x367:
            goto L004176e8;
        case 0x368:
            goto L004176e8;
        case 0x369:
            goto L004176e8;
        case 0x36a:
            goto L004176e8;
        case 0x36b:
            goto L004176e8;
        case 0x36c:
            goto L004176e8;
        case 0x36d:
            goto L004176e8;
        case 0x36e:
            goto L004176e8;
        case 0x36f:
            goto L004176e8;
        case 0x370:
            goto L004176e8;
        case 0x371:
            goto L004176e8;
        case 0x372:
            goto L004176e8;
        case 0x373:
            goto L004176e8;
        case 0x374:
            goto L004176e8;
        case 0x375:
            goto L004176e8;
        case 0x376:
            goto L004176e8;
        case 0x377:
            goto L004176e8;
        case 0x378:
            goto L004176e8;
        case 0x379:
            goto L004176e8;
        case 0x37a:
            goto L004176e8;
        case 0x37b:
            goto L004176e8;
        case 0x37c:
            goto L004176e8;
        case 0x37d:
            goto L004176e8;
        case 0x37e:
            goto L004176e8;
        case 0x37f:
            goto L004176e8;
        case 0x380:
            goto L004176e8;
        case 0x381:
            goto L004176e8;
        case 0x382:
            goto L004176e8;
        case 0x383:
            goto L004176e8;
        case 0x384:
            eax = 0x471898;
            goto L004176ed;
        case 0x385:
            eax = 0x4718ac;
            goto L004176ed;
        case 0x386:
            eax = 0x4718c0;
            goto L004176ed;
        case 0x387:
            eax = 0x4718d4;
            goto L004176ed;
        case 0x388:
            eax = 0x4718e8;
            goto L004176ed;
        case 0x389:
            eax = 0x4718fc;
            goto L004176ed;
        case 0x38a:
            goto L004176e8;
        case 0x38b:
            goto L004176e8;
        case 0x38c:
            goto L004176e8;
        case 0x38d:
            goto L004176e8;
        case 0x38e:
            goto L004176e8;
        case 0x38f:
            goto L004176e8;
        case 0x390:
            goto L004176e8;
        case 0x391:
            goto L004176e8;
        case 0x392:
            goto L004176e8;
        case 0x393:
            goto L004176e8;
        case 0x394:
            goto L004176e8;
        case 0x395:
            goto L004176e8;
        case 0x396:
            goto L004176e8;
        case 0x397:
            goto L004176e8;
        case 0x398:
            goto L004176e8;
        case 0x399:
            goto L004176e8;
        case 0x39a:
            goto L004176e8;
        case 0x39b:
            goto L004176e8;
        case 0x39c:
            goto L004176e8;
        case 0x39d:
            goto L004176e8;
        case 0x39e:
            goto L004176e8;
        case 0x39f:
            goto L004176e8;
        case 0x3a0:
            goto L004176e8;
        case 0x3a1:
            goto L004176e8;
        case 0x3a2:
            goto L004176e8;
        case 0x3a3:
            goto L004176e8;
        case 0x3a4:
            goto L004176e8;
        case 0x3a5:
            goto L004176e8;
        case 0x3a6:
            goto L004176e8;
        case 0x3a7:
            goto L004176e8;
        case 0x3a8:
            goto L004176e8;
        case 0x3a9:
            goto L004176e8;
        case 0x3aa:
            goto L004176e8;
        case 0x3ab:
            goto L004176e8;
        case 0x3ac:
            goto L004176e8;
        case 0x3ad:
            goto L004176e8;
        case 0x3ae:
            goto L004176e8;
        case 0x3af:
            goto L004176e8;
        case 0x3b0:
            goto L004176e8;
        case 0x3b1:
            goto L004176e8;
        case 0x3b2:
            goto L004176e8;
        case 0x3b3:
            goto L004176e8;
        case 0x3b4:
            goto L004176e8;
        case 0x3b5:
            goto L004176e8;
        case 0x3b6:
            goto L004176e8;
        case 0x3b7:
            goto L004176e8;
        case 0x3b8:
            goto L004176e8;
        case 0x3b9:
            goto L004176e8;
        case 0x3ba:
            goto L004176e8;
        case 0x3bb:
            goto L004176e8;
        case 0x3bc:
            goto L004176e8;
        case 0x3bd:
            goto L004176e8;
        case 0x3be:
            goto L004176e8;
        case 0x3bf:
            goto L004176e8;
        case 0x3c0:
            goto L004176e8;
        case 0x3c1:
            goto L004176e8;
        case 0x3c2:
            goto L004176e8;
        case 0x3c3:
            goto L004176e8;
        case 0x3c4:
            goto L004176e8;
        case 0x3c5:
            goto L004176e8;
        case 0x3c6:
            goto L004176e8;
        case 0x3c7:
            goto L004176e8;
        case 0x3c8:
            goto L004176e8;
        case 0x3c9:
            goto L004176e8;
        case 0x3ca:
            goto L004176e8;
        case 0x3cb:
            goto L004176e8;
        case 0x3cc:
            goto L004176e8;
        case 0x3cd:
            goto L004176e8;
        case 0x3ce:
            goto L004176e8;
        case 0x3cf:
            goto L004176e8;
        case 0x3d0:
            goto L004176e8;
        case 0x3d1:
            goto L004176e8;
        case 0x3d2:
            goto L004176e8;
        case 0x3d3:
            goto L004176e8;
        case 0x3d4:
            goto L004176e8;
        case 0x3d5:
            goto L004176e8;
        case 0x3d6:
            goto L004176e8;
        case 0x3d7:
            goto L004176e8;
        case 0x3d8:
            goto L004176e8;
        case 0x3d9:
            goto L004176e8;
        case 0x3da:
            goto L004176e8;
        case 0x3db:
            goto L004176e8;
        case 0x3dc:
            goto L004176e8;
        case 0x3dd:
            goto L004176e8;
        case 0x3de:
            goto L004176e8;
        case 0x3df:
            goto L004176e8;
        case 0x3e0:
            goto L004176e8;
        case 0x3e1:
            goto L004176e8;
        case 0x3e2:
            goto L004176e8;
        case 0x3e3:
            goto L004176e8;
        case 0x3e4:
            goto L004176e8;
        case 0x3e5:
            goto L004176e8;
        case 0x3e6:
            goto L004176e8;
        case 0x3e7:
            goto L004176e8;
        case 0x3e8:
            eax = 0x471914;
            goto L004176ed;
        case 0x3e9:
            eax = 0x471920;
            goto L004176ed;
        case 0x3ea:
            eax = 0x471930;
            goto L004176ed;
        case 0x3eb:
            eax = "\nVoice Data";
            goto L004176ed;
        case 0x3ec:
            goto L004176e8;
        case 0x3ed:
            goto L004176e8;
        case 0x3ee:
            goto L004176e8;
        case 0x3ef:
            goto L004176e8;
        case 0x3f0:
            goto L004176e8;
        case 0x3f1:
            goto L004176e8;
        case 0x3f2:
            goto L004176e8;
        case 0x3f3:
            goto L004176e8;
        case 0x3f4:
            goto L004176e8;
        case 0x3f5:
            goto L004176e8;
        case 0x3f6:
            goto L004176e8;
        case 0x3f7:
            goto L004176e8;
        case 0x3f8:
            goto L004176e8;
        case 0x3f9:
            goto L004176e8;
        case 0x3fa:
            goto L004176e8;
        case 0x3fb:
            goto L004176e8;
        case 0x3fc:
            goto L004176e8;
        case 0x3fd:
            goto L004176e8;
        case 0x3fe:
            goto L004176e8;
        case 0x3ff:
            goto L004176e8;
        case 0x400:
            goto L004176e8;
        case 0x401:
            goto L004176e8;
        case 0x402:
            goto L004176e8;
        case 0x403:
            goto L004176e8;
        case 0x404:
            goto L004176e8;
        case 0x405:
            goto L004176e8;
        case 0x406:
            goto L004176e8;
        case 0x407:
            goto L004176e8;
        case 0x408:
            goto L004176e8;
        case 0x409:
            goto L004176e8;
        case 0x40a:
            goto L004176e8;
        case 0x40b:
            goto L004176e8;
        case 0x40c:
            goto L004176e8;
        case 0x40d:
            goto L004176e8;
        case 0x40e:
            goto L004176e8;
        case 0x40f:
            goto L004176e8;
        case 0x410:
            goto L004176e8;
        case 0x411:
            goto L004176e8;
        case 0x412:
            goto L004176e8;
        case 0x413:
            goto L004176e8;
        case 0x414:
            goto L004176e8;
        case 0x415:
            goto L004176e8;
        case 0x416:
            goto L004176e8;
        case 0x417:
            goto L004176e8;
        case 0x418:
            goto L004176e8;
        case 0x419:
            goto L004176e8;
        case 0x41a:
            goto L004176e8;
        case 0x41b:
            goto L004176e8;
        case 0x41c:
            goto L004176e8;
        case 0x41d:
            goto L004176e8;
        case 0x41e:
            goto L004176e8;
        case 0x41f:
            goto L004176e8;
        case 0x420:
            goto L004176e8;
        case 0x421:
            goto L004176e8;
        case 0x422:
            goto L004176e8;
        case 0x423:
            goto L004176e8;
        case 0x424:
            goto L004176e8;
        case 0x425:
            goto L004176e8;
        case 0x426:
            goto L004176e8;
        case 0x427:
            goto L004176e8;
        case 0x428:
            goto L004176e8;
        case 0x429:
            goto L004176e8;
        case 0x42a:
            goto L004176e8;
        case 0x42b:
            goto L004176e8;
        case 0x42c:
            goto L004176e8;
        case 0x42d:
            goto L004176e8;
        case 0x42e:
            goto L004176e8;
        case 0x42f:
            goto L004176e8;
        case 0x430:
            goto L004176e8;
        case 0x431:
            goto L004176e8;
        case 0x432:
            goto L004176e8;
        case 0x433:
            goto L004176e8;
        case 0x434:
            goto L004176e8;
        case 0x435:
            goto L004176e8;
        case 0x436:
            goto L004176e8;
        case 0x437:
            goto L004176e8;
        case 0x438:
            goto L004176e8;
        case 0x439:
            goto L004176e8;
        case 0x43a:
            goto L004176e8;
        case 0x43b:
            goto L004176e8;
        case 0x43c:
            goto L004176e8;
        case 0x43d:
            goto L004176e8;
        case 0x43e:
            goto L004176e8;
        case 0x43f:
            goto L004176e8;
        case 0x440:
            goto L004176e8;
        case 0x441:
            goto L004176e8;
        case 0x442:
            goto L004176e8;
        case 0x443:
            goto L004176e8;
        case 0x444:
            goto L004176e8;
        case 0x445:
            goto L004176e8;
        case 0x446:
            goto L004176e8;
        case 0x447:
            goto L004176e8;
        case 0x448:
            goto L004176e8;
        case 0x449:
            goto L004176e8;
        case 0x44a:
            goto L004176e8;
        case 0x44b:
            goto L004176e8;
        case 0x44c:
            eax = 0x471950;
            goto L004176ed;
        case 0x44d:
            eax = 0x471968;
            goto L004176ed;
        case 0x44e:
            eax = 0x471980;
            goto L004176ed;
        case 0x44f:
            eax = 0x471998;
            goto L004176ed;
        case 0x450:
            eax = 0x4719ac;
            goto L004176ed;
        case 0x451:
            eax = 0x4719c0;
            goto L004176ed;
        case 0x452:
            eax = 0x4719d4;
            goto L004176ed;
        case 0x453:
            eax = 0x4719ec;
            goto L004176ed;
    }
    goto L004170b6;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    esp = esp - 0x10;
    edx = *ebx & 0xff;
    L0042C390(ebx + 1, edx);
    *ebx = al;
    ecx = *ebx & 0xff;
    L00437FE0(ebx + 1, ecx, 0x471a0c);
    if(al == 0) {
        goto L00417727;
    }
    *ebx = *ebx - 4;
    eax = *ebx & 0xff;
    L00437FE0(ebx + 1, eax, 0);
    if(al == 0) {
        goto L00417766;
    }
    L004377c0( *(ebp + 0xc), *(ebp + 0x10), ebp - 0x13, 0xf);
    *(ebp - 0x14) = al;
    if(*(ebp - 0x14) == 0) {
        goto L00417766;
    }
    eax = L00438060(ebx, ebp - 0x14);
    esp = ebp - 4;
    (restore)ebx;
    (restore)ebp;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    esp = esp - 0x100;
    ebx = *(ebp + 8);
    esi = ebp + -263;
    L0042C260(ebx, esi, 0xff);
    *(ebp + -264) = al;
    L00437FE0(esi, *(ebp + -264) & 0xff, 0x471a10);
    if(al == 0) {
        goto L004177ba;
    }
    *(ebp + -264) = *(ebp + -264) - 4;
    eax = L0042c230(ebx, ebp + -264);
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*	Procedure: 0x004177D0 - 0x00417CAF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004148A0()
 */

L004177D0(Ac, A10, A14)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    (save)edi;
    (save)ebp;
    esp = esp - 4;
    *esp = A14;
    *esp = *esp >> 2;
    edx = 0;
    esi = A10;
    ebx = Ac;
    eax = -1516147638;
    if(*esp > 0) {
        ecx = *esp - 8;
        if(*esp > 8) {
            *ebx = (-1516147638 << 8 & 16711680 | -1516147638 >> 0x18 | -1516147638 >> 8 & 65280 | -1516147638 << 0x18) ^ *esi;
            *(ebx + 4) = (-412640099 << 8 & 16711680 | -412640099 >> 0x18 | -412640099 >> 8 & 65280 | -412640099 << 0x18) ^ *(esi + 4);
            *(ebx + 8) = (-77626436 << 8 & 16711680 | -77626436 >> 0x18 | -77626436 >> 8 & 65280 | -77626436 << 0x18) ^ *(esi + 8);
            *(ebx + 0xc) = (-1530621225 << 8 & 16711680 | -1530621225 >> 0x18 | -1530621225 >> 8 & 65280 | -1530621225 << 0x18) ^ *(esi + 0xc);
            *(ebx + 0x10) = (20273118 << 8 & 16711680 | 20273118 >> 0x18 | 20273118 >> 8 & 65280 | 20273118 << 0x18) ^ *(esi + 0x10);
            *(ebx + 0x14) = (-1809756031 << 8 & 16711680 | -1809756031 >> 0x18 | -1809756031 >> 8 & 65280 | -1809756031 << 0x18) ^ *(esi + 0x14);
            *(ebx + 0x18) = (-308049616 << 8 & 16711680 | -308049616 >> 0x18 | -308049616 >> 8 & 65280 | -308049616 << 0x18) ^ *(esi + 0x18);
            *(ebx + 0x1c) = (-2112669669 << 8 & 16711680 | -2112669669 >> 0x18 | -2112669669 >> 8 & 65280 | -2112669669 << 0x18) ^ *(esi + 0x1c);
            eax = 1578124338;
            if(8 < ecx) {
                goto L00417810;
            }
        }
        if(8 < *esp) {
            *(ebx + 0x20) = (1578124338 << 8 & 16711680 | 1578124338 >> 0x18 | 1578124338 >> 8 & 65280 | 1578124338 << 0x18) ^ *(esi + 0x20);
            eax = -459184091;
            if(9 < *esp) {
                goto L004179e6;
            }
        }
    }
    esp = esp + 4;
    (restore)ebp;
    (restore)edi;
    return -459184091;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)ebp;
    ebp = *Ac << 8 & 16711680 | *Ac >> 0x18 | *Ac >> 8 & 65280 | *Ac << 0x18;
    ecx = *(Ac + 4) << 8 & 16711680 | *(Ac + 4) >> 0x18 | *(Ac + 4) >> 8 & 65280 | *(Ac + 4) << 0x18;
    eax = *(Ac + 8) << 8 & 16711680 | *(Ac + 8) >> 0x18 | *(Ac + 8) >> 8 & 65280 | *(Ac + 8) << 0x18;
    ebx = *(Ac + 0xc) << 8 & 16711680 | *(Ac + 0xc) >> 0x18 | *(Ac + 0xc) >> 8 & 65280 | *(Ac + 0xc) << 0x18;
    if(A10 == 0) {
        goto L00417bc1;
    }
    edi = ecx << 0xd;
    ecx = ((edi | ecx >> 0x13) ^ 1853750580) << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    esi = edi;
    edi = edi << 0x18;
    ecx = ecx | esi >> 8 & 65280 | edi;
    esi = eax;
    eax = eax << 0x1a;
    *edx = ecx;
    edi = ((esi >> 6 | eax) ^ -514663932) << 8 & 16711680;
    edi = edi | esi >> 0x18;
    eax = esi;
    esi = esi << 0x18;
    edi = edi | eax >> 8 & 65280 | esi;
    ecx = ebp << 7;
    *(edx + 4) = edi;
    esi = ((ebp >> 0x19 | ecx) ^ -1453689445) << 8 & 16711680;
    esi = esi | edi >> 0x18;
    esi = esi | edi >> 8 & 65280;
    esi = esi | edi << 0x18;
    *(edx + 8) = esi;
    ecx = ebx << 0x1d;
    eax = ((ecx | ebx >> 3) ^ 110702117) << 8 & 16711680;
    ebp = ecx;
    ebx = ecx;
    eax = eax | ebp >> 0x18;
    eax = eax | ebx >> 8 & 65280;
    *(edx + 0xc) = eax | ecx << 0x18;
    goto L00417ca6;
    esi = eax ^ -1453689445;
    edi = edi >> 7;
    eax = (esi << 0x19 | edi) << 8 & 16711680;
    eax = eax | esi >> 0x18;
    edi = esi;
    esi = esi << 0x18;
    eax = eax | edi >> 8 & 65280 | esi;
    esi = ebp ^ 1853750580;
    edi = edi << 0x13;
    edi = (esi >> 0xd | edi) << 8 & 16711680;
    edi = edi | esi >> 0x18;
    *edx = eax;
    eax = esi;
    esi = esi << 0x18;
    ebp = ecx ^ -514663932;
    edi = edi | eax >> 8 & 65280 | esi;
    eax = ebp;
    ebp = ebp >> 0x1a;
    esi = (eax << 6 | ebp) << 8 & 16711680;
    esi = esi | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    esi = esi | ecx >> 8 & 65280 | eax;
    eax = ebx ^ 110702117;
    ebp = ebp * 8;
    ebx = (eax >> 0x1d | ebp) << 8 & 16711680;
    ecx = eax;
    ebp = eax;
    ebx = ebx | ecx >> 0x18;
    ebx = ebx | ebp >> 8 & 65280;
    *(edx + 4) = edi;
    *(edx + 8) = esi;
    *(edx + 0xc) = ebx | eax << 0x18;
    (restore)ebp;
    (restore)edi;
}

/*	Procedure: 0x00417CB0 - 0x00417D7F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L00417CB0(A8)
/* unknown */ void  A8;
{



    esp = esp - 0x48;
    *(ebp - 4) = 0;
    L00434B20(ebp - 0x44, A8 + 1, *A8 & 0xff, 0x471a14, 1);
    eax = ebp - 0x48;
    L00434B00(ebp - 0x44, eax, 0);
    L00427940(eax, *(ebp - 0x48), 0x800);
    *(ebp - 4) = al;
    eax = ebp - 0x48;
    L00434B00(ebp - 0x44, eax, 0);
    L00427940(eax, *(ebp - 0x48), 0x800);
    *(ebp - 3) = al;
    edx = ebp - 0x48;
    L00434B00(ebp - 0x44, edx, 0);
    L00427940(eax, *(ebp - 0x48), 0x800);
    ecx = ebp - 0x48;
    *(ebp - 2) = al;
    L00434B00(ebp - 0x44, ecx, 0);
    L00427940(eax, *(ebp - 0x48), 0x800);
    *(ebp - 1) = al;
    return *(ebp - 4);
}

/*	Procedure: 0x00417D80 - 0x00417DC6
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401310()
 */

L00417D80(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    esp = esp - 0x18;
    ecx = A8;
    if(*(eax + 0x41) == 0) {
        goto L00417dc3;
    }
    *(eax + 0x41) = 0;
    if(*(ecx + 0x74) = *(ecx + 0x74) - 1) {
        goto L00417dc3;
    }
    *(ebp - 4) = esp;
    L0042EE40(0, 0, 0);
    goto L00417dc3;
    if(*(ebp - 0x10) == 0) {
        goto L00417dc0;
    }
    ecx = *(ebp - 0x18);
    eax = *(ebp - 0x10)(-1);
    esp = *(ebp - 4);
}

/*	Procedure: 0x00417E20 - 0x00417E8B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00406020()
 */

L00417E20(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(!(( *(Ac + 0x52) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    if(*(Ac + 0x41) != 0) {
        L00429610(65539);
    }
    eax = L00417EC0(A8, Ac, A10, 0, 0);
    if(*(A8 + 0x74) == 0) {
        eax = L0042EE40(0x417dd0, A8, 0);
    }
    *(A8 + 0x74) = *(A8 + 0x74) + 1;
    *(Ac + 0x41) = 1;
}

/*	Procedure: 0x00417E8C - 0x00417E8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00417E8C()
{



}

/*	Procedure: 0x00417E90 - 0x00417EBA
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00406020()
 */

L00417E90(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    if(*(eax + 0x41) != 0) {
        *(eax + 0x41) = 0;
        if(!( *(A8 + 0x74) = *(A8 + 0x74) - 1)) {
            eax = L0042EE40(0, 0, 0);
        }
    }
}

/*	Procedure: 0x00417EBB - 0x00417EBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00417EBB()
{



}

/*	Procedure: 0x00417EC0 - 0x0041833F
 *	Argument size: 12
 *	Local size: 56
 *	Save regs size: 12
 *	Called by:
 *		L00406020()
 *		L00417E20()
 */

L00417EC0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V34;



    esp = esp & -8;
    ebx = & V34;
    if(!(( *(Ac + 0x52) & 0xff) >> 7 & 1)) {
        L00429610(65556);
    }
    ecx = A8;
    L004011C0(Ac, 0x472bb0);
    eax = L0042E830(0, 0);
    *(ebx - 0x30) = eax;
    *(ebx - 0x28) = eax != 0 ? *(eax + 4) : 0;
    eax = eax + 8;
    *(ebx - 0x34) = eax;
    esi = eax;
    *(ebx - 0x2c) = 0x20;
    if(!(edx = *(ebx - 0x28) - 1)) {
        do {
            *(ebx - 0x2c) = *(ebx - 0x2c) + 0x3c;
            *(ebx - 0x2c) = *(ebx - 0x2c) + ( *( *(esi + 0x38)) & 0xff);
            *(ebx - 0x2c) = *(ebx - 0x2c) + ( *( *(esi + 0x3c)) & 0xff);
            *(ebx - 0x2c) = *(ebx - 0x2c) + ( *( *(esi + 0x40)) & 0xff);
            *(ebx - 0x2c) = *(ebx - 0x2c) + 3;
            *(ebx - 0x2c) = *(ebx - 0x2c) & -4;
            esi = esi + 0x48;
            eax = *(ebx - 0x2c);
        } while(edx = edx - 1);
    }
    eax = L0042E3A0( *(ebx - 0x2c));
    ecx = ebx - 0x10;
    *(ebx - 0x14) = eax;
    *(ebx - 0x18) = eax;
    L0042E490(ecx, ebx - 8, 0, 0);
    edi = *(ebx - 0xc);
    edx = *(ebx - 0x10);
    ecx = edi << 8;
    esi = 0;
    ecx = ecx & 16711680;
    ecx = ecx | edi >> 0x18;
    eax = edi;
    edi = edi << 0x18;
    ecx = ecx | eax >> 8 & 65280 | edi;
    esi = edx;
    *( *(ebx - 0x14)) = ecx;
    eax = *(ebx - 0x14);
    esi = esi << 8 & 16711680;
    esi = esi | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *(eax + 4) = esi | ecx >> 8 & 65280 | edx;
    edi = *(ebx - 4);
    esi = *(ebx - 8);
    edx = edi << 8;
    ecx = 0;
    edx = edx & 16711680;
    edx = edx | edi >> 0x18;
    eax = *(ebx - 0x14);
    ecx = edi;
    edi = edi << 0x18;
    *(eax + 8) = edx | ecx >> 8 & 65280 | edi;
    edx = esi << 8 & 16711680;
    edx = edx | esi >> 0x18;
    eax = esi;
    esi = esi << 0x18;
    edx = edx | eax >> 8 & 65280 | esi;
    *( *(ebx - 0x14) + 0xc) = edx;
    edi = *(ebx - 0x28);
    ecx = edi << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | edi >> 8 & 65280;
    ecx = ecx | edi << 0x18;
    *( *(ebx - 0x14) + 0x1c) = ecx;
    esi = *(ebx - 0x14) + 0x20;
    if(!( *(ebx - 0x28) = *(ebx - 0x28) - 1)) {
        do {
            ecx = *( *(ebx - 0x34));
            eax = ecx << 8 & 16711680;
            eax = eax | ecx >> 0x18;
            edi = ecx;
            ecx = ecx << 0x18;
            *esi = eax | edi >> 8 & 65280 | ecx;
            eax = *( *(ebx - 0x34) + 4);
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            *(esi + 4) = edx | ecx >> 8 & 65280 | eax;
            eax = *(ebx - 0x34);
            edx = *(eax + 8);
            edi = *(eax + 0xc);
            ecx = 0;
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            eax = edi;
            edi = edi << 0x18;
            *(esi + 8) = ecx | eax >> 8 & 65280 | edi;
            ecx = edx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            edi = edx;
            edx = edx << 0x18;
            *(esi + 0xc) = ecx | edi >> 8 & 65280 | edx;
            eax = *(ebx - 0x34);
            ecx = *(eax + 0x10);
            eax = *(eax + 0x14);
            edx = eax << 8;
            edi = 0;
            edx = edx & 16711680;
            edx = edx | eax >> 0x18;
            edi = eax;
            eax = eax << 0x18;
            *(esi + 0x10) = edx | edi >> 8 & 65280 | eax;
            edx = ecx << 8 & 16711680;
            edx = edx | ecx >> 0x18;
            eax = ecx;
            ecx = ecx << 0x18;
            *(esi + 0x14) = edx | eax >> 8 & 65280 | ecx;
            eax = *(ebx - 0x34);
            edx = *(eax + 0x18);
            edi = *(eax + 0x1c);
            ecx = 0;
            ecx = edi << 8 & 16711680;
            ecx = ecx | edi >> 0x18;
            eax = edi;
            edi = edi << 0x18;
            *(esi + 0x18) = ecx | eax >> 8 & 65280 | edi;
            ecx = edx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            edi = edx;
            edx = edx << 0x18;
            *(esi + 0x1c) = ecx | edi >> 8 & 65280 | edx;
            eax = *( *(ebx - 0x34) + 0x20);
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            edx = eax;
            eax = eax << 0x18;
            *(esi + 0x20) = ecx | edx >> 8 & 65280 | eax;
            ecx = *( *(ebx - 0x34) + 0x24);
            edi = ecx << 8 & 16711680;
            edi = edi | ecx >> 0x18;
            eax = ecx;
            ecx = ecx << 0x18;
            *(esi + 0x24) = edi | eax >> 8 & 65280 | ecx;
            *(esi + 0x28) = *( *(ebx - 0x34) + 0x28) & 0xff;
            *(esi + 0x29) = *( *(ebx - 0x34) + 0x29) & 0xff;
            *(ebx - 0x1c) = *( *( *(ebx - 0x34) + 0x38)) & 0xff;
            *(esi + 0x3a) = *(ebx - 0x1c);
            *(ebx - 0x24) = *( *( *(ebx - 0x34) + 0x3c)) & 0xff;
            *(esi + 0x3b) = *(ebx - 0x24);
            *(ebx - 0x20) = *( *( *(ebx - 0x34) + 0x40)) & 0xff;
            *(esi + 0x39) = *(ebx - 0x20);
            edi = esi + 0x3c;
            edi = edi + L00428EA0( *( *(ebx - 0x34) + 0x38), edi, 0xff);
            L00428EA0( *( *(ebx - 0x34) + 0x40), edi + L00428EA0( *( *(ebx - 0x34) + 0x3c), edi, 0xff), 0xff);
            ecx = ( *(ebx - 0x1c) & 0xff) + 0x3f;
            edx = ( *(ebx - 0x24) & 0xff) + ecx;
            *(ebx - 0x34) = *(ebx - 0x34) + 0x48;
            *(ebx - 0x28) = *(ebx - 0x28) - 1;
        } while(esi = (edx + ( *(ebx - 0x20) & 0xff) & -4) + esi);
    }
    L00431A10( *(Ac + 8), 0x323, A10, *(ebx - 0x14), *(ebx - 0x2c));
    L00416790(A8, Ac, 0x322, 0, 0, 0, 0);
    L0042E3E0(ebx - 0x18);
    return L0042E3E0(ebx - 0x30);
}

/*	Procedure: 0x00418340 - 0x00418461
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00406020()
 */

L00418340(A8, Ac, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;



    (save)esi;
    (save)edi;
    if(!(( *(Ac + 0x52) & 0xff) >> 6 & 1)) {
        L00429610(65556);
    }
    if(A18 < 0xc) {
        L00429610(65538);
    }
    edi = A14;
    edx = *edi;
    esi = edx << 8 & 16711680;
    A8 = edx;
    eax = edx;
    esi = esi | A8 >> 0x18;
    esi = esi | eax >> 8 & 65280;
    esi = esi | edx << 0x18;
    ebx = 8;
    if(!(esi & 1)) {
        ebx = 9;
    } else {
        if(!(esi & 2)) {
            ebx = ebx | 2;
        } else {
            L00429610(65538);
        }
    }
    if(!(esi & 4)) {
        ebx = ebx | 4;
    }
    eax = *(edi + 4);
    A8 = *(edi + 8);
    edi = A8 << 8 & 16711680;
    edi = edi | A8 >> 0x18;
    edx = A8;
    A8 = A8 << 0x18;
    edi = edi | edx >> 8 & 65280 | A8;
    esi = eax << 8 & 16711680;
    edx = eax;
    A8 = eax;
    esi = esi | edx >> 0x18;
    esi = esi | A8 >> 8 & 65280;
    L0042ECF0(esi | eax << 0x18, edi, ebx);
    L004011C0(Ac, 0x472bc4);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return L00416790(A8, Ac, 0x324, 0, 0, 0, 0);
}

/*	Procedure: 0x00418462 - 0x0041846F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00418462()
{



}

/*	Procedure: 0x00418470 - 0x00418734
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00418740()
 */

L00418470(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    edx = A8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x1c;
    *(ebp - 0x1c) = Ac;
    *(ebp - 0x1c) = *(ebp - 0x1c) << 1;
    *(ebp - 0x1c) = *(ebp - 0x1c) + edx;
    edi = edx;
    *(ebp - 0x28) = A10;
    *(ebp - 0x20) = edx;
    if(edx < *(ebp - 0x1c)) {
        do {
            eax = *(ebp - 0x1c);
            *(ebp - 0x10) = edi;
            *(ebp - 0x10) = *(ebp - 0x10) + 8190;
            *(ebp - 0x24) = edi;
            if(*(ebp - 0x10) > eax) {
                *(ebp - 0x10) = eax;
            }
            edx = edx | -1;
            ebx = 0;
            ecx = edx;
            if(edi < *(ebp - 0x10)) {
                do {
                    esi = *edi & 65535;
                    edi = edi + 2;
                    if(esi != ecx) {
                        if(esi != edx) {
                            if(ecx != -1) {
                                if(edx != -1) {
                                    goto L00418500;
                                }
                                ebx = ebx + ebx | 1;
                                edx = esi;
                            } else {
                                ecx = esi;
                            }
                        } else {
                            ebx = ebx + ebx | 1;
                        }
                    } else {
                        ebx = ebx + ebx;
                    }
                } while(edi < *(ebp - 0x10));
                goto L0041850a;
L00418500:
                edi = edi - 2;
            }
L0041850a:
            ecx = cx & 65535;
            *(ebp - 0x18) = ecx;
            *(ebp - 0x18) = *(ebp - 0x18) << 8;
            *(ebp - 0x18) = *(ebp - 0x18) | *(ebp - 0x18) >> 8;
            *(ebp - 0x18) = *(ebp - 0x18) & 65535;
            eax = dx & 65535;
            *(ebp - 0x14) = eax;
            *(ebp - 0x14) = *(ebp - 0x14) << 8;
            *(ebp - 0x14) = *(ebp - 0x14) | *(ebp - 0x14) >> 8;
            *(ebp - 0x14) = *(ebp - 0x14) & 65535;
            eax = *(ebp - 0x24);
            *(ebp - 0x10) = edi;
            *(ebp - 0x10) = *(ebp - 0x10) - eax;
            *(ebp - 0x10) :: -2147483648;
            asm("sbb dword [ebp-0x10],-0x1");
            *(ebp - 0x10) = *(ebp - 0x10) >> 1;
            if(*(ebp - 0x10) >= 4) {
                edx = eax - *(ebp - 0x20);
                edx :: -2147483648;
                asm("sbb edx,-0x1");
                edx = edx >> 1;
                if(edx != 0) {
                    esi = edx + edx;
                    L004342A0( *(ebp - 0x28), *(ebp - 0x20), esi);
                    *(ebp - 0x28) = *(ebp - 0x28) + esi;
                }
                *(ebp - 0x14) = *(ebp - 0x14) & 32767;
                *(ebp - 0x20) = edi;
                if(*(ebp - 0x10) > 0xc) {
                    esi = *(ebp - 0x18) | 32768;
                    esi = si & 65535;
                    ebx = esi;
                    esi = esi >> 8;
                    ebx = ebx << 8 | esi;
                    *( *(ebp - 0x28)) = bx;
                    edx = *(ebp - 0x10);
                    eax = *(ebp - 0x28);
                    edx = (edx | 32768) & 65535;
                    ecx = edx << 8;
                    *(eax + 2) = ecx | edx >> 8;
                    eax = *(ebp - 0x14) & 65535;
                    esi = eax;
                    eax = eax >> 8;
                    esi = esi << 8 | eax;
                    *( *(ebp - 0x28) + 4) = si;
                    *(ebp - 0x14) = *(ebp - 0x10);
                    *(ebp - 0x14) = *(ebp - 0x14) + 0xf;
                    *(ebp - 0x14) = *(ebp - 0x14) & -16;
                    *(ebp - 0x14) = *(ebp - 0x14) >> 3;
                    L00434150( *(ebp - 0x28) + 6, *(ebp - 0x14));
                    eax = si & 65535;
                    esi = 0;
                    *(ebp - 0x18) = eax;
                    if(*(ebp - 0x10) > 0) {
                        do {
                            if(*(ebp - 0x18) == ( *( *(ebp - 0x24) + esi * 2) & 65535)) {
                                edx = esi;
                                al = 7 & dl;
                                cl = 7 - al;
                                bl = 1 << cl;
                                eax = *(ebp - 0x28);
                                edx = edx >> 3;
                                *(edx + eax + 6) = *(edx + eax + 6) | bl;
                            }
                            esi = esi + 1;
                        } while(esi < *(ebp - 0x10));
                    }
                    *(ebp - 0x28) = *(ebp - 0x28) + 6;
                    *(ebp - 0x28) = *(ebp - 0x28) + *(ebp - 0x14);
                    eax = *(ebp - 0x28);
                } else {
                    if(ebx == 0) {
                        edx = *(ebp - 0x18) | 32768;
                        edx = dx & 65535;
                        ebx = edx << 8;
                        edx = edx >> 8;
                        ebx = ebx | edx;
                        *( *(ebp - 0x28)) = bx;
                        eax = *(ebp - 0x10) & 65535;
                        ecx = eax;
                        eax = eax >> 8;
                        ecx = ecx << 8 | eax;
                        *( *(ebp - 0x28) + 2) = cx;
                        *(ebp - 0x28) = *(ebp - 0x28) + 4;
                    } else {
                        edx = *(ebp - 0x18) | 32768;
                        edx = dx & 65535;
                        ecx = edx;
                        *(ebp - 0x10) = *(ebp - 0x10) << 0xc;
                        *(ebp - 0x10) = *(ebp - 0x10) | ebx;
                        *(ebp - 0x14) = *(ebp - 0x14) | *(ebp - 0x10) & 32768;
                        ecx = ecx << 8;
                        edx = edx >> 8;
                        ecx = ecx | edx;
                        *( *(ebp - 0x28)) = cx;
                        eax = *(ebp - 0x10) | 32768;
                        eax = ax & 65535;
                        ebx = eax;
                        eax = eax >> 8;
                        ebx = ebx << 8 | eax;
                        *( *(ebp - 0x28) + 2) = bx;
                        esi = *(ebp - 0x14) & 65535;
                        ecx = esi << 8;
                        ecx = ecx | esi >> 8;
                        *( *(ebp - 0x28) + 4) = cx;
                        *(ebp - 0x28) = *(ebp - 0x28) + 6;
                    }
                }
            }
        } while(edi < *(ebp - 0x1c));
    }
    eax = edi - *(ebp - 0x20);
    eax :: -2147483648;
    asm("sbb eax,-0x1");
    eax = eax >> 1;
    if(eax != 0) {
        ebx = eax + eax;
        L004342A0( *(ebp - 0x28), *(ebp - 0x20), ebx);
        *(ebp - 0x28) = *(ebp - 0x28) + ebx;
    }
    eax = *(ebp - 0x28);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00418735 - 0x0041873F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00418735()
{



}

/*	Procedure: 0x00418740 - 0x0041884C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00418850()
 *		L00418DBB()
 */

L00418740(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A8;
    (save)edi;
    esp = esp - 8;
    *(ebp - 0x14) = Ac;
    *(ebp - 0x14) = *(ebp - 0x14) << 1;
    *(ebp - 0x14) = *(ebp - 0x14) + esi;
    ebx = esi;
    eax = A10;
    *(ebp - 0x10) = esi;
    if(esi < *(ebp - 0x14)) {
        do {
            ecx = ebx;
            edx = ecx + 65534;
            edi = *ebx & 65535;
            ebx = ebx + 2;
            if(edx > *(ebp - 0x14)) {
                edx = *(ebp - 0x14);
            }
            do {
                if(ebx >= edx) {
                    goto L004187a4;
                }
                esi = *ebx & 65535;
                ebx = ebx + 2;
            } while(esi == edi);
            ebx = ebx - 2;
L004187a4:
            edx = di & 65535;
            esi = edx << 8;
            esi = esi | edx >> 8;
            edi = ebx - ecx;
            edi :: -2147483648;
            asm("sbb edi,-0x1");
            edi >> 1 :: 0xa;
            if(!(esi = si & 65535)) {
                edx = ecx - *(ebp - 0x10);
                edx :: -2147483648;
                asm("sbb edx,-0x1");
                edx = edx >> 1;
                if(edx != 0) {
                    eax = L00418470( *(ebp - 0x10), edx, eax);
                }
                ecx = esi | 32768;
                ecx = cx & 65535;
                esi = ecx;
                ecx = ecx >> 8;
                esi = esi << 8 | ecx;
                edx = di & 65535;
                ecx = edx << 8;
                ecx = ecx | edx >> 8;
                *(ebp - 0x10) = ebx;
                *eax = si;
                *(eax + 2) = cx;
                eax = eax + 4;
            }
        } while(ebx < *(ebp - 0x14));
    }
    esi = ebx - *(ebp - 0x10);
    esi :: -2147483648;
    asm("sbb esi,-0x1");
    esi = esi >> 1;
    if(esi != 0) {
        eax = L00418470( *(ebp - 0x10), esi, eax);
    }
    eax = eax - A10;
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0041884D - 0x0041884F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041884D()
{



}

/*	Procedure: 0x00418850 - 0x00418D31
 *	Argument size: 4
 *	Local size: 140
 *	Save regs size: 12
 *	Called by:
 *		L00418DBB()
 */

L00418850(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff7c;
	/* unknown */ void  Vffffff80;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff88;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff9c;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    Vffffffb8 = esp;
    Vffffffe0 = L0041FFD0(0, 0, 0);
    goto L004188a7;
    if(*Vffffffb0 == 65556) {
        L00429610(6553606);
    }
    L004234F0(0, 0, 0);
    if(Vffffffac != 0) {
        (save)-1;
        ecx = Vffffffa4;
        Vffffffac();
    }
    esp = *(ebp - 0x48);
L004188a7:
    eax = Vffffffe0;
    Vffffff74 = eax;
    L00449340(Vffffff74, & Vfffffff0, & Vffffffe4);
    eax = Vffffffe0;
    Vffffffd8 = *(eax + 0xc);
    Vffffffec = *(eax + 0x18);
    eax = A8;
    ecx = *(eax + 0x2e8);
    Vffffff78 = ecx;
    if(ecx == 0 || ( *(eax + 0x2e4) & 65535) != Vfffffff0 || ( *(A8 + 0x2e6) & 65535) != Vffffffe4) {
        L0042E3E0(A8 + 0x2e8);
        eax = Vfffffff0;
        eax = L0042E310(Vffffffe4 * Vffffffe4 + Vffffffe4 * Vffffffe4);
        *(A8 + 0x2e8) = eax;
        edi = Vfffffff0;
        *(A8 + 0x2e4) = di;
        esi = Vffffffe4;
        *(A8 + 0x2e6) = si;
        if(!(Vffffffe4 = Vffffffe4 - 1)) {
            do {
                ebx = 0;
                if(Vfffffff0 > 0) {
                    edx = eax;
                    do {
                        edi = *(Vffffffec + ebx * 4);
                        ecx = edi;
                        esi = edi;
                        ecx = ecx >> 0xe & 0x3e0;
                        ecx = ecx | esi >> 1 & 31744;
                        ecx = ecx | edi >> 0x1b;
                        if((cx & 65535) == 27737) {
                            ecx = 27738;
                        }
                        ecx = cx & 65535;
                        esi = ecx << 8;
                        esi = esi | ecx >> 8;
                        *edx = si;
                        ebx = ebx + 1;
                        edx = edx + 2;
                    } while(ebx < Vfffffff0);
                }
                Vffffffec = Vffffffec + Vffffffd8;
                eax = eax + Vfffffff0 + Vfffffff0;
                ecx = Vffffffec;
            } while(Vffffffe4 = Vffffffe4 - 1);
        }
        Vffffffe0 = *(A8 + 0x2e8);
        Vffffff84 = 0;
        Vffffffe8 = 0;
        Vffffffd4 = Vfffffff0;
        Vffffffdc = Vffffffe4;
    } else {
        Vffffff80 = Vffffffec;
        Vffffff84 = 65535;
        Vffffffe8 = 65535;
        Vffffffd4 = 0;
        Vffffffdc = 0;
        Vffffffa0 = 0;
        if(Vffffffe4 > 0) {
            do {
                esi = 0;
                Vffffff7c = -1;
                if(Vfffffff0 > 0) {
                    ecx = Vffffff78;
                    *(ebp + -144) = Vffffff80;
                    do {
                        edi = *(Vffffffec + esi * 4);
                        eax = edi;
                        ebx = edi;
                        eax = eax >> 0xe & 0x3e0;
                        eax = eax | ebx >> 1 & 31744;
                        eax = eax | edi >> 0x1b;
                        eax = ax & 65535;
                        if(eax == 27737) {
                            eax = 27738;
                        }
                        edx = *ecx & 65535;
                        ebx = ax & 65535;
                        edi = ebx;
                        ebx = ebx >> 8;
                        edi = edi << 8 | ebx;
                        ebx = edx << 8;
                        ebx = ebx | edx >> 8;
                        *ecx = di;
                        edi = eax;
                        if((bx & 65535) != eax) {
                            Vffffff7c = esi;
                            if(esi < Vffffff84) {
                                Vffffff84 = esi;
                            }
                        } else {
                            edi = 27737;
                        }
                        ebx = di & 65535;
                        edx = ebx << 8;
                        edx = edx | ebx >> 8;
                        eax = *(ebp + -144);
                        esi = esi + 1;
                        *eax = dx;
                        ecx = ecx + 2;
                        *(ebp + -144) = *(ebp + -144) + 2;
                    } while(esi < Vfffffff0);
                }
                if(Vffffff7c != -1) {
                    if(Vffffff7c > Vffffffd4) {
                        Vffffffd4 = Vffffff7c;
                    }
                    Vffffffdc = Vffffffa0;
                    if(Vffffffa0 < Vffffffe8) {
                        Vffffffe8 = Vffffffa0;
                    }
                }
                edi = Vfffffff0 + Vfffffff0;
                Vffffff78 = Vffffff78 + edi;
                Vffffff80 = Vffffff80 + edi;
                Vffffffa0 = Vffffffa0 + 1;
                Vffffffa0 :: Vffffffe4;
            } while(Vffffffec = Vffffffec + Vffffffd8);
        }
        if(Vffffffdc < Vffffffe8) {
            return L004492F0( & Vffffff74);
        }
        Vffffffdc = Vffffffdc + 1;
        Vffffffd4 = Vffffffd4 + 1;
        Vffffffe0 = *(Vffffffe0 + 0x18);
    }
    if(*(A8 + 0x2dc) == 0) {
        esp = ebp - 0xc;
        return L004492F0( & Vffffff74);
    }
    eax = *(A8 + 0x2e4) & 65535;
    eax = ( *(A8 + 0x2e6) & 65535) * ( *(A8 + 0x2e6) & 65535);
    Vffffffd8 = eax;
    eax = L0042E310(eax + eax + 0xc);
    esi = di & 65535;
    ecx = esi;
    esi = esi >> 8;
    ecx = ecx << 8 | esi;
    Vffffff80 = eax;
    *(ebp + -152) = eax;
    *Vffffff80 = cx;
    eax = bx & 65535;
    edx = eax;
    eax = eax >> 8;
    edx = edx << 8 | eax;
    *(Vffffff80 + 2) = dx;
    ecx = Vffffff84 & 65535;
    esi = ecx;
    ecx = ecx >> 8;
    esi = esi << 8 | ecx;
    *(Vffffff80 + 4) = si;
    edx = Vffffffe8 & 65535;
    ebx = edx;
    edx = edx >> 8;
    ebx = ebx << 8 | edx;
    *(Vffffff80 + 6) = bx;
    eax = Vffffffd4 & 65535;
    esi = eax;
    eax = eax >> 8;
    esi = esi << 8 | eax;
    *(Vffffff80 + 8) = si;
    ecx = Vffffffdc & 65535;
    ebx = ecx << 8;
    *(Vffffff80 + 0xa) = ebx | ecx >> 8;
    ecx = A8;
    edx = *(ecx + 0x2dc);
    eax = L00418740(Vffffffe0, Vffffffd8, Vffffff80 + 0xc) + 0xc;
    esi = *(ecx + 0x2d8);
    ebx = 0;
    Vffffffe8 = edx;
    if(edx > 0) {
        Vffffffdc = eax;
        do {
            edi = *(esi + ebx * 4);
            Vffffffd0 = esp;
            if(L00433380( *(edi + 4)) > 8388608) {
                L00429610(262262);
            }
            L00431A10( *(edi + 8), 0x387, 0, Vffffff80, Vffffffdc);
L00418d04:
            ebx = ebx + 1;
        } while(ebx < Vffffffe8);
        goto L00418d10;
        *(ebp + -148) = Vffffffc8;
        Vffffff9c = esp;
        L00432B90( *(edi + 4));
        if(*(edi + 0x3b) != 0) {
            L00431C20( *( *(edi + 0x168) + 8), 0, *( *(ebp + -148)), 0x387);
            goto L00418cf3;
            if(Vffffff90 != 0) {
                (save)-1;
                ecx = Vffffff88;
                Vffffff90();
            }
            esp = *(ebp - 0x64);
        }
L00418cf3:
        if(Vffffffc4 != 0) {
            (save)-1;
            ecx = Vffffffbc;
            Vffffffc4();
        }
        esp = *(ebp - 0x30);
        goto L00418d04;
    }
L00418d10:
    L0042E3E0(ebp + -152);
    esp = ebp - 0xc;
    return L004492F0( & Vffffff74);
}

/*	Procedure: 0x00418D32 - 0x00418D3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00418D32()
{



}

/*	Procedure: 0x00418D55 - 0x00418D5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00418D55()
{



}

/*	Procedure: 0x00418DBB - 0x00418FB7
 *	Argument size: 8
 *	Local size: 32
 *	Save regs size: 12
 */

L00418DBB(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(!(( *(Ac + 0x50) & 0xff) >> 5 & 1)) {
        L00429610(65556);
    }
    if(*(Ac + 0x16c) != 0) {
        L00429610(65539);
    }
    if(*(Ac + 0x1ba) != 0) {
        L00429610(65539);
    }
    ecx = A8;
    L004011C0(Ac, 0x472be4);
    L00418850(A8);
    *(A8 + 0x2f0) = 0;
    if(*(A8 + 0x2ec) == 0) {
        *(A8 + 0x2ec) = L0042F070(0x418d60, A8);
    }
    L0042F1C0( *(A8 + 0x2ec), 0x5dc, 1);
    *(ebp - 0x24) = *(A8 + 0x2e4) & 65535;
    Vffffffe0 = *(A8 + 0x2e6) & 65535;
    eax = *(ebp - 0x24);
    eax = Vffffffe0 * Vffffffe0;
    *(ebp - 0x2c) = eax;
    edi = L0042E310( *(ebp - 0x2c) + *(ebp - 0x2c) + 0xc);
    edx = *(ebp - 0x24) & 65535;
    ecx = edx;
    edx = edx >> 8;
    ecx = ecx << 8 | edx;
    *(ebp - 0x28) = edi;
    *edi = cx;
    eax = Vffffffe0 & 65535;
    edx = eax << 8;
    edx = edx | eax >> 8;
    *(edi + 2) = dx;
    *(edi + 4) = 0;
    *(edi + 6) = 0;
    *(edi + 8) = cx;
    *(edi + 0xa) = *(edi + 2);
    *(ebp - 0x2c) = L00418740( *(A8 + 0x2e8), *(ebp - 0x2c), edi + 0xc);
    eax = !(( *(Ac + 0x50) & 0xff) >> 4 & 1) ? 1 : 0;
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edx = edx | eax >> 8 & 65280;
    edx = edx | eax << 0x18;
    Vffffffe4 = edx;
    Vffffffe8 = 0;
    Vffffffec = 0;
    Vfffffff0 = 0;
    L00431A10( *(Ac + 8), 0x386, 0, & Vffffffe4, 0x10);
    L00431A10( *(Ac + 8), 0x387, 0, edi, *(ebp - 0x2c) + 0xc);
    *(Ac + 0x16c) = 0x384;
    *(Ac + 0x1ba) = 1;
    if(Ac == 0) {
        L00429610(65538);
    }
    L00429A00(A8 + 0x2d8, Ac);
    L00416790(A8, Ac, 0x384, 0, 0, 0, 0);
    return L0042E3E0(ebp - 0x28);
}

/*	Procedure: 0x00418FB8 - 0x0041923F
 *	Argument size: 20
 *	Local size: 36
 *	Save regs size: 12
 */

L00418FB8(A8, Ac, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V14;
	/* unknown */ void  V16;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;
	/* unknown */ void  V24;
	/* unknown */ void  V28;
	/* unknown */ void  Vfffffffc;



    esp = esp & -8;
    edi = Ac;
    ebx = A8;
    if(!(( *(edi + 0x50) & 0xff) >> 4 & 1)) {
        eax = L00429610(65556);
    }
    if(*(edi + 0x1ba) == 0) {
        return;
    }
    if(A18 < 0xc) {
        esp = ebp - 0xc;
        return;
    }
    esi = A14;
    L00434150( & Vfffffffc, 0x20);
    eax = *esi;
    edi = eax << 8 & 16711680;
    edi = edi | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    V8 = edi | edx >> 8 & 65280 | eax;
    ecx = *(esi + 4) & 65535;
    edx = ecx;
    ecx = ecx >> 8;
    edx = edx << 8 | ecx;
    Vc = dx & 65535;
    eax = *(esi + 6) & 65535;
    edx = eax;
    eax = eax >> 8;
    edx = edx << 8 | eax;
    V10 = dx & 65535;
    ecx = *(esi + 8) & 65535;
    edx = ecx << 8;
    V16 = edx | ecx >> 8;
    V14 = *(esi + 0xa) & 0xff;
    edx = ( *(esi + 0xb) & 0xff) - 1;
    if(edx <= 3) {
        switch(edx) {
            case 0:
L004190a3:
                edi = 9;
                goto L004190c8;
            case 1:
                edi = 0xa;
                goto L004190c8;
            case 2:
                edi = 0xd;
                goto L004190c8;
            case 3:
                edi = 0xe;
                goto L004190c8;
        }
        goto L004190a3;
    }
    esp = ebp - 0xc;
    return;
    V14 = edi;
    (save)0;
    L00420270( & Vc);
    (restore)ecx;
    if(edi != 0xa || *(ebx + 0x2f0) != 0) {
        goto L00419101;
    }
    L0042F1C0( *(ebx + 0x2ec), 0x64, 0);
    *(ebx + 0x2f0) = 1;
    esp = ebp - 0xc;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x1c;
    esp = esp & -8;
    ebx = A8;
    if(( *(Ac + 0x50) & 0xff) >> 4 & 1) {
        goto L0041913c;
    }
    L00429610(65556);
    if(*(edi + 0x1ba) != 0) {
        goto L00419150;
    }
    esp = ebp - 0xc;
    return;
    if(A18 >= 0xc) {
        goto L00419160;
    }
    esp = ebp - 0xc;
    return;
    esi = A14;
    L00434150( & V10, 0x18);
    edi = *esi << 8 & 16711680;
    edi = edi | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    V1c = edi | ecx >> 8 & 65280 | eax;
    ecx = *(esi + 4) & 65535;
    edx = edx >> 8;
    V20 = (ecx << 8 | edx) & 65535;
    ecx = ( *(esi + 6) & 65535) << 8;
    V24 = ecx | eax >> 8;
    if(( *(esi + 0xb) & 0xff) - 1 > 2) {
        goto L004191f0;
    }
    goto ( *(edx * 4 + 0x472d90));
    edi = 5;
    goto L004191f8;
    edi = 6;
    goto L004191f8;
    edi = 7;
    goto L004191f8;
    esp = ebp - 0xc;
    return;
    V28 = edi;
    (save)0;
    L00420380( & V20);
    (restore)ecx;
    if(edi != 5 || *(ebx + 0x2f0) != 0) {
        goto L00419231;
    }
    L0042F1C0( *(ebx + 0x2ec), 0x64, 0);
    *(ebx + 0x2f0) = 1;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00419240 - 0x004192D1
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401000()
 *		L0040BCF0()
 *		L004196E0()
 *		L0044602B()
 *		L0046279D()
 */

L00419240(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    esp = esp - 0x1c;
    if(A8 >= 0x28) {
        goto L00419253;
    }
    eax = L0042E3A0(0x28);
    *(ebp - 0x1c) = eax;
    *(ebp - 4) = esp;
    eax = L0041C5A0( *(ebp - 0x1c), Ac, A10, A14, A18);
    *( *(ebp - 0x1c) + 0xc) = eax;
    goto L004192a6;
    L0042E3E0(ebp - 0x1c);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x10) == 0) {
        goto L004192a3;
    }
    (save)-1;
    ecx = *(ebp - 0x18);
    *(ebp - 0x10)();
    esp = *(ebp - 4);
    L0041B560( *( *(ebp - 0x1c) + 0xc), 0x47fc6c);
    *( *(ebp - 0x1c)) = 1448466561;
    *( *(ebp - 0x1c) + 4) = 0x47fba8;
    return *(ebp - 0x1c);
}

/*	Procedure: 0x004192E0 - 0x0041930F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401000()
 *		L0040BCF0()
 *		L0040CFF0()
 *		L00415380()
 *		L004154F0()
 *		L00415790()
 *		L004196E0()
 *		L00419A09()
 *		L0044602B()
 *		L0046279D()
 *		L00464B80()
 */

L004192E0(A8)
/* unknown */ void  A8;
{



    edx = *A8;
    if(edx == 0) {
        return;
    }
    *A8 = 0;
    if(*edx != 1448466561) {
        esp = ebp;
        return;
    }
    eax = L0041C860(edx + 0xc);
    esp = ebp;
}

/*	Procedure: 0x00419310 - 0x004196D6
 *	Argument size: 32
 *	Local size: 108
 *	Save regs size: 12
 *	Called by:
 *		L00419310()
 *		L004196E0()
 */

L00419310(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = A1c;
    if(A10 < 0x28) {
        L00429610(65546);
    }
    eax = Ac;
    Vfffffff0 = eax;
    Vffffffe4 = eax;
    Vffffff94 = Vffffffe4;
    Vffffff94 = Vffffff94 + A10;
    Vffffffe4 = Vffffffe4 + 0x28;
    edx = *(Vfffffff0 + 0x14);
    ebx = edx;
    Vffffffe8 = edx;
    eax = edx >> 0x18;
    ebx = ebx >> 8 & 65280;
    Vffffffe8 = Vffffffe8 << 8;
    Vffffffe8 = Vffffffe8 & 16711680;
    Vffffffe8 = Vffffffe8 | eax;
    Vffffffe8 = Vffffffe8 | ebx;
    Vffffffe8 = Vffffffe8 | edx << 0x18;
    if(Vffffffe8 > A10 || (Vffffffe8 + 3 & -4) + Vffffffe4 > Vffffff94) {
        L00429610(65546);
    }
    eax = *Vfffffff0;
    ebx = eax << 8 & 16711680;
    edx = eax;
    ecx = eax;
    ebx = ebx | edx >> 0x18;
    ebx = ebx | ecx >> 8 & 65280;
    eax = L00419B60(ebx | eax << 0x18);
    Vffffffe0 = eax;
    if(eax == 0) {
        L00429610(65559);
    }
    ebx = *(Vffffffe0 + 8);
    if(ebx <= 0x28) {
        ebx = 0x28;
    }
    eax = L0042E3A0(ebx);
    *(ebp - 0x78) = eax;
    *eax = 1448466561;
    eax = *(Vfffffff0 + 4) & 65535;
    edx = eax;
    eax = eax >> 8;
    edx = edx << 8 | eax;
    ecx = *(ebp - 0x78) + 0xc;
    *ecx = dx;
    eax = *(Vfffffff0 + 6) & 65535;
    edx = eax;
    eax = eax >> 8;
    edx = edx << 8 | eax;
    *(ecx + 4) = dx;
    eax = *(Vfffffff0 + 8) & 65535;
    edx = eax;
    eax = eax >> 8;
    edx = edx << 8 | eax;
    *(ecx + 8) = dx;
    eax = *(Vfffffff0 + 0xa) & 65535;
    edx = eax;
    eax = eax >> 8;
    edx = edx << 8 | eax;
    *(ecx + 0xc) = dx;
    eax = *(Vfffffff0 + 0xc);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    edx = edx | ecx >> 8 & 65280 | eax;
    *( *(ebp - 0x78) + 0x1c) = edx;
    eax = *(Vfffffff0 + 0x10);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    ecx = ecx | edx >> 8 & 65280 | eax;
    *( *(ebp - 0x78) + 0x20) = ecx;
    *( *(ebp - 0x78) + 0x27) = *(Vfffffff0 + 0x23) & 0xff;
    eax = *(Vfffffff0 + 0x20) & 65535;
    Vffffffec = eax;
    Vffffffec = Vffffffec << 8;
    Vffffffec = Vffffffec | Vffffffec >> 8;
    eax = Vffffffec & 65535;
    Vffffffec = eax;
    *( *(ebp - 0x78) + 0x24) = Vffffffec & 0x18 | 1;
    if(A8 != 0) {
        Vffffffc4 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        ecx = *(A8 + 4);
        *(ebp - 0x70) = ecx;
        if(ecx == 0 || *(ecx + 0x88) == 0) {
            L00429610(65538);
        }
        *( *(ebp - 0x70) + 0x88)(A8, *(ebp - 0x78));
        goto L00419583;
        ecx = *(ebp - 0x78);
        *ecx = 0;
        L0042E3E0(ebp - 0x78);
        L004234F0(0, 0, 0);
        if(Vffffffb8 != 0) {
            (save)-1;
            ecx = Vffffffb0;
            Vffffffb8();
        }
        esp = *(ebp - 0x3c);
L00419583:
        edx = *(ebp - 0x78);
        *(edx + 8) = A8;
    }
    *( *(ebp - 0x78) + 4) = Vffffffe0;
    Vffffffdc = esp;
    ebx = *(Vffffffe0 + 0xc);
    if(ebx != 0) {
        *ebx( *(ebp - 0x78), Vffffffe4, Vffffffe8, *(Vfffffff0 + 0x22) & 0xff);
    }
    if(!(Vffffffec & 4)) {
        L0041A0E0( *(ebp - 0x78));
        goto L004195f5;
        L00419A70(ebp - 0x78);
        L004234F0(0, 0, 0);
        if(Vffffffd0 != 0) {
            (save)-1;
            ecx = Vffffffc8;
            Vffffffd0();
        }
        esp = *(ebp - 0x24);
    }
L004195f5:
    Vffffffe4 = Vffffffe4 + (Vffffffe8 + 3 & -4);
    Vffffffac = esp;
    Vffffffec = 0;
    ebx = *(Vffffffe0 + 0x14);
    if(ebx != 0) {
        Vffffffec = *ebx( *(ebp - 0x78));
    }
    if(Vffffffec != 0) {
        edx = *(Vfffffff0 + 0x26) & 65535;
        ebx = edx << 8;
        if(!(ebx = ((ebx | edx >> 8) & 65535) - 1)) {
            do {
                L00419310(Vffffffec, Vffffffe4, Vffffff94 - Vffffffe4, A14, A18, esi, A20, ebp - 0x74);
                Vffffffe4 = Vffffffe4 + *(ebp - 0x74);
            } while(ebx = ebx - 1);
            goto L00419697;
            L00419A70(ebp - 0x78);
            L004234F0(0, 0, 0);
            if(Vffffffa0 != 0) {
                ecx = Vffffff98;
                Vffffffa0(-1);
            }
            esp = *(ebp - 0x54);
        }
    }
L00419697:
    ebx = *( *(ebp - 0x78) + 0x1c);
    if(!(A20 = A20 - 1)) {
        do {
            if(*esi == ebx) {
                goto L004196a7;
            }
            esi = esi + 8;
        } while(A20 = A20 - 1);
        goto L004196bb;
L004196a7:
        eax = *(esi + 4);
        *(A18 + eax) = *(ebp - 0x78);
    }
L004196bb:
    if(A24 != 0) {
        *A24 = Vffffffe4 - Ac;
    }
    return *(ebp - 0x78);
}

/*	Procedure: 0x004196D7 - 0x004196DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004196D7()
{



}

/*	Procedure: 0x004196E0 - 0x00419A08
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00419A30()
 */

L004196E0(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A10;
    esp = esp - 0x28;
    if(esi < 8) {
L004196f1:
        L00429610(65546);
    }
    ebx = Ac;
    edi = *ebx;
    ecx = edi << 8 & 16711680;
    eax = edi;
    edx = edi;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    if((ecx | edi << 0x18) != 626414933) {
        L00429610(65545);
    }
    ecx = *(ebx + 4) & 65535;
    eax = ecx << 8;
    eax = eax | ecx >> 8;
    if(ax != 1) {
        L00429610(65544);
    }
    *(ebp - 0x34) = ebx;
    *(ebp - 0x34) = *(ebp - 0x34) + 8;
    edx = *(ebp - 0x34);
    *(ebp - 0x18) = Ac;
    *(ebp - 0x18) = *(ebp - 0x18) + esi;
    if(edx + 0x28 > *(ebp - 0x18)) {
        goto L004196f1;
    }
    edi = *(ebp - 0x34);
    eax = *edi;
    ecx = eax << 8 & 16711680;
    ebx = eax;
    edx = eax;
    ecx = ecx | ebx >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    if((ecx | eax << 0x18) != 1448560974) {
        goto L004196f1;
    }
    *(ebp - 0x34) = *(ebp - 0x34) + 0x28;
    ecx = *(edi + 0x14);
    eax = ecx << 8 & 16711680;
    ebx = ecx;
    edx = ecx;
    eax = eax | ebx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    eax = eax | ecx << 0x18;
    if(eax < 0x2c || eax > esi) {
        goto L004196f1;
    }
    *(ebp - 0x1c) = eax;
    *(ebp - 0x1c) = *(ebp - 0x1c) + 3;
    *(ebp - 0x1c) = *(ebp - 0x1c) & -4;
    if(*(ebp - 0x34) + *(ebp - 0x1c) > *(ebp - 0x18)) {
        goto L004196f1;
    }
    ebx = *(ebp - 0x34);
    edx = ebx + 0x2b;
    if(( *edx & 0xff) + edx + 1 > *(ebp - 0x18)) {
        goto L004196f1;
    }
    eax = *(edi + 4) & 65535;
    ecx = eax;
    eax = eax >> 8;
    *(ebp - 0x10) = ecx << 8 | eax;
    esi = *(edi + 6) & 65535;
    eax = esi;
    esi = esi >> 8;
    ecx = eax << 8 | esi;
    eax = *(edi + 8) & 65535;
    esi = eax;
    eax = eax >> 8;
    esi = esi << 8 | eax;
    eax = *(edi + 0xa) & 65535;
    edi = eax << 8;
    edi = edi | eax >> 8;
    esi = si;
    edi = di;
    if(A24 == 0) {
        A24 = edx;
    }
    edx = *ebx;
    *(ebp - 0x2c) = *(ebp - 0x10);
    *(ebp - 0x28) = ecx;
    *(ebp - 0x24) = esi;
    *(ebp - 0x20) = edi;
    edi = edx << 8 & 16711680;
    ecx = edx;
    eax = edx;
    edi = edi | ecx >> 0x18;
    edi = edi | eax >> 8 & 65280;
    edi = edi | edx << 0x18;
    eax = L00419240(A8, ebp - 0x2c, edi, A20, A24);
    *(ebp - 0x14) = eax;
    *(ebp - 0x30) = *(ebp - 0x14);
    eax = *(ebx + 4);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    edx = edx | ecx >> 8 & 65280 | eax;
    *( *(ebp - 0x14) + 0x18) = edx;
    *(ebp - 0x10) = *( *(ebp - 0x14) + 0xc);
    esi = *(ebx + 8);
    edx = esi << 8 & 16711680;
    edi = esi;
    ecx = esi;
    edx = edx | edi >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    (save)edx | esi << 0x18;
    L0041D180( *(ebp - 0x10));
    (restore)ecx;
    if(*(ebx + 0xc) != 0 || *(ebx + 0xe) != 0 || *(ebx + 0x10) != 0 || *(ebx + 0x12) != 0) {
        eax = *(ebx + 0x12) & 65535;
        edx = *(ebx + 0x10) & 65535;
        edi = *(ebx + 0xe) & 65535;
        ecx = *(ebx + 0xc) & 65535;
        esi = eax;
        eax = eax >> 8;
        esi = esi << 8 | eax;
        esi = edx << 8;
        esi = esi | edx >> 8;
        eax = edi;
        esi = ecx;
        eax = eax << 8;
        edi = edi >> 8;
        esi = esi << 8;
        ecx = ecx >> 8;
        eax = eax | edi;
        esi = esi | ecx;
        L0041CF00( *(ebp - 0x10), si & 65535, ax & 65535, si & 65535, si & 65535);
    }
    edx = *(ebx + 0x14);
    edx = dl & 0xff & 0xff;
    if(edx != 0) {
        if(edx != 2) {
            (save)edx;
            (save) *(ebp - 0x10);
            L0041D060();
        }
    } else {
        L0041D010( *(ebp - 0x10), edi);
    }
    *(ebp - 0x34) = *(ebp - 0x34) + *(ebp - 0x1c);
    L00419310( *(ebp - 0x14), *(ebp - 0x34), *(ebp - 0x18) - *(ebp - 0x34), A14, *(ebp - 0x14), A18, A1c, 0);
    eax = ebp - 0x30;
    esi = *(ebp - 0x30);
    *(ebp - 0x30) = 0;
    L004192E0(eax);
    return esi;
}

/*	Procedure: 0x00419A09 - 0x00419A24
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 */

L00419A09()
{
	/* unknown */ void  ebx;



    ebx = ecx;
    L004192E0(ebx);
    return ebx;
}

/*	Procedure: 0x00419A25 - 0x00419A2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419A25()
{



}

/*	Procedure: 0x00419A30 - 0x00419A6A
 *	Argument size: 20
 *	Local size: 4
 *	Save regs size: 0
 *	Called by:
 *		L00415350()
 */

L00419A30(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  Vfffffffc;



    return L004196E0(A8, L0043C150(1448560974, Ac, & Vfffffffc), Vfffffffc, 0, A10, A14, A18, A1c);
}

/*	Procedure: 0x00419A6B - 0x00419A6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419A6B()
{



}

/*	Procedure: 0x00419A70 - 0x00419B0F
 *	Argument size: 4
 *	Local size: 48
 *	Save regs size: 12
 *	Called by:
 *		L00419310()
 *		L004206D0()
 *		L00421520()
 *		L00439DE0()
 *		L0043A530()
 *		L0043AAA0()
 *		L0043ADB0()
 *		L0043B450()
 *		L0043BC50()
 */

L00419A70(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    ebx = *A8;
    if(ebx == 0) {
        return;
    }
    if(*ebx != 1448466561) {
        *A8 = 0;
        esp = ebp - 0xc;
        return;
    }
    ecx = *(ebx + 8);
    if(ecx != 0) {
        Vfffffff0 = esp;
        *( *(ecx + 4) + 0x8c)(ecx, ebx);
        goto L00419ad3;
        if(Vffffffe4 != 0) {
            (save)-1;
            ecx = Vffffffdc;
            Vffffffe4();
        }
        esp = *(ebp - 0x10);
    }
L00419ad3:
    eax = *(ebx + 4);
    if(eax != 0) {
        esi = *(eax + 0x10);
        if(esi != 0) {
            Vffffffd8 = esp;
            *esi(ebx);
            goto L00419afb;
            if(*(ebp - 0x34) != 0) {
                (save)-1;
                ecx = *(ebp - 0x3c);
                *(ebp - 0x34)();
            }
            esp = *(ebp - 0x28);
        }
    }
L00419afb:
    *ebx = 0;
    eax = L0042E3E0(A8);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00419B10 - 0x00419B5B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0043AA80()
 *		L0043BC30()
 */

L00419B10(A8)
/* unknown */ void  A8;
{



    (save)esi;
    (save)edi;
    if(A8 == 0) {
        L00429610(65538);
    }
    edi = A8;
    esi = 0x4811a0;
    (save)edi;
    (restore)ecx;
    if(L00429DE0(0x4811a0) == 0) {
        if(A8 == 0) {
            L00429610(65538);
        }
        eax = L00429A00(esi, edi);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00419B5C - 0x00419B5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419B5C()
{



}

/*	Procedure: 0x00419B60 - 0x00419C4E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00419310()
 */

L00419B60(A4)
/* unknown */ void  A4;
{



    eax = A4;
    (save)ebx;
    (save)esi;
    (save)ebp;
    if(!(edx = eax - 1112888398)) {
        if(edx = edx - 100268022) {
            goto L00419c10;
        }
        if(edx = edx - 50132488) {
            goto L00419bd0;
        }
        if(!(edx = edx - 135686)) {
            if(edx = edx - 15920634) {
                goto L00419be0;
            }
            if(edx = edx - 117967106) {
                goto L00419bf0;
            }
            if(edx = edx - 17762565) {
                goto L00419c00;
            }
            if(edx = edx - 33358030) {
                goto L00419c20;
            }
            (restore)ebp;
            (restore)esi;
            (restore)ebx;
            return "!UUV";
        }
        (restore)ebp;
        (restore)esi;
        (restore)ebx;
        return 0x4847e4;
    }
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
    return 0x4825f0;
L00419bd0:
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
    return 0x4826b4;
L00419be0:
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
    return 0x482778;
L00419bf0:
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
    return 0x482a88;
L00419c00:
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
    return 0x480074;
L00419c10:
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
    return 0x486114;
L00419c20:
    edx = M004811a0;
    ebp = M004811a4;
    ebx = 0;
    esi = edx;
    if(ebp > 0) {
        do {
            if(eax == *( *(esi + ebx * 4))) {
                goto L00419c3b;
            }
            ebx = ebx + 1;
        } while(ebx < ebp);
        goto L00419c49;
L00419c3b:
        eax = *(edx + ebx * 4);
        (restore)ebp;
        (restore)esi;
        (restore)ebx;
        return;
    }
L00419c49:
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00419C4F - 0x00419C4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419C4F()
{



}

/*	Procedure: 0x00419C50 - 0x00419D1C
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042177F()
 *		L00421AB0()
 */

L00419C50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x1c;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    esi = *(A8 + 0x24) & 65535;
    *(ebp - 0x10) = esi;
    if(Ac != 0) {
        if(!(esi & 8)) {
            return 0;
        }
        esi = esi | 8;
    } else {
        if(!(esi & 8)) {
            esp = ebp - 0xc;
            return 0;
        }
        esi = esi & -9;
    }
    edx = A8 + 0xc;
    *(A8 + 0x24) = esi | 8;
    *(ebp - 0x14) = esp;
    eax = L00419F00(A8, edx);
    *(A8 + 0x24) = si;
    edi = *( *(A8 + 4) + 0x5c);
    if(edi != 0) {
        eax = *edi(A8, *(ebp - 0x10), esi);
        goto L00419d13;
        *(A8 + 0x24) = *(ebp - 0x10);
        eax = L004234F0(0, 0, 0);
        if(*(ebp - 0x20) != 0) {
            ecx = *(ebp - 0x28);
            *(ebp - 0x20)(-1);
        }
        esp = *(ebp - 0x14);
    }
L00419d13:
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00419D1D - 0x00419D1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419D1D()
{



}

/*	Procedure: 0x00419D20 - 0x00419DCC
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0043C350()
 *		L0043D158()
 */

L00419D20(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x18;
    esi = Ac;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    ecx = *(A8 + 0x24) & 65535;
    eax = !esi;
    edx = A10 & esi;
    ebx = ecx;
    ecx = ecx & eax | edx;
    if(!(ecx & 1)) {
        ecx = ecx & -7;
    }
    if(!(ecx & 2)) {
        ecx = ecx & -5;
    }
    if(ecx == ebx) {
        return 0;
    }
    *(A8 + 0x24) = cx;
    *(ebp - 0x10) = esp;
    eax = *(A8 + 4);
    if(eax != 0) {
        esi = *(eax + 0x5c);
        if(esi != 0) {
            eax = *esi(A8, ebx, ecx);
            goto L00419dc3;
            *(A8 + 0x24) = bx;
            eax = L004234F0(0, 0, 0);
            if(*(ebp - 0x1c) != 0) {
                ecx = *(ebp - 0x24);
                *(ebp - 0x1c)(-1);
            }
            esp = *(ebp - 0x10);
        }
    }
L00419dc3:
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00419DCD - 0x00419DCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419DCD()
{



}

/*	Procedure: 0x00419DD0 - 0x00419EF1
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041A270()
 *		L0041A300()
 *		L0042177F()
 *		L00421AB0()
 */

L00419DD0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    esp = esp - 0x18;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    *(ebp - 0x22) = 0;
    *(ebp - 0x21) = 0;
    *(ebp - 0x20) = *(A8 + 0xc);
    eax = *Ac;
    cl = 0;
    if(*(ebp - 0x20) == eax) {
        edx = *(A8 + 0x10);
        if(edx == *(Ac + 4)) {
            ecx = 1 & 0xff;
        }
    }
    if(cl != 0) {
        eax = *(A8 + 0x14);
        if(eax == *(Ac + 8)) {
            *(ebp - 0x21) = 1;
        }
    }
    if(*(ebp - 0x21) != 0) {
        edi = *(A8 + 0x18);
        eax = *(Ac + 0xc);
        if(edi == eax) {
            *(ebp - 0x22) = 1;
        }
    }
    if(*(ebp - 0x22) != 0) {
        if(!( *(A8 + 0x27) & 0xff & 0x40)) {
            ecx = *(A8 + 4);
            if(ecx != 0) {
                edi = *(ecx + 0x18);
                if(edi != 0) {
                    eax = *edi(A8, Ac, Ac);
                }
            }
        }
        return 0;
    }
    *(ebp - 0x1c) = *(ebp - 0x20);
    *(ebp - 0x18) = *(A8 + 0x10);
    *(ebp - 0x14) = *(A8 + 0x14);
    *(ebp - 0x10) = *(A8 + 0x18);
    *(A8 + 0xc) = *Ac;
    *(A8 + 0x10) = *(Ac + 4);
    eax = *(Ac + 8);
    *(A8 + 0x14) = eax;
    *(A8 + 0x18) = *(Ac + 0xc);
    edx = *(A8 + 8);
    if(edx != 0) {
        edi = *( *(edx + 4) + 0x90);
        if(edi != 0) {
            eax = *edi(edx, A8, ebp - 0x1c, Ac);
        }
    }
    ecx = *(A8 + 4);
    if(ecx != 0) {
        edi = *(ecx + 0x18);
        if(edi != 0) {
            eax = *edi(A8, ebp - 0x1c, Ac);
        }
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00419EF2 - 0x00419EFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419EF2()
{



}

/*	Procedure: 0x00419F00 - 0x00419F7D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00419C50()
 *		L00439D0B()
 *		L00439D78()
 *		L0043A1AD()
 *		L0043A379()
 *		L0043A3E8()
 *		L0043A718()
 *		L0043AF38()
 *		L0043B410()
 *		L0043B5CF()
 *		L0043BEAE()
 *		L0043D59F()
 *		L0043D6CA()
 */

L00419F00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esp = esp - 0x28;
    if(A8 == 0) {
        return;
    }
    if(*A8 != 1448466561) {
        esp = ebp - 8;
        return;
    }
    esi = *(A8 + 8);
    if(esi != 0) {
        eax = *(A8 + 0x24) & 65535 & 9;
        if(eax == 8) {
            ecx = A8 + 0xc;
            if(L0044B6F0(ebp - 0x18, ecx, Ac) != 0) {
                *(ebp - 0x1c) = esp;
                eax = *( *(esi + 4) + 0x94)(esi, A8, ebp - 0x18);
                goto L00419f77;
                if(*(ebp - 0x28) != 0) {
                    ecx = *(ebp - 0x30);
                    eax = *(ebp - 0x28)(-1);
                }
                esp = *(ebp - 0x1c);
            }
        }
    }
L00419f77:
    esp = ebp - 8;
}

/*	Procedure: 0x00419F7E - 0x00419F7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419F7E()
{



}

/*	Procedure: 0x00419F80 - 0x00419FEE
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L00419F80(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x10;
    ebx = Ac;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    edi = *(A8 + 8);
    if(ebx == 0) {
        ebx = A8 + 0xc;
    }
    if(edi != 0) {
        eax = *(A8 + 0x24) & 65535 & 9;
        if(eax == 8) {
            ecx = A8 + 0xc;
            if(L0044B6F0(ebp - 0x1c, ecx, ebx) != 0) {
                eax = *( *(edi + 4) + 0x98)(edi, A8, ebp - 0x1c);
            }
        }
    }
}

/*	Procedure: 0x00419FEF - 0x00419FEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00419FEF()
{



}

/*	Procedure: 0x00419FF0 - 0x0041A075
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004205CB()
 *		L00420C50()
 */

L00419FF0(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x2c;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    edx = *(A8 + 8);
    if(edx != 0) {
        ebx = *(edx + 4);
        if(*(ebx + 0x9c) != 0) {
            eax = 0;
            edi = ebp - 0x38;
            ecx = 0xb;
            asm("rep stosd");
            *(ebp - 0x34) = A8;
            *(ebp - 0x30) = *(A8 + 0x1c);
            *(ebp - 0x2c) = Ac;
            *(ebp - 0x28) = A10;
            *(ebp - 0x24) = A14;
            *(ebp - 0x20) = A18;
            *(ebp - 0x1c) = A1c;
            *(ebp - 0x18) = A20;
            eax = *(ebx + 0x9c)(edx, A8, ebp - 0x38);
        }
    }
}

/*	Procedure: 0x0041A076 - 0x0041A07F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A076()
{



}

/*	Procedure: 0x0041A080 - 0x0041A0D5
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0043AD1B()
 */

L0041A080(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)edi;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    if(Ac == 0) {
        eax = L00429610(65538);
    }
    ecx = *(A8 + 8);
    if(ecx != 0) {
        eax = *(ecx + 4);
        edi = *(eax + 0x9c);
        if(edi != 0) {
            eax = *edi(ecx, A8, Ac);
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0041A0D6 - 0x0041A0DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A0D6()
{



}

/*	Procedure: 0x0041A0E0 - 0x0041A122
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00419310()
 *		L0042177F()
 *		L00421AB0()
 *		L0044602B()
 */

L0041A0E0(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    ecx = *(A8 + 8);
    if(ecx != 0) {
        eax = *(ecx + 4);
        esi = *(eax + 0xac);
        if(esi != 0) {
            eax = *esi(ecx, A8, 1);
        }
    }
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0041A123 - 0x0041A12F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A123()
{



}

/*	Procedure: 0x0041A130 - 0x0041A196
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0043D79D()
 */

L0041A130(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)edi;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    ecx = *(A8 + 8);
    if(ecx != 0) {
        edi = *( *(ecx + 4) + 0xa0);
        if(edi != 0) {
            Ac = *edi(ecx, A8, Ac, A10);
            esp = ebp - 0xc;
            (restore)edi;
            return;
        }
    }
    *Ac = 0;
    *A10 = 0;
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0041A197 - 0x0041A19F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A197()
{



}

/*	Procedure: 0x0041A1A0 - 0x0041A1DB
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00462C50()
 */

L0041A1A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    esi = *( *(A8 + 4) + 0x6c);
    if(esi != 0) {
        eax = *esi(A8, Ac, A10);
    }
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0041A1DC - 0x0041A1DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A1DC()
{



}

/*	Procedure: 0x0041A1E0 - 0x0041A228
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00464908()
 */

L0041A1E0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    esi = *( *(A8 + 4) + 0x70);
    if(esi != 0) {
        eax = *esi(A8, Ac, A10);
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    esp = ebp - 8;
    (restore)esi;
    return 0;
}

/*	Procedure: 0x0041A229 - 0x0041A22F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A229()
{



}

/*	Procedure: 0x0041A230 - 0x0041A26C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0041A230(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    esi = *( *(A8 + 4) + 0x74);
    if(esi == 0) {
        esp = ebp - 8;
        (restore)esi;
        return 1;
    }
    eax = *esi(A8);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0041A26D - 0x0041A26F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A26D()
{



}

/*	Procedure: 0x0041A270 - 0x0041A2FD
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00409390()
 */

L0041A270(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    ebx = A14;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    eax = L0041CCB0( *(A8 + 0xc), Ac, A10, ebp - 0x18);
    if(ebx != 0) {
        *ebx = *(ebp - 0x18);
        eax = *(ebp - 0x14);
        *(ebx + 4) = eax;
        *(ebx + 8) = *(ebp - 0x10);
        *(ebx + 0xc) = *(ebp - 0xc);
    }
    ebx = *(A8 + 8);
    if(ebx != 0) {
        eax = *(ebp - 0x10) - *(ebp - 0x18);
        edx = *(ebp - 0xc) - *(ebp - 0x14);
        *(ebp - 0x10) = eax;
        *(ebp - 0x18) = 0;
        ecx = *(ebp - 0x18);
        *(ebp - 0xc) = edx;
        *(ebp - 0x14) = ecx;
        eax = L00419DD0(ebx, ebp - 0x18);
    }
}

/*	Procedure: 0x0041A2FE - 0x0041A2FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A2FE()
{



}

/*	Procedure: 0x0041A300 - 0x0041A390
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041AE20()
 */

L0041A300(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    ebx = A18;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    eax = L0041CE80( *(A8 + 0xc), Ac, A10, A14, ebp - 0x18);
    if(ebx != 0) {
        *ebx = *(ebp - 0x18);
        eax = *(ebp - 0x14);
        *(ebx + 4) = eax;
        *(ebx + 8) = *(ebp - 0x10);
        *(ebx + 0xc) = *(ebp - 0xc);
    }
    ebx = *(A8 + 8);
    if(ebx != 0) {
        eax = *(ebp - 0x10) - *(ebp - 0x18);
        edx = *(ebp - 0xc) - *(ebp - 0x14);
        *(ebp - 0x10) = eax;
        *(ebp - 0x18) = 0;
        ecx = *(ebp - 0x18);
        *(ebp - 0xc) = edx;
        *(ebp - 0x14) = ecx;
        eax = L00419DD0(ebx, ebp - 0x18);
    }
}

/*	Procedure: 0x0041A391 - 0x0041A39F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A391()
{



}

/*	Procedure: 0x0041A3A1 - 0x0041A3AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A3A1()
{



}

/*	Procedure: 0x0041A3B1 - 0x0041A3BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A3B1()
{



}

/*	Procedure: 0x0041A3C1 - 0x0041A3CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A3C1()
{



}

/*	Procedure: 0x0041A435 - 0x0041A43F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A435()
{



}

/*	Procedure: 0x0041A4CB - 0x0041A4D0
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A4CB()
{



}

/*	Procedure: 0x0041A4D1 - 0x0041A4DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A4D1()
{



}

/*	Procedure: 0x0041A4EB - 0x0041A4F0
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A4EB()
{



}

/*	Procedure: 0x0041A4F1 - 0x0041A4FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A4F1()
{



}

/*	Procedure: 0x0041A501 - 0x0041A50F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A501()
{



}

/*	Procedure: 0x0041A511 - 0x0041A51F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A511()
{



}

/*	Procedure: 0x0041A521 - 0x0041A52F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A521()
{



}

/*	Procedure: 0x0041A533 - 0x0041A53F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A533()
{



}

/*	Procedure: 0x0041A54D - 0x0041A552
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A54D()
{



    return 0;
}

/*	Procedure: 0x0041A553 - 0x0041A55F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A553()
{



}

/*	Procedure: 0x0041A56B - 0x0041A572
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A56B()
{



    return 0;
}

/*	Procedure: 0x0041A573 - 0x0041A57F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A573()
{



}

/*	Procedure: 0x0041A5A7 - 0x0041A5AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A5A7()
{



}

/*	Procedure: 0x0041A5B1 - 0x0041A5BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A5B1()
{



}

/*	Procedure: 0x0041A614 - 0x0041A61F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A614()
{



}

/*	Procedure: 0x0041A6A9 - 0x0041A71D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L0041A6A9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esi = A8;
    esp = esp - 4;
    if(esi == 0 || *esi != 1448466561) {
        L00429610(65561);
    }
    eax = L00423980(esi + 0x10);
    if(*(Ac + 0x10) == 0xa) {
        return;
    }
    *Ac = esi;
    (save)ebp - 0xc;
    esi = L0041B860( *(esi + 0xc));
    (restore)ecx;
    if(esi != 0) {
        (save)Ac;
        eax = *esi( *(ebp - 0xc));
    } else {
        eax = L00438C70(Ac);
    }
    esp = ebp - 8;
}

/*	Procedure: 0x0041A71E - 0x0041A8B3
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L0041A71E(A8)
/* unknown */ void  A8;
{



    eax = A8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0xb0;
    *(ebp - 0x10) = eax;
    if(eax == 0 || *eax != 1448466561) {
        L00429610(65561);
    }
    ebx = ebp + -188;
    *(ebp - 0x2c) = L0041D3C0( *( *(ebp - 0x10) + 0xc), ebp + -180, 8, ebx, ebp - 0x30);
    eax = *(ebp - 0x10);
    esi = *(eax + 8);
    if(esi == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    edx = *(ebp + -188) - 1;
    if(edx <= 3) {
        switch(edx) {
            case 0:
L0041a795:
                eax = 1;
                goto L0041a7ac;
            case 1:
                eax = 0;
                goto L0041a7ac;
            case 2:
                goto L0041a7a7;
            case 3:
                eax = 6;
                goto L0041a7ac;
        }
        goto L0041a795;
    }
L0041a7a7:
    L00419D20(esi, 7, 2);
    *(ebp - 0x34) = 0;
    if(*(ebp - 0x2c) > 0) {
        ebx = ebp + -180;
        eax = L00449230( *(ebx + 8) - *ebx, *(ebx + 0xc) - *(ebx + 4), 0);
        *(ebp + -184) = eax;
        *(ebp - 0x14) = esp;
        L00449440(eax, ~( *ebx), ~( *(ebx + 4)));
        eax = *(ebp - 0x30) & 0xff & 0xff;
        if(eax == 0) {
            goto L0041a821;
        }
        L0044CAF0( *(ebp + -184), ebx, eax);
        goto L0041a83f;
        L004496A0( *(ebp + -184), *(ebp - 0x30));
        L0044A0D0( *(ebp + -184), ebx);
        *( *(esi + 4) + 0x1c)(esi, *(ebp + -184), ebx, 0);
        goto L0041a883;
        L004492F0(ebp + -184);
        L004234F0(0, 0, 0);
        if(*(ebp - 0x20) == 0) {
            goto L0041a880;
        }
        (save)-1;
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)();
        esp = *(ebp - 0x14);
        L0041D700( *( *(ebp - 0x10) + 0xc), ebx, ebp + -184);
        eax = *(ebp - 0x2c);
        ebx = ebx + 0x10;
        *(ebp - 0x34) = *(ebp - 0x34) + 1;
        if(*(ebp - 0x34) < eax) {
            goto L0041a7d0;
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0041AE20 - 0x0041AF2C
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 */

L0041AE20(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x28;
    esi = Ac;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    if(esi == 0) {
        L00429610(65538);
    }
    edx = ebp - 0x2c;
    L00451610( *(esi + 0x28), ebp - 0x18, edx);
    if(*(ebp - 0x18) < (A10 & 65535)) {
        *(ebp - 0x18) = A10 & 65535;
    }
    if(*(ebp - 0x2c) < (A14 & 65535)) {
        *(ebp - 0x2c) = A14 & 65535;
    }
    edx = ebp - 0x10;
    L004516D0( *(esi + 0x28), ebp - 0x14, edx);
    L0041CD90( *(A8 + 0xc), ebp - 0x28, 0, 0);
    edx = ebp - 0x30;
    ecx = ebp - 0x34;
    esi = ebp - 0x32;
    L0041CFA0( *(A8 + 0xc), ecx, edx, ebp - 0x2e, esi);
    eax = *(ebp - 0x20) - *(ebp - 0x28) - *(ebp - 0x14) + *(ebp - 0x18);
    if(eax < ( *(ebp - 0x34) & 65535)) {
        eax = *(ebp - 0x34) & 65535;
    }
    if(eax > ( *(ebp - 0x2e) & 65535)) {
        eax = *(ebp - 0x2e) & 65535;
    }
    esi = *(ebp - 0x1c) - *(ebp - 0x24) - *(ebp - 0x10) + *(ebp - 0x2c);
    if(esi < ( *(ebp - 0x30) & 65535)) {
        esi = *(ebp - 0x30) & 65535;
    }
    if(esi > ( *(ebp - 0x32) & 65535)) {
        esi = *(ebp - 0x32) & 65535;
    }
    return L0041A300(A8, eax, esi, 134217728, 0);
}

/*	Procedure: 0x0041AF2D - 0x0041AFE0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L0041AF2D(A0, A4)
/* unknown */ void  A0;
/* unknown */ void  A4;
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 0xc);
    esp = esp - 4;
    if(ebx == 0) {
        A4 = L00429610(65538);
    }
    esi = *(ebp + 8);
    edx = *(esi + 8);
    *(ebp - 0xc) = edx;
    if(edx == ebx) {
        esp = ebp - 8;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return;
    }
    A4 = L0041D100( *(esi + 0xc)) - 1;
    if(A4 > 3) {
        goto L0041af90;
    }
    switch(A4) {
        case 0:
L0041af78:
            A4 = 1;
            goto L0041af95;
        case 1:
            A4 = 0;
            goto L0041af95;
        case 2:
L0041af90:
            L00419D20(ebx, 7, 2);
            L00419A70(ebp - 0xc);
            *(esi + 8) = ebx;
            A4 = L0041D2B0( *(esi + 0xc));
            esp = ebp - 8;
            (restore)esi;
            (restore)ebx;
            (restore)ebp;
            return;
        case 3:
            A4 = 6;
            goto L0041af95;
    }
    goto L0041af78;
    if(A4 == 0 || *(A0 + 8) != A4) {
        goto L0041afd8;
    }
    *(A0 + 8) = 0;
    return;
}

/*	Procedure: 0x0041B007 - 0x0041B00F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B007()
{



}

/*	Procedure: 0x0041B02A - 0x0041B0E7
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 */

L0041B02A(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    esp = esp - 0x48;
    ebx = A10;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    ecx = 0;
    do {
        *(ebp + ecx - 0x50) = *(ecx + ebx);
        *(ebp + ecx - 0x4c) = *(ecx + ebx + 4);
        *(ebp + ecx - 0x48) = *(ecx + ebx + 8);
        *(ebp + ecx - 0x44) = *(ecx + ebx + 0xc);
        ecx = ecx + 0x10;
    } while(ecx < 0x20);
    *(ebp - 0x30) = *(ebx + 0x20);
    *(ebp - 0x2c) = *(ebx + 0x24);
    *(ebp - 0x28) = *(ebx + 0x28);
    *(ebp - 0x50) = A8;
    (save)ebp - 0x24;
    eax = L0041B860( *(A8 + 0xc));
    ebx = eax;
    (restore)ecx;
    if(ebx != 0) {
        *(ebp - 0xc) = esp;
        (save)ebp - 0x50;
        eax = *ebx( *(ebp - 0x24));
        goto L0041b0e0;
        eax = L00429560( *(ebp - 0x14));
        if(*(ebp - 0x18) != 0) {
            (save)-1;
            ecx = *(ebp - 0x20);
            *(ebp - 0x18)();
        }
        esp = *(ebp - 0xc);
    } else {
        L00438C70(ebp - 0x50);
L0041b0e0:
    }
}

/*	Procedure: 0x0041B0E8 - 0x0041B12C
 *	Argument size: 16
 *	Local size: 16
 *	Save regs size: 8
 */

L0041B0E8(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    ecx = ebp - 0x18;
    eax = L0041CD90( *(A8 + 0xc), ecx, 0, 0);
    if(A10 != 0) {
        *A10 = *(ebp - 0x18);
    }
    if(A14 != 0) {
        eax = *(ebp - 0x14);
        *A14 = eax;
    }
}

/*	Procedure: 0x0041B12D - 0x0041B155
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L0041B12D(A10, A14)
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    *A14 = *(A10 + 0xc);
    eax = *(A10 + 0x10);
    *(A14 + 4) = eax;
    *(A14 + 8) = *(A10 + 0x14);
    *(A14 + 0xc) = *(A10 + 0x18);
    return 0;
}

/*	Procedure: 0x0041B156 - 0x0041B15F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B156()
{



}

/*	Procedure: 0x0041B161 - 0x0041B16F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B161()
{



}

/*	Procedure: 0x0041B171 - 0x0041B17F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B171()
{



}

/*	Procedure: 0x0041B1D9 - 0x0041B1DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B1D9()
{



}

/*	Procedure: 0x0041B1E0 - 0x0041B222
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041B230()
 */

L0041B1E0()
{
	/* unknown */ void  edi;



    esp = esp - 0x94;
    eax = 0;
    edi = ebp + -152;
    ecx = 0x25;
    asm("rep stosd");
    eax = ebp + -152;
    *(ebp + -152) = 0x94;
    GetVersionExA(eax);
    *(ebp + -136) :: 2;
    return 0;
}

/*	Procedure: 0x0041B223 - 0x0041B22F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B223()
{



}

/*	Procedure: 0x0041B230 - 0x0041B387
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041B390()
 */

L0041B230()
{



    (save)ebx;
    if(M004a1138 != 0) {
        M004a113c :: 0;
        (restore)ebx;
        return 0;
    }
    M004a1154 = L0041B1E0();
    ebx = GetModuleHandleW(W"USER32");
    if(ebx != 0) {
        eax = GetProcAddress(ebx, "GetSystemMetrics");
        M004a1158 = eax;
        if(eax != 0) {
            eax = GetProcAddress(ebx, "MonitorFromWindow");
            M004a1164 = eax;
            if(eax != 0) {
                eax = GetProcAddress(ebx, "MonitorFromRect");
                M004a1148 = eax;
                if(eax != 0) {
                    eax = GetProcAddress(ebx, "MonitorFromPoint");
                    M004a1150 = eax;
                    if(eax != 0) {
                        eax = GetProcAddress(ebx, "EnumDisplayMonitors");
                        M004a114c = eax;
                        if(eax != 0) {
                            eax = GetProcAddress(ebx, "EnumDisplayDevicesW");
                            M004a1140 = eax;
                            if(eax != 0) {
                                if(M004a1154 != 0) {
                                    (save)"GetMonitorInfoW";
                                } else {
                                    (save)"GetMonitorInfoA";
                                }
                                eax = GetProcAddress(ebx);
                                M004a113c = eax;
                                if(eax != 0) {
                                    esp = ebp - 4;
                                    (restore)ebx;
                                    M004a1138 = 1;
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    esp = ebp - 4;
    M004a1158 = 0;
    M004a1164 = 0;
    M004a1148 = 0;
    M004a1150 = 0;
    M004a113c = 0;
    M004a114c = 0;
    M004a1140 = 0;
    (restore)ebx;
    M004a1138 = 1;
    return 0;
}

/*	Procedure: 0x0041B388 - 0x0041B38F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B388()
{



}

/*	Procedure: 0x0041B390 - 0x0041B3EF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041B8B0()
 *		L0041D830()
 *		L0041FFD0()
 */

L0041B390(A8)
int A8;
{
	int ebx;



    ebx = A8;
    if(L0041B230() != 0) {
        return *L004a1158(ebx);
    }
    ecx = ebx - 0x4c;
    if(ecx <= 5) {
        switch(ecx) {
            case 0:
L0041b3cc:
                esp = ebp - 4;
                return 0;
            case 1:
                goto L0041b3cc;
            case 2:
                ebx = 0;
                goto L0041b3df;
            case 3:
                ebx = 1;
                goto L0041b3df;
            case 4:
L0041b3bf:
                esp = ebp - 4;
                return 1;
            case 5:
                goto L0041b3bf;
        }
        goto L0041b3bf;
    }
L0041b3df:
    GetSystemMetrics(ebx);
    esp = ebp - 4;
}

/*	Procedure: 0x0041B3F0 - 0x0041B45F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041B8B0()
 *		L0041D830()
 */

L0041B3F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L0041B230();
    if(eax == 0) {
        goto L0041b415;
    }
    *L004a1148(A8, Ac);
    return;
    if(!(Ac & 3)) {
        if(*(A8 + 8) <= 0 || *(A8 + 0xc) <= 0) {
            goto L0041b450;
        }
        GetSystemMetrics(0);
        if(*A8 >= eax) {
            goto L0041b450;
        }
        GetSystemMetrics(1);
        if(*(A8 + 4) >= eax) {
            goto L0041b450;
        }
    }
    esp = ebp - 8;
    return 305397826;
    esp = ebp - 8;
    return 0;
}

/*	Procedure: 0x0041B460 - 0x0041B55F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041B8B0()
 *		L0041D830()
 */

L0041B460(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp - 0x10;
    L0041B230();
    if(eax == 0) {
        goto L0041b4b1;
    }
    (save)Ac;
    (save)A8;
    *L004a113c();
    if(eax == 0 || M004a1154 != 0 || *Ac < 0x68) {
        goto L0041b4a6;
    }
    MultiByteToWideChar(0, 0, Ac + 0x28, -1, Ac + 0x28, 0x20);
    esp = ebp - 8;
    return A8;
    if(A8 != 305397826 || Ac == 0 || *Ac < 0x28) {
        goto L0041b550;
    }
    SystemParametersInfoA(0x30, 0, ebp - 0x18, 0);
    if(eax == 0) {
        goto L0041b550;
    }
    *(Ac + 4) = 0;
    *(Ac + 8) = 0;
    GetSystemMetrics(0);
    *(Ac + 0xc) = eax;
    GetSystemMetrics(1);
    *(Ac + 0x10) = eax;
    *(Ac + 0x14) = *(ebp - 0x18);
    *(Ac + 0x18) = *(ebp - 0x14);
    *(Ac + 0x1c) = *(ebp - 0x10);
    *(Ac + 0x20) = *(ebp - 0xc);
    *(Ac + 0x24) = 1;
    if(*Ac < 0x68) {
        goto L0041b541;
    }
    MultiByteToWideChar(0, 0, "DISPLAY", -1, Ac + 0x28, 0x20);
    esp = ebp - 8;
    return 1;
    esp = ebp - 8;
    return 0;
}

/*	Procedure: 0x0041B560 - 0x0041B5A0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004395A0()
 *		L00462160()
 */

L0041B560(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 != 0) {
        goto L0041b576;
    }
    L00429610(65538);
    if(*(A8 + 8) == -266958733) {
        goto L0041b58a;
    }
    L00429610(65561);
    return L004342A0(A8 + 0x10, Ac, 0x38);
}

/*	Procedure: 0x0041B5B0 - 0x0041B5E5
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00450800()
 */

L0041B5B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    *(A8 + 0x10) = Ac;
    return *(A8 + 0x10);
}

/*	Procedure: 0x0041B5E6 - 0x0041B5EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B5E6()
{



}

/*	Procedure: 0x0041B5F0 - 0x0041B625
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00450800()
 */

L0041B5F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    *(A8 + 0x18) = Ac;
    return *(A8 + 0x18);
}

/*	Procedure: 0x0041B626 - 0x0041B62F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B626()
{



}

/*	Procedure: 0x0041B666 - 0x0041B66F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B666()
{



}

/*	Procedure: 0x0041B670 - 0x0041B6A5
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00401000()
 */

L0041B670(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    *(A8 + 0x28) = Ac;
    return *(A8 + 0x28);
}

/*	Procedure: 0x0041B6A6 - 0x0041B6AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B6A6()
{



}

/*	Procedure: 0x0041B6B0 - 0x0041B6E5
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044602B()
 */

L0041B6B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    *(A8 + 0x30) = Ac;
    return *(A8 + 0x30);
}

/*	Procedure: 0x0041B6E6 - 0x0041B6EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B6E6()
{



}

/*	Procedure: 0x0041B6F0 - 0x0041B725
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044602B()
 */

L0041B6F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    *(A8 + 0x40) = Ac;
    return *(A8 + 0x40);
}

/*	Procedure: 0x0041B726 - 0x0041B72F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B726()
{



}

/*	Procedure: 0x0041B730 - 0x0041B770
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L0041B730(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0x48);
    }
    return *(A8 + 0x24);
}

/*	Procedure: 0x0041B771 - 0x0041B77F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B771()
{



}

/*	Procedure: 0x0041B7C1 - 0x0041B7CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B7C1()
{



}

/*	Procedure: 0x0041B811 - 0x0041B81F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B811()
{



}

/*	Procedure: 0x0041B820 - 0x0041B85B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044602B()
 *		L0046279D()
 */

L0041B820(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    *(A8 + 0x4c) = Ac;
    *(A8 + 0x50) = A10;
    return *(A8 + 0x50);
}

/*	Procedure: 0x0041B85C - 0x0041B85F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B85C()
{



}

/*	Procedure: 0x0041B860 - 0x0041B8A0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041A6A9()
 *		L0041B02A()
 */

L0041B860(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0x50);
    }
    return *(A8 + 0x4c);
}

/*	Procedure: 0x0041B8A1 - 0x0041B8AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041B8A1()
{



}

/*	Procedure: 0x0041B8B0 - 0x0041BA36
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041C5A0()
 *		L0041CCB0()
 */

L0041B8B0(A8, Ac, A10, A14, A18)
struct HWND__ * A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	struct HWND__ * ebx;
	/* unknown */ void  esi;



    esp = esp - 0xec;
    ebx = A8;
    ecx = Ac;
    if(A14 != 0) {
        L0041CD90(ebx, ebp + -248, 0, 0);
        ecx = ebp + -248;
    }
    eax = L0041B3F0(ecx, 2);
    *(ebp + -232) = 0x28;
    if(eax == 0 || L0041B460(eax, ebp + -232) == 0) {
        *(ebp + -212) = 0;
        *(ebp + -208) = 0;
        *(ebp + -204) = L0041B390(0);
        *(ebp + -200) = L0041B390(1) - 0x1e;
    }
    *(ebp - 0x30) = *(ebx + 0x8e) & 0xff;
    edx = *(ebx + 0x8d) & 0xff;
    ecx = *(ebx + 0x8c) & 0xff;
    *(ebp - 0x1c) = *(ebx + 0x8b) & 0xff;
    *(ebp - 0x18) = ecx;
    *(ebp - 0x14) = edx;
    *(ebp - 0x10) = *(ebp - 0x30);
    *(ebp - 0x30) = *(ebx + 0x8e) & 0xff;
    *(ebp - 0x30) = *(ebp - 0x30) + *(Ac + 0xc);
    edx = *(ebx + 0x8c) & 0xff;
    esi = *(Ac + 4) - edx;
    ecx = ( *(ebx + 0x8d) & 0xff) + *(Ac + 8);
    edx = *(ebx + 0x8b) & 0xff;
    *(ebp - 0x2c) = *Ac - edx;
    *(ebp - 0x28) = esi;
    *(ebp - 0x24) = ecx;
    *(ebp - 0x20) = *(ebp - 0x30);
    esi = 0;
    if(!(A10 & 0x100)) {
        ebx = GetTopWindow(0);
        do {
            if(IsWindowVisible(ebx) != 0 && GetWindowRect(ebx, ebp - 0x40) != 0) {
                ecx = *(ebp - 0x40);
                *(ebp + esi * 8 + -192) = ecx;
                *(ebp + esi * 8 + -188) = *(ebp - 0x3c);
                esi = esi + 1;
                if(esi >= 0x10) {
                    break;
                }
            }
            ebx = GetWindow(ebx, 2);
        } while(ebx != 0);
    }
    ecx = ebp - 0x1c;
    edx = ebp - 0x2c;
    eax = ebp + -212;
    return L00453FB0(A10, eax, edx, ecx, ebp + -192, esi, A18, 0);
}

/*	Procedure: 0x0041BA37 - 0x0041BA3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041BA37()
{



}

/*	Procedure: 0x0041BA40 - 0x0041BB65
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041CBA0()
 *		L0041FF90()
 */

L0041BA40(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    if(A8 != 0) {
        if(M0047fd6c != 0) {
            return;
        }
        eax = Shell_NotifyIconW(0, M0047fcd4);
        if(eax == 0) {
            esp = ebp - 4;
            return;
        }
        M0047fd6c = 1;
        ShowWindow(M0047fccc, 6);
        eax = ShowWindow(M0047fccc, 0);
    } else {
        if(M0047fd6c != 0) {
            M0047fd6c = 0;
            Shell_NotifyIconW(2, M0047fcd4);
            ShowWindow(M0047fccc, 5);
            eax = ShowWindow(M0047fccc, 9);
            if(M0047fcb8 != 0) {
                eax = SetFocus( *(M0047fcb8 + 0xc));
            }
        } else {
            eax = IsIconic(M0047fccc);
            if(eax == 0) {
                goto L0041bb30;
            }
            eax = ShowWindow(M0047fccc, 9);
            if(M0047fcb8 != 0) {
                eax = SetFocus( *(M0047fcb8 + 0xc));
                goto L0041bb36;
L0041bb30:
                esp = ebp - 4;
                return;
            }
        }
    }
L0041bb36:
    if(M0047fcc6 != A8) {
        M0047fcc6 = A8;
        if(M0047fd90 != 0) {
            PostMessageW(0, 0x48f, 0, 0);
        }
    }
    esp = ebp - 4;
}

/*	Procedure: 0x0041BB66 - 0x0041BB6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041BB66()
{



}

/*	Procedure: 0x0041BB70 - 0x0041BB8F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041D250()
 *		L0041F14C()
 */

L0041BB70(A4)
/* unknown */ void  A4;
{



    if(A4 != 0) {
        eax = M0047fd70;
        if(eax != 0) {
            do {
                if(*(eax + 0xc) == A4) {
                    goto L0041bb86;
                }
                eax = *eax;
            } while(eax != 0);
            goto L0041bb8d;
L0041bb86:
            return;
        }
    }
L0041bb8d:
    return 0;
}

/*	Procedure: 0x0041BB90 - 0x0041C09F
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 */

L0041BB90(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
long  A14;
{
	/* unknown */ void  Vffffffc0;



    (save)edi;
    esp = esp - 0x30;
    edi = Ac;
    eax = L00423980(0x47ff98);
    edx = *(edi + 0xc) - 0x64;
    if(edx <= 5) {
        switch(edx) {
            case 0:
                goto L0041bbbb;
            case 1:
                L0041BA40(1);
                goto L0041bc62;
            case 2:
                ShowWindow(M0047fccc, 9);
                goto L0041bc62;
            case 3:
                eax = L0042B5E0(1, 0, 0, 0, 1);
                *(ebp - 8) = eax;
                L0042DF80( *(ebp - 8), 0);
                eax = L0042BD00(ebp - 8);
                goto L0041bc62;
            case 4:
                L00438BF0();
                goto L0041bc62;
            case 5:
                eax = 0;
                edi = ebp - 0x34;
                ecx = 0xb;
                asm("rep stosd");
                *(ebp - 0x28) = M00480ff8;
                (save)ebp - 0x34;
                L00438C70();
                goto L0041bc62;
        }
L0041bbbb:
        ShowWindow(M0047fccc, 6);
        if(M0047fcc6 == 0) {
            M0047fcc6 = 1;
            if(M0047fd90 != 0) {
                PostMessageW(0, 0x48f, 0, 0);
            }
        }
    }
L0041bc62:
    esp = ebp - 4;
    (restore)edi;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0xc0;
    esp = esp & -8;
    eax = Ac - 6;
    edi = 0;
    ebx = & Vffffffc0;
    esi = A8;
    ecx = A10;
    if(eax <= 2) {
        goto L0041c094;
    }
    if(eax = eax - 9) {
        goto L0041bd70;
    }
    if(eax = eax - 1) {
        goto L0041c065;
    }
    if(eax = eax - 1) {
        goto L0041c070;
    }
    if(eax = eax - 0xb) {
        goto L0041bf38;
    }
    if(eax = eax - 0x68) {
        goto L0041bf94;
    }
    if(eax = eax - 0x7c) {
        goto L0041bfc1;
    }
    if(eax = eax - 1) {
        goto L0041c094;
    }
    if(eax = eax - 3) {
        goto L0041bfc1;
    }
    if(eax = eax - 1) {
        goto L0041c094;
    }
    if(eax = eax - 0xd) {
        goto L0041bda0;
    }
    if(eax = eax - 0xee) {
        goto L0041c094;
    }
    if(eax = eax - 1) {
        goto L0041bfa3;
    }
    eax = eax - 1;
    if(eax <= 1) {
        goto L0041c094;
    }
    if(eax = eax - 2) {
        goto L0041bfa3;
    }
    eax = eax - 1;
    if(eax <= 1) {
        goto L0041c094;
    }
    if(eax = eax - 2) {
        goto L0041bfa3;
    }
    eax = eax - 1;
    if(eax <= 1) {
        goto L0041c094;
    }
    if(eax = eax - 9) {
        goto L0041bf28;
    }
    if(eax = eax - 0x102) {
        goto L0041be10;
    }
    if(eax = eax - 0x179) {
        goto L0041bf61;
    }
    if(eax = eax - 1) {
        goto L0041bf87;
    }
    goto L0041c086;
    if(BeginPaint(esi, ebx + -188) == 0) {
        goto L0041c094;
    }
    EndPaint(esi, ebx + -188);
    goto L0041c094;
    if((eax = ecx - 61440) || (eax = eax - 0x10) || (eax = eax - 0x20)) {
        goto L0041c094;
    }
    if(eax = eax - 0x30) {
        goto L0041bdd0;
    }
    if(eax = eax - 0xc0) {
        goto L0041bde2;
    }
    goto L0041c086;
    PostMessageW(esi, 0x10, 0, 0);
    goto L0041c094;
    edi = DefWindowProcW(esi, edx, ecx, A14);
    if(M0047fcb8 == 0) {
        goto L0041c094;
    }
    SetFocus( *(M0047fcb8 + 0xc));
    goto L0041c094;
    *(ebx - 0x3c) = esp;
    L00423980(0x47ff98);
    esi = L00423850(0x41bb90, 0, 0);
    M0047ff98 = esi;
    if(M00480ff8 == 0) {
        goto L0041be5d;
    }
    L00424EF0(esi, 0x69, "\nNew Window", 0, 0, 0);
    L00425140(esi);
    L00424EF0(esi, 0x64, 0x4731d8, 0, 0, 0);
    L00424EF0(esi, 0x65, 0x4731e4, 0, 0, 0);
    L00424EF0(esi, 0x67, 0x4731f8, 0, 0, 0);
    L00425140(esi);
    L00424EF0(esi, 0x68, 0x47320c, 0, 0, 0);
    L00434150(ebx - 0x20, 0x20);
    *(ebx - 0x10) = A14 & 65535;
    *(ebx - 0xc) = A14 >> 0x10;
    *(ebx - 0x10) = *(ebx - 0x10) - 0x32;
    L00424930(esi, ebx - 0x20, 0, 0);
    SetWindowPos( *(L00424910(esi) + 0xc), -1, 0, 0, 0, 0, 3);
    goto L0041c094;
    if(*(ebx - 0x48) == 0) {
        goto L0041bf20;
    }
    (save)-1;
    ecx = *(ebx - 0x50);
    *(ebx - 0x48)();
    esp = *(ebx - 0x3c);
    goto L0041c094;
    L0042F750("*WM_ENTERMENULOOP. Please report this bug!");
    goto L0041c094;
    if(ecx & 65535 || M0047ff98 == 0) {
        goto L0041c094;
    }
    L00423980(0x47ff98);
    goto L0041c094;
    ecx = A14 - 0x201;
    if(ecx > 6) {
        goto L0041c094;
    }
    goto ( *(ecx * 4 + 0x4732d0));
    L0041BA40(0);
    goto L0041c094;
    L0041BA40(1);
    goto L0041c094;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
    SetWindowPos(esi, 0, 10000, 10000, 0, 0, 0x15);
    goto L0041c094;
    L0041DE70(edx, ecx, A14, ebx - 0x38);
    if(M00481028 == 0) {
        goto L0041c094;
    }
    eax = L00450BA0(ebx - 0x38, M00481020, M00481024);
    if(eax == 0) {
        goto L0041c094;
    }
    *(ebx + -124) = *L0047FF9C;
    *(ebx + -120) = *L0047FFA0;
    *(ebx + -116) = *L0047FFA4;
    *(ebx + -112) = *L0047FFA8;
    if(0x10 < 0x20) {
        goto L0041c001;
    }
    *(ebx - 0x5c) = M0047ffbc;
    *(ebx - 0x58) = M0047ffc0;
    ecx = ebx - 0x7c;
    *(ebx - 0x70) = eax;
    *(ebx - 0x54) = M0047ffc4;
    L00438C70(ecx);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
    L00438BF0();
    goto L0041c094;
    L00438BF0();
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return M00480ff4 & 0xff;
    edi = DefWindowProcW(esi, edx, ecx, A14);
    esp = ebp - 0xc;
    eax = edi;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0041C0A0 - 0x0041C2D5
 *	Argument size: -48
 *	Local size: 48
 *	Save regs size: 0
 *	Called by:
 *		L0041C2E0()
 *		L0041C5A0()
 */

L0041C0A0()
{
	WNDCLASSEXW Vffffffd0;



    if(M004a1008 != 0) {
        goto L0041c175;
    }
    ecx = M004811e8;
    Vffffffd0.hInstance = ecx;
    Vffffffd0.cbSize = 0x30;
    Vffffffd0.style = 0;
    Vffffffd0.lpfnWndProc = 0x41bc70;
    Vffffffd0.cbClsExtra = 0;
    Vffffffd0.cbWndExtra = 0;
    eax = LoadImageA(Vffffffd0.hInstance, M00000064, 1, 0x10, 0x10, 0);
    Vffffffd0.hIcon = eax;
    if(eax != 0) {
        goto L0041c114;
    }
    Vffffffd0.hIcon = LoadImageA(M004811e8, "AppIcon", 1, 0x10, 0x10, 0);
    if(Vffffffd0.hIcon != 0) {
        goto L0041c12a;
    }
    Vffffffd0.hIcon = LoadIconA(0, 32512);
    M0047fcd0 = Vffffffd0.hIcon;
    Vffffffd0.hCursor = 0;
    Vffffffd0.hbrBackground = 0;
    Vffffffd0.lpszMenuName = 0;
    Vffffffd0.lpszClassName = 0x47ffc8;
    Vffffffd0.hIconSm = 0;
    RegisterClassExW( & (Vffffffd0.cbSize));
    M004a1008 = ax;
    if(M004a1008 != 0) {
        goto L0041c175;
    }
    L0042FA00();
    if(M0047fccc != 0) {
        goto L0041c224;
    }
    *((L004286E0(0x481055, M00481054 & 0xff, 0x47fcec, 0x7e) >> 1) * 2 + 0x47fcec) = 0;
    eax = CreateWindowExW(0, M004a1008 & 65535, M0047fcec, 281673728, 10000, 10000, 0x64, 0x20, 0, 0, M004811e8, 0);
    M0047fccc = eax;
    if(eax != 0) {
        goto L0041c1f0;
    }
    L0042FA00();
    M0047fcd4 = 0x98;
    M0047fcd8 = M0047fccc;
    M0047fce0 = 7;
    M0047fce4 = 0x48c;
    M0047fce8 = M0047fcd0;
    if(M0047fcc8 != 0) {
        goto L0041c2d2;
    }
    Vffffffd0.hInstance = M004811e8;
    Vffffffd0.cbSize = 0x30;
    Vffffffd0.style = 8;
    Vffffffd0.lpfnWndProc = 0x41f150;
    Vffffffd0.cbClsExtra = 0;
    Vffffffd0.cbWndExtra = 0;
    Vffffffd0.hIcon = LoadIconW(0, 32512);
    Vffffffd0.hCursor = 0;
    Vffffffd0.hbrBackground = 0;
    Vffffffd0.lpszMenuName = 0;
    Vffffffd0.lpszClassName = 0x47fff0;
    Vffffffd0.hIconSm = 0;
    RegisterClassExW( & (Vffffffd0.cbSize));
    M0047fcc8 = ax;
    if(M0047fcc8 != 0) {
        goto L0041c2b6;
    }
    L00429610(65563);
    M0047fd78 = 0;
    M0047fd88 = 4;
    return L0042F5F0(1);
}

/*	Procedure: 0x0041C2E0 - 0x0041C331
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042E570()
 */

L0041C2E0()
{
	/* unknown */ void  ebp;



    ebp = esp;
    if(M0047fccc == 0) {
        return L0041C0A0();
    }
    *((L004286E0(0x481055, M00481054 & 0xff, M0047fcec, 0x7e) >> 1) * 2 + M0047fcec) = 0;
    return SetWindowTextW(M0047fccc, M0047fcec);
}

/*	Procedure: 0x0041C332 - 0x0041C33F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041C332()
{



}

/*	Procedure: 0x0041C340 - 0x0041C3AC
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042E5B0()
 */

L0041C340()
{
	/* unknown */ void  ebp;



    ebp = esp;
    esp = esp - 0x18;
    if((M0047fcc7 & 0xff) != (M0047fcc6 & 0xff)) {
        M0047fcc7 = M0047fcc6 & 0xff;
        if(M0047fd90 != 0) {
            *(ebp - 4) = esp;
            eax = *L0047fd90(M0047fd94, 0);
            goto L0041c3a9;
            eax = L00429560( *(ebp - 0xc));
            if(*(ebp - 0x10) != 0) {
                ecx = *(ebp - 0x18);
                eax = *(ebp - 0x10)(-1);
            }
            esp = *(ebp - 4);
        }
    }
L0041c3a9:
}

/*	Procedure: 0x0041C3AD - 0x0041C3AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041C3AD()
{



}

/*	Procedure: 0x0041C3B0 - 0x0041C3F8
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 4
 *	Called by:
 *		L0041DCE0()
 *		L0041F14C()
 */

L0041C3B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    ebx = *(ecx + 0x18);
    if(ebx == 0) {
        return;
    }
    Vfffffff8 = esp;
    eax = *ebx( *(ecx + 0x48), Ac);
    goto L0041c3f3;
    eax = L00429560(Vfffffff0);
    if(Vffffffec != 0) {
        ecx = *(ebp - 0x1c);
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L0041c3f3:
    esp = ebp - 4;
}

/*	Procedure: 0x0041C3F9 - 0x0041C3FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041C3F9()
{



}

/*	Procedure: 0x0041C400 - 0x0041C448
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 4
 *	Called by:
 *		L0041F14C()
 */

L0041C400(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    ebx = *(ecx + 0x14);
    if(ebx == 0) {
        return;
    }
    Vfffffff8 = esp;
    eax = *ebx( *(ecx + 0x48), Ac);
    goto L0041c443;
    eax = L00429560(Vfffffff0);
    if(Vffffffec != 0) {
        ecx = *(ebp - 0x1c);
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L0041c443:
    esp = ebp - 4;
}

/*	Procedure: 0x0041C449 - 0x0041C44F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041C449()
{



}

/*	Procedure: 0x0041C450 - 0x0041C498
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 4
 *	Called by:
 *		L0041FB2E()
 *		L0041FCF0()
 */

L0041C450(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    ebx = *(ecx + 0x1c);
    if(ebx == 0) {
        return;
    }
    Vfffffff8 = esp;
    eax = *ebx( *(ecx + 0x48), Ac);
    goto L0041c493;
    eax = L00429560(Vfffffff0);
    if(Vffffffec != 0) {
        ecx = *(ebp - 0x1c);
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L0041c493:
    esp = ebp - 4;
}

/*	Procedure: 0x0041C499 - 0x0041C4E8
 *	Argument size: 4
 *	Local size: 24
 *	Save regs size: 4
 */

L0041C499(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    ebx = *(ecx + 0x38);
    if(ebx == 0) {
        return;
    }
    Vfffffff8 = esp;
    eax = *ebx( *(ecx + 0x48));
    goto L0041c4e3;
    eax = L00429560(Vfffffff0);
    if(Vffffffec != 0) {
        ecx = *(ebp - 0x1c);
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L0041c4e3:
    esp = ebp - 4;
}

/*	Procedure: 0x0041C4E9 - 0x0041C542
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 4
 */

L0041C4E9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    ebx = *(ecx + 0x2c);
    if(ebx != 0) {
        Vfffffff8 = esp;
        eax = *ebx( *(ecx + 0x48), Ac);
        goto L0041c53d;
        eax = L00429560(Vfffffff0);
        if(Vffffffec != 0) {
            (save)-1;
            ecx = *(ebp - 0x1c);
            eax = Vffffffec();
        }
        esp = *(ebp - 8);
    } else {
        eax = L00450AF0(ecx, 0, 0);
    }
L0041c53d:
}

/*	Procedure: 0x0041C543 - 0x0041C54F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041C543()
{



}

/*	Procedure: 0x0041C550 - 0x0041C598
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 4
 *	Called by:
 *		L0041F14C()
 */

L0041C550(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    ebx = *(ecx + 0x20);
    if(ebx == 0) {
        return;
    }
    Vfffffff8 = esp;
    eax = *ebx( *(ecx + 0x48), Ac);
    goto L0041c593;
    eax = L00429560(Vfffffff0);
    if(Vffffffec != 0) {
        ecx = *(ebp - 0x1c);
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L0041c593:
    esp = ebp - 4;
}

/*	Procedure: 0x0041C599 - 0x0041C59F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041C599()
{



}

/*	Procedure: 0x0041C5A0 - 0x0041C85A
 *	Argument size: 20
 *	Local size: 556
 *	Save regs size: 12
 *	Called by:
 *		L004395A0()
 *		L00450800()
 *		L00462160()
 */

L0041C5A0(A8, Ac, A10, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
HWND A18;
{
	HWND ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = Ac;
    ebx = A18;
    L0041C0A0();
    if(edi == 0) {
        L00429610(65538);
    }
    eax = L0042E3A0(0x120);
    *(ebp + -568) = eax;
    *(eax + 0x89) = 1;
    *( *(ebp + -568) + 0x68) = 0x32;
    *( *(ebp + -568) + 0x6a) = 0x32;
    *( *(ebp + -568) + 0x6c) = 0xfa0;
    *( *(ebp + -568) + 0x6e) = 0xfa0;
    *( *(ebp + -568) + 0x70) = 2;
    L0044FB80(A10, *(ebp + -568) + 0x8b, *(ebp + -568) + 0x8c, *(ebp + -568) + 0x8d, *(ebp + -568) + 0x8e);
    L0041B8B0( *(ebp + -568), edi, A10, 0, & Vffffffe4);
    L00428970( *(ebp + -568) + 0x90, ebx, 0x7f);
    ebx :: 0;
    edx = !(ecx = ebx + 1) ? *ebx & 0xff : 0;
    ebx = edx;
    if(edx > 2 && *ecx == 0x10 && ( *(ecx + 1) & 0xff) == 0x20) {
        ecx = ecx + 2;
        ebx = ebx - 2;
    }
    *(ebp + (L004286E0(ecx, ebx, ebp + -564, 0x1fe) >> 1) * 2 + -564) = 0;
    if(!(A10 & 0x200)) {
        ecx = Vffffffe8;
        (save)0;
        (save)M004811e8;
        (save)0;
        (save)M0047fccc;
        (save)Vfffffff0 - ecx;
        eax = ebp + -564;
        (save)Vffffffec - Vffffffe4;
        (save)ecx;
        (save)Vffffffe4;
        (save)-2146828288;
        (save)eax;
        (save)M0047fcc8 & 65535;
        (save)0;
    } else {
        edi = Vffffffe8;
        (save)0;
        (save)M004811e8;
        (save)0;
        (save)0;
        (save)Vfffffff0 - edi;
        eax = ebp + -564;
        (save)Vffffffec - Vffffffe4;
        (save)edi;
        (save)Vffffffe4;
        (save)-2147483648;
        (save)eax;
        (save)M0047fcc8 & 65535;
        (save)0x88;
    }
    ebx = CreateWindowExW();
    if(ebx == 0) {
        ecx = ebp + -568;
        L0042E3E0(ecx);
        L0042F970(GetLastError());
    }
    *( *(ebp + -568) + 0xc) = ebx;
    ecx = *(ebp + -568) + 0x54;
    edi = ecx;
    if(ecx != 0) {
        *ecx = 0x480058;
    }
    *(edi + 4) = 1;
    *(edi + 8) = *(ebp + -568);
    (save)edi;
    (save)ebx;
    RegisterDragDrop();
    *( *(ebp + -568) + M00000064) = A10;
    *( *(ebp + -568) + 8) = -266958733;
    (save) *(ebp + -568);
    L0042A0D0(0x47fd70);
    (restore)ecx;
    if(!(eax = A10 & 0x30)) {
        Vffffffe0 = esp;
        L0041CBA0( *(ebp + -568), eax);
        goto L0041c825;
        L0041C860(ebp + -568);
        L004234F0(0, 0, 0);
        if(Vffffffd4 != 0) {
            (save)-1;
            ecx = Vffffffcc;
            Vffffffd4();
        }
        esp = *(ebp - 0x20);
L0041c825:
        dl = GetFocus() == ebx ? 4 : 3;
        *( *(ebp + -568) + 0x89) = dl;
    }
    eax = *(ebp + -568);
    *(eax + 0x48) = A8;
    return *(ebp + -568);
}

/*	Procedure: 0x0041C85B - 0x0041C85F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041C85B()
{



}

/*	Procedure: 0x0041C860 - 0x0041CA0C
 *	Argument size: 4
 *	Local size: 76
 *	Save regs size: 4
 *	Called by:
 *		L004192E0()
 *		L0041C5A0()
 *		L00423980()
 *		L004395A0()
 *		L00439BF0()
 *		L004505E0()
 *		L00462100()
 *		L00462160()
 */

L0041C860(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    edx = *ecx;
    *(ebp - 0x50) = edx;
    if(edx == 0) {
        return;
    }
    *ecx = 0;
    eax = *(ebp - 0x50);
    if(*(eax + 8) != -266958733) {
L0041c892:
        esp = ebp - 4;
        return;
    }
    ebx = *( *(ebp - 0x50) + 0x40);
    if(ebx != 0) {
        Vffffffc8 = esp;
        *ebx( *( *(ebp - 0x50) + 0x48));
        goto L0041c8c3;
        if(Vffffffbc != 0) {
            (save)-1;
            ecx = Vffffffb4;
            Vffffffbc();
        }
        esp = *(ebp - 0x38);
    }
L0041c8c3:
    ebx = *( *(ebp - 0x50) + 0x44);
    if(ebx != 0) {
        Vfffffff8 = esp;
        *ebx( *( *(ebp - 0x50) + 0x48));
        goto L0041c8f3;
        if(Vffffffec != 0) {
            (save)-1;
            ecx = Vffffffe4;
            Vffffffec();
        }
        esp = *(ebp - 8);
    }
L0041c8f3:
    (save) *(ebp - 0x50);
    (restore)ecx;
    if(L0042A150(0x47fd70) == 0) {
        goto L0041c892;
    }
    ebx = *(ebp - 0x50);
    if(GetFocus() == *(ebx + 0xc)) {
        eax = L0041D250(ebx);
        if(eax != 0) {
            SetFocus( *(eax + 0xc));
        }
    }
    L0042A150(0x47fd80, *(ebp - 0x50));
    (save) *( *(ebp - 0x50) + 0xc);
    RevokeDragDrop();
    L00450DA0( *(ebp - 0x50) + 0x60);
    DestroyWindow( *( *(ebp - 0x50) + 0xc));
    if(M0047fca8 == *(ebp - 0x50)) {
        M0047fca8 = 0;
    }
    if(M0047fcac == *(ebp - 0x50)) {
        M0047fcac = 0;
    }
    if(M0047fcb0 == *(ebp - 0x50)) {
        M0047fcb0 = 0;
    }
    if(M0047fcb4 == *(ebp - 0x50)) {
        M0047fcb4 = 0;
    }
    if(M0047fcb8 == *(ebp - 0x50)) {
        M0047fcb8 = 0;
    }
    Vffffffe0 = esp;
    L004505E0(M00481030, *(ebp - 0x50));
    goto L0041c9f3;
    if(Vffffffd4 != 0) {
        (save)-1;
        ecx = Vffffffcc;
        Vffffffd4();
    }
    esp = *(ebp - 0x20);
L0041c9f3:
    edx = *(ebp - 0x50);
    *(edx + 8) = 0;
    eax = L0042E3E0(ebp - 0x50);
    esp = ebp - 4;
}

/*	Procedure: 0x0041CA0D - 0x0041CA0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CA0D()
{



}

/*	Procedure: 0x0041CA10 - 0x0041CB1E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041CB20()
 */

L0041CA10(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
struct HWND__ * A10;
{
	/* unknown */ void  ebx;
	struct HWND__ * esi;



    esp = esp - 0x210;
    ebx = Ac;
    esi = A10;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    if(esi > 0x7f) {
        esi = 0x7f;
    }
    if(( *(A8 + 0x90) & 0xff) == esi && L00434380(A8 + 0x91, ebx, esi) != 0) {
        return;
    }
    L00428F50(A8 + 0x90, ebx, esi);
    if(esi > 2 && *ebx == 0x10 && ( *(ebx + 1) & 0xff) == 0x20) {
        ebx = ebx + 2;
        esi = esi - 2;
    }
    *(ebp + (L004286E0(ebx, esi, ebp + -524, 0x1fe) >> 1) * 2 + -524) = 0;
    esi = *(A8 + 0xc);
    SetWindowTextW(esi, ebp + -524);
    eax = IsWindowVisible(esi);
    if(eax != 0) {
        eax = GetClientRect(esi, ebp + -540);
        if(eax != 0) {
            edx = *(A8 + 0x8c) & 0xff;
            *(ebp + -528) = edx;
            eax = InvalidateRect(esi, ebp + -540, 0);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0041CB1F - 0x0041CB1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CB1F()
{



}

/*	Procedure: 0x0041CB20 - 0x0041CB45
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CB20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac != 0 ? *Ac & 0xff : 0;
    return L0041CA10(A8, Ac + 1, eax);
}

/*	Procedure: 0x0041CB46 - 0x0041CB4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CB46()
{



}

/*	Procedure: 0x0041CB50 - 0x0041CB94
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00450800()
 */

L0041CB50(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    return L00428EA0(A8 + 0x90, Ac, A10);
}

/*	Procedure: 0x0041CB95 - 0x0041CB9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CB95()
{



}

/*	Procedure: 0x0041CBA0 - 0x0041CCA0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00408F30()
 *		L00409390()
 *		L00415380()
 *		L0041C5A0()
 *		L0044602B()
 *		L00450AF0()
 *		L00450B40()
 */

L0041CBA0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	struct HWND__ * edi;



    esp = esp - 4;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    edi = *(A8 + 0xc);
    eax = IsWindowVisible(edi);
    bl = 0;
    if(Ac != 0) {
        *(ebp - 0x10) = 4;
        if(!( *(A8 + M00000064) & 0x200)) {
            eax = L0041BA40(0);
            if(M0047fcc6 == 0) {
                *(ebp - 0x10) = 1;
            }
        }
        if(Ac == 0x10) {
            BringWindowToTop(edi);
        }
        if(bl != 0) {
            goto L0041cc99;
        }
        ShowWindow(edi, *(ebp - 0x10));
        if(!( *(A8 + M00000064) & 0x80)) {
            M0047fd88 = 4;
            L0042A0D0(0x47fd80, A8);
        }
        (save)A8;
        (save)M00481030;
        eax = L004505E0();
        goto L0041cc97;
    }
    if(bl != 0) {
        if(GetFocus() == *(A8 + 0xc)) {
            eax = L0041D250(A8);
            if(eax != 0) {
                SetFocus( *(eax + 0xc));
            }
        }
        ShowWindow(edi, 0);
        eax = L0042A150(0x47fd80, A8);
L0041cc97:
    }
L0041cc99:
}

/*	Procedure: 0x0041CCA1 - 0x0041CCAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CCA1()
{



}

/*	Procedure: 0x0041CCB0 - 0x0041CD8E
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041A270()
 *		L0041CE80()
 *		L00423CB0()
 */

L0041CCB0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
int A10;
/* unknown */ void  A14;
{
	int esi;
	int edi;



    esp = esp - 0x24;
    esi = A10;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    if(!( *(A8 + M00000064) & 8)) {
        esi = esi | 8;
    }
    L0041B8B0(A8, Ac, esi, 1, ebp - 0x30);
    eax = *(A8 + 0xc);
    *(ebp - 0x20) = eax;
    if(GetWindowRect(eax, ebp - 0x1c) == 0) {
        L0042FA00();
    }
    edx = *(ebp - 0x2c);
    edi = *(ebp - 0x28) - *(ebp - 0x30);
    esi = *(ebp - 0x24) - edx;
    eax = SetWindowPos( *(ebp - 0x20), 0, *(ebp - 0x30), edx, edi, esi, 0x14);
    if(eax == 0) {
        L0042FA00();
    }
    if(edi != *(ebp - 0x14) - *(ebp - 0x1c) || esi != *(ebp - 0x10) - *(ebp - 0x18)) {
        eax = InvalidateRect( *(ebp - 0x20), 0, 0);
    }
    if(A14 != 0) {
        eax = L0041CD90(A8, A14, 0, 0);
    }
}

/*	Procedure: 0x0041CD8F - 0x0041CD8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CD8F()
{



}

/*	Procedure: 0x0041CD90 - 0x0041CE7F
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00408E70()
 *		L0041AE20()
 *		L0041B0E8()
 *		L0041B8B0()
 *		L0041CCB0()
 *		L0041CE80()
 *		L0041D9B0()
 *		L0041DB20()
 *		L0041F810()
 *		L00423CB0()
 *		L004505E0()
 *		L00450800()
 */

L0041CD90(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    esp = esp - 0x3c;
    if(A8 == 0) {
        eax = L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        eax = L00429610(65561);
    }
    if(A10 != 0) {
        *A10 = 0;
    }
    if(A14 != 0) {
        eax = L0041D100(A8);
        *A14 = eax;
    }
    if(Ac == 0) {
        return;
    }
    if(GetWindowRect( *(A8 + 0xc), ebp - 0x48) == 0) {
        L0042FA00();
    }
    edx = ebp - 0x38;
    *(ebp - 0x38) = 0x2c;
    if(GetWindowPlacement( *(A8 + 0xc), edx) == 0) {
        L0042FA00();
    }
    if(*(ebp - 0x30) == 2) {
        *(ebp - 0x48) = *(ebp - 0x1c);
        eax = *(ebp - 0x18);
        edx = *(ebp - 0x14);
        *(ebp - 0x44) = eax;
        *(ebp - 0x40) = edx;
        *(ebp - 0x3c) = *(ebp - 0x10);
    }
    *Ac = ( *(A8 + 0x8b) & 0xff) + *(ebp - 0x48);
    *(Ac + 4) = ( *(A8 + 0x8c) & 0xff) + *(ebp - 0x44);
    ecx = *(A8 + 0x8d) & 0xff;
    eax = *(ebp - 0x40) - ecx;
    *(Ac + 8) = eax;
    edx = *(A8 + 0x8e) & 0xff;
    *(Ac + 0xc) = *(ebp - 0x3c) - edx;
    esp = ebp - 0xc;
}

/*	Procedure: 0x0041CE80 - 0x0041CEFB
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041A300()
 *		L004505E0()
 *		L00450800()
 */

L0041CE80(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = Ac;
    esp = esp - 0x10;
    ebx = A10;
    if(esi < 0x10) {
        esi = 0x10;
    }
    if(esi > 0x1000) {
        esi = 0x1000;
    }
    if(ebx < 0x10) {
        ebx = 0x10;
    }
    if(ebx > 0x1000) {
        ebx = 0x1000;
    }
    L0041CD90(A8, ebp - 0x1c, 0, 0);
    ecx = *(ebp - 0x1c);
    edx = *(ebp - 0x18);
    ecx = ecx + esi;
    edx = edx + ebx;
    *(ebp - 0x14) = ecx;
    *(ebp - 0x10) = edx;
    return L0041CCB0(A8, ebp - 0x1c, A14, A18);
}

/*	Procedure: 0x0041CEFC - 0x0041CEFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CEFC()
{



}

/*	Procedure: 0x0041CF00 - 0x0041CF95
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00401000()
 *		L004196E0()
 *		L0044602B()
 */

L0041CF00(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A14;
    ebx = A18;
    if(A8 == 0) {
        eax = L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        eax = L00429610(65561);
    }
    if(Ac < 0x32) {
        Ac = 0x32;
    }
    if(A10 < 0x10) {
        A10 = 0x10;
    }
    if(esi > 0xfa0) {
        esi = 0xfa0;
    }
    if(ebx > 0xfa0) {
        ebx = 0xfa0;
    }
    if(esi < Ac) {
        esi = Ac;
    }
    if(ebx < A10) {
        ebx = A10;
    }
    *(A8 + 0x68) = Ac;
    *(A8 + 0x6a) = A10;
    *(A8 + 0x6c) = si;
    *(A8 + 0x6e) = bx;
    return *(A8 + 0x6a);
}

/*	Procedure: 0x0041CF96 - 0x0041CF9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041CF96()
{



}

/*	Procedure: 0x0041CFA0 - 0x0041D00F
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041AE20()
 */

L0041CFA0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    if(A8 == 0) {
        A18 = L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        A18 = L00429610(65561);
    }
    if(Ac != 0) {
        ecx = *(A8 + 0x68) & 65535;
        *Ac = cx;
    }
    if(A10 != 0) {
        *A10 = *(A8 + 0x6a) & 65535;
    }
    if(A14 != 0) {
        edx = *(A8 + 0x6c) & 65535;
        A18 = A14;
        *A18 = dx;
    }
    if(A18 != 0) {
        ecx = *(A8 + 0x6e) & 65535;
        *A18 = cx;
    }
}

/*	Procedure: 0x0041D010 - 0x0041D056
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004196E0()
 */

L0041D010(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    eax = Ac & -256;
    if(*(A8 + 0x70) != eax) {
        *(A8 + 0x70) = eax;
        eax = L0041D2B0(A8);
    }
}

/*	Procedure: 0x0041D057 - 0x0041D05F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D057()
{



}

/*	Procedure: 0x0041D060 - 0x0041D0B9
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00401000()
 *		L004196E0()
 */

L0041D060(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    if(Ac >= 0xdd) {
        L00429610(65538);
    }
    eax = bl & 0xff;
    if(*(A8 + 0x70) != eax) {
        *(A8 + 0x70) = eax;
        eax = L0041D2B0(A8);
    }
}

/*	Procedure: 0x0041D0BA - 0x0041D0BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D0BA()
{



}

/*	Procedure: 0x0041D0C0 - 0x0041D0F2
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0041D0C0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    return *(A8 + M00000064);
}

/*	Procedure: 0x0041D0F3 - 0x0041D0FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D0F3()
{



}

/*	Procedure: 0x0041D100 - 0x0041D17F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041AF2D()
 *		L0041CD90()
 *		L0041D3C0()
 */

L0041D100(A8)
struct HWND__ * A8;
{
	struct HWND__ * ebx;



    ebx = A8;
    if(ebx == 0) {
        L00429610(65538);
    }
    if(*(ebx + 8) != -266958733) {
        L00429610(65561);
    }
    if(ebx == M0047fcb4) {
        esp = ebp - 4;
        return 4;
    }
    ebx = *(ebx + 0xc);
    if(IsWindowVisible(ebx) == 0) {
        esp = ebp - 4;
        return 1;
    }
    if(GetFocus() == ebx) {
        esp = ebp - 4;
        return 4;
    }
    esp = ebp - 4;
    return 3;
}

/*	Procedure: 0x0041D180 - 0x0041D1B5
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004196E0()
 */

L0041D180(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    *(A8 + 0x74) = Ac;
    return *(A8 + 0x74);
}

/*	Procedure: 0x0041D1B6 - 0x0041D1BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D1B6()
{



}

/*	Procedure: 0x0041D1C0 - 0x0041D244
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00415380()
 *		L00450800()
 */

L0041D1C0(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    esi = *(A8 + 0xc);
    if(IsWindowVisible(esi) == 0) {
        if(L00450B60(A8) != 0) {
            eax = L00450B40(A8, 0);
            esp = ebp - 8;
            (restore)esi;
            return 1;
        }
        esp = ebp - 8;
        (restore)esi;
        return 0;
    }
    eax = GetTopWindow(0);
    if(eax == esi) {
        esp = ebp - 8;
        (restore)esi;
        return 0;
    }
    eax = BringWindowToTop(esi);
    esp = ebp - 8;
    (restore)esi;
    return 1;
}

/*	Procedure: 0x0041D245 - 0x0041D24F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D245()
{



}

/*	Procedure: 0x0041D250 - 0x0041D2A6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041C860()
 *		L0041CBA0()
 */

L0041D250(A8)
struct HWND__ * A8;
{
	struct HWND__ * ebx;



    ebx = A8;
    if(ebx == 0) {
        L00429610(65538);
    }
    if(*(ebx + 8) != -266958733) {
        L00429610(65561);
    }
    ebx = *(ebx + 0xc);
    do {
        ebx = GetWindow(ebx, 2);
    } while(IsWindowVisible(ebx) == 0 && ebx != 0);
    return L0041BB70(ebx);
}

/*	Procedure: 0x0041D2A7 - 0x0041D2AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D2A7()
{



}

/*	Procedure: 0x0041D2B0 - 0x0041D2E3
 *	Argument size: -12
 *	Local size: 16
 *	Save regs size: 0
 *	Called by:
 *		L0041D010()
 *		L0041D060()
 *		L00423D50()
 */

L0041D2B0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    Vfffffff0 = 0;
    Vfffffff4 = 0;
    Vfffffff8 = 32767;
    Vfffffffc = 32767;
    return L0041D2F0(A8, & Vfffffff0);
}

/*	Procedure: 0x0041D2E4 - 0x0041D2EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D2E4()
{



}

/*	Procedure: 0x0041D2F0 - 0x0041D3B9
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041D2B0()
 *		L00438EAB()
 *		L004501A0()
 *		L004505E0()
 *		L00450800()
 */

L0041D2F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	struct HWND__ * esi;



    esp = esp - 0x10;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    esi = *(A8 + 0xc);
    eax = IsWindowVisible(esi);
    if(eax == 0) {
        return;
    }
    eax = GetClientRect(esi, ebp - 0x18);
    if(eax == 0) {
        esp = ebp - 8;
        return;
    }
    ecx = *(A8 + 0x8b) & 0xff;
    *(ebp - 0x10) = *(ebp - 0x10) - ( *(A8 + 0x8d) & 0xff) + ecx;
    eax = *(A8 + 0x8c) & 0xff;
    edx = ( *(A8 + 0x8e) & 0xff) + eax;
    ecx = ebp - 0x18;
    *(ebp - 0xc) = *(ebp - 0xc) - edx;
    if(L0044B6F0(ecx, ecx, Ac) != 0) {
        eax = *(A8 + 0x8c) & 0xff;
        edx = *(A8 + 0x8b) & 0xff;
        *(ebp - 0x18) = *(ebp - 0x18) + edx;
        *(ebp - 0x14) = *(ebp - 0x14) + eax;
        *(ebp - 0x10) = *(ebp - 0x10) + edx;
        *(ebp - 0xc) = *(ebp - 0xc) + eax;
        eax = InvalidateRect(esi, ebp - 0x18, 0);
    }
    esp = ebp - 8;
}

/*	Procedure: 0x0041D3BA - 0x0041D3BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D3BA()
{



}

/*	Procedure: 0x0041D3C0 - 0x0041D464
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041A71E()
 *		L0042462A()
 *		L004503AB()
 */

L0041D3C0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    (save)A14;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    if(A14 != 0) {
        *A14 = L0041D100(A8);
    }
    if(A18 != 0) {
        edx = *(A8 + 0x70);
        *A18 = edx;
    }
    if(Ac == 0 || A10 == 0) {
        esp = ebp - 0xc;
        (restore)A14;
        return 0;
    }
    if(*(A8 + 0x88) == 0) {
        esp = ebp - 0xc;
        (restore)A14;
        return 0;
    }
    *(A8 + 0x88) = 0;
    *Ac = *(A8 + 0x78);
    *(Ac + 4) = *(A8 + 0x7c);
    *(Ac + 8) = *(A8 + 0x80);
    *(Ac + 0xc) = *(A8 + 0x84);
    esp = ebp - 0xc;
    (restore)A14;
    return 1;
}

/*	Procedure: 0x0041D465 - 0x0041D46F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D465()
{



}

/*	Procedure: 0x0041D470 - 0x0041D6FF
 *	Argument size: 16
 *	Local size: 148
 *	Save regs size: 12
 *	Called by:
 *		L0041D700()
 */

L0041D470(A8, Ac, A10, A14)
/* unknown */ void  A8;
struct HWND__ * Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	struct HWND__ * esi;
	struct HDC__ * edi;
	/* unknown */ void  Vffffff70;
	unsigned long  Vffffff74;
	int Vffffff78;
	BITMAPINFO Vffffff7c;
	struct HDC__ * Vffffffa8;
	struct HWND__ * Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	int Vffffffb8;
	struct tagRECT Vffffffbc;  /* size = 16 bytes */
	unsigned long  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    if(A10 == 0) {
        L00429610(65538);
    }
    Vffffff74 = *A10;
    Vffffffcc = *(A10 + 4);
    Vffffff78 = *(A8 + 0x8b) & 0xff;
    esi :: 0;
    if(!(Vffffffb8 = *(A8 + 0x8c) & 0xff)) {
        Vffffff78 = Vffffff78 + *esi;
        Vffffffb8 = Vffffffb8 + *(esi + 4);
    }
    eax = A8;
    if(!( *(eax + M00000064) & 8) && GetClientRect( *(eax + 0xc), & (Vffffffbc.left)) != 0) {
        edx = *(A8 + 0x89) == 4 ? 4 : 0;
        Vffffffd0 = edx;
        Vffffffd4 = 0;
        Vffffffdc = 0;
        Vffffffe0 = 0;
        Vffffffd8 = M00481000;
        Vffffffe4 = *(A8 + M00000064);
        Vffffffe8 = 0;
        Vffffffec = 0;
        Vfffffff0 = 0;
        L0044F9A0( & (Vffffffbc.left), & Vffffffd0, 4, ebp + -160);
        edi = Vffffff78;
        esi = Vffffffb8;
        Vffffffb0 = edi + Vffffff74;
        eax = ebp + -160;
        Vffffffb4 = esi + Vffffffcc;
        Vffffffa8 = edi;
        Vffffffac = esi;
        (save) & Vffffffa8;
        L0044B6A0(eax);
        (restore)ecx;
        if(al != 0) {
            Vffffffbc.right = Vffffffbc.right - edi;
            Vffffffbc.bottom = Vffffffbc.bottom - esi;
            L0044F670(A10, & (Vffffffbc.left), & Vffffffd0);
        }
    }
    eax = Vffffffcc;
    Vffffff70 = eax;
    edx = *(A10 + 0xc) >> 2;
    ecx = *(A10 + 0x18);
    if(!(edx = Vffffff70 * Vffffff70 - 1)) {
        do {
            eax = *ecx;
            esi = eax << 8 & 16711680;
            esi = esi | eax >> 0x18;
            *ecx = esi | eax >> 8 & 65280;
            ecx = ecx + 4;
        } while(edx = edx - 1);
    }
    Vffffff7c.bmiHeader = 0x28;
    Vffffff7c.? = *(A10 + 0xc) >> 2;
    Vffffff7c.? = ~Vffffffcc;
    Vffffff7c.? = 1;
    Vffffff7c.? = 0x20;
    Vffffff7c.? = 0;
    Vffffff7c.? = 0;
    Vffffff7c.? = 0;
    Vffffff7c.? = 0;
    *(ebp - M00000064) = 0;
    Vffffff7c.? = 0;
    esi = *(A8 + 0xc);
    edi = GetDC(esi);
    SetDIBitsToDevice(edi, Vffffff78, Vffffffb8, Vffffff74, Vffffffcc, 0, 0, 0, Vffffffcc, *(A10 + 0x18), & (Vffffff7c.bmiHeader), 0);
    eax = ReleaseDC(esi, edi);
    if(A14 == 0) {
        esi = *(A10 + 0xc) >> 2;
        edi = *(A10 + 0x18);
        if(!(esi = Vffffff70 * Vffffff70 - 1)) {
            do {
                ecx = *edi;
                eax = ecx << 8 & 16711680;
                eax = eax | ecx >> 0x18;
                eax = eax | ecx >> 8 & 65280;
                *edi = eax;
                edi = edi + 4;
            } while(esi = esi - 1);
        }
    }
}

/*	Procedure: 0x0041D700 - 0x0041D753
 *	Argument size: 12
 *	Local size: 24
 *	Save regs size: 4
 *	Called by:
 *		L0042462A()
 *		L004503AB()
 */

L0041D700(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff8;



    Vfffffff8 = esp;
    L0041D470(A8, Ac, *A10, 1);
    return L004492F0(A10);
    L004492F0(A10);
    L004234F0(0, 0, 0);
    if(Vffffffec != 0) {
        (save)-1;
        ecx = *(ebp - 0x1c);
        Vffffffec();
    }
    esp = *(ebp - 8);
    return L004492F0(A10);
}

/*	Procedure: 0x0041D754 - 0x0041D75F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D754()
{



}

/*	Procedure: 0x0041D828 - 0x0041D82F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D828()
{



}

/*	Procedure: 0x0041D830 - 0x0041D8D3
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00423CB0()
 *		L00424930()
 */

L0041D830(Ac, A14)
/* unknown */ void  Ac;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;



    esp = esp - 0x38;
    esi = Ac;
    if(A14 == 0) {
        L00429610(65538);
    }
    if(esi == 0) {
        *(ebp - 0x18) = 0;
        *(ebp - 0x14) = 0;
        *(ebp - 0x10) = 0x10;
        *(ebp - 0xc) = 0x10;
        esi = ebp - 0x18;
    }
    eax = L0041B3F0(esi, 2);
    *(ebp - 0x40) = 0x28;
    if(eax == 0 || L0041B460(eax, ebp - 0x40) == 0) {
        *(ebp - 0x2c) = 0;
        *(ebp - 0x28) = 0;
        *(ebp - 0x24) = L0041B390(0);
        *(ebp - 0x20) = L0041B390(1) - 0x1e;
    }
    *A14 = *(ebp - 0x2c);
    eax = *(ebp - 0x28);
    *(A14 + 4) = eax;
    *(A14 + 8) = *(ebp - 0x24);
    *(A14 + 0xc) = *(ebp - 0x20);
}

/*	Procedure: 0x0041D8D4 - 0x0041D8DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D8D4()
{



}

/*	Procedure: 0x0041D98F - 0x0041D98F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D98F()
{



}

/*	Procedure: 0x0041D990 - 0x0041D9AA
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 */

L0041D990(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    M00481020 = A4;
    M00481024 = A8;
    M00481028 = 1;
    return M00481024;
}

/*	Procedure: 0x0041D9AB - 0x0041D9AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041D9AB()
{



}

/*	Procedure: 0x0041D9B0 - 0x0041DAE1
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L0041D9B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    ebx = Ac;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 8) != -266958733) {
        L00429610(65561);
    }
    (save)0;
    eax = L0041F050(A8);
    (restore)ecx;
    if(*(A8 + 0x10) == 0) {
        return;
    }
    if(ebx != 0) {
        L0041CD90(A8, ebp - 0x18, 0, 0);
        edx = *(ebp - 0x10) - *(ebp - 0x18);
        *(ebp - 0x10) = edx;
        *(ebp - 0xc) = *(ebp - 0xc) - *(ebp - 0x14);
        *(ebp - 0x18) = 0;
        *(ebp - 0x14) = 0;
        if(*(A8 + 0x88) != 0) {
            ebx = ebp - 0x18;
            if(L0044B6F0(ebx, ebx, ebx) == 0) {
                esp = ebp - 8;
                return;
            }
            eax = A8 + 0x78;
            edx = ebp - 0x18;
            L0044B770(eax, eax, edx);
            goto L0041dacd;
        }
        ecx = ebp - 0x18;
        if(L0044B6F0(A8 + 0x78, ecx, ebx) != 0) {
            goto L0041dacd;
        }
        esp = ebp - 8;
        return;
    }
    L0041CD90(A8, A8 + 0x78, 0, 0);
    *(A8 + 0x80) = *(A8 + 0x80) - *(A8 + 0x78);
    *(A8 + 0x84) = *(A8 + 0x84) - *(A8 + 0x7c);
    *(A8 + 0x78) = 0;
    *(A8 + 0x7c) = 0;
L0041dacd:
    *(A8 + 0x88) = 1;
    eax = *(A8 + 0x10)( *(A8 + 0x48));
    esp = ebp - 8;
}

/*	Procedure: 0x0041DAE2 - 0x0041DAEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041DAE2()
{



}

/*	Procedure: 0x0041DB16 - 0x0041DB1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041DB16()
{



}

/*	Procedure: 0x0041DB20 - 0x0041DC40
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00454600()
 */

L0041DB20(Ac)
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ecx = M0047fd70;
    esp = esp - 0x10;
    edi = 0;
    esi = 0;
    do {
        edx = ( *(ecx + 0x90) & 0xff) + 1;
        ecx = *ecx;
        esi = esi + 1;
        edi = edi + edx;
    } while(ecx != 0);
    if(esi == 0) {
        if(Ac != 0) {
            *Ac = 0;
        }
        return 0;
    }
    ebx = esi * 0x2c + 8;
    *(ebp - 0x10) = ebx;
    *(ebp - 0x10) = *(ebp - 0x10) + edi;
    eax = *(ebp - 0x10);
    *(ebp - 0x14) = eax;
    eax = L0042E310( *(ebp - 0x14));
    *(ebp - 0x1c) = eax;
    *(ebp - 0x18) = eax;
    (save)ebx;
    L00434150( *(ebp - 0x18));
    eax = *(ebp - 0x1c);
    (restore)ecx;
    *(eax + 4) = esi;
    esi = *(ebp - 0x1c) + ebx;
    edi = *(ebp - 0x1c);
    ebx = M0047fd70;
    edi = edi + 8;
    do {
        *edi = ebx;
        L0041CD90(ebx, edi + 4, 0, 0);
        *(edi + 0x14) = *(ebx + M00000064);
        *(edi + 0x26) = *(ebx + 0x89) & 0xff;
        L00450B60(ebx);
        *(edi + 0x27) = al;
        *(edi + 0x28) = esi;
        (save)ebx + 0x90;
        eax = L004288C0(esi) + 1;
        ebx = *ebx;
        esi = esi + eax;
        edi = edi + 0x2c;
        (restore)ecx;
    } while(ebx != 0);
    if(*(ebp - 0x10) != esi - *(ebp - 0x1c)) {
        L00429610(65546);
    }
    if(Ac != 0) {
        *Ac = *(ebp - 0x14);
    }
    ecx = ebp - 0x18;
    *(ebp - 0x18) = 0;
    L0042E3E0(ecx);
    eax = *(ebp - 0x1c);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0041DC41 - 0x0041DC4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041DC41()
{



}

/*	Procedure: 0x0041DCD7 - 0x0041DCDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041DCD7()
{



}

/*	Procedure: 0x0041DCE0 - 0x0041DD98
 *	Argument size: 8
 *	Local size: 36
 *	Save regs size: 8
 *	Called by:
 *		L0041F14C()
 */

L0041DCE0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  V10;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  Vfffffffc;



    ecx = M0047fca8;
    esp = esp & -8;
    if(ecx == A8) {
        return 0;
    }
    if(ecx != 0) {
        V4 = 0xc;
        *esp = *Ac;
        V0 = *(Ac + 4);
        V8 = *(Ac + 0xc);
        Vc = -1;
        V10 = -1;
        V14 = 0;
        V15 = 0;
        V16 = 0;
        M0047fca8 = 0;
        eax = L0041C3B0(ecx, esp);
    }
    if(A8 != 0) {
        L004342A0( & Vfffffffc, Ac, 0x20);
        V4 = 0xb;
        L0042F5F0(1);
        eax = L0041C3B0(A8, esp);
        M0047fca8 = A8;
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x0041DD99 - 0x0041DE6A
 *	Argument size: 8
 *	Local size: 68
 *	Save regs size: 8
 */

L0041DD99(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffc8;
	struct tagRECT Vffffffd8;  /* size = 16 bytes */
	RECT Vffffffe8;



    ebx = *(A8 + 0x8a) & 0xff;
    if(ebx == Ac) {
        return;
    }
    *(A8 + 0x8a) = Ac;
    (save)0x24;
    L00434150(ebp - 0x4c);
    (restore)ecx;
    eax = *(A8 + 0x89) == 4 ? 4 : 0;
    *(ebp - 0x4c) = eax;
    edx = *(A8 + M00000064);
    Vffffffc8 = edx;
    eax = GetClientRect( *(A8 + 0xc), & (Vffffffd8.left));
    if(eax == 0) {
        esp = ebp - 8;
        return;
    }
    if(ebx != 0) {
        eax = ebp - 0x4c;
        L0044F9A0( & (Vffffffd8.left), eax, ebx, & (Vffffffe8.left));
        eax = InvalidateRect( *(A8 + 0xc), & (Vffffffe8.left), 0);
    }
    if(Ac != 0) {
        eax = ebp - 0x4c;
        L0044F9A0( & (Vffffffd8.left), eax, Ac, & (Vffffffe8.left));
        eax = InvalidateRect( *(A8 + 0xc), & (Vffffffe8.left), 0);
    }
    esp = ebp - 8;
}

/*	Procedure: 0x0041DE6B - 0x0041DE6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041DE6B()
{



}

/*	Procedure: 0x0041DE70 - 0x0041E05F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041F14C()
 */

L0041DE70()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    ecx = *(ebp + 0x10) & 65535;
    esp = esp - 0x114;
    bl = ecx :: 1 > 0;
    edi = *(ebp + 8) - 0x100;
    esi = *(ebp + 0x14);
    if(edi <= 5) {
        switch(edi) {
            case 0:
                goto L0041de9e;
            case 1:
L0041debd:
                *(esi + 8) = 6;
                goto L0041decd;
            case 2:
                goto L0041dec6;
            case 3:
                goto L0041dec6;
            case 4:
                goto L0041de9e;
            case 5:
                goto L0041debd;
        }
L0041de9e:
        if(bl == 0) {
            goto L0041deb0;
        }
        edx = 7;
        goto L0041deb5;
        *(esi + 8) = 5;
        goto L0041decd;
    }
L0041dec6:
    *(esi + 8) = 0;
    GetKeyboardState(ebp + -268);
    *(ebp + -272) = 0;
    if(*(ebp + -251) & 0xff & 0x80) {
        goto L0041def9;
    }
    *(ebp + -272) = *(ebp + -272) | 0x21;
    if(*(ebp + -250) & 0xff & 0x80) {
        goto L0041df0f;
    }
    *(ebp + -272) = *(ebp + -272) | 2;
    if(*(ebp + -252) & 0xff & 0x80) {
        goto L0041df25;
    }
    *(ebp + -272) = *(ebp + -272) | 8;
    if(*(ebp + -248) & 0xff & 0x80) {
        goto L0041df3a;
    }
    *(ebp + -272) = *(ebp + -272) | 4;
    if(*(ebp + -177) & 0xff & 0x80) {
        goto L0041df50;
    }
    *(ebp + -272) = *(ebp + -272) | 0x30;
    if(*(ebp + -176) & 0xff & 0x80) {
        goto L0041df66;
    }
    *(ebp + -272) = *(ebp + -272) | 0x30;
    if(bl == 0) {
        goto L0041df74;
    }
    *(ebp + -272) = *(ebp + -272) | 8192;
    eax = ebp + -288;
    edx = ebp + -268;
    ecx = *(ebp + 0x10) >> 0x10;
    edi = 0;
    ToUnicode( *(ebp + 0xc), ecx, edx, eax, 7, 0);
    if(eax <= 0) {
        goto L0041dfe7;
    }
    if(eax != 2 || ( *(ebp + -288) & 65535) >> 0xa != 0x36 || ( *(ebp + -286) & 65535) >> 0xa != 0x37) {
        goto L0041dfe0;
    }
    edi = (ecx & 0x3ff) << 0xa;
    edi = (edi | ebx & 0x3ff) + 65536;
    goto L0041dfe7;
    edi = *(ebp + -288) & 65535;
    if(( *(( *(ebp + 0xc) & 0xff) + 0x47fd98) & 0xff) != 0x71) {
        goto L0041e00a;
    }
    edi = 0xa;
    if(*(ebp + 0x10) & 16777216) {
        goto L0041e00a;
    }
    ebx = 0x20;
    L0042EF00();
    *esi = eax;
    *(esi + 4) = edx;
    *(esi + 0xc) = *(ebp + -272);
    *(esi + 0x10) = edi;
    *(esi + 0x14) = bx;
    *(esi + 0x16) = 0;
    edx = *(ebp + -272);
    esp = ebp - 0xc;
    ecx = ebx << 0x10;
    ecx = ecx | edx << 0x18 | edi;
    (restore)edi;
    (restore)esi;
    *((M0048119c & 0xff) * 4 + 0x481098) = *((M0048119c & 0xff) * 4 + 0x481098) ^ ecx;
    cl = cl & 0x3f;
    (restore)ebx;
    (restore)ebp;
    M0048119c = cl;
}

/*	Procedure: 0x0041E060 - 0x0041E36F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041F14C()
 */

L0041E060()
{



    (save)ebp;
    ecx = esp + -268;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x104;
    esi = *(ebp + 0x14);
    GetKeyboardState(ecx);
    edi = 0;
    if(*(ebp + 0xc) & 8) {
        goto L0041e08a;
    }
    edi = 0x21;
    if(*(ebp + -250) & 0xff & 0x80) {
        goto L0041e09b;
    }
    edi = 0x23;
    if(*(ebp + 0xc) & 4) {
        goto L0041e0a7;
    }
    edi = 0x2b;
    if(*(ebp + -248) & 0xff & 0x80) {
        goto L0041e0b9;
    }
    edi = 0x2f;
    if(*(ebp + -177) & 0xff & 0x80) {
        goto L0041e0cb;
    }
    edi = 0x3f;
    if(*(ebp + -176) & 0xff & 0x80) {
        goto L0041e0dc;
    }
    edi = 0x3f;
    *(ebp + -272) = 0;
    if((ecx = *(ebp + 8) - 0xa0) || (ecx = ecx - 0x160)) {
        goto L0041e227;
    }
    if(ecx = ecx - 1) {
        goto L0041e150;
    }
    if(ecx = ecx - 1) {
        goto L0041e161;
    }
    if(ecx = ecx - 1) {
        goto L0041e172;
    }
    if(ecx = ecx - 1) {
        goto L0041e190;
    }
    if(ecx = ecx - 1) {
        goto L0041e1a1;
    }
    if(ecx = ecx - 1) {
        goto L0041e1b2;
    }
    if(ecx = ecx - 1) {
        goto L0041e1c6;
    }
    if(ecx = ecx - 1) {
        goto L0041e1d4;
    }
    if(ecx = ecx - 1) {
        goto L0041e1e2;
    }
    if(ecx = ecx - 1) {
        goto L0041e1f6;
    }
    goto L0041e235;
    ebx = 1;
    *(esi + 8) = 9;
    goto L0041e241;
    ebx = 1;
    *(esi + 8) = 0xa;
    goto L0041e241;
    edi = edi | 65536;
    ebx = 1;
    *(esi + 8) = 9;
    goto L0041e241;
    ebx = 2;
    *(esi + 8) = 9;
    goto L0041e241;
    ebx = 2;
    *(esi + 8) = 0xa;
    goto L0041e241;
    edi = edi | 65536;
    ebx = 2;
    *(esi + 8) = 9;
    goto L0041e241;
    ebx = 3;
    *(esi + 8) = 9;
    goto L0041e241;
    ebx = 3;
    *(esi + 8) = 0xa;
    goto L0041e241;
    edi = edi | 65536;
    ebx = 3;
    *(esi + 8) = 9;
    goto L0041e241;
    ecx = *(ebp + 0xc) >> 0x10;
    *((M0048119c & 0xff) * 4 + 0x481098) = *((M0048119c & 0xff) * 4 + 0x481098) ^ ecx;
    *(ebp + -272) = eax;
    M0048119c = cl & 0x3f;
    *(esi + 8) = 0xe;
    goto L0041e241;
    ebx = 1;
    *(esi + 8) = 0xd;
    goto L0041e241;
    ebx = 1;
    *(esi + 8) = 0;
    L0042EF00();
    *esi = eax;
    *(esi + 4) = edx;
    *(esi + 0xc) = edi;
    *(esi + 0x10) = *(ebp + 0x10) & 65535;
    *(esi + 0x14) = *(ebp + 0x10) >> 0x10;
    *(esi + 0x18) = bl;
    *(esi + 0x19) = 0;
    *(esi + 0x1a) = *(ebp + -272);
    eax = *(ebp + 0x10);
    *((M0048119c & 0xff) * 4 + 0x481098) = *((M0048119c & 0xff) * 4 + 0x481098) ^ eax;
    *(ebp + 0x10) = *(ebp + 0x10) & 0x3f;
    al = *(ebp + 0x10);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    M0048119c = al;
    return;
    (save)ebp;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = *(esp + 8);
    esp = esp - 0x18;
    esi = *(ebp + 0xc);
    if(ebx != 0) {
        goto L0041e2be;
    }
    L00429610(65538);
    if(*(ebx + 8) == -266958733) {
        goto L0041e2d2;
    }
    L00429610(65561);
    if(*(esi + 0x18) != 2 && *(esi + 0xc) & 1) {
        goto L0041e320;
    }
    eax = *(ebx + 0x118);
    if(eax <= *(ebx + 0x110)) {
        goto L0041e363;
    }
    ecx = *(ebx + 0x11c);
    if(ecx <= *(ebx + 0x114)) {
        goto L0041e363;
    }
    L0041CCB0(ebx, ebx + 0x110, 0, 0);
    L0041c4a0(ebx);
    goto L0041e363;
    L0041CD90(ebx, ebx + 0x110, 0, 0);
    if(*(ebx + 0x30) == 0) {
        goto L0041e363;
    }
    *(ebp - 0x10) = esp;
    *edi( *(ebx + 0x48), esi);
    goto L0041e363;
    L00429560( *(ebp - 0x18));
    if(*(ebp - 0x1c) == 0) {
        goto L0041e360;
    }
    ecx = *(ebp - 0x24);
    *(ebp - 0x1c)(-1);
    esp = *(ebp - 0x10);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*	Procedure: 0x0041E370 - 0x0041E63F
 *	Argument size: 8
 *	Local size: 80
 *	Save regs size: 12
 *	Called by:
 *		L0041F14C()
 */

L0041E370(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe0;
	struct tagRECT Vffffffe4;  /* size = 16 bytes */



    if(M0047fd80 == 0 || *(A8 + M00000064) & 0x80) {
        goto L0041e3a0;
    }
    *(Ac + 0xc) = *(Ac + 0xc) | 524288;
    L0041dc50();
    if(*(A8 + M00000064) & 0x200) {
        goto L0041e3b2;
    }
    SetFocus( *(A8 + 0xc));
    if(*(Ac + 0x18) != 2) {
        goto L0041e3bf;
    }
    *(Ac + 0xc) = *(Ac + 0xc) | 262144;
    (save)0x24;
    L00434150(ebp - 0x58);
    (restore)ecx;
    if(*(A8 + 0x89) != 4) {
        goto L0041e3e0;
    }
    edi = 4;
    goto L0041e3e2;
    *(ebp - 0x58) = 0;
    edx = *(A8 + M00000064);
    Vffffffbc = edx;
    GetClientRect( *(A8 + 0xc), & (Vffffffe4.left));
    if(eax != 0) {
        goto L0041e404;
    }
    return;
    ecx = Ac + 0x10;
    edx = ebp - 0x58;
    L0044f790( & (Vffffffe4.left), edx, ecx);
    *(ebp - 0x5c) = eax;
    if(eax - 1 > 8) {
        goto L0041e632;
    }
    goto ( *(ecx * 4 + 0x47368c));
    *(Ac + 0x10) = *(Ac + 0x10) - ( *(A8 + 0x8b) & 0xff);
    *(Ac + 0x14) = *(Ac + 0x14) - ( *(A8 + 0x8c) & 0xff);
    L0041DCE0(A8, Ac);
    M0047fcac = A8;
    L0041F050(A8, 0);
    L0041C3B0(A8, Ac);
    goto L0041e630;
    if(!( *(Ac + 0xc) & 262144) && *(A8 + M00000064) & 4) {
        goto L0041e530;
    }
    if(edi & 65536 || *(A8 + M00000064) & 0x40) {
        goto L0041e4a0;
    }
    (save)Ac;
    (save)A8;
    L0041c4f0();
    goto L0041e630;
    M0047fcc4 = 2;
    M0047fcbc = *(Ac + 0x10);
    M0047fcc0 = *(Ac + 0x14);
    M0047fcb0 = A8;
    goto L0041e632;
    M0047fcc4 = 3;
    M0047fcbc = Vffffffe4.right - *(Ac + 0x10);
    M0047fcc0 = Vffffffe4.bottom - *(Ac + 0x14);
    M0047fcb0 = A8;
    goto L0041e632;
    (save) *(ebp - 0x5c);
    L0044fbf0( *(A8 + M00000064));
    (restore)ecx;
    if(al == 0) {
        goto L0041e520;
    }
    (save)edi;
    L0041dda0(A8);
    al = *(ebp - 0x5c);
    M0047fcb0 = A8;
    (restore)ecx;
    M0047fcc4 = al;
    goto L0041e632;
    L0041C550(A8, Ac);
    goto L0041e630;
    if(*(Ac + 0xc) & 524288) {
        goto L0041e632;
    }
    L0041CD90(A8, & (Vffffffe4.left), 0, 0);
    edx = *(A8 + 0x8b) & 0xff;
    *(Ac + 0x10) = *(Ac + 0x10) + Vffffffe4.left - edx;
    ecx = *(A8 + 0x8c) & 0xff;
    *(Ac + 0x14) = *(Ac + 0x14) + Vffffffe4.top - ecx;
    if(*(A8 + 0x24) == 0) {
        goto L0041e632;
    }
    M0047fcc5 = 1;
    Vffffffe0 = esp;
    *(A8 + 0x24)( *(A8 + 0x48), Ac);
    goto L0041e5a5;
    L00429560(Vffffffd8);
    if(Vffffffd4 == 0) {
        goto L0041e5a2;
    }
    (save)-1;
    ecx = Vffffffcc;
    Vffffffd4();
    esp = *(ebp - 0x20);
    M0047fcc5 = 0;
    goto L0041e632;
    (save) *(ebp - 0x5c);
    L0044fbf0( *(A8 + M00000064));
    (restore)ecx;
    if(al == 0) {
        goto L0041e5e0;
    }
    (save)edi;
    L0041dda0(A8);
    al = *(ebp - 0x5c);
    M0047fcb0 = A8;
    (restore)ecx;
    M0047fcc4 = al;
    goto L0041e632;
    (save)Ac;
    (save)A8;
    L0041e2a0();
    goto L0041e630;
    if(*(Ac + 0x18) != 2) {
        goto L0041e5f8;
    }
    L0041BA40(1);
    goto L0041e631;
    (save) *(ebp - 0x5c);
    L0044fbf0( *(A8 + M00000064));
    (restore)ecx;
    if(al == 0) {
        goto L0041e623;
    }
    (save)edi;
    L0041dda0(A8);
    al = *(ebp - 0x5c);
    M0047fcb0 = A8;
    (restore)ecx;
    M0047fcc4 = al;
    goto L0041e632;
    L0041c4f0(A8, Ac);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0041E640 - 0x0041E71F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041F14C()
 */

L0041E640(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esi = A8;
    if(M0047fcb0 == 0) {
        goto L0041e6e0;
    }
    esi = M0047fcb0;
    M0047fcb0 = 0;
    if((M0047fcc4 & 0xff) - 5 > 4) {
        goto L0041e6d2;
    }
    goto ( *(edx * 4 + 0x4736ec));
    if(*(esi + 0x8a) == 0) {
        goto L0041e6d2;
    }
    L0041dda0(esi, 0);
    L0041C550(esi, Ac);
    goto L0041e6d0;
    if(*(esi + 0x8a) == 0) {
        goto L0041e6d2;
    }
    L0041dda0(esi, 0);
    (save)Ac;
    (save)esi;
    L0041e2a0();
    goto L0041e6d0;
    if(*(esi + 0x8a) == 0) {
        goto L0041e6d2;
    }
    L0041dda0(esi, 0);
    L0041c4f0(esi, Ac);
    return;
    if(M0047fcac == 0) {
        goto L0041e711;
    }
    M0047fcac = 0;
    *(Ac + 0x10) = *(Ac + 0x10) - ( *(edx + 0x8b) & 0xff);
    *(Ac + 0x14) = *(Ac + 0x14) - ( *(edx + 0x8c) & 0xff);
    L0041C3B0(edx, Ac);
    esp = ebp - 8;
}

/*	Procedure: 0x0041E720 - 0x0041E9FF
 *	Argument size: 8
 *	Local size: 60
 *	Save regs size: 12
 *	Called by:
 *		L0041F14C()
 */

L0041E720(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffe4;



    esi = A8;
    ebx = Ac;
    if(M0047fcb0 == 0) {
        goto L0041e948;
    }
    if(esi == M0047fcb0) {
        goto L0041e750;
    }
    return;
    GetWindowRect( *(esi + 0xc), ebp - 0x40);
    if(eax != 0) {
        goto L0041e770;
    }
    esp = ebp - 0xc;
    return;
    if((M0047fcc4 & 0xff) - 2 > 7) {
        goto L0041e940;
    }
    goto ( *(edx * 4 + 0x473704));
    edx = *(ebp - 0x40) + *(ebx + 0x10) - M0047fcbc;
    eax = Vffffffc4 + *(ebx + 0x14) - M0047fcc0;
    edx = edx & -2;
    eax = eax & -2;
    if(*(ebp - 0x40) != edx) {
        goto L0041e7b7;
    }
    if(ecx == eax) {
        goto L0041e940;
    }
    SetWindowPos( *(esi + 0xc), 0, edx, eax, 0, 0, 0x15);
    (save)esi;
    L0041c4a0();
    goto L0041e93f;
    ecx = *(esi + 0x8b) & 0xff;
    eax = *(ebx + 0x10) + M0047fcbc & -2;
    eax = eax - ( *(esi + 0x8d) & 0xff) + ecx;
    if(eax >= *(esi + 0x68)) {
        goto L0041e7fd;
    }
    eax = ecx;
    if(eax > *(esi + 0x6c)) {
    }
    eax = ecx + edx;
    edx = *(ebx + 0x14) + M0047fcc0;
    ebx = *(esi + 0x8c) & 0xff;
    edx = edx & -2;
    edx = edx - ( *(esi + 0x8e) & 0xff) + ebx;
    if(edx >= *(esi + 0x6a)) {
        goto L0041e831;
    }
    edx = ebx;
    if(edx <= *(esi + 0x6e)) {
        goto L0041e83b;
    }
    edx = ebx;
    ebx = Vffffffc8 - *(ebp - 0x40);
    edx = edx + ecx;
    if(eax != ebx) {
        goto L0041e855;
    }
    if(edx == Vffffffcc - Vffffffc4) {
        goto L0041e940;
    }
    SetWindowPos( *(esi + 0xc), 0, 0, 0, eax, edx, 0x116);
    InvalidateRect( *(esi + 0xc), 0, 0);
    (save)esi;
    L0041c4a0();
    goto L0041e93f;
    (save)0x24;
    L00434150( & Vffffffd0);
    (restore)ecx;
    if(*(esi + 0x89) != 4) {
        goto L0041e8a0;
    }
    eax = 4;
    goto L0041e8a2;
    Vffffffd0 = 0;
    Vffffffe4 = *(esi + M00000064);
    Vffffffc8 = Vffffffc8 - *(ebp - 0x40);
    Vffffffcc = Vffffffcc - Vffffffc4;
    ecx = ebp - 0x40;
    *(ebp - 0x40) = 0;
    Vffffffc4 = 0;
    L0044F9A0(ebp - 0x40, & Vffffffd0, M0047fcc4 & 0xff, ecx);
    *(ebp - 0x45) = 0;
    *(ebp - 0x44) = 0;
    edi = *(ebx + 0x10);
    dl = 0;
    if(edi >= *(ebp - 0x40)) {
        eax = *(ebx + 0x14);
        if(eax >= Vffffffc4) {
        }
    }
    if(1 == 0 || edi >= Vffffffc8) {
        goto L0041e912;
    }
    *(ebp - 0x44) = 1;
    if(*(ebp - 0x44) == 0) {
        goto L0041e926;
    }
    eax = *(ebx + 0x14);
    if(eax >= Vffffffcc) {
        goto L0041e926;
    }
    *(ebp - 0x45) = 1;
    if(*(ebp - 0x45) == 0) {
        goto L0041e935;
    }
    ecx = M0047fcc4 & 0xff;
    goto L0041e937;
    L0041dda0(esi, 0);
    esp = ebp - 0xc;
    return;
    if(M0047fcac == 0) {
        goto L0041e960;
    }
    esi = M0047fcac;
    eax = 1;
    goto L0041e9b8;
    (save)0x24;
    L00434150( & Vffffffd0);
    (restore)ecx;
    if(*(esi + 0x89) != 4) {
        goto L0041e980;
    }
    edx = 4;
    goto L0041e982;
    Vffffffd0 = 0;
    ecx = *(esi + M00000064);
    Vffffffe4 = ecx;
    GetClientRect( *(esi + 0xc), ebp - 0x40);
    if(eax != 0) {
        goto L0041e9a4;
    }
    esp = ebp - 0xc;
    return;
    edx = ebx + 0x10;
    L0044f790(ebp - 0x40, & Vffffffd0, edx);
    if(eax != 1) {
        goto L0041e9e7;
    }
    *(ebx + 0x10) = *(ebx + 0x10) - ( *(esi + 0x8b) & 0xff);
    *(ebx + 0x14) = *(ebx + 0x14) - ( *(esi + 0x8c) & 0xff);
    (save)ebx;
    L0041DCE0(esi);
    (restore)ecx;
    if(al != 0) {
        goto L0041e9f2;
    }
    L0041C3B0(esi, ebx);
    goto L0041e9f0;
    L0041DCE0(0, ebx);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0041EA00 - 0x0041EA70
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041EB50()
 */

L0041EA00(A8)
unsigned long  A8;
{



    if(A8 > M004a1010) {
        goto L0041ea20;
    }
    esp = ebp - 4;
    return M004a100c;
    if(M004a100c == 0) {
        goto L0041ea40;
    }
    GlobalReAlloc(M004a100c, A8, 2);
    goto L0041ea50;
    if(GlobalAlloc(0, A8) != 0) {
        goto L0041ea60;
    }
    esp = ebp - 4;
    return 0;
    esp = ebp - 4;
    M004a100c = 0;
    M004a1010 = A8;
    return 0;
}

/*	Procedure: 0x0041EA80 - 0x0041EB4E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041EB50()
 */

L0041EA80(A8, Ac, A10)
struct HDC__ * A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x34;
    *(ebp - 0x14) = *A10;
    eax = *(A10 + 4);
    *(ebp - 0x10) = eax;
    edi = *(A10 + 0xc) >> 2;
    edi = eax * eax;
    esi = *(A10 + 0x18);
    if(!(edi = edi - 1)) {
        do {
            eax = *esi;
            ebx = eax << 8 & 16711680;
            ebx = ebx | eax >> 0x18;
            *esi = ebx | eax >> 8 & 65280;
            esi = esi + 4;
        } while(edi = edi - 1);
    }
    *(ebp - 0x40) = 0x28;
    *(ebp - 0x3c) = *(A10 + 0xc) >> 2;
    *(ebp - 0x38) = ~( *(ebp - 0x10));
    *(ebp - 0x34) = 1;
    *(ebp - 0x32) = 0x20;
    *(ebp - 0x30) = 0;
    *(ebp - 0x2c) = 0;
    *(ebp - 0x28) = 0;
    *(ebp - 0x24) = 0;
    *(ebp - 0x20) = 0;
    *(ebp - 0x1c) = 0;
    eax = Ac;
    eax = SetDIBitsToDevice(A8, *eax, *(eax + 4), *(ebp - 0x14), *(ebp - 0x10), 0, 0, 0, *(ebp - 0x10), *(A10 + 0x18), ebp - 0x40, 0);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0041EB4F - 0x0041EB4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041EB4F()
{



}

/*	Procedure: 0x0041EB50 - 0x0041F044
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041F050()
 *		L0041F14C()
 */

L0041EB50(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
struct HWND__ * Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ecx = ebp - 0x1c;
    (save)edi;
    esp = esp - 0x78;
    esi = A8;
    ebx = A14;
    eax = GetClientRect(Ac, ecx);
    if(eax == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    *(ebp - 0x54) = *(ebp - 0x14);
    *(ebp - 0x50) = *(ebp - 0x10);
    *(ebp - 0x1c) = *(esi + 0x8b) & 0xff;
    *(ebp - 0x18) = *(esi + 0x8c) & 0xff;
    edx = *(esi + 0x8d) & 0xff;
    *(ebp - 0x14) = *(ebp - 0x54) - edx;
    eax = *(esi + 0x8e) & 0xff;
    edi = *(ebp - 0x50) - eax;
    *(ebp - 0x10) = edi;
    L0044B6F0(A18, ebp - 0x1c, ebx);
    *(ebp + -129) = al;
    ecx = *ebx;
    if(ecx >= *(ebp - 0x1c)) {
        edi = *(ebx + 4);
        if(edi >= *(ebp - 0x18)) {
            ecx = *(ebx + 8);
            eax = *(ebp - 0x14);
            if(ecx <= eax) {
                edi = *(ebx + 0xc);
                if(edi <= *(ebp - 0x10)) {
                    al = *(ebp + -129);
                    esp = ebp - 0xc;
                    (restore)edi;
                    return;
                }
            }
        }
    }
    edx = *(esi + 0x89) == 4 ? 4 : 0;
    *(ebp - 0x7c) = edx;
    *(ebp - 0x78) = *(esi + 0x8a) & 0xff;
    *(ebp - 0x74) = M00481000;
    *(ebp - 0x70) = esi + 0x91;
    *(ebp - 0x6c) = *(esi + 0x90) & 0xff;
    *(ebp - 0x68) = *(esi + M00000064);
    *(ebp - M00000064) = 0;
    *(ebp - 0x60) = 0;
    *(ebp - 0x5c) = 0;
    *(ebp - 0x44) = 0x20;
    *(ebp - 0x3c) = 0;
    *(ebp - 0x38) = 0;
    *(ebp - 0x30) = 0;
    ecx = *(esi + 0x8c) & 0xff;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = 0;
    eax = *(ebp - 0x54);
    *(ebp - 0x58) = eax;
    *(ebp - 0x14) = *(ebp - 0x58);
    eax = ebp - 0x1c;
    *(ebp - 0x10) = ecx;
    L0044B6F0(eax, eax, ebx);
    if(al != 0) {
        edi = *(ebp - 0x14) - *(ebp - 0x1c);
        eax = edi;
        edx = ~( *(ebp - 0x1c));
        *(ebp - 0x40) = eax * 4;
        *(ebp - 0x48) = *(ebp - 0x10) - *(ebp - 0x18);
        *(ebp - 0x2c) = edx;
        edx = *(ebp - 0x18);
        eax = *(ebp - 0x50) - edx;
        *(ebp - 0x4c) = edi;
        edi = edx;
        edx = *(ebp - 0x40);
        edx = *(ebp - 0x48) * *(ebp - 0x48);
        ecx = *(ebp - 0x54) - *(ebp - 0x1c);
        *(ebp - 0x24) = ecx;
        *(ebp - 0x20) = eax;
        *(ebp - 0x28) = ~edi;
        eax = L0041EA00(edx);
        if(eax != 0) {
            *(ebp - 0x34) = eax;
            ecx = ebp - 0x2c;
            eax = ebp - 0x4c;
            L0044EDB0(eax, ecx, ebp - 0x7c);
            L0041EA80(A10, ebp - 0x1c, ebp - 0x4c);
        }
    }
    ecx = *(esi + 0x8e) & 0xff;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = *(ebp - 0x50) - ecx;
    *(ebp - 0x14) = *(ebp - 0x58);
    eax = *(ebp - 0x50);
    *(ebp - 0x80) = eax;
    *(ebp - 0x10) = *(ebp - 0x80);
    eax = ebp - 0x1c;
    L0044B6F0(eax, eax, ebx);
    if(al != 0) {
        edi = *(ebp - 0x14) - *(ebp - 0x1c);
        eax = edi;
        edx = ~( *(ebp - 0x1c));
        *(ebp - 0x40) = eax * 4;
        *(ebp - 0x48) = *(ebp - 0x10) - *(ebp - 0x18);
        *(ebp - 0x2c) = edx;
        edx = *(ebp - 0x18);
        eax = *(ebp - 0x50) - edx;
        *(ebp - 0x4c) = edi;
        edi = edx;
        edx = *(ebp - 0x40);
        edx = *(ebp - 0x48) * *(ebp - 0x48);
        ecx = *(ebp - 0x54) - *(ebp - 0x1c);
        *(ebp - 0x24) = ecx;
        *(ebp - 0x20) = eax;
        *(ebp - 0x28) = ~edi;
        eax = L0041EA00(edx);
        if(eax != 0) {
            *(ebp - 0x34) = eax;
            ecx = ebp - 0x2c;
            eax = ebp - 0x4c;
            L0044EDB0(eax, ecx, ebp - 0x7c);
            L0041EA80(A10, ebp - 0x1c, ebp - 0x4c);
        }
    }
    eax = *(esi + 0x8b) & 0xff;
    edx = *(esi + 0x8c) & 0xff;
    ecx = *(esi + 0x8e) & 0xff;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = edx;
    *(ebp - 0x14) = eax;
    *(ebp - 0x10) = *(ebp - 0x50) - ecx;
    edi = ebp - 0x1c;
    L0044B6F0(edi, edi, ebx);
    if(al != 0) {
        edx = *(ebp - 0x14) - *(ebp - 0x1c);
        edi = edx;
        ecx = ~( *(ebp - 0x1c));
        *(ebp - 0x40) = edi * 4;
        *(ebp - 0x48) = *(ebp - 0x10) - *(ebp - 0x18);
        *(ebp - 0x2c) = ecx;
        ecx = *(ebp - 0x18);
        edi = *(ebp - 0x50) - ecx;
        *(ebp - 0x4c) = edx;
        edx = ecx;
        ecx = *(ebp - 0x40);
        ecx = *(ebp - 0x48) * *(ebp - 0x48);
        eax = *(ebp - 0x54) - *(ebp - 0x1c);
        *(ebp - 0x28) = ~edx;
        *(ebp - 0x24) = eax;
        *(ebp - 0x20) = edi;
        eax = L0041EA00(ecx);
        if(eax != 0) {
            *(ebp - 0x34) = eax;
            edx = ebp - 0x7c;
            L0044EDB0(ebp - 0x4c, ebp - 0x2c, edx);
            ecx = ebp - 0x4c;
            L0041EA80(A10, ebp - 0x1c, ecx);
        }
    }
    edx = *(esi + 0x8d) & 0xff;
    ecx = *(esi + 0x8c) & 0xff;
    eax = *(esi + 0x8e) & 0xff;
    edi = *(ebp - 0x50) - eax;
    *(ebp - 0x1c) = *(ebp - 0x54) - edx;
    *(ebp - 0x18) = ecx;
    *(ebp - 0x14) = *(ebp - 0x58);
    eax = ebp - 0x1c;
    *(ebp - 0x10) = edi;
    if(L0044B6F0(eax, eax, ebx) != 0) {
        eax = *(ebp - 0x14) - *(ebp - 0x1c);
        *(ebp - 0x48) = *(ebp - 0x10) - *(ebp - 0x18);
        *(ebp - 0x40) = eax * 4;
        ecx = *(ebp - 0x18);
        edi = *(ebp - 0x50) - ecx;
        esi = ecx;
        ecx = *(ebp - 0x40);
        ecx = *(ebp - 0x48) * *(ebp - 0x48);
        *(ebp - 0x4c) = eax;
        edx = *(ebp - 0x1c);
        eax = *(ebp - 0x54) - *(ebp - 0x1c);
        edx = ~edx;
        *(ebp - 0x2c) = edx;
        *(ebp - 0x24) = eax;
        *(ebp - 0x28) = ~esi;
        *(ebp - 0x20) = edi;
        eax = L0041EA00(ecx);
        if(eax != 0) {
            *(ebp - 0x34) = eax;
            edx = ebp - 0x7c;
            eax = ebp - 0x4c;
            L0044EDB0(eax, ebp - 0x2c, edx);
            ecx = ebp - 0x1c;
            eax = L0041EA80(A10, ecx, ebp - 0x4c);
        }
    }
    if(!( *(ebp - 0x68) & 8)) {
        eax = *(ebp - 0x58);
        edx = ebp - 0x1c;
        *(ebp - 0x14) = eax;
        *(ebp - 0x10) = *(ebp - 0x80);
        eax = edx;
        *(ebp - 0x1c) = 0;
        *(ebp - 0x18) = 0;
        L0044F9A0(eax, ebp - 0x7c, 4, edx);
        edi = ebp - 0x1c;
        if(L0044B6F0(edi, edi, ebx) != 0) {
            edx = *(ebp - 0x14) - *(ebp - 0x1c);
            eax = edx;
            *(ebp - 0x48) = *(ebp - 0x10) - *(ebp - 0x18);
            *(ebp - 0x4c) = edx;
            edi = *(ebp - 0x1c);
            edx = *(ebp - 0x54) - *(ebp - 0x1c);
            esi = *(ebp - 0x50);
            edi = ~edi;
            *(ebp - 0x24) = edx;
            *(ebp - 0x40) = eax * 4 + 7 & -8;
            eax = *(ebp - 0x18);
            ebx = *(ebp - 0x40);
            ebx = *(ebp - 0x48) * *(ebp - 0x48);
            ecx = ~eax;
            *(ebp - 0x28) = ecx;
            *(ebp - 0x2c) = edi;
            *(ebp - 0x20) = esi - eax;
            eax = L0041EA00(ebx);
            if(eax != 0) {
                ecx = ebp - 0x2c;
                edx = ebp - 0x4c;
                *(ebp - 0x34) = eax;
                L0044F670(edx, ecx, ebp - 0x7c);
                eax = ebp - 0x1c;
                eax = L0041EA80(A10, eax, ebp - 0x4c);
            }
        }
    }
    al = *(ebp + -129);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0041F045 - 0x0041F04F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041F045()
{



}

/*	Procedure: 0x0041F050 - 0x0041F14B
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041D9B0()
 *		L0041F14C()
 *		L0041FCF0()
 */

L0041F050(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	struct HDC__ * edi;



    esp = esp - 0x3c;
    ebx = Ac;
    if(A8 == 0) {
        return;
    }
    *(ebp - 0x48) = *(A8 + 0xc);
    if(ebx == 0) {
        ebx = 3;
        if(GetFocus() == *(ebp - 0x48)) {
            goto L0041f092;
        }
        if(A8 == M0047fcb4) {
L0041f092:
            ebx = 4;
        }
    }
    if(IsWindowVisible( *(ebp - 0x48)) == 0) {
        ebx = 1;
    }
    eax = *(A8 + 0x89) & 0xff;
    if(eax == ebx) {
        esp = ebp - 0xc;
        return;
    }
    cl = 0;
    *(A8 + 0x89) = bl;
    if(0 != cl && ebx != 1) {
        eax = GetDC( *(ebp - 0x48));
        edi = eax;
        if(edi != 0) {
            GetClientRect( *(ebp - 0x48), ebp - 0x34);
            ecx = ebp - 0x44;
            L0041EB50(A8, *(ebp - 0x48), edi, ebp - 0x34, ecx);
            eax = ReleaseDC( *(ebp - 0x48), edi);
        }
    }
    edi = *(A8 + 0x34);
    if(edi != 0) {
        *(ebp - 0x10) = esp;
        eax = *edi( *(A8 + 0x48), ebx);
        goto L0041f144;
        eax = L00429560( *(ebp - 0x18));
        if(*(ebp - 0x1c) != 0) {
            ecx = *(ebp - 0x24);
            eax = *(ebp - 0x1c)(-1);
        }
        esp = *(ebp - 0x10);
    }
L0041f144:
    esp = ebp - 0xc;
}

/*	Procedure: 0x0041F14C - 0x0041F80B
 *	Argument size: 16
 *	Local size: 268
 *	Save regs size: 12
 */

L0041F14C(A8, Ac, A10, A14)
struct HWND__ * A8;
unsigned int Ac;
unsigned int A10;
long  A14;
{
	/* unknown */ void  ebx;
	unsigned int esi;
	unsigned int edi;
	/* unknown */ void  V104;



    esp = esp & -8;
    ebx = & V104;
    edi = Ac;
    esi = A10;
    eax = L0041BB70(A8);
    *(ebx - 0x78) = eax;
    if(eax == 0) {
        return DefWindowProcW(A8, edi, esi, A14);
    }
    if(!(ecx = edi - 6)) {
        if(ecx = ecx - 1) {
            goto L0041f6e5;
        }
        if(ecx = ecx - 1) {
            goto L0041f746;
        }
        if(ecx = ecx - 7) {
            goto L0041f276;
        }
        if(ecx = ecx - 1) {
            goto L0041f7c0;
        }
        if(ecx = ecx - 0x90) {
            goto L0041f404;
        }
        if(ecx = ecx - 0x60) {
            goto L0041f554;
        }
        if(ecx = ecx - 1) {
            goto L0041f6a7;
        }
        if(ecx = ecx - 3) {
            goto L0041f554;
        }
        if(ecx = ecx - 1) {
            goto L0041f6a7;
        }
        if(ecx = ecx - 0xfb) {
            goto L0041f3e0;
        }
        if(ecx = ecx - 1) {
            goto L0041f440;
        }
        if(ecx = ecx - 1) {
            goto L0041f490;
        }
        if(ecx = ecx - 1) {
            goto L0041f4c0;
        }
        if(ecx = ecx - 1) {
            goto L0041f440;
        }
        if(ecx = ecx - 1) {
            goto L0041f490;
        }
        if(ecx = ecx - 1) {
            goto L0041f4c0;
        }
        if(ecx = ecx - 1) {
            goto L0041f440;
        }
        if(ecx = ecx - 1) {
            goto L0041f490;
        }
        if(ecx = ecx - 1) {
            goto L0041f4c0;
        }
        if(ecx = ecx - 1) {
            goto L0041f4e4;
        }
        ecx = ecx - 1;
        if(ecx > 2) {
            if(ecx = ecx - 0x283) {
                goto L0041f7b0;
            }
            goto L0041f7e3;
L0041f276:
            L0041F050( *(ebx - 0x78), 0);
            eax = BeginPaint(A8, ebx + -184);
            if(eax != 0) {
                edx = *(ebx + -176) + *(ebx + -172);
                esi = *(ebx + -168) + *(ebx + -164);
                edx = edx << 0x10 | esi;
                *((M0048119c & 0xff) * 4 + 0x481098) = *((M0048119c & 0xff) * 4 + 0x481098) ^ edx;
                dl = dl & 0x3f;
                ecx = ebx + -176;
                M0048119c = dl;
                L0041EB50( *(ebx - 0x78), A8, eax, ecx, ebx - 0x48);
                *(ebx + -225) = al;
                EndPaint(A8, ebx + -184);
                if(*(ebx + -225) != 0) {
                    ecx = *( *(ebx - 0x78) + 0x8c) & 0xff;
                    eax = *( *(ebx - 0x78) + 0x8b) & 0xff;
                    *(ebx - 0x48) = *(ebx - 0x48) - eax;
                    *(ebx - 0x44) = *(ebx - 0x44) - ecx;
                    *(ebx - 0x40) = *(ebx - 0x40) - eax;
                    *(ebx - 0x3c) = *(ebx - 0x3c) - ecx;
                    eax = *(ebx - 0x78);
                    if(*(eax + 0x88) != 0) {
                        edx = ebx - 0x48;
                        edi = eax + 0x78;
                        L0044B770(eax + 0x78, edi, edx);
                    } else {
                        *( *(ebx - 0x78) + 0x88) = 1;
                        eax = *(ebx - 0x78);
                        *(eax + 0x78) = *(ebx - 0x48);
                        eax = *(ebx - 0x78);
                        *(eax + 0x7c) = *(ebx - 0x44);
                        eax = *(ebx - 0x78);
                        *(eax + 0x80) = *(ebx - 0x40);
                        edi = *(ebx - 0x3c);
                        *( *(ebx - 0x78) + 0x84) = edi;
                    }
                    esi = *( *(ebx - 0x78) + 0x10);
                    if(esi != 0) {
                        *(ebx + -188) = esp;
                        *esi( *( *(ebx - 0x78) + 0x48));
                        goto L0041f800;
                        L00429560( *(ebx + -196));
                        if(*(ebx + -200) != 0) {
                            (save)-1;
                            ecx = *(ebx + -208);
                            *(ebx + -200)();
                        }
                        esp = *(ebx + -188);
                        goto L0041f800;
L0041f3e0:
                        L0041E060(edi, esi, A14, ebx - 0x38);
                        L0041E720( *(ebx - 0x78), ebx - 0x38);
                        goto L0041f800;
L0041f404:
                        eax = DefWindowProcW(A8, edi, esi, A14);
                        esi = eax;
                        L0041E060(edi, 0, A14, ebx - 0x38);
                        edi = ebx - 0x38;
                        (save)edi;
                        L0041DCE0(0);
                        eax = esi;
                        (restore)ecx;
                        esp = ebp - 0xc;
                        return;
L0041f440:
                        if(M0047fcac != 0 && M0047fcac != *(ebx - 0x78)) {
                            esp = ebp - 0xc;
                            return 0;
                        }
                        L0041E060(edi, esi, A14, ebx - 0x38);
                        SetCapture(A8);
                        L0041E370( *(ebx - 0x78), ebx - 0x38);
                        goto L0041f800;
L0041f490:
                        L0041E060(edi, esi, A14, ebx - 0x38);
                        ReleaseCapture();
                        L0041E640( *(ebx - 0x78), ebx - 0x38);
                        goto L0041f800;
L0041f4c0:
                        L0041E060(edi, esi, A14, ebx - 0x38);
                        L0041E370( *(ebx - 0x78), ebx - 0x38);
                        goto L0041f800;
L0041f4e4:
                        L0041E060(edi, esi, A14, ebx - 0x38);
                        if(GetWindowRect(A8, ebx + -224) == 0) {
                            esp = ebp - 0xc;
                            return 0;
                        }
                        *(ebx - 0x28) = *(ebx - 0x28) - *(ebx + -224);
                        eax = *(ebx - 0x78);
                        *(ebx - 0x24) = *(ebx - 0x24) - *(ebx + -220);
                        *(ebx - 0x28) = *(ebx - 0x28) - ( *(eax + 0x8b) & 0xff);
                        *(ebx - 0x24) = *(ebx - 0x24) - ( *( *(ebx - 0x78) + 0x8c) & 0xff);
                        L0041C3B0( *(ebx - 0x78), ebx - 0x38);
                        goto L0041f800;
L0041f554:
                        L0041DE70(edi, esi, A14, ebx - 0x18);
                        if(esi == 0x90) {
                            esp = ebp - 0xc;
                            return 0;
                        }
                        esi = *(ebx - 0xc);
                        if(!(esi & 1)) {
                            if((3 & esi) == 3 && ( *(ebx - 4) & 65535) == 0x4e && M00481270 != 0) {
                                MessageBeep(0);
                                *L00481270();
                                esp = ebp - 0xc;
                                return 0;
                            }
                            L00450C40(ebx - 0x18, 0x77, 0x28);
                            if(al == 0) {
                                goto L0041f605;
                            }
                            L00454600();
                            esp = ebp - 0xc;
                            return 0;
                        }
                        if(( *(ebx - 4) & 65535) == 0xb0) {
                            L00454600();
                            esp = ebp - 0xc;
                            return 0;
                        }
L0041f605:
                        if(M00481028 != 0) {
                            eax = L00450BA0(ebx - 0x18, M00481020, M00481024);
                            if(eax != 0) {
                                edi = 0;
                                do {
                                    *(ebx + edi - 0x74) = *(edi + 0x480010);
                                    *(ebx + edi - 0x70) = *(edi + 0x480014);
                                    *(ebx + edi - 0x6c) = *(edi + 0x480018);
                                    *(ebx + edi - 0x68) = *(edi + 0x48001c);
                                    edi = edi + 0x10;
                                } while(edi < 0x20);
                                *(ebx - 0x54) = M00480030;
                                *(ebx - 0x50) = M00480034;
                                *(ebx - 0x4c) = M00480038;
                                *(ebx - 0x68) = eax;
                                L00438C70(ebx - 0x74);
                                esp = ebp - 0xc;
                                return 0;
                            }
                        }
                        L0041C400( *(ebx - 0x78), ebx - 0x18);
                        goto L0041f800;
L0041f6a7:
                        ecx = ebx - 0x18;
                        L0041DE70(edi, esi, A14 & -65536, ecx);
                        if(esi == 0x90) {
                            esp = ebp - 0xc;
                            return 0;
                        }
                        L0041C400( *(ebx - 0x78), ebx - 0x18);
                        goto L0041f800;
L0041f6e5:
                        M0047fcb8 = *(ebx - 0x78);
                        PostMessageW(A8, 0x48e, 0, 0);
                        if(M0047fcc6 != 0 && !( *( *(ebx - 0x78) + M00000064) & 0x200)) {
                            M0047fcc6 = 0;
                            if(M0047fd90 != 0) {
                                PostMessageW(0, 0x48f, 0, 0);
                                goto L0041f800;
L0041f746:
                                PostMessageW(A8, 0x48e, 0, 0);
                                if(M0047fcc6 == 0 && GetFocus() == 0) {
                                    M0047fcc6 = 1;
                                    if(M0047fd90 != 0) {
                                        PostMessageW(0, 0x48f, 0, 0);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else {
        PostMessageW(A8, 0x48e, 0, 0);
        goto L0041f800;
L0041f7b0:
        L0041F050( *(ebx - 0x78), 0);
        goto L0041f800;
L0041f7c0:
        L00434150(ebx + -264, 0x20);
        L0041C550( *(ebx - 0x78), ebx + -264);
        goto L0041f800;
L0041f7e3:
        eax = DefWindowProcW(A8, edi, esi, A14);
        esp = ebp - 0xc;
        return;
    }
L0041f800:
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0041F80C - 0x0041F80F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041F80C()
{



}

/*	Procedure: 0x0041F810 - 0x0041F931
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0045D7E0()
 */

L0041F810()
{
	/* unknown */ void  ebx;



    ebx = M0047fd70;
    esp = esp - 0x14;
    do {
        edx = ebp - 0x18;
        eax = ebp - 0x16;
        L0044FB80( *(ebx + M00000064), ebp - 0x17, eax, edx, ebp - 0x15);
        edx = ( *(ebp - 0x16) & 0xff) << 0x10;
        edx = edx | ( *(ebp - 0x17) & 0xff) << 0x18;
        eax = *(ebp - 0x15) & 0xff;
        edx = edx | ( *(ebp - 0x18) & 0xff) << 8 | eax;
        ecx = ( *(ebx + 0x8c) & 0xff) << 0x10;
        ecx = ecx | ( *(ebx + 0x8b) & 0xff) << 0x18;
        ecx = ecx | ( *(ebx + 0x8d) & 0xff) << 8;
        if((ecx | *(ebx + 0x8e) & 0xff) != edx) {
            L0041CD90(ebx, ebp - 0x14, 0, 0);
            *(ebp - 0x14) = *(ebp - 0x14) - ( *(ebp - 0x17) & 0xff);
            eax = *(ebp - 0x16) & 0xff;
            ecx = *(ebp - 0x18) & 0xff;
            *(ebp - 0x10) = *(ebp - 0x10) - eax;
            *(ebp - 0xc) = *(ebp - 0xc) + ecx;
            *(ebp - 8) = *(ebp - 8) + ( *(ebp - 0x15) & 0xff);
            if(SetWindowPos( *(ebx + 0xc), 0, *(ebp - 0x14), *(ebp - 0x10), *(ebp - 0xc) - *(ebp - 0x14), *(ebp - 8) - *(ebp - 0x10), 0x14) != 0) {
                edx = *(ebp - 0x17) & 0xff;
                *(ebx + 0x8b) = dl;
                *(ebx + 0x8c) = *(ebp - 0x16) & 0xff;
                *(ebx + 0x8d) = *(ebp - 0x18) & 0xff;
                *(ebx + 0x8e) = *(ebp - 0x15) & 0xff;
            }
        }
        eax = IsWindowVisible( *(ebx + 0xc));
        if(eax != 0) {
            eax = InvalidateRect( *(ebx + 0xc), 0, 0);
        }
        ebx = *ebx;
    } while(ebx != 0);
}

/*	Procedure: 0x0041F932 - 0x0041F93F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041F932()
{



}

/*	Procedure: 0x0041F9B7 - 0x0041F9BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041F9B7()
{



}

/*	Procedure: 0x0041FA45 - 0x0041FA4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FA45()
{



}

/*	Procedure: 0x0041FA5E - 0x0041FA82
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FA5E(A4)
/* unknown */ void  A4;
{



    eax = A4;
    if(*(eax + 4) == 0) {
        return 0;
    }
    *(eax + 4) = *(eax + 4) - 1;
    eax = *(eax + 4);
    if(eax == 0) {
        return 0;
    }
}

/*	Procedure: 0x0041FA83 - 0x0041FA8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FA83()
{



}

/*	Procedure: 0x0041FA90 - 0x0041FB2D
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041FB2E()
 *		L0041FCF0()
 */

L0041FA90(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  edi;



    esp = esp - 0x10;
    edi = 0;
    if(!(Ac & 8)) {
        edi = 1;
    }
    if(!(Ac & 4)) {
        edi = edi | 8;
    }
    if(!(Ac & 0x20)) {
        edi = edi | 2;
    }
    *(A14 + 0x10) = *A10;
    *(A14 + 0x14) = *(A10 + 4);
    if(GetWindowRect( *(A8 + 0xc), ebp - 0x1c) != 0) {
        *(A14 + 0x10) = *(A14 + 0x10) - *(ebp - 0x1c);
        *(A14 + 0x14) = *(A14 + 0x14) - *(ebp - 0x18);
        *(A14 + 0x10) = *(A14 + 0x10) - ( *(A8 + 0x8b) & 0xff);
        *(A14 + 0x14) = *(A14 + 0x14) - ( *(A8 + 0x8c) & 0xff);
    }
    eax = L0042EF00();
    *A14 = eax;
    *(A14 + 4) = A10;
    *(A14 + 0xc) = edi;
    *(A14 + 0x18) = 0;
    *(A14 + 0x19) = 0;
    *(A14 + 0x1a) = 0;
    *(A14 + 0x1c) = 0;
    return *A14;
}

/*	Procedure: 0x0041FB2E - 0x0041FBD2
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FB2E(A8, Ac, A10, A14, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A1c;
{
	/* unknown */ void  Vffffffec;



    (save)ebx;
    (save)A1c;
    (save)edi;
    esp = esp - 0x3c;
    esp = esp & -8;
    ebx = & Vffffffec;
    edi = *(A8 + 8);
    edx = ebx - 0x20;
    L0041FA90(edi, A10, & A14, edx);
    L00450DA0(edi + 0x60);
    *(ebx - 0x24) = esp;
    *(edi + 0x60) = L00450D60(Ac);
    goto L0041fb98;
    if(*(ebx - 0x30) != 0) {
        ecx = *(ebx - 0x38);
        *(ebx - 0x30)(-1);
    }
    esp = *(ebx - 0x24);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)A1c;
    (restore)ebx;
    return -2147024882;
L0041fb98:
    *(ebx - 4) = *(edi + 0x60);
    *(ebx - 0x18) = 0x10;
    (save)ebx - 0x20;
    L0041C450(edi);
    (restore)ecx;
    *A1c = M0047fcb4 == edi ? 1 : 0;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)A1c;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x0041FBD3 - 0x0041FBDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FBD3()
{



}

/*	Procedure: 0x0041FC56 - 0x0041FC5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FC56()
{



}

/*	Procedure: 0x0041FCF0 - 0x0041FD9E
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FCF0(A8, A10, A14, A1c)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A1c;
{
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffec;



    (save)A1c;
    (save)esi;
    esp = esp - 0x24;
    esp = esp & -8;
    esi = *(A8 + 8);
    ecx = esp;
    L0041FA90(esi, A10, & A14, ecx);
    ecx = *(esi + 0x60);
    Vffffffec = ecx;
    if(ecx == 0) {
        esp = ebp - 8;
        (restore)esi;
        (restore)A1c;
        return -2147418113;
    }
    *(esi + 0x60) = 0;
    Vffffffd8 = 0x14;
    *"" = 0;
    L0041C450(esi, esp);
    L00450DA0( & Vffffffec);
    if(M0047fcb4 == esi) {
        M0047fcb4 = 0;
        L0041F050(esi, 0);
    }
    eax = *"" != 0 ? 1 : 0;
    *A1c = eax;
    esp = ebp - 8;
    (restore)esi;
    (restore)A1c;
    return 0;
}

/*	Procedure: 0x0041FD9F - 0x0041FD9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FD9F()
{



}

/*	Procedure: 0x0041FDA0 - 0x0041FE2B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042E5B0()
 */

L0041FDA0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  edi;



    edx = M0048003c;
    esp = esp - 0x44;
    edi = A8;
    if(edx != 0) {
        do {
            if(*(edx + 4) == edi) {
                goto L0041fdb9;
            }
            edx = *edx;
        } while(edx != 0);
        goto L0041fe26;
L0041fdb9:
        eax = 0;
        edi = ebp - 0x30;
        ecx = 0xb;
        asm("rep stosd");
        *(ebp - 0x30) = *(edx + 0xc);
        *(ebp - 0x2c) = edx;
        *(ebp - 0x24) = *(edx + 0x10);
        edi = *(edx + 8);
        if(edi != 0) {
            *(ebp - 0x34) = esp;
            eax = *edi( *(edx + 0xc), edx, 0x1e, ebp - 0x30, 0x2c);
            goto L0041fe26;
            eax = L00429560( *(ebp - 0x3c));
            if(*(ebp - 0x40) != 0) {
                (save)-1;
                ecx = *(ebp - 0x48);
                eax = *(ebp - 0x40)();
            }
            esp = *(ebp - 0x34);
        } else {
            eax = L00438C70(ebp - 0x30);
        }
    }
L0041fe26:
}

/*	Procedure: 0x0041FE2C - 0x0041FE2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FE2C()
{



}

/*	Procedure: 0x0041FE30 - 0x0041FF80
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004254D9()
 *		L00450BA0()
 *		L00450C40()
 */

L0041FE30(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	unsigned int ebx;
	/* unknown */ void  esi;



    esi = Ac;
    esp = esp - 0x110;
    esi :: 0;
    if(!(ebx = *((A8 & 65535) + 0x47fe98) & 0xff)) {
        eax = MapVirtualKeyW(ebx, 2);
        if(!(eax & -2147483648)) {
            eax = 0;
        }
        if(eax == 0xd) {
            eax = 0xa;
        }
        return L00428810(eax);
    }
    if(esi == 8) {
        eax = MapVirtualKeyW(ebx, 2);
        if(!(eax & -2147483648)) {
            eax = 0;
        }
        if(eax == 0xd) {
            eax = 0xa;
        }
        eax = L004287F0(eax);
        esp = ebp - 8;
        return;
    }
    (save)0x100;
    L00434150(ebp + -264);
    (restore)ecx;
    if(!(esi & 0x21)) {
        *(ebp + -247) = 0x80;
    }
    if(!(esi & 2)) {
        *(ebp + -246) = 0x80;
    }
    if(!(esi & 8)) {
        *(ebp + -248) = 0x80;
    }
    if(!(esi & 4)) {
        *(ebp + -244) = 0x80;
    }
    if(!(esi & 0x10)) {
        *(ebp + -173) = 0x80;
    }
    edx = ebp + -280;
    ecx = ebp + -264;
    esi = 0;
    eax = ToUnicode(ebx, 0, ecx, edx, 7, 0);
    if(eax > 0) {
        if(eax == 2) {
            esi = *(ebp + -280) & 65535;
            if(esi >> 0xa != 0x36) {
                goto L0041ff67;
            }
            ebx = *(ebp + -278) & 65535;
            if(ebx >> 0xa != 0x37) {
                goto L0041ff67;
            }
            esi = (esi & 0x3ff) << 0xa;
            esi = (esi | ebx & 0x3ff) + 65536;
        } else {
L0041ff67:
            esi = *(ebp + -280) & 65535;
        }
    }
    if(esi == 0xd) {
        esi = 0xa;
    }
    esp = ebp - 8;
    return esi;
}

/*	Procedure: 0x0041FF81 - 0x0041FF8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FF81()
{



}

/*	Procedure: 0x0041FF90 - 0x0041FFC8
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408B5A()
 *		L00408F30()
 */

L0041FF90(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 && Ac == 0) {
        eax = A10 != 0 ? L0041BA40(0) : PostMessageW(M0047fccc, 0x48d, 0, 0);
    }
}

/*	Procedure: 0x0041FFC9 - 0x0041FFCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0041FFC9()
{



}

/*	Procedure: 0x0041FFD0 - 0x00420269
 *	Argument size: 4
 *	Local size: 116
 *	Save regs size: 12
 *	Called by:
 *		L00418850()
 */

L0041FFD0(A8)
/* unknown */ void  A8;
{
	int ebx;
	int esi;
	int edi;
	/* unknown */ void  Vffffff8c;
	/* unknown */ void  Vffffff8e;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  * Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  * Vffffffb8;
	struct HWND__ * Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  * Vffffffe0;
	/* unknown */ void  Vffffffe4;
	struct HDC__ * Vffffffe8;
	/* unknown */ void  * Vffffffec;
	struct HDC__ * Vfffffff0;



    if(A8 != 0) {
        L00429610(65540);
    }
    eax = GetDesktopWindow();
    Vffffffbc = eax;
    if(eax == 0) {
        L00429610(65563);
    }
    esi = L0041B390(0);
    eax = L0041B390(1);
    ebx = eax;
    Vffffffdc = eax;
    *(ebp - 0x78) = ~ebx;
    *(ebp - 0x80) = 0x28;
    *(ebp - 0x7c) = esi;
    Vffffff8c = 1;
    Vffffff8e = 0x18;
    Vffffff90 = 0;
    Vffffff94 = 0;
    Vffffff98 = 0;
    *(ebp - M00000064) = 0;
    Vffffffa0 = 0;
    Vffffffa4 = 0;
    Vffffffec = 0;
    Vffffffe0 = 0;
    Vfffffff0 = 0;
    Vffffffe8 = 0;
    Vffffffd8 = 0;
    Vffffffd4 = esp;
    Vffffffd8 = L00449230(esi, eax, 0);
    eax = GetDC(Vffffffbc);
    Vffffffe8 = eax;
    if(eax == 0) {
        L0042FA00();
    }
    eax = CreateCompatibleDC(0);
    Vfffffff0 = eax;
    if(eax == 0) {
        L0042FA00();
    }
    eax = CreateDIBSection(0, ebp - 0x80, 0, & Vffffffb0, 0, 0);
    Vffffffec = eax;
    if(eax == 0) {
        L0042FA00();
    }
    eax = SelectObject(Vfffffff0, Vffffffec);
    Vffffffe0 = eax;
    if(eax == 0) {
        L0042FA00();
    }
    if(BitBlt(Vfffffff0, 0, 0, esi, ebx, Vffffffe8, 0, 0, 13369376) == 0) {
        ebx = GetLastError();
        if(ebx == 6) {
            L00429610(65556);
        }
        L0042F970(ebx);
    }
    GdiFlush();
    goto L004201bb;
    if(Vffffffec != 0) {
        if(Vffffffe0 != 0) {
            SelectObject(Vfffffff0, Vffffffe0);
        }
        DeleteObject(Vffffffec);
    }
    if(Vfffffff0 != 0) {
        DeleteDC(Vfffffff0);
    }
    if(Vffffffe8 != 0) {
        ReleaseDC(Vffffffbc, Vffffffe8);
    }
    L004492F0( & Vffffffd8);
    L004234F0(0, 0, 0);
    if(Vffffffc8 != 0) {
        (save)-1;
        ecx = Vffffffc0;
        Vffffffc8();
    }
    esp = *(ebp - 0x2c);
L004201bb:
    ecx = Vffffffd8;
    edi = *(ecx + 0x18);
    Vffffffb8 = Vffffffb0;
    eax = *(ecx + 0xc);
    ecx = esi;
    Vffffffb4 = eax;
    Vffffffe4 = ecx + ecx * 2 + 3;
    Vffffffe4 = Vffffffe4 & -4;
    if(!(Vffffffdc = Vffffffdc - 1)) {
        esi = edi + esi * 4;
        Vffffffac = Vffffffb4;
        do {
            ebx = edi;
            edx = esi;
            ecx = Vffffffb8;
            if(edi < esi) {
                do {
                    *ebx = 0;
                    eax = *(ecx + 2) & 0xff;
                    *(ebx + 1) = al;
                    ebx = ebx + 2;
                    eax = *(ecx + 1) & 0xff;
                    *ebx = al;
                    eax = *ecx & 0xff;
                    *(ebx + 1) = al;
                    ebx = ebx + 2;
                    ecx = ecx + 3;
                } while(ebx < edx);
            }
            esi = esi + Vffffffac;
            edi = edi + Vffffffb4;
            Vffffffb8 = Vffffffb8 + Vffffffe4;
        } while(Vffffffdc = Vffffffdc - 1);
    }
    SelectObject(Vfffffff0, Vffffffe0);
    DeleteObject(Vffffffec);
    DeleteDC(Vfffffff0);
    ReleaseDC(Vffffffbc, Vffffffe8);
    return Vffffffd8;
}

/*	Procedure: 0x0042026A - 0x004203C0
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042026A()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = *(ebp + 8);
    esp = esp - 4;
    if(edi == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return;
    }
    *(edi + 0xc) & 0x10;
    if(!(ebx = *(edi + 0x18) & 0xff)) {
        ebx = 2;
    }
    ecx = *(edi + 8) - 9;
    esi = 32768;
    if(ecx > 4) {
        goto L00420303;
    }
    switch(ecx) {
        case 0:
            goto L004202b1;
        case 1:
            goto L004202d8;
        case 2:
L00420303:
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            (restore)ebp;
            return;
        case 3:
            goto L00420303;
        case 4:
            esi = esi | 1;
            goto L00420310;
    }
L004202b1:
    ebx = ebx - 1;
    if(ebx > 2) {
        goto L004202d0;
    }
    goto ( *(ebx * 4 + 0x4738c4));
    esi = esi | 2;
    goto L00420310;
    esi = esi | 8;
    goto L00420310;
    esi = esi | 0x20;
    goto L00420310;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
L004202d8:
    ecx = ebx - 1;
    if(ecx > 2) {
        goto L004202f6;
    }
    goto ( *(ecx * 4 + 0x4738b8));
    esi = esi | 4;
    goto L00420310;
    esi = esi | 0x10;
    goto L00420310;
    esi = esi | 0x40;
    goto L00420310;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
    if(*(edi + 0x10) >= 0) {
        goto L00420319;
    }
    ebx = 0;
    ebx = ebx * 65535;
    edx = 0;
    eax = ebx;
    edx = L0041B390(0) / L0041B390(0) % L0041B390(0) / L0041B390(0);
    if(eax <= 65535) {
        goto L0042033d;
    }
    ebx = 65535;
    if(*(edi + 0x14) >= 0) {
        goto L00420346;
    }
    edi = 0;
    edi = edi * 65535;
    edx = 0;
    eax = edi;
    edx = L0041B390(1) / L0041B390(1) % L0041B390(1) / L0041B390(1);
    if(eax <= 65535) {
        goto L0042036a;
    }
    eax = mouse_event(esi, ebx, 65535, 0, 0);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
    (save)ebp;
    edx = *(esp + 8);
    if(edx != 0) {
        goto L00420390;
    }
    (restore)ebp;
    return;
    if(*(edx + 8) != 6) {
        goto L004203a0;
    }
    eax = 2;
    goto L004203a2;
    eax = keybd_event( *(( *(edx + 0x14) & 65535 & 0xff) + 0x47fe98) & 0xff, 0, 0, 0);
    (restore)ebp;
    return;
}

/*	Procedure: 0x004203EE - 0x004204A6
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L004203EE(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    edx = Ac;
    ecx = ( *(edx + 0x18) & 0xff) - 1;
    eax = A8;
    if(ecx <= 2) {
        switch(ecx) {
            case 0:
L0042040c:
                *(eax + 0x24) = *(eax + 0x24) | 0x40;
                goto L00420421;
            case 1:
                *(eax + 0x24) = *(eax + 0x24) | 0x80;
                goto L00420421;
            case 2:
                *(eax + 0x24) = *(eax + 0x24) | 0x100;
                goto L00420421;
        }
        goto L0042040c;
    }
L00420421:
    return L00452470( *(eax + 0x28), edx);
    (save)ebp;
    ebp = esp;
    edx = Ac;
    ecx = ( *(edx + 0x18) & 0xff) - 1;
    eax = A8;
    if(ecx > 2) {
        goto L00420461;
    }
    goto ( *(ecx * 4 + 0x4738f8));
    *(eax + 0x24) = *(eax + 0x24) & -65;
    goto L00420461;
    *(eax + 0x24) = *(eax + 0x24) & 65407;
    goto L00420461;
    *(eax + 0x24) = *(eax + 0x24) & 65279;
    eax = L004529a0( *(eax + 0x28), edx);
    esp = ebp;
    return;
    (save)ebp;
    ebp = esp;
    ecx = A8;
    *(ecx + 0x24) = *(ecx + 0x24) | 0x200;
    eax = L00452b80( *(ecx + 0x28), Ac);
    esp = ebp;
    return;
    (save)ebp;
    ebp = esp;
    esp = ebp;
    return L00452BD0( *(A8 + 0x28), Ac);
}

/*	Procedure: 0x004204CD - 0x00420513
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L004204CD(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    esi = ~( *(Ac + 0x1a));
    edx = esi;
    ebx = *(A8 + 0x28);
    eax = -2004318071;
    asm("imul edx");
    edx = edx + esi >> 6;
    esi = (esi >> 0x1f) + edx;
    eax = L00451930(ebx, 0, L00451750(ebx) * L00451750(ebx));
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00420514 - 0x0042051F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420514()
{



}

/*	Procedure: 0x00420534 - 0x0042053F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420534()
{



}

/*	Procedure: 0x00420557 - 0x0042055F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420557()
{



}

/*	Procedure: 0x004205AA - 0x004205CA
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L004205AA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00451A30( *(A8 + 0x28), Ac, A10);
}

/*	Procedure: 0x004205CB - 0x004206C9
 *	Argument size: 12
 *	Local size: 16
 *	Save regs size: 12
 */

L004205CB(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    if(A10 != 0 && Ac != 0) {
        (save)ebp - 0x1c;
        (restore)ecx;
        if(L00445FA0( *(A8 + 0x2c)) != 0) {
            eax = L00451A30( *(A8 + 0x28), ebp - 0x1c, 0xc0);
        }
        return;
    }
    *(ebp - 0x18) = 0;
    eax = *(ebp - 0x18);
    *(ebp - 0x1c) = eax;
    L004516D0( *(A8 + 0x28), ebp - 0x14, & Vfffffff0);
    eax = *(A8 + 0x30);
    if(*(ebp - 0x14) < eax) {
        *(ebp - 0x14) = eax;
    }
    edi = *(A8 + 0x2c);
    eax = L00442540(edi);
    Vfffffff0 = eax;
    if(L00451290( *(A8 + 0x28), *(ebp - 0x14), Vfffffff0, 0) != 0) {
        eax = L004424B0(edi, ebp - 0x1c);
    }
    if(Ac != 0) {
        (save)ebp - 0x1c;
        L00445FA0(edi);
        (restore)ecx;
        if(al != 0) {
            L00451A30( *(A8 + 0x28), ebp - 0x1c, 0xc0);
        }
        *(A8 + 0x24) = *(A8 + 0x24) | 0x1000;
        eax = L00446000(edi);
        if(!(eax & 8)) {
            eax = L00419FF0(A8, *(A8 + 0x20), 3, 0, 0, 0, 0);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x004206CA - 0x004206CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004206CA()
{



}

/*	Procedure: 0x004206D0 - 0x004208E8
 *	Argument size: 24
 *	Local size: 68
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 *		L0042198B()
 *		L0044602B()
 *		L0046279D()
 */

L004206D0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    ebx = A10;
    eax = L0042E3A0(0x4c);
    *(ebp - 0x50) = eax;
    *( *(ebp - 0x50)) = 1448466561;
    ecx = *(ebp - 0x50) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    ecx = !(ebx & 0x200) ? 0 : 0x10;
    eax = !(ebx & 0x100) ? 8 : 0;
    edx = eax | 1 | ecx;
    *( *(ebp - 0x50) + 0x24) = dx;
    if(!(ebx & 0x400)) {
        *( *(ebp - 0x50) + 0x26) = 0x20;
    }
    *( *(ebp - 0x50) + 0x27) = bl;
    if(A8 != 0) {
        Vffffffc8 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        ebx = *(A8 + 4);
        if(ebx == 0 || *(ebx + 0x88) == 0) {
            L00429610(65538);
        }
        *(ebx + 0x88)(A8, *(ebp - 0x50));
        goto L004207c5;
        L0042E3E0(ebp - 0x50);
        L004234F0(0, 0, 0);
        if(Vffffffbc != 0) {
            (save)-1;
            ecx = *(ebp - 0x4c);
            Vffffffbc();
        }
        esp = *(ebp - 0x38);
L004207c5:
        *( *(ebp - 0x50) + 8) = A8;
    }
    *( *(ebp - 0x50) + 0x24) = *( *(ebp - 0x50) + 0x24) | 0x20;
    ecx = *(ebp - 0x50);
    *(ecx + 0x20) = A14;
    Vffffffe0 = esp;
    ebx = L004510F0(esi, A18 | 0x1400, 2, 0xa, 0x420520, *(ebp - 0x50));
    *( *(ebp - 0x50) + 0x28) = ebx;
    Vffffffe8 = 0;
    Vffffffe4 = Vffffffe8;
    L004516D0(ebx, & Vffffffec, & Vfffffff0);
    esi = L00442340( & Vffffffe4, A1c);
    *( *(ebp - 0x50) + 0x2c) = esi;
    L00443D60(esi, 0x420540, *(ebp - 0x50));
    L00443DA0(esi, 0x420560, *(ebp - 0x50));
    L00443DE0(esi, 0x4205d0, *(ebp - 0x50));
    L00452360(ebx, 0x420f80, *(ebp - 0x50));
    L00452390(ebx, 0x420fb0, *(ebp - 0x50));
    goto L004208d4;
    L004511D0( *(ebp - 0x50) + 0x28);
    L00442430( *(ebp - 0x50) + 0x2c);
    L00419A70(ebp - 0x50);
    L004234F0(0, 0, 0);
    if(Vffffffd4 != 0) {
        ecx = Vffffffcc;
        Vffffffd4(-1);
    }
    esp = *(ebp - 0x20);
L004208d4:
    *( *(ebp - 0x50) + 4) = 0x480074;
    return *(ebp - 0x50);
}

/*	Procedure: 0x004208E9 - 0x00420910
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L004208E9(A8)
/* unknown */ void  A8;
{



    L004511D0(A8 + 0x28);
    return L00442430(A8 + 0x2c);
}

/*	Procedure: 0x00420911 - 0x0042091F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420911()
{



}

/*	Procedure: 0x00420B23 - 0x00420B2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420B23()
{



}

/*	Procedure: 0x00420B47 - 0x00420B4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420B47()
{



}

/*	Procedure: 0x00420BA4 - 0x00420BAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420BA4()
{



}

/*	Procedure: 0x00420C45 - 0x00420C4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420C45()
{



}

/*	Procedure: 0x00420C50 - 0x00420CD3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00420C50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)Ac;
    (restore)ecx;
    if(L00453180( *(A8 + 0x28)) != 0) {
        return;
    }
    eax = L00446000( *(A8 + 0x2c));
    ecx = *(Ac + 0x14) & 65535;
    if(ecx == 0x71 || ecx == 0x20) {
        edx = *(Ac + 0xc);
        if(!(edx & 1)) {
            if(eax & 0x10) {
                goto L00420ca6;
            }
            if(!(eax & 0x20) && ecx == 0x20) {
L00420ca6:
                eax = L00419FF0(A8, *(A8 + 0x20), 7, 0, edx, 0, 0);
                esp = ebp - 8;
                return;
            }
        }
    }
    eax = L00445720( *(A8 + 0x2c), Ac);
    esp = ebp - 8;
}

/*	Procedure: 0x00420CD4 - 0x00420CDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420CD4()
{



}

/*	Procedure: 0x00420CF4 - 0x00420CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420CF4()
{



}

/*	Procedure: 0x00420D9A - 0x00420E32
 *	Argument size: 8
 *	Local size: 44
 *	Save regs size: 8
 */

L00420D9A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  V10;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V18;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;



    esp = esp & -8;
    L00453650( *(A8 + 0x28), & V1c, & V20);
    *esp = *Ac;
    V0 = *(Ac + 4);
    V4 = *(Ac + 8);
    V8 = *(Ac + 0xc);
    Vc = *(Ac + 0x10);
    V10 = *(Ac + 0x14);
    V14 = *(Ac + 0x18) & 0xff;
    V15 = *(Ac + 0x19) & 0xff;
    V16 = *(Ac + 0x1a) & 65535;
    V18 = *(Ac + 0x1c);
    Vc = Vc - V1c;
    V10 = V10 - V20;
    return L00445D90( *(A8 + 0x2c), esp);
}

/*	Procedure: 0x00420E33 - 0x00420E3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420E33()
{



}

/*	Procedure: 0x00420ED9 - 0x00420F78
 *	Argument size: 8
 *	Local size: 44
 *	Save regs size: 8
 */

L00420ED9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  V10;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V18;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;



    esp = esp & -8;
    *(A8 + 0x24) = *(A8 + 0x24) & 64511;
    L00453650( *(A8 + 0x28), & V1c, & V20);
    *esp = *Ac;
    V0 = *(Ac + 4);
    V4 = *(Ac + 8);
    V8 = *(Ac + 0xc);
    Vc = *(Ac + 0x10);
    V10 = *(Ac + 0x14);
    V14 = *(Ac + 0x18) & 0xff;
    V15 = *(Ac + 0x19) & 0xff;
    V16 = *(Ac + 0x1a) & 65535;
    V18 = *(Ac + 0x1c);
    Vc = Vc - V1c;
    V10 = V10 - V20;
    return L00445E20( *(A8 + 0x2c), esp);
}

/*	Procedure: 0x00420F79 - 0x00420FA3
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 0
 */

L00420F79(A8, Ac, A14, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    if(Ac == 1) {
        eax = L004441C0( *(A8 + 0x2c), A14, A1c, A20);
    }
}

/*	Procedure: 0x00420FA4 - 0x00420FAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00420FA4()
{



}

/*	Procedure: 0x0042102D - 0x00421042
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L0042102D(A8)
/* unknown */ void  A8;
{



    return L00442710( *(A8 + 0x2c));
}

/*	Procedure: 0x00421043 - 0x0042104F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421043()
{



}

/*	Procedure: 0x00421437 - 0x0042143F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421437()
{



}

/*	Procedure: 0x00421496 - 0x0042149F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421496()
{



}

/*	Procedure: 0x0042151E - 0x0042151F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042151E()
{



}

/*	Procedure: 0x00421520 - 0x0042177E
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004621EA()
 */

L00421520(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ecx = A8;
    esp = esp - 0x44;
    esi = A10;
    ebx = A14;
    if(ecx < 0x3c) {
        ecx = 0x3c;
    }
    eax = L0042E3A0(ecx);
    *(ebp - 0x50) = eax;
    *eax = 1448466561;
    ecx = *(ebp - 0x50) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    ecx = !(ebx & 0x200) ? 0 : 0x10;
    edx = !(ebx & 0x100) ? 8 : 0;
    eax = edx | 1 | ecx;
    *( *(ebp - 0x50) + 0x24) = ax;
    if(!(ebx & 0x400)) {
        *( *(ebp - 0x50) + 0x26) = 0x20;
    }
    *( *(ebp - 0x50) + 0x27) = bl;
    if(Ac != 0) {
        *(ebp - 0x38) = esp;
        if(*Ac != 1448466561) {
            L00429610(65561);
        }
        ebx = *(Ac + 4);
        if(ebx == 0 || *(ebx + 0x88) == 0) {
            L00429610(65538);
        }
        *(ebx + 0x88)(Ac, *(ebp - 0x50));
        goto L00421625;
        L0042E3E0(ebp - 0x50);
        L004234F0(0, 0, 0);
        if(*(ebp - 0x44) != 0) {
            (save)-1;
            ecx = *(ebp - 0x4c);
            *(ebp - 0x44)();
        }
        esp = *(ebp - 0x38);
L00421625:
        *( *(ebp - 0x50) + 8) = Ac;
    }
    *( *(ebp - 0x50) + 0x24) = *( *(ebp - 0x50) + 0x24) | 0x20;
    eax = *(ebp - 0x50);
    *(eax + 0x20) = A18;
    *(ebp - 0x20) = esp;
    ebx = L004510F0(esi, A1c, 0, 0xf, 0x420520, *(ebp - 0x50));
    *( *(ebp - 0x50) + 0x28) = ebx;
    *(ebp - 0x18) = 0;
    eax = *(ebp - 0x18);
    *(ebp - 0x1c) = eax;
    L004516D0(ebx, ebp - 0x14, ebp - 0x10);
    esi = L00454730(ebp - 0x1c, A20);
    *( *(ebp - 0x50) + 0x2c) = esi;
    L004549A0(esi, 0);
    L00455760(esi, 0x420540, *(ebp - 0x50));
    L00455850(esi, 0x420560, *(ebp - 0x50));
    L004557F0(esi, 0x4205b0, *(ebp - 0x50));
    L00455790(esi, 0x422020, *(ebp - 0x50));
    L004557C0(esi, 0x421440, *(ebp - 0x50));
    L004558F0(esi, 0x4214a0, *(ebp - 0x50));
    L00452360(ebx, 0x421f90, *(ebp - 0x50));
    L00452390(ebx, 0x421fc0, *(ebp - 0x50));
    goto L0042176a;
    L004511D0( *(ebp - 0x50) + 0x28);
    L004547B0( *(ebp - 0x50) + 0x2c);
    L00419A70(ebp - 0x50);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x2c) != 0) {
        ecx = *(ebp - 0x34);
        *(ebp - 0x2c)(-1);
    }
    esp = *(ebp - 0x20);
L0042176a:
    *( *(ebp - 0x50) + 4) = 0x480138;
    return *(ebp - 0x50);
}

/*	Procedure: 0x0042177F - 0x00421875
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L0042177F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esp = esp - 0x10;
    if(!( *(Ac + 0xc) & 0x20)) {
        return;
    }
    edx = *(Ac + 0x14) & 65535;
    if(edx >= 0xa0 && edx <= 0xa8) {
        esp = ebp - 0xc;
        return;
    }
    if(!(ecx = edx - 0x1a) && !(ecx = ecx - 6) && !(ecx = ecx - 0x51)) {
        ecx = ecx - 0x1f;
        if(ecx > 1 && (ecx = ecx - 3)) {
            goto L004217e6;
        }
    }
    esp = ebp - 0xc;
    return;
L004217e6:
    esi = *(A8 + 0x34);
    if(esi == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(!( *(esi + 0x24) & 65535 & 8)) {
        *(ebp - 0x1c) = *(A8 + 0xc);
        *(ebp - 0x18) = *(A8 + 0x10);
        *(ebp - 0x14) = *(A8 + 0x14);
        *(ebp - 0x10) = *(A8 + 0x18);
        eax = *(A8 + 0x38) != 0 ? 0x21 : 0x1e;
        *(ebp - 0x10) = *(ebp - 0x10) - eax;
        L00419DD0(A8, ebp - 0x1c);
        (save)1;
        L00419C50(esi);
        eax = *(A8 + 0x38);
        (restore)ecx;
        if(eax != 0) {
            L00419C50(eax, 1);
        }
    }
    L00443B70( *(esi + 0x2c));
    L0041A0E0(esi);
    eax = *( *(esi + 4) + 0x38)(esi, Ac);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00421876 - 0x0042187F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421876()
{



}

/*	Procedure: 0x0042198B - 0x00421AA3
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 */

L0042198B(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x20;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x34) != 0) {
        return;
    }
    ebx = *(A8 + 0x27) & 0xff & 0xf;
    if(!(ebx & 8)) {
        ebx = ebx | 2;
    }
    if(!(L004516A0( *(A8 + 0x28)) & 0x80)) {
        eax = *(A8 + 0x18);
        ecx = eax - 0x21;
        eax = eax + 1;
        edi = *(A8 + 0x14) + 1;
        *(ebp - 0x1c) = *(A8 + 0xc) - 1;
        *(ebp - 0x18) = ecx;
        *(ebp - 0x14) = edi;
        *(ebp - 0x10) = eax;
        edx = *(A8 + 0x18);
        edi = *(A8 + 0x14);
        ecx = *(A8 + 0xc);
        edi = edi - 3;
        ecx = ecx + 3;
        eax = edx - 0x1d;
        *(ebp - 0x2c) = ecx;
        *(ebp - 0x28) = eax;
        *(ebp - 0x24) = edi;
        *(ebp - 0x20) = edx - 3;
        if(*(A8 + 0x38) == 0) {
            *(A8 + 0x38) = L0043AAA0( *(A8 + 8), ebp - 0x1c, ebx, 3, 0, 0);
        }
    } else {
        ecx = *(A8 + 0x18);
        edi = *(A8 + 0x14);
        eax = *(A8 + 0xc);
        *(ebp - 0x2c) = eax;
        *(ebp - 0x28) = ecx - 0x1a;
        *(ebp - 0x24) = edi;
        *(ebp - 0x20) = ecx;
    }
    *(A8 + 0x34) = L004206D0( *(A8 + 8), ebp - 0x2c, ebx, 0, 0, 4);
    L00443DE0( *( *(A8 + 0x34) + 0x2c), 0x421880, A8);
    eax = L004558B0( *(A8 + 0x2c), 0x421780, A8);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00421AA4 - 0x00421AAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421AA4()
{



}

/*	Procedure: 0x00421AB0 - 0x00421B67
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004633F0()
 *		L004634B0()
 */

L00421AB0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    esi = *(A8 + 0x34);
    if(esi == 0) {
        return 0;
    }
    eax = *(esi + 0x24) & 65535;
    if(!(eax & 8)) {
        esp = ebp - 8;
        return 0;
    }
    *(ebp - 0x18) = *(A8 + 0xc);
    *(ebp - 0x14) = *(A8 + 0x10);
    *(ebp - 0x10) = *(A8 + 0x14);
    *(ebp - 0xc) = *(A8 + 0x18);
    eax = *(A8 + 0x38) != 0 ? 0x21 : 0x1e;
    *(ebp - 0xc) = *(ebp - 0xc) + eax;
    L00419DD0(A8, ebp - 0x18);
    L00419C50(esi, 0);
    L00443B70( *(esi + 0x2c));
    eax = *(A8 + 0x38);
    if(eax != 0) {
        L00419C50(eax, 0);
    }
    eax = L0041A0E0(A8);
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00421B68 - 0x00421BA0
 *	Argument size: 4
 *	Local size: 4
 *	Save regs size: 4
 */

L00421B68(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0x2c);
    ecx = ebp - 8;
    *(ebp - 8) = edx;
    L004547B0(ecx);
    *(A8 + 0x2c) = 0;
    return L004511D0(A8 + 0x28);
}

/*	Procedure: 0x00421BA1 - 0x00421BAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421BA1()
{



}

/*	Procedure: 0x00421C04 - 0x00421C0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421C04()
{



}

/*	Procedure: 0x00421C85 - 0x00421C8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421C85()
{



}

/*	Procedure: 0x00421CBC - 0x00421CEB
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00421CBC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)Ac;
    (restore)ecx;
    if(L00453180( *(A8 + 0x28)) == 0) {
        eax = L00456670( *(A8 + 0x2c), Ac);
    }
}

/*	Procedure: 0x00421CEC - 0x00421D06
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00421CEC(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00456AA0( *(A8 + 0x2c), Ac);
}

/*	Procedure: 0x00421D07 - 0x00421D0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421D07()
{



}

/*	Procedure: 0x00421DA9 - 0x00421E42
 *	Argument size: 8
 *	Local size: 44
 *	Save regs size: 8
 */

L00421DA9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  V10;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V18;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;



    esp = esp & -8;
    L00453650( *(A8 + 0x28), & V1c, & V20);
    *esp = *Ac;
    V0 = *(Ac + 4);
    V4 = *(Ac + 8);
    V8 = *(Ac + 0xc);
    Vc = *(Ac + 0x10);
    V10 = *(Ac + 0x14);
    V14 = *(Ac + 0x18) & 0xff;
    V15 = *(Ac + 0x19) & 0xff;
    V16 = *(Ac + 0x1a) & 65535;
    V18 = *(Ac + 0x1c);
    Vc = Vc - V1c;
    V10 = V10 - V20;
    return L00456900( *(A8 + 0x2c), esp);
}

/*	Procedure: 0x00421E43 - 0x00421E4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421E43()
{



}

/*	Procedure: 0x00421EE9 - 0x00421F88
 *	Argument size: 8
 *	Local size: 44
 *	Save regs size: 8
 */

L00421EE9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  V10;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V18;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;



    esp = esp & -8;
    *(A8 + 0x24) = *(A8 + 0x24) & 64511;
    L00453650( *(A8 + 0x28), & V1c, & V20);
    *esp = *Ac;
    V0 = *(Ac + 4);
    V4 = *(Ac + 8);
    V8 = *(Ac + 0xc);
    Vc = *(Ac + 0x10);
    V10 = *(Ac + 0x14);
    V14 = *(Ac + 0x18) & 0xff;
    V15 = *(Ac + 0x19) & 0xff;
    V16 = *(Ac + 0x1a) & 65535;
    V18 = *(Ac + 0x1c);
    Vc = Vc - V1c;
    V10 = V10 - V20;
    return L00456A30( *(A8 + 0x2c), esp);
}

/*	Procedure: 0x00421F89 - 0x00421FB3
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 0
 */

L00421F89(A8, Ac, A14, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    if(Ac == 1) {
        eax = L00455930( *(A8 + 0x2c), A14, A1c, A20);
    }
}

/*	Procedure: 0x00421FB4 - 0x00421FBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00421FB4()
{



}

/*	Procedure: 0x00422080 - 0x0042227F
 *	Argument size: 24
 *	Local size: 68
 *	Save regs size: 12
 *	Called by:
 *		L00401000()
 */

L00422080(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    ebx = A10;
    L0042E3A0(0x34);
    *(ebp - 0x50) = eax;
    *eax = 1448466561;
    ecx = *(ebp - 0x50) + 0xc;
    *ecx = *Ac;
    *(ecx + 4) = *(Ac + 4);
    *(ecx + 8) = *(Ac + 8);
    *(ecx + 0xc) = *(Ac + 0xc);
    if(ebx & 0x200) {
        goto L004220d0;
    }
    ecx = 0;
    goto L004220d5;
    ecx = 0x10;
    if(ebx & 0x100) {
        goto L004220e4;
    }
    eax = 8;
    goto L004220e6;
    edx = 1 | ecx;
    *( *(ebp - 0x50) + 0x24) = dx;
    if(ebx & 0x400) {
        goto L00422103;
    }
    *( *(ebp - 0x50) + 0x26) = 0x20;
    *( *(ebp - 0x50) + 0x27) = bl;
    if(A8 == 0) {
        goto L0042217b;
    }
    Vffffffc8 = esp;
    if(*A8 == 1448466561) {
        goto L00422123;
    }
    L00429610(65561);
    if(*(A8 + 4) == 0) {
        goto L00422133;
    }
    if(*(ebx + 0x88) != 0) {
        goto L0042213e;
    }
    L00429610(65538);
    *(ebx + 0x88)(A8, *(ebp - 0x50));
    goto L00422175;
    L0042E3E0(ebp - 0x50);
    L004234F0(0, 0, 0);
    if(Vffffffbc == 0) {
        goto L00422172;
    }
    (save)-1;
    ecx = *(ebp - 0x4c);
    Vffffffbc();
    esp = *(ebp - 0x38);
    *( *(ebp - 0x50) + 8) = A8;
    *( *(ebp - 0x50) + 0x24) = *( *(ebp - 0x50) + 0x24) | 0x20;
    ecx = *(ebp - 0x50);
    *(ecx + 0x20) = A14;
    Vfffffff0 = esp;
    if(A18 != 0) {
        goto L0042219c;
    }
    A18 = 3;
    L004510F0(Ac, A18 | 7168, 2, 0xa, 0x420520, *(ebp - 0x50));
    ebx = eax;
    *( *(ebp - 0x50) + 0x28) = ebx;
    Vffffffcc = 0;
    Vffffffd0 = 0;
    Vffffffd4 = 0x600;
    Vffffffd8 = 0;
    L00456b10( & Vffffffcc, A1c, 0x420540, *(ebp - 0x50));
    *( *(ebp - 0x50) + 0x2c) = eax;
    L00452360(ebx, 0x422450, *(ebp - 0x50));
    L00452390(ebx, 0x422480, *(ebp - 0x50));
    goto L00422263;
    L004511D0( *(ebp - 0x50) + 0x28);
    L00456c40( *(ebp - 0x50) + 0x2c);
    L00419A70(ebp - 0x50);
    L004234F0(0, 0, 0);
    if(Vffffffe4 == 0) {
        goto L00422260;
    }
    ecx = Vffffffdc;
    Vffffffe4(-1);
    esp = *(ebp - 0x10);
    *( *(ebp - 0x50) + 4) = 0x4801fc;
    return *(ebp - 0x50);
}

/*	Procedure: 0x00422280 - 0x00422340
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00401190()
 *		L004011C0()
 *		L00408CB0()
 */

L00422280(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;



    (save)esi;
    (save)edi;
    ebx = A8;
    esp = esp - 0x14;
    if(ebx != 0 && *ebx == 1448466561) {
        goto L004222a0;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    esi = *(ebx + 0x28);
    L00451B10(esi);
    *(ebp - 0x1d) = al;
    ebx = *(ebx + 0x2c);
    L00456ff0(ebx, Ac, A10, A14, A18);
    edi = L00456CC0(ebx);
    L00451290(esi, 0x600, edi, 0);
    if(al == 0) {
        goto L00422307;
    }
    ecx = ebp - 0x1c;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = 0x600;
    *(ebp - 0x10) = edi;
    L00456C80(ebx, ecx);
    if(*(ebp - 0x1d) == 0) {
        goto L00422314;
    }
    eax = L004519F0(esi);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = A8;
    L004511D0(ebx + 0x28);
    eax = L00456c40(ebx + 0x2c);
    esp = ebp - 4;
}

/*	Procedure: 0x004223CE - 0x004223FB
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L004223CE(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)Ac;
    (restore)ecx;
    if(L00453180( *(A8 + 0x28)) == 0) {
        eax = L00457AE0( *(A8 + 0x2c), Ac);
    }
}

/*	Procedure: 0x004223FC - 0x0042244D
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L004223FC(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    edx = 0x12 & A10;
    (save)A8;
    ecx = 0;
    if(edx != 0x12) {
        ecx = 2;
    }
    if(!(A10 & 4)) {
        ecx = ecx | 4;
    }
    eax = L00451650( *(A8 + 0x28), ecx);
    if((0x14 & A10) != 0x14) {
        eax = L00457690( *(A8 + 0x2c));
    }
    esp = ebp - 8;
    (restore)A8;
}

/*	Procedure: 0x0042244E - 0x00422472
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 0
 */

L0042244E(A8, Ac, A14, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
/* unknown */ void  A1c;
{



    if(Ac == 1) {
        eax = L00456D00( *(A8 + 0x2c), A14, A1c, 0);
    }
}

/*	Procedure: 0x00422473 - 0x0042247F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00422473()
{



}

/*	Procedure: 0x004224E0 - 0x0042251B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		__entry_point__()
 */

L004224E0(A10)
/* unknown */ void  A10;
{
	/* unknown */ void  ebp;
	/* unknown */ void  esi;



    ebp = 0;
    for(esi = M00480360; esi != 0; esi = *(esi + 8)) {
        eax = *A10;
        ecx = *( *esi);
        eax = *eax;
        if(ecx <= eax) {
            break;
        }
        ebp = esi;
    }
    *(A10 + 8) = esi;
    if(ebp != 0) {
        *(ebp + 8) = A10;
    } else {
        M00480360 = A10;
    }
}

/*	Procedure: 0x0042251C - 0x0042251F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042251C()
{



}

/*	Procedure: 0x00422520 - 0x004226A0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004229B0()
 *		L00423190()
 *		L00423570()
 */

L00422520(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 4;
    *Ac = 0;
    eax = Ac;
    *(eax + 8) = 0;
    edi = M00480360;
    goto L00422547;
L00422544:
    edi = *(edi + 8);
L00422547:
    if(edi != 0) {
        esi = *edi;
        eax = A8;
        if(*esi > eax) {
            goto L00422544;
        }
    }
    if(edi == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    ebx = *edi;
    eax = *(edi + 4) - ebx;
    asm("cdq");
    eax = eax + (edx & 7) >> 3;
    edx = 0;
    ecx = eax;
    if(eax != 1) {
L00422580:
        esi = edx + ecx;
        esi = esi >> 1;
        if(*(ebx + esi * 8) <= A8 - 1) {
            edx = esi;
        } else {
            ecx = esi;
        }
        if(edx + 1 != ecx) {
            goto L00422580;
        }
    }
    if(A8 - 1 >= *(ebx + edx * 8)) {
        if(edx + 1 == eax) {
            goto L004225c3;
        }
        if(A8 - 1 < *(ebx + edx * 8 + 8)) {
L004225c3:
            esi = *(ebx + edx * 8 + 4);
            *Ac = esi;
            ecx = *Ac;
            edi = esi;
            if(!( *ecx & 1)) {
                eax = *(ecx + 5) & 65535;
                edi = edi + 7;
                esi = 0;
                *(ebp - 0x10) = eax;
                if(eax > 0) {
L004225f5:
                    ebx = *edi;
                    ecx = *ebx & 0xff;
                    if(cl == 0xe8 || cl == 0xcc) {
                        ebx = ebx + 5;
                    } else {
                        if(cl == 0xff) {
                            edx = *(ebx + 1) & 0xff;
                            ecx = edx >> 6;
                            edx = edx & 7;
                            ebx = ebx + 2;
                            if(ecx == 3) {
                                goto L00422665;
                            }
                            if(edx == 4) {
                                ebx = ebx + 1;
                            }
                            if(ecx == 0 && edx == 5) {
                                ebx = ebx + 4;
                                goto L00422665;
                            }
                            eax = ecx - 1;
                            if(eax > 1) {
                                goto L00422665;
                            }
                            switch(eax) {
                                case 0:
L0042264f:
                                    ebx = ebx + 1;
                                    goto L00422665;
                                case 1:
                                    ebx = ebx + 4;
                                    goto L00422665;
                            }
                            goto L0042264f;
                        }
                        L00457DB0();
                    }
L00422665:
                    if(ebx != A8) {
                        goto L00422680;
                    }
                    esi = *(edi + 4);
                    eax = Ac;
                    *(eax + 8) = esi;
                    esp = ebp - 0xc;
                    (restore)edi;
                    (restore)esi;
                    (restore)ebx;
                    return;
                    esi = esi + 1;
                    edi = edi + 8;
                    if(esi < *(ebp - 0x10)) {
                        goto L004225f5;
                    }
                }
            }
            eax = Ac;
            *(eax + 8) = 0;
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x004226B0 - 0x004226C6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00423190()
 *		L00423570()
 */

L004226B0(A4)
/* unknown */ void  A4;
{



    ecx = *(A4 + 8);
    if(ecx == 0) {
        return 0;
    }
    return *ecx & 65535 & 0xff;
}

/*	Procedure: 0x004226C7 - 0x004226CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004226C7()
{



}

/*	Procedure: 0x004227D0 - 0x004228C9
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L004229B0()
 */

L004227D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  * ebx;



    ebx = *(A8 + 0xc);
    *(ebp - 0x10) = *(ebx + 4);
    if(IsBadReadPtr(ebx, 8) != 0) {
        L00457DB0();
    }
    *(A8 + 0xc) = *ebx;
    ecx = *( *Ac);
    if(!(ecx & 8)) {
        ebx = ebx - 4;
        *A8 = *ebx;
    }
    if(!(ecx & 0x40)) {
        ebx = ebx - 4;
        *(A8 + 4) = *ebx;
    }
    if(!(ecx & 0x80)) {
        ebx = ebx - 4;
        *(A8 + 8) = *ebx;
    }
    if(!(ecx & 2)) {
        ebx = ebx - 0x10;
        *(A8 + 0x24) = *ebx;
        *(A8 + 0x28) = *(ebx + 4);
        *(A8 + 0x2c) = *(ebx + 8);
        *(A8 + 0x30) = *(ebx + 0xc);
    }
    if(!(ecx & 4)) {
        ebx = ebx - 0x10;
        *(A8 + 0x34) = *ebx;
        *(A8 + 0x38) = *(ebx + 4);
        *(A8 + 0x3c) = *(ebx + 8);
        *(A8 + 0x40) = *(ebx + 0xc);
    }
    if(!(ecx & 0x10)) {
        ebx = ebx - 0x10;
        *(A8 + 0x44) = *ebx;
        *(A8 + 0x48) = *(ebx + 4);
        *(A8 + 0x4c) = *(ebx + 8);
        *(A8 + 0x50) = *(ebx + 0xc);
    }
    if(!(ecx & 0x20)) {
        *(A8 + 0x54) = *(ebx - 0x10);
        *(A8 + 0x58) = *(ebx - 0xc);
        *(A8 + 0x5c) = *(ebx - 8);
        *(A8 + 0x60) = *(ebx - 4);
    }
    return *(ebp - 0x10);
}

/*	Procedure: 0x004228CA - 0x004229A1
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L004228CA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
unsigned int A10;
{
	/* unknown */ void  ebx;



    edx = Ac;
    (save)esi;
    (save)edi;
    edi = edx;
    if((edi & -256) == -2147483648) {
        edx = (dl & 0xff) - 1;
        if(edx <= 6) {
            switch(edx) {
                case 0:
                    esi = A8 + 0x24;
                    goto L00422955;
                case 1:
                    esi = A8 + 0x34;
                    goto L00422955;
                case 2:
L00422902:
                    esi = A8;
                    goto L00422955;
                case 3:
                    esi = A8 + 0x44;
                    goto L00422955;
                case 4:
                    esi = A8 + 0x54;
                    goto L00422955;
                case 5:
                    esi = A8 + 4;
                    goto L00422955;
                case 6:
                    esi = A8 + 8;
                    goto L00422955;
            }
            goto L00422902;
        }
        L00457DB0();
        goto L00422955;
    }
    if(edx & 1073741824 || edi & -2147483648) {
        goto L00422950;
    }
    esi = (edi | -2147483648) + *A8;
    goto L00422955;
    esi = *(A8 + 0xc) + edx;
    if(IsBadReadPtr(esi, A10) == 0) {
        goto L00422970;
    }
    L00457DB0();
    eax = A10 - 2;
    if(eax > 2) {
        goto L00422982;
    }
    goto ( *(eax * 4 + 0x473ff4));
    eax = *esi;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    eax = *esi;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    eax = *esi;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x004229B0 - 0x00422FC3
 *	Argument size: 12
 *	Local size: 32
 *	Save regs size: 12
 */

L004229B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



L004229bc:
    while(*(Ac + 8) == 0) {
        (save)Ac;
        L00422520(L004227D0(A8, Ac));
        (restore)ecx;
        if(*Ac != 0) {
            continue;
        }
        L00457DD0();
    }
    *(ebp - 0x28) = *( *(Ac + 8)) & 65535;
    ecx = ( *(ebp - 0x28) & 65535 & 0xff) - 1;
    if(ecx <= 0x12) {
        switch(ecx) {
            case 0:
                goto L00422a05;
            case 1:
                goto L00422ad3;
            case 2:
                goto L00422fa3;
            case 3:
                esi = *(Ac + 8);
                ecx = L004228d0(A8, *(esi + 2), 4);
                *(esi + 6)();
                *(Ac + 8) = *(Ac + 8) + 0xa;
                goto L00422fa8;
            case 4:
                goto L00422bde;
            case 5:
                esi = *(Ac + 8);
                edi = L004228d0(A8, *(esi + 2), 4);
                Vffffffe0 = L004228d0(A8, *(esi + 6), 4);
                *(ebp - 0x24) = L004228d0(A8, *(esi + 0xa), 4);
                esi = L004228d0(A8, *(esi + 0xe), 4);
                edx = esi;
                edi = edi + Vffffffe0 * Vffffffe0;
                goto L00422d3b;
            case 6:
                esi = *(Ac + 8);
                ecx = L004228d0(A8, *(esi + 2), 4) + *(esi + 0xa);
                *(esi + 6)();
                *(Ac + 8) = *(Ac + 8) + 0xe;
                goto L00422fa8;
            case 7:
                goto L00422d9a;
            case 8:
                esi = *(Ac + 8);
                edi = L004228d0(A8, *(esi + 2), 4) + *(esi + 0xa);
                Vffffffe0 = *(esi + 6);
                eax = *(esi + 0xe);
                Vffffffe4 = eax;
                esi = *(esi + 0x12);
                ecx = esi;
                edi = edi + Vffffffe4 * Vffffffe4;
                goto L00422e1b;
            case 9:
                edi = *(Ac + 8);
                *(edi + 6)(L004228d0(A8, *(edi + 2), 4));
                *(Ac + 8) = *(Ac + 8) + 0xa;
                goto L00422fa8;
            case 0xa:
                goto L00422e4b;
            case 0xb:
                esi = *(Ac + 8);
                ecx = L004228d0(A8, *(esi + 2), 4) + *(esi + 0xa);
                *(esi + 6)();
                *(Ac + 8) = *(Ac + 8) + 0xe;
                goto L00422fa8;
            case 0xc:
                goto L00422fa3;
            case 0xd:
                goto L00422fa3;
            case 0xe:
                goto L00422fa3;
            case 0xf:
                goto L00422e80;
            case 0x10:
                goto L00422e99;
            case 0x11:
                goto L00422fa3;
            case 0x12:
                goto L00422f7d;
        }
L00422a05:
        esi = *(Ac + 8);
        edi = *(esi + 2);
        if((edi & -256) != -2147483648) {
            goto L00422a90;
        }
        edi = (edi & 0xff) - 1;
        if(edi > 6) {
            goto L00422a83;
        }
        goto ( *(edi * 4 + 0x474074));
        *(ebp - 0x2c) = A8;
        goto L00422ac0;
        *(ebp - 0x2c) = A8;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 4;
        goto L00422ac0;
        *(ebp - 0x2c) = A8;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 8;
        goto L00422ac0;
        *(ebp - 0x2c) = A8;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 0x24;
        goto L00422ac0;
        *(ebp - 0x2c) = A8;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 0x34;
        goto L00422ac0;
        *(ebp - 0x2c) = A8;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 0x44;
        goto L00422ac0;
        *(ebp - 0x2c) = A8;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 0x54;
        goto L00422ac0;
        L00457DB0();
        goto L00422ac0;
        if(edi & 1073741824 || edi & -2147483648) {
            goto L00422ab4;
        }
        *(ebp - 0x2c) = edi;
        *(ebp - 0x2c) = *(ebp - 0x2c) | -2147483648;
        *(ebp - 0x2c) = *(ebp - 0x2c) + *A8;
        goto L00422ac0;
        *(ebp - 0x2c) = *(A8 + 0xc);
        *(ebp - 0x2c) = *(ebp - 0x2c) + edi;
        edi = *(ebp - 0x2c);
        eax = esi;
        ecx = edi;
        *(eax + 6)();
        *(Ac + 8) = *(Ac + 8) + 0xa;
        goto L00422fa8;
L00422ad3:
        edi = *(Ac + 8);
        if(( *(edi + 2) & -256) != -2147483648) {
            goto L00422b57;
        }
        eax = (dl & 0xff) - 1;
        if(eax > 6) {
            goto L00422b50;
        }
        goto ( *(eax * 4 + 0x474058));
        Vffffffec = A8;
        goto L00422b8c;
        Vffffffec = A8;
        Vffffffec = Vffffffec + 4;
        goto L00422b8c;
        Vffffffec = A8;
        Vffffffec = Vffffffec + 8;
        goto L00422b8c;
        Vffffffec = A8;
        Vffffffec = Vffffffec + 0x24;
        goto L00422b8c;
        Vffffffec = A8;
        Vffffffec = Vffffffec + 0x34;
        goto L00422b8c;
        Vffffffec = A8;
        Vffffffec = Vffffffec + 0x44;
        goto L00422b8c;
        Vffffffec = A8;
        Vffffffec = Vffffffec + 0x54;
        goto L00422b8c;
        L00457DB0();
        goto L00422b8c;
        if(edx & 1073741824 || edx & -2147483648) {
            goto L00422b80;
        }
        Vffffffec = edx;
        Vffffffec = Vffffffec | -2147483648;
        Vffffffec = Vffffffec + *A8;
        goto L00422b8c;
        Vffffffec = *(A8 + 0xc);
        Vffffffec = Vffffffec + edx;
        esi = Vffffffec;
        if(L004228d0(A8, *(edi + 0xa), 1) == 0) {
            goto L00422bb0;
        }
        eax = edi;
        ecx = esi;
        *(eax + 6)();
        *(Ac + 8) = *(Ac + 8) + 0xe;
        goto L00422fa8;
L00422bde:
        esi = *(Ac + 8);
        edi = *(esi + 2);
        if((edi & -256) != -2147483648) {
            goto L00422c67;
        }
        edi = edi & 0xff;
        ecx = edi - 1;
        if(ecx > 6) {
            goto L00422c60;
        }
        goto ( *(ecx * 4 + 0x47403c));
        Vfffffff0 = A8;
        goto L00422c9c;
        Vfffffff0 = A8;
        Vfffffff0 = Vfffffff0 + 4;
        goto L00422c9c;
        Vfffffff0 = A8;
        Vfffffff0 = Vfffffff0 + 8;
        goto L00422c9c;
        Vfffffff0 = A8;
        Vfffffff0 = Vfffffff0 + 0x24;
        goto L00422c9c;
        Vfffffff0 = A8;
        Vfffffff0 = Vfffffff0 + 0x34;
        goto L00422c9c;
        Vfffffff0 = A8;
        Vfffffff0 = Vfffffff0 + 0x44;
        goto L00422c9c;
        Vfffffff0 = A8;
        Vfffffff0 = Vfffffff0 + 0x54;
        goto L00422c9c;
        L00457DB0();
        goto L00422c9c;
        if(edi & 1073741824 || edi & -2147483648) {
            goto L00422c90;
        }
        Vfffffff0 = edi;
        Vfffffff0 = Vfffffff0 | -2147483648;
        Vfffffff0 = Vfffffff0 + *A8;
        goto L00422c9c;
        Vfffffff0 = *(A8 + 0xc);
        Vfffffff0 = Vfffffff0 + edi;
        *(ebp - 0x24) = *(esi + 6);
        Vffffffe4 = *(esi + 0xa);
        esi = *(esi + 0xe);
        eax = esi;
        edi = Vfffffff0 + Vffffffe4 * Vffffffe4;
        goto L00422cc3;
        ecx = edi - esi;
        *(ebp - 0x24)();
        Vffffffe4 = Vffffffe4 - 1;
        if(Vffffffe4 > 0) {
            goto L00422cb8;
        }
        *(Ac + 8) = *(Ac + 8) + 0x12;
        goto L00422fa8;
        ecx = edi - esi;
        *(ebp - 0x24)();
        Vffffffe0 = Vffffffe0 - 1;
        if(Vffffffe0 > 0) {
            goto L00422d30;
        }
        *(Ac + 8) = *(Ac + 8) + 0x12;
        goto L00422fa8;
L00422d9a:
        esi = *(Ac + 8);
        if(L004228d0(A8, *(esi + 6), 2) == 0) {
            goto L00422dd0;
        }
        ecx = L004228d0(A8, *(esi + 2), 4) + *(esi + 0xe);
        *(esi + 0xa)();
        *(Ac + 8) = *(Ac + 8) + 0x12;
        goto L00422fa8;
        ecx = edi - esi;
        Vffffffe0();
        Vffffffe4 = Vffffffe4 - 1;
        if(Vffffffe4 > 0) {
            goto L00422e10;
        }
        *(Ac + 8) = *(Ac + 8) + 0x16;
        goto L00422fa8;
L00422e4b:
        esi = *(Ac + 8);
        if(L004228d0(A8, *(esi + 0xa), 1) == 0) {
            goto L00422e77;
        }
        *(esi + 6)(L004228d0(A8, *(esi + 2), 4));
        *(Ac + 8) = *(Ac + 8) + 0xe;
        goto L00422fa8;
L00422e80:
        eax = *(Ac + 8);
        if(A10 != eax) {
            goto L00422e90;
        }
        return;
        *(Ac + 8) = *(Ac + 8) + 0xe;
        goto L00422fa8;
L00422e99:
        if(( *( *(Ac + 8) + 2) & -256) != -2147483648) {
            goto L00422f20;
        }
        edx = (dl & 0xff) - 1;
        if(edx > 6) {
            goto L00422f12;
        }
        goto ( *(edx * 4 + 0x474020));
        Vffffffe8 = A8;
        goto L00422f50;
        Vffffffe8 = A8;
        Vffffffe8 = Vffffffe8 + 4;
        goto L00422f50;
        Vffffffe8 = A8;
        Vffffffe8 = Vffffffe8 + 8;
        goto L00422f50;
        Vffffffe8 = A8;
        Vffffffe8 = Vffffffe8 + 0x24;
        goto L00422f50;
        Vffffffe8 = A8;
        Vffffffe8 = Vffffffe8 + 0x34;
        goto L00422f50;
        Vffffffe8 = A8;
        Vffffffe8 = Vffffffe8 + 0x44;
        goto L00422f50;
        Vffffffe8 = A8;
        Vffffffe8 = Vffffffe8 + 0x54;
        goto L00422f50;
        L00457DB0();
        goto L00422f50;
        if(edx & 1073741824 || edx & -2147483648) {
            goto L00422f44;
        }
        Vffffffe8 = edx;
        Vffffffe8 = Vffffffe8 | -2147483648;
        Vffffffe8 = Vffffffe8 + *A8;
        goto L00422f50;
        Vffffffe8 = *(A8 + 0xc);
        Vffffffe8 = Vffffffe8 + edx;
        esi = Vffffffe8;
        if(*(esi + 8) == 0) {
            goto L00422f77;
        }
        eax = A8;
        ecx = *(eax + 0x18);
        if(ecx != *esi) {
            goto L00422f70;
        }
        esi = *(esi + 8);
        *(eax + 0x1c) = esi;
        goto L00422f77;
        eax = esi;
        ecx = *eax;
        *(eax + 8)();
        *(Ac + 8) = *(Ac + 8) + 6;
        goto L00422fa8;
L00422f7d:
        eax = *(Ac + 8);
        if(A10 != eax) {
            goto L00422f90;
        }
        esp = ebp - 0xc;
        return;
        *(Ac + 8) = *(Ac + 8) + ( *( *(Ac + 8) + 2) & 65535) * 4 + 0xc;
        goto L00422fa8;
    }
L00422fa3:
    L00457DB0();
    if(*(ebp - 0x28) & 65535 & 32768) {
        goto L004229bc;
    }
    *(Ac + 8) = 0;
    goto L004229bc;
}

/*	Procedure: 0x00423027 - 0x0042302F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423027()
{



}

/*	Procedure: 0x00423190 - 0x004234E4
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004234F0()
 */

L00423190(A8)
/* unknown */ void  A8;
{



    edx = ebp - 0x3c;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x50;
    (save)edx;
    L00422520( *(A8 + 0x10));
    (restore)ecx;
    if(*(ebp - 0x3c) == 0) {
        L00457DD0();
    }
    eax = A8;
    if(*(eax + 0x14) == 0) {
        *(ebp - 0x18) = 0;
        *(ebp - 0x14) = 0;
        *(ebp - 0x2c) = *(ebp - 0x3c);
        *(ebp - 0x28) = *(ebp - 0x38);
        *(ebp - 0x24) = *(ebp - 0x34);
        *(ebp - 0x20) = *(eax + 0xc);
        *(ebp - 0x1c) = *A8;
        *(ebp - 0x44) = L004226B0(ebp - 0x2c);
        edi = *(ebp - 0x44) & 65535;
        if(edi > 0x13) {
            goto L0042320d;
        }
        switch(edi) {
            case 0:
L00423214:
                *(ebp - 0x44) = L004226d0(ebp - 0x2c);
                goto L004231fd;
            case 1:
                goto L00423214;
            case 2:
                goto L00423214;
            case 3:
L0042320d:
                L00457DB0();
                goto L00423223;
            case 4:
                goto L00423214;
            case 5:
                goto L00423214;
            case 6:
                goto L00423214;
            case 7:
                goto L00423214;
            case 8:
                goto L00423214;
            case 9:
                goto L00423214;
            case 0xa:
                goto L00423214;
            case 0xb:
                goto L00423214;
            case 0xc:
                goto L00423214;
            case 0xd:
                goto L0042320d;
            case 0xe:
                goto L0042320d;
            case 0xf:
                goto L0042320d;
            case 0x10:
                goto L00423214;
            case 0x11:
                goto L00423223;
            case 0x12:
                goto L0042320d;
            case 0x13:
                goto L00423214;
        }
        goto L0042320d;
L00423223:
        eax = *( *(ebp - 0x24) + 2);
        *(ebp - 0x4c) = eax;
        if(eax & 1073741824 || eax & -2147483648) {
            goto L00423250;
        }
        *(ebp - 0x48) = eax;
        *(ebp - 0x48) = *(ebp - 0x48) | -2147483648;
        eax = *(ebp - 0x1c);
        goto L00423259;
        *(ebp - 0x48) = *(ebp - 0x20);
        *(ebp - 0x48) = *(ebp - 0x48) + *(ebp - 0x4c);
        eax = *(ebp - 0x48);
        *(ebp - 0x40) = eax;
        if(IsBadReadPtr( *(ebp - 0x40), 0x18) == 0) {
            goto L00423274;
        }
        L00457DB0();
        edx = *( *(ebp - 0x40) + 4);
        *(A8 + 0x14) = edx;
        ecx = *( *(ebp - 0x40));
        *(A8 + 0x18) = ecx;
        *(A8 + 0x1c) = 0;
        *(A8 + 0x20) = *(ebp - 0x40);
        goto L004232aa;
    }
    *(A8 + 0x20) = 0;
    eax = A8;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = 0;
    *(ebp - 0x2c) = *(ebp - 0x3c);
    *(ebp - 0x28) = *(ebp - 0x38);
    *(ebp - 0x24) = *(ebp - 0x34);
    *(ebp - 0x20) = *(eax + 0xc);
    ecx = *eax;
    *(ebp - 0x1c) = ecx;
    *(ebp - 0x44) = L004226B0(ebp - 0x2c);
    edi = *(ebp - 0x44) & 65535;
    if(edi > 0x13) {
        goto L0042333b;
    }
    goto ( *(edi * 4 + 0x47424c));
    L00457DE0( *(A8 + 0x14), *( *(ebp - 0x24) + 2), ebp - 0x54);
    if(al != 0) {
        goto L00423351;
    }
    goto L00423342;
    (save) *(ebp - 0x24);
    (restore)ecx;
    if(L00422fd0( *(A8 + 0x14)) != 0) {
        goto L00423342;
    }
    L00423030(A8, ebp - 0x3c, *(ebp - 0x24));
    goto L00423342;
    L00457DB0();
    goto L00423351;
    *(ebp - 0x44) = L004226d0(ebp - 0x2c);
    goto L004232e5;
    eax = *(ebp - 0x24);
    *(ebp - 0x50) = eax;
    L004229B0(A8, ebp - 0x3c, *(ebp - 0x50));
    ecx = *( *(ebp - 0x50) + 0xa);
    *(ebp - 0x58) = ecx;
    esi = *(ebp - 0x58);
    *(ebp - 0x30) = A8;
    if((esi & -256) != -2147483648) {
        goto L00423400;
    }
    *(ebp - 0x58) = *(ebp - 0x58) & 0xff;
    eax = *(ebp - 0x58) - 1;
    if(eax > 6) {
        goto L004233f5;
    }
    goto ( *(eax * 4 + 0x474230));
    *(ebp - 0x10) = *(ebp - 0x30);
    goto L0042343f;
    *(ebp - 0x10) = *(ebp - 0x30);
    *(ebp - 0x10) = *(ebp - 0x10) + 4;
    goto L0042343f;
    *(ebp - 0x10) = *(ebp - 0x30);
    *(ebp - 0x10) = *(ebp - 0x10) + 8;
    goto L0042343f;
    *(ebp - 0x10) = *(ebp - 0x30);
    *(ebp - 0x10) = *(ebp - 0x10) + 0x24;
    goto L0042343f;
    *(ebp - 0x10) = *(ebp - 0x30);
    *(ebp - 0x10) = *(ebp - 0x10) + 0x34;
    goto L0042343f;
    *(ebp - 0x10) = *(ebp - 0x30);
    *(ebp - 0x10) = *(ebp - 0x10) + 0x44;
    goto L0042343f;
    *(ebp - 0x10) = *(ebp - 0x30);
    *(ebp - 0x10) = *(ebp - 0x10) + 0x54;
    goto L0042343f;
    L00457DB0();
    goto L0042343f;
    if(*(ebp - 0x58) & 1073741824 || *(ebp - 0x58) & -2147483648) {
        goto L00423430;
    }
    *(ebp - 0x10) = *(ebp - 0x58);
    *(ebp - 0x10) = *(ebp - 0x10) | -2147483648;
    *(ebp - 0x10) = *(ebp - 0x10) + *( *(ebp - 0x30));
    goto L0042343f;
    *(ebp - 0x10) = *( *(ebp - 0x30) + 0xc);
    *(ebp - 0x10) = *(ebp - 0x10) + *(ebp - 0x58);
    *(ebp - 0x40) = *(ebp - 0x10);
    *( *(ebp - 0x40)) = *(A8 + 0x18);
    *( *(ebp - 0x40) + 4) = *(A8 + 0x14);
    *( *(ebp - 0x40) + 8) = *(A8 + 0x1c);
    if(*( *(A8 + 0x14)) != 0x2a) {
        goto L00423492;
    }
    esi = *(ebp - 0x40) + 0x10;
    *( *(ebp - 0x40) + 0xc) = esi;
    edx = *( *(A8 + 0x18)) + *(ebp - 0x54);
    *( *(ebp - 0x40) + 0x10) = edx;
    goto L004234a1;
    ecx = *(A8 + 0x18) + *(ebp - 0x54);
    *( *(ebp - 0x40) + 0xc) = ecx;
    ecx = *( *(ebp - 0x50) + 6);
    eax = A8;
    ebx = *eax;
    esi = *(eax + 4);
    edi = *(eax + 8);
    if(M00480364 & 33554432) {
        goto L004234ce;
    }
    asm("umov [eax+0x24],ah");
    asm("umov [eax+0x34],ch");
    asm("umov [eax+0x44],dh");
    asm("umov [eax+0x54],bh");
    asm("fstcw [ebp-0x5a]");
    asm("finit");
    asm("fldcw [ebp-0x5a]");
    goto ( *ecx);
    esp = *(eax + 0xc) - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x004234F0 - 0x0042354A
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401000()
 *		L00404990()
 *		L00408060()
 *		L00409390()
 *		L00409B60()
 *		L00409E60()
 *		L0040BCF0()
 *		L004102F0()
 *		L00411920()
 *		L00411DF0()
 *		L004125B0()
 *		L00412880()
 *		L00412B90()
 *		L00413D00()
 *		L00414CB0()
 *		L00415380()
 *		L00415A60()
 *		L00416F00()
 *		L00418850()
 *		L00419310()
 *		L00419C50()
 *		L00419D20()
 *		L0041C5A0()
 *		L0041D700()
 *		L0041FFD0()
 *		L004206D0()
 *		L00421520()
 *		L00423850()
 *		L0042462A()
 *		L00425050()
 *		L004258E0()
 *		L00429610()
 *		L0042A740()
 *		L0042AD50()
 *		L0042AF10()
 *		L0042B070()
 *		L0042B280()
 *		L0042B480()
 *		L0042B600()
 *		L0042B800()
 *		L0042BAE0()
 *		L0042BDB0()
 *		L0042CFC0()
 *		L0042F550()
 *		L0042F970()
 *		L0042FA00()
 *		L004300F0()
 *		L00430760()
 *		L00430D50()
 *		L00430F40()
 *		L00432350()
 *		L00432D40()
 *		L00433580()
 *		L00436960()
 *		L004389E0()
 *		L004395A0()
 *		L00439DE0()
 *		L0043A240()
 *		L0043A530()
 *		L0043AAA0()
 *		L0043ADB0()
 *		L0043AFA8()
 *		L0043B450()
 *		L0043BA80()
 *		L0043BC50()
 *		L0043C220()
 *		L00442340()
 *		L004425A0()
 *		L00442660()
 *		L00443810()
 *		L004445B8()
 *		L00444660()
 *		L00444708()
 *		L00444810()
 *		L0044489B()
 *		L00444BB0()
 *		L004455F0()
 *		L00445E20()
 *		L0044602B()
 *		L00448690()
 *		L00448EC0()
 *		L00449230()
 *		L004503AB()
 *		L00450800()
 *		L00450E10()
 *		L004523C0()
 *		L00454A20()
 *		L00456B0E()
 *		L00462060()
 *		L00462270()
 *		L0046279D()
 *		L00462C50()
 *		L00463250()
 *		L00463569()
 *		L00467280()
 */

L004234F0(A0, A4, A8, Ac, A10, A14, A18)
/* unknown */ void  A0;
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    (save)ebp;
    ebp = esp;
    esp = esp - M00000064;
    *esp = ebx;
    A0 = esi;
    A4 = edi;
    A8 = *ebp;
    Ac = *(ebp + 4);
    A10 = *(ebp + 8);
    A14 = *(ebp + 0xc);
    A18 = *(ebp + 0x10);
    if(!(M00480364 & 33554432)) {
        asm("umov [esp+0x24],esp");
        asm("umov [esp+0x34],ebp");
        asm("umov [esp+0x44],esi");
        asm("umov [esp+0x54],edi");
    }
    return L00423190(esp);
}

/*	Procedure: 0x0042354B - 0x00423562
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042354B()
{



    return L00457F80(0x4803a8, 1);
}

/*	Procedure: 0x00423563 - 0x0042356F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423563()
{



}

/*	Procedure: 0x00423570 - 0x00423640
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0046C789()
 */

L00423570(A8)
/* unknown */ void  A8;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x28;
    esi = L00457DC0(0x423550);
    ebx = L00457DA0(0x423550);
    if(L00457F60(0x4803a8) == 0) {
        (save)ebp - 0x18;
        L00422520(A8);
        (restore)ecx;
        if(*(ebp - 0x18) == 0) {
            goto L00423614;
        }
        eax = *(ebp - 0x18);
        edx = *(ebp - 0x14);
        ecx = *(ebp - 0x10);
        *(ebp - 0x34) = eax;
        *(ebp - 0x30) = edx;
        *(ebp - 0x2c) = ecx;
        *(ebp - 0x20) = 0;
        *(ebp - 0x1c) = 0;
        *(ebp - 0x28) = 0;
        *(ebp - 0x24) = 0;
        L004226B0(ebp - 0x34);
        edx = ax & 65535;
        if(edx > 0x13) {
            goto L00423614;
        }
        switch(edx) {
            case 0:
L00423608:
                L004226d0(ebp - 0x34);
                goto L004235f0;
            case 1:
                goto L00423608;
            case 2:
                goto L00423608;
            case 3:
                goto L00423614;
            case 4:
                goto L00423608;
            case 5:
                goto L00423608;
            case 6:
                goto L00423608;
            case 7:
                goto L00423608;
            case 8:
                goto L00423608;
            case 9:
                goto L00423608;
            case 0xa:
                goto L00423608;
            case 0xb:
                goto L00423608;
            case 0xc:
                goto L00423608;
            case 0xd:
                goto L00423614;
            case 0xe:
                goto L00423614;
            case 0xf:
                goto L00423614;
            case 0x10:
L004235ff:
                edi = 1;
                goto L00423616;
            case 0x11:
                goto L00423608;
            case 0x12:
                goto L00423614;
            case 0x13:
                goto L00423608;
        }
        goto L004235ff;
    }
L00423614:
    edi = 0;
    L00457DC0(esi);
    L00457DA0(ebx);
    eax = edi;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    ebp = esp;
    eax = L00457FE0(ebp);
    M00480364 = eax;
    return M00480364;
}

/*	Procedure: 0x0042366C - 0x0042366F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042366C()
{



}

/*	Procedure: 0x00423670 - 0x004236B2
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00423A50()
 */

L00423670(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)A8;
    L00434150(Ac, 0x28);
    *(Ac + 4) = A8 + 0x19;
    *(Ac + 8) = *(A8 + 0x18) & 0xff;
    *(Ac + 0xc) = *(A8 + 0xc) & 16777215;
    *(Ac + 0x14) = *(A8 + 0x10);
    *(Ac + 0x24) = *(A8 + 0x14) & 65535;
    esp = ebp - 8;
    (restore)A8;
}

/*	Procedure: 0x004236B3 - 0x004236BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004236B3()
{



}

/*	Procedure: 0x00423753 - 0x0042375F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423753()
{



}

/*	Procedure: 0x00423760 - 0x00423849
 *	Argument size: 8
 *	Local size: 44
 *	Save regs size: 12
 *	Called by:
 *		L00425870()
 */

L00423760(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    eax = Ac;
    ecx = *(eax + 0x10);
    if(ecx != 1 && ecx != 7) {
        return;
    }
    eax = Ac;
    ebx = *(eax + 0x14);
    esi = ebx < *(A8 + 0x10) ? *( *(A8 + 0xc) + ebx * 4) : 0;
    if(esi == 0) {
        esp = ebp - 0xc;
        return;
    }
    eax = *(esi + 0xc);
    if(!(eax & 262144)) {
        esp = ebp - 0xc;
        return;
    }
    if(!(eax & 524288)) {
        esp = ebp - 0xc;
        return;
    }
    edx = *(A8 + 0x50);
    if(!(edx & 2)) {
        (save)ebx;
        (save)A8;
        eax = L00425670();
        goto L004237f0;
    }
    if(!(edx & 4)) {
        L00425340(A8, ebx);
L004237f0:
    }
    if(*(A8 + 0x18) != 0) {
        L00434150(ebp - 0x38, 0x2c);
        *(ebp - 0x38) = *(A8 + 0x1c);
        *(ebp - 0x34) = A8;
        Vffffffd4 = *(esi + 4);
        Vffffffd8 = 1;
        Vffffffdc = ebx;
        Vffffffe0 = *(Ac + 0x18);
        Vffffffe4 = *(esi + 8);
        Vffffffec = ebx;
        edx = *(esi + 8);
        Vfffffff0 = edx;
        eax = *(A8 + 0x18)( *(A8 + 0x1c), ebp - 0x38);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042384A - 0x0042384F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042384A()
{



}

/*	Procedure: 0x00423850 - 0x00423974
 *	Argument size: 12
 *	Local size: 48
 *	Save regs size: 4
 *	Called by:
 *		L004258E0()
 *		L0043ADB0()
 *		L0043AFA8()
 *		L00444BB0()
 *		L00454600()
 */

L00423850(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;



    eax = L0042E3A0(0xa4);
    edx = eax;
    *(ebp - 0x34) = eax;
    *(edx + 0x18) = A8;
    eax = *(ebp - 0x34);
    *(eax + 0x1c) = Ac;
    *( *(ebp - 0x34) + 0x50) = A10;
    *( *(ebp - 0x34) + 0x5c) = -1;
    *( *(ebp - 0x34) + 0x6c) = -1;
    eax = !(A10 & 8) ? 0x12 : 0x10;
    *( *(ebp - 0x34) + 0x60) = al;
    Vfffffff8 = 0;
    Vfffffff4 = esp;
    Vffffffd0 = 0;
    Vffffffd4 = 0;
    Vffffffd8 = M00000064;
    Vffffffdc = M00000064;
    eax = L00454730( & Vffffffd0, 9);
    edx = *(ebp - 0x34);
    Vfffffff8 = eax;
    *(edx + 8) = eax;
    L00455760(Vfffffff8, 0x423650, *(ebp - 0x34));
    L00455790(Vfffffff8, 0x4236c0, *(ebp - 0x34));
    L004557C0(Vfffffff8, 0x423760, *(ebp - 0x34));
    *( *(ebp - 0x34) + 0x3c) = -1;
    goto L00423963;
    L004547B0( & Vfffffff8);
    L0042E3E0(ebp - 0x34);
    L004234F0(0, 0, 0);
    if(Vffffffe8 != 0) {
        ecx = Vffffffe0;
        Vffffffe8(-1);
    }
    esp = *(ebp - 0xc);
L00423963:
    *( *(ebp - 0x34)) = 1371375761;
    return *(ebp - 0x34);
}

/*	Procedure: 0x00423975 - 0x0042397F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423975()
{



}

/*	Procedure: 0x00423980 - 0x00423A40
 *	Argument size: 4
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0041A6A9()
 *		L0041BB90()
 *		L00423980()
 *		L00424F30()
 *		L004258E0()
 *		L00425C9F()
 *		L0043A869()
 *		L0043A8ED()
 *		L00442430()
 *		L00443B70()
 *		L00444BB0()
 *		L00454600()
 *		L004547B0()
 *		L00454BE0()
 *		L00455B1A()
 */

L00423980(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = A8;
    ebx = *eax;
    if(ebx == 0) {
        return;
    }
    if(*ebx != 1371375761) {
        eax = A8;
        *eax = 0;
        esp = ebp - 0xc;
        return;
    }
    *ebx = 0;
    L00423980(ebx + 0x68);
    L0041C860(ebx + 4);
    L004547B0(ebx + 8);
    L0042F150(ebx + 0x80);
    L0042E3E0(ebx + 0x54);
    *(ebp - 0x10) = *(ebx + 0xc);
    edi = *(ebx + 0x10);
    esi = 0;
    if(edi > 0) {
        ebx = 0;
        do {
            L0042E3E0( *(ebp - 0x10) + ebx);
            esi = esi + 1;
            ebx = ebx + 4;
        } while(esi < edi);
    }
    L0042E3E0(ebp - 0x10);
    esp = ebp - 0xc;
    return L0042E3E0(A8);
}

/*	Procedure: 0x00423A41 - 0x00423A4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423A41()
{



}

/*	Procedure: 0x00423A50 - 0x00423B39
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00423A50()
 *		L00423B40()
 */

L00423A50(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x34;
    ecx = *(A8 + 0x3c);
    if(ecx == -1) {
        *(ebp - 0x18) = *(A8 + 0xc);
        eax = *(A8 + 0x10);
        *(ebp - 0x14) = eax;
        edi = 0;
        esi = 0;
        *(ebp - 0x10) = 0;
        if(eax > 0) {
            do {
                L00423670( *( *(ebp - 0x18) + esi * 4), ebp - 0x40);
                edx = *(A8 + 0x50);
                *(ebp - 0x30) = edx;
                eax = L0044D1A0(ebp - 0x40);
                if(eax > edi) {
                    edi = eax;
                    *(ebp - 0x10) = esi;
                }
                esi = esi + 1;
            } while(esi < *(ebp - 0x14));
        }
        if(edi < 0x50) {
            edi = 0x50;
        }
        *(A8 + 0x3c) = edi;
        *(A8 + 0x40) = *(ebp - 0x10);
        esp = ebp - 0xc;
        return edi;
    }
    edx = *(A8 + 0x40);
    edi = edx < *(A8 + 0x10) ? *( *(A8 + 0xc) + edx * 4) : 0;
    if(edi != 0) {
        L00423670(edi, ebp - 0x40);
        edx = *(A8 + 0x50);
        *(ebp - 0x30) = edx;
        eax = L0044D1A0(ebp - 0x40);
        if(eax <= 0x50) {
            eax = 0x50;
        }
        ecx = *(A8 + 0x3c);
        if(eax != ecx) {
            *(A8 + 0x3c) = -1;
            eax = L00423A50(A8);
            esp = ebp - 0xc;
            return;
        }
    }
    esp = ebp - 0xc;
    return ecx;
}

/*	Procedure: 0x00423B3A - 0x00423B3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423B3A()
{



}

/*	Procedure: 0x00423B40 - 0x00423CA9
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00423CB0()
 *		L00424930()
 */

L00423B40(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    (save)esi;
    (save)edi;
    esp = esp - 0x28;
    *(ebp - 0x18) = *(A8 + 8);
    edi = Ac;
    *(ebp - 0x20) = L00423A50(A8);
    *(ebp - 0x14) = L00454930( *(ebp - 0x18));
    A14 = *(ebp - 0x20);
    *(ebp - 0x10) = A14;
    esi = *(ebp - 0x14);
    if(A14 <= 0) {
        *(ebp - 0x10) = M00000064;
    }
    if(esi < 0xa) {
        esi = 0xa;
    }
    if(*(ebp - 0x10) > 0x258) {
        *(ebp - 0x10) = 0x258;
    }
    edx = *(edi + 0xc) - *(edi + 4) - 0x10;
    cl = 0;
    if(esi > edx) {
        A14 = 0x2c0;
        esi = edx;
        ecx = *(A8 + 0x60) & 0xff;
        asm("cdq");
        ecx = ecx / ecx;
        edx = ecx % ecx;
        esi = esi & -16;
        edi = A14;
        edi = ecx * ecx;
        if(esi > edi) {
            esi = edi;
        }
        cl = 1;
        *(ebp - 0x10) = *(ebp - 0x10) + 0xf;
    }
    A14 = *(ebp - 0x10);
    *(ebp - 0x24) = A14;
    *(ebp - 0x2c) = *(ebp - 0x24);
    *(ebp - 0x34) = 0;
    *(ebp - 0x30) = 0;
    *(ebp - 0x1c) = esi;
    *(ebp - 0x28) = esi;
    if(cl != 0) {
        *(A8 + 0x9d) = 1;
        *(A8 + 0x9e) = 1;
        A14 = *(ebp - 0x2c);
        edi = *(ebp - 0x28);
        *(A8 + 0x70) = A14 - 0xf;
        *(A8 + 0x74) = -1;
        *(A8 + 0x78) = A14 + 1;
        *(A8 + 0x7c) = edi + 1;
        *(A8 + 0x84) = 0;
        *(A8 + 0x94) = *(ebp - 0x28) - *(ebp - 0x30);
        *(A8 + 0x88) = *(ebp - 0x14) - *(A8 + 0x94);
        *(A8 + 0x8c) = *(ebp - 0x20);
        *(A8 + 0x90) = *(ebp - 0x14);
        *(A8 + 0x9c) = 0;
        *(ebp - 0x2c) = *(ebp - 0x2c) - 0xf;
    } else {
        *(A8 + 0x9d) = 0;
    }
    L004548E0( *(ebp - 0x18), ebp - 0x34);
    L00455240( *(ebp - 0x18), 0, -1, 0);
    *A10 = *(ebp - 0x24);
    *A14 = *(ebp - 0x1c);
    *(A8 + 0x38) = *(ebp - 0x10);
    *(A8 + 0x3a) = si;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00423CAA - 0x00423CAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423CAA()
{



}

/*	Procedure: 0x00423CB0 - 0x00423D49
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0042462A()
 */

L00423CB0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    esp = esp - 0x2c;
    if(*(A8 + 0x61) == 0) {
        return;
    }
    *(A8 + 0x61) = 0;
    esi = *(A8 + 4);
    if(esi == 0) {
        esp = ebp - 8;
        return;
    }
    eax = ebp - 0x24;
    L0041CD90(esi, ebp - 0x34, eax, 0);
    ecx = ebp - 0x18;
    (save)ecx;
    L0041D830( *(ebp - 0x24), ebp - 0x34, 0);
    edx = ebp - 0x20;
    ecx = ebp - 0x1c;
    L00423B40(A8, ebp - 0x18, ecx, edx);
    edx = *(ebp - 0x34) + *(ebp - 0x1c);
    ecx = *(ebp - 0x30) + *(ebp - 0x20);
    *(ebp - 0x2c) = edx;
    *(ebp - 0x28) = ecx;
    eax = L0041CCB0(esi, ebp - 0x34, 134217728, 0);
    esp = ebp - 8;
}

/*	Procedure: 0x00423D4A - 0x00423D4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423D4A()
{



}

/*	Procedure: 0x00423D50 - 0x00423DFC
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00423DFD()
 */

L00423D50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    ebx = Ac;
    if(*(A8 + 0x9d) == 0) {
        return;
    }
    if(*(A8 + 0x9e) == 0) {
        ebx = 0;
    } else {
        eax = *(A8 + 0x88);
        if(ebx > eax) {
            ebx = eax;
        }
    }
    if(ebx == *(A8 + 0x84)) {
        esp = ebp - 8;
        return;
    }
    *(ebp - 0x18) = 0;
    eax = ~ebx;
    *(ebp - 0x14) = eax;
    *(ebp - 0x10) = *(A8 + 0x8c);
    eax :: 0;
    if(!( *(ebp - 0xc) = eax + *(A8 + 0x90))) {
        eax = ebp - 0x18;
        L0044BA60(eax, eax, 0, 0);
    }
    L004548E0( *(A8 + 8), ebp - 0x18);
    *(A8 + 0x84) = ebx;
    (save) *(A8 + 4);
    esp = ebp - 8;
    return L0041D2B0();
}

/*	Procedure: 0x00423DFD - 0x00423E3A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00423DFD(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    (save)ebx;
    ebx = *(A8 + 0x84);
    if(eax < 0) {
        eax = ~eax;
        edx = ebx - eax;
        if(edx > ebx) {
            edx = 0;
        }
    } else {
        edx = eax + ebx;
        if(edx < ebx) {
            edx = edx | -1;
        }
    }
    eax = L00423D50(A8, edx);
    esp = ebp - 4;
    (restore)ebx;
}

/*	Procedure: 0x00423E3B - 0x00423E3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00423E3B()
{



}

/*	Procedure: 0x00423E40 - 0x00423F4E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042462A()
 */

L00423E40(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  edi;



    esp = esp - 0x2c;
    edi = A10;
    if(*(A8 + 0x10) == 0) {
        L004496D0(Ac, 0x69);
        return L0044A090(Ac, 0, 0, 0x3e8, 0x3e8);
    }
    edx = *(A8 + 0x3a) & 65535;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = *(A8 + 0x38) & 65535;
    *(ebp - 0x10) = edx;
    if(*(A8 + 0x9d) != 0) {
        *(ebp - 0x14) = *(ebp - 0x14) - 0xf;
    }
    L0044CB50(Ac, ebp - 0x1c, 0);
    eax = L00455930( *(A8 + 8), Ac, edi, 0);
    if(*(A8 + 0x9d) != 0) {
        (save)edi;
        (restore)ecx;
        if(L0044B6A0(A8 + 0x70) != 0) {
            edi = ebp - 0x38;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            dl = *(A8 + 0x9e) != 0 ? 0 : 2;
            *(ebp - 0x38) = dl & 0xff;
            *(ebp - 0x34) = *(A8 + 0x9c) & 0xff;
            *(ebp - 0x30) = *(A8 + 0x84);
            *(ebp - 0x2c) = *(A8 + 0x88);
            *(ebp - 0x28) = *(A8 + 0x94);
            eax = *(A8 + 0x90);
            edx = ebp - 0x38;
            *(ebp - 0x24) = eax;
            eax = L004592B0(Ac, A8 + 0x70, edx);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00423F4F - 0x004243E4
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L00423F4F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    (save)esi;
    ebx = A8;
    edx = ( *(ebx + 0x9c) & 0xff) - 1;
    if(edx <= 5) {
        switch(edx) {
            case 0:
                goto L00423f74;
            case 1:
                goto L00423fb0;
            case 2:
                goto L00423f74;
            case 3:
                goto L00423fb0;
            case 4:
                *(esi + 0x9f) = 1;
                (save) ~( *(esi + 0x94));
                goto L00424009;
            case 5:
                *(esi + 0x9f) = 1;
                eax = L00423e00(ebx, *(esi + 0x94));
                goto L00424011;
        }
L00423f74:
        if(*(esi + 0x9f) != 0) {
            goto L00423f96;
        }
        *(esi + 0x9f) = 1;
        L0042F1C0( *(esi + 0x80), 0x23, 1);
        if(*(esi + 0xa0) == 0) {
            goto L00423fa7;
        }
        ecx = *(esi + 0x94);
        goto L00423fab;
        (save) ~( *(esi + 0x60) & 0xff);
        goto L00424009;
L00423fb0:
        if(*(esi + 0x9f) != 0) {
            goto L00423fd2;
        }
        *(esi + 0x9f) = 1;
        L0042F1C0( *(esi + 0x80), 0x23, 1);
        if(*(esi + 0xa0) == 0) {
            goto L00423fe3;
        }
        eax = *(esi + 0x94);
        goto L00423fe7;
        (save) *(esi + 0x60) & 0xff;
        goto L00424009;
    }
L00424011:
    esp = ebp - 8;
    (restore)esi;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    ecx = Ac - 0x84;
    esp = esp - 4;
    ebx = A8;
    if(ecx > 3) {
        goto L00424100;
    }
    goto ( *(ecx * 4 + 0x4743bc));
    eax = L004553D0( *(ebx + 8));
    ecx = ebp - 8;
    *(ebp - 8) = eax;
    (save)ecx;
    L00425240(ebx);
    (restore)ecx;
    if(al == 0) {
        goto L004240d1;
    }
    eax = L00454F60( *(ebx + 8), *(ebp - 8));
    esp = ebp - 4;
    return 1;
    *(ebp - 8) = L004553D0( *(ebx + 8));
    (save)ebp - 8;
    L004251D0(ebx);
    (restore)ecx;
    if(al == 0) {
        goto L004240a5;
    }
    eax = L00454F60( *(ebx + 8), *(ebp - 8));
    esp = ebp - 4;
    return 1;
    ecx = ebp - 8;
    *(ebp - 8) = -1;
    (save)ecx;
    L004251D0(ebx);
    (restore)ecx;
    if(al == 0) {
        goto L004240c9;
    }
    eax = L00454F60( *(ebx + 8), *(ebp - 8));
    esp = ebp - 4;
    return 1;
    edx = ebp - 8;
    *(ebp - 8) = -1;
    (save)edx;
    L00425240(ebx);
    (restore)ecx;
    if(al == 0) {
        goto L004240f5;
    }
    eax = L00454F60( *(ebx + 8), *(ebp - 8));
    esp = ebp - 4;
    return 1;
    esp = ebp - 4;
    return 0;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = A8;
    esp = esp - 0x28;
    esi = Ac;
    if(*(ebx + 0x9d) == 0) {
        goto L00424378;
    }
    *(ebp - 0x31) = 0;
    *(ebp - 0x2c) = 0;
    edi = *(esi + 0x10);
    cl = 0;
    if(edi >= *(ebx + 0x70)) {
        edx = *(esi + 0x14);
        if(edx >= *(ebx + 0x74)) {
        }
    }
    if(1 == 0 || edi >= *(ebx + 0x78)) {
        goto L00424157;
    }
    *(ebp - 0x2c) = 1;
    if(*(ebp - 0x2c) == 0) {
        goto L0042416b;
    }
    eax = *(esi + 0x14);
    if(eax >= *(ebx + 0x7c)) {
        goto L0042416b;
    }
    *(ebp - 0x31) = 1;
    if(*(ebp - 0x31) == 0) {
        goto L00424378;
    }
    if(*(ebx + 0x9e) != 0) {
        goto L00424186;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    edi = ebp - 0x28;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *(ebp - 0x20) = *(ebx + 0x84);
    *(ebp - 0x1c) = *(ebx + 0x88);
    *(ebp - 0x18) = *(ebx + 0x94);
    *(ebp - 0x14) = *(ebx + 0x90);
    edx = esi + 0x10;
    *(ebp - 0x2c) = ebx;
    *(ebp - 0x2c) = *(ebp - 0x2c) + 0x70;
    eax = L004590c0( *(ebp - 0x2c), ebp - 0x28, edx);
    if(eax != ( *(ebx + 0x9c) & 0xff)) {
        goto L004241e3;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    *(ebx + 0x9c) = al;
    eax = eax - 1;
    if(eax > 6) {
        goto L00424363;
    }
    goto ( *(eax * 4 + 0x4743d0));
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00424230;
    }
    *(ebx + 0x9c) = 1;
    goto L00424266;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00424230;
    }
    *(ebx + 0x9c) = 2;
    goto L004242e0;
    *(ebx + 0x9c) = 7;
    edx = esi + 0x10;
    eax = ebp - 0x28;
    *(ebx + 0x98) = L00458EE0( *(ebp - 0x2c), eax, edx, ebp - 0x30);
    L00423D50(ebx, *(ebp - 0x30));
    (save)0x12;
    goto L0042435d;
    *(ebx + 0x9f) = 0;
    *(ebx + 0xa0) = 0;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00424295;
    }
    *(ebx + 0xa0) = 1;
    esi = ~( *(ebx + 0x94));
    (save)esi;
    goto L0042429c;
    (save) ~( *(ebx + 0x60) & 0xff);
    L00423e00(ebx);
    edi = *(ebx + 0x80);
    (restore)ecx;
    if(edi == 0) {
        goto L004242c0;
    }
    L0042F1C0(edi, 0xc8, 1);
    goto L004242db;
    *(ebx + 0x80) = L0042F0B0(0x423f50, ebx, 0xc8, 1);
    (save)0x13;
    goto L0042435d;
    *(ebx + 0x9f) = 0;
    *(ebx + 0xa0) = 0;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00424310;
    }
    *(ebx + 0xa0) = 1;
    (save) *(ebx + 0x94);
    goto L00424315;
    (save) *(ebx + 0x60) & 0xff;
    L00423e00(ebx);
    esi = *(ebx + 0x80);
    (restore)ecx;
    if(esi == 0) {
        goto L00424340;
    }
    L0042F1C0(esi, 0xc8, 1);
    goto L0042435b;
    *(ebx + 0x80) = L0042F0B0(0x423f50, ebx, 0xc8, 1);
    L0044e610(0x14);
    eax = L0041D2F0( *(ebx + 4), *(ebp - 0x2c));
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    L00455e30( *(ebx + 8), esi);
    eax = L004553D0( *(ebx + 8));
    edi = eax;
    if(edi >= *(ebx + 0x10)) {
        goto L004243a0;
    }
    edx = *( *(ebx + 0xc) + edi * 4);
    goto L004243a2;
    edx = 0;
    if(0 != 0) {
        goto L004243b0;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    if(( *L0000000C & 786432) != 524288) {
        goto L004243dd;
    }
    if(*(ebx + 0x6c) != eax) {
        goto L004243d0;
    }
    (save)0;
    (save)-1;
    goto L004243d4;
    eax = L00424c00(ebx, edi, *(esi + 0xc));
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0042462A - 0x0042471C
 *	Argument size: 4
 *	Local size: 164
 *	Save regs size: 12
 */

L0042462A(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    L00423CB0(A8);
    eax = *(A8 + 4);
    Vffffffd8 = eax;
    eax = L0041D3C0(eax, ebp + -172, 8, 0, 0);
    esi = 0;
    Vffffffd4 = eax;
    if(eax > 0) {
        ebx = ebp + -172;
        do {
            *(ebp + -176) = L00449230( *(ebx + 8) - *ebx, *(ebx + 0xc) - *(ebx + 4), 0);
            Vfffffff0 = esp;
            L00449440( *(ebp + -176), ~( *ebx), ~( *(ebx + 4)));
            L00423E40(A8, *(ebp + -176), ebx);
L004246f3:
            eax = L0041D700(Vffffffd8, ebx, ebp + -176);
            esi = esi + 1;
            ebx = ebx + 0x10;
        } while(esi < Vffffffd4);
        goto L00424715;
        L004492F0(ebp + -176);
        L004234F0(0, 0, 0);
        if(Vffffffe4 != 0) {
            (save)-1;
            ecx = Vffffffdc;
            Vffffffe4();
        }
        esp = *(ebp - 0x10);
        goto L004246f3;
    }
L00424715:
}

/*	Procedure: 0x0042471D - 0x0042476C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0042471D(A8)
/* unknown */ void  A8;
{



    esp = esp - 0x2c;
    if(*(A8 + 0x18) != 0) {
        L00434150(ebp - 0x30, 0x2c);
        *(ebp - 0x30) = *(A8 + 0x1c);
        *(ebp - 0x2c) = A8;
        *(ebp - 0x20) = 0xa;
        *(ebp - 0x1c) = -1;
        *(ebp - 0xc) = -1;
        eax = *(A8 + 0x18)( *(A8 + 0x1c), ebp - 0x30);
    }
}

/*	Procedure: 0x0042476D - 0x00424922
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042476D()
{
	/* unknown */ void  Vffffffa8;



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x2c;
    edx = *( *(ebp + 0xc) + 8) - 5;
    edi = *(ebp + 8);
    if(edx > 2) {
        goto L00424806;
    }
    switch(edx) {
        case 0:
            goto L00424791;
        case 1:
L00424806:
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            (restore)ebp;
            return;
        case 2:
            eax = L00424020(edi, *(ebx + 0x14) & 65535);
            goto L00424806;
    }
L00424791:
    (save) *(ebx + 0x14) & 65535;
    L00424020(edi);
    (restore)ecx;
    if(al != 0) {
        goto L00424806;
    }
    if(( *(ebx + 0x14) & 65535) != 0x90) {
        goto L004247b6;
    }
    (save)edi;
    L00424720();
    goto L00424806;
    (save)ebx;
    esi = L004254e0(edi);
    (restore)ecx;
    if(esi != -1) {
        goto L004247d2;
    }
    (save)ebx;
    L00456670( *(edi + 8));
    goto L00424806;
    ebx = ebp - 0x38;
    L00434150(ebx, 0x2c);
    *(ebp - 0x28) = 1;
    *(ebp - 0x24) = esi;
    *(ebp - 0x14) = esi;
    (save)ebp - 0x38;
    L00423760(edi);
    goto L00424806;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 0xc);
    edx = *(ebx + 8) - 9;
    esi = *(ebp + 8);
    if(edx > 4) {
        goto L00424869;
    }
    goto ( *(edx * 4 + 0x474458));
    (save)ebx;
    (save)esi;
    L00424110();
    goto L00424867;
    (save)ebx;
    (save)esi;
    L004243f0();
    goto L00424867;
    (save)ebx;
    (save)esi;
    L00424510();
    goto L00424867;
    L00456AE0( *(esi + 8));
    if(al == 0) {
        goto L00424869;
    }
    (save)ebx;
    (save) *(esi + 8);
    L00456600();
    goto L00424867;
    eax = L00424510(esi, ebx);
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 0xc);
    edx = *(ebx + 8) - 0x10;
    esi = *(ebp + 8);
    if(edx > 4) {
        goto L00424901;
    }
    goto ( *(edx * 4 + 0x474470));
    L004568C0( *(esi + 8), ebx);
    (save)al & 0xff;
    L0041f940( *(esi + 4));
    goto L00424900;
    L00456900( *(esi + 8), ebx);
    (save)al & 0xff;
    L0041f940( *(esi + 4));
    goto L00424900;
    L004569F0( *(esi + 8), ebx);
    (save)0;
    L0041f940( *(esi + 4));
    goto L00424900;
    (save)ebx;
    L00456A30( *(esi + 8));
    (restore)ecx;
    if(al == 0) {
        goto L004248f2;
    }
    (save) *(ebx + 0x1c);
    L00451090();
    goto L00424900;
    eax = L004510c0( *(ebx + 0x1c));
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
    eax = Vffffffa8;
    if(eax == 0) {
        goto L00424920;
    }
    eax = *(eax + 4);
    return 0;
    return 0;
}

/*	Procedure: 0x00424930 - 0x00424B6F
 *	Argument size: 87
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444BB0()
 *		L00454600()
 */

L00424930(A8, Ac, A10, A14, A1c, A20, A24, A28, A2c, A30, A34, A40, A44, A48, A4c, A50, A54, A58, A59, A5a, A5b)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A40;
/* unknown */ void  A44;
/* unknown */ void  A48;
/* unknown */ void  A4c;
/* unknown */ void  A50;
/* unknown */ void  A54;
/* unknown */ void  A58;
/* unknown */ void  A59;
/* unknown */ void  A5a;
/* unknown */ void  A5b;
{
	/* unknown */ void  V0;
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffffc;



    esp = esp - M00000064;
    esp = esp & -8;
    esi = Ac;
    ebx = A10;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    if(esi == 0) {
        L00434150( & Vfffffffc, 0x20);
        L0042F740( & Ac);
        *esp = L0042EF00();
        V0 = edx;
        esi = esp;
    }
    if(ebx == 0) {
        ebx = *(esi + 0x14);
        edx = *(esi + 0x10);
        A44 = edx;
        A48 = ebx;
        A4c = A44;
        A50 = ebx;
        ebx = & A44;
    }
    L00424B70(A8);
    eax = A8;
    edi = *(eax + 0x30);
    if(edi != 0) {
        *edi( *(eax + 0x34), eax, *(esi + 0xc), 1);
    }
    (save) & A34;
    L0041D830( *(esi + 0x19) & 0xff, ebx, 0);
    L00423B40(A8, & A34, & A1c, & A54);
    L0044FB80(41943040, & A58, & A59, & A5a, & A5b);
    ecx = (A58 & 0xff) + A1c + (A5a & 0xff);
    A30 = A59 & 0xff;
    A30 = A30 + A54;
    eax = A14 - 1;
    A30 = A30 + (A5b & 0xff);
    if(eax <= 8) {
        switch(eax) {
            case 0:
L00424a59:
                edx = *ebx - ecx;
                edi = *(ebx + 4);
                goto L00424ad8;
            case 1:
                edx = *ebx;
                edi = *(ebx + 0xc);
                edx = edx - ecx;
                edi = edi - A40;
                goto L00424ad8;
            case 2:
                edi = *(ebx + 4) - A40;
                edx = *ebx;
                goto L00424ad8;
            case 3:
                edx = *(ebx + 8);
                edi = *(ebx + 4);
                edx = edx - ecx;
                edi = edi - A40;
                goto L00424ad8;
            case 4:
                edx = *(ebx + 8);
                edi = *(ebx + 4);
                goto L00424ad8;
            case 5:
                edi = *(ebx + 0xc) - A40;
                edx = *(ebx + 8);
                goto L00424ad8;
            case 6:
                goto L00424ad3;
            case 7:
                edx = *(ebx + 8) - ecx;
                goto L00424ad5;
            case 8:
                edx = A44 + A4c - ecx;
                edx :: -2147483648;
                asm("sbb edx,-0x1");
                edi = A48 + A50 - A40;
                edx = edx >> 1;
                edi :: -2147483648;
                asm("sbb edi,-0x1");
                edi = edi >> 1;
                goto L00424ad8;
        }
        goto L00424a59;
    }
L00424ad3:
    edx = *ebx;
    edi = *(ebx + 0xc);
    edx = edx + (A58 & 0xff);
    edi = edi + (A59 & 0xff);
    A20 = edx;
    A28 = edx + A1c;
    A2c = edi + A54;
    A24 = edi;
    L0041C5A0(A8, & A20, 176160912, *(esi + 0x19) & 0xff, 0);
    ebx = eax;
    *(A8 + 4) = ebx;
    L0041B560(ebx, 0x480408);
    *(A8 + 0x61) = 0;
    ecx = *esi;
    *(A8 + 0x4c) = ecx;
    edx = *(esi + 0x10);
    *(A8 + 0x44) = edx;
    ecx = *(esi + 0x14);
    *(A8 + 0x48) = ecx;
    L0041d760(ebx, esi);
    L0044E600(0x30);
}

/*	Procedure: 0x00424B70 - 0x00424D3F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00424930()
 *		L0043B410()
 */

L00424B70(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x18;
    if(A8 == 0) {
        goto L00424b87;
    }
    if(*esi == 1371375761) {
        goto L00424b92;
    }
    L00429610(65561);
    *(esi + 0x6c) = -1;
    L00423980(esi + 0x68);
    bl = 0;
    L0041C860(esi + 4);
    L0042F150(esi + 0x80);
    *(esi + 0x61) = 0;
    if(bl == 0 || *(esi + 0x30) == 0) {
        goto L00424bf3;
    }
    *(ebp - 0xc) = esp;
    *ebx( *(esi + 0x34), esi, 0, 0);
    goto L00424bf3;
    if(*(ebp - 0x18) == 0) {
        goto L00424bf0;
    }
    ecx = *(ebp - 0x20);
    *(ebp - 0x18)(-1);
    esp = *(ebp - 0xc);
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x4c;
    if(Ac < *(A8 + 0x10)) {
        goto L00424c17;
    }
    ebx = ebx | -1;
    if(*(esi + 0x6c) != ebx) {
        goto L00424c26;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return;
    if(edi == -1) {
        goto L00424c47;
    }
    *(esi + 0x6c) = -1;
    L00423980(esi + 0x68);
    L00455510( *(esi + 8), edi);
    if(ebx == -1 || *(esi + 0x28) == 0) {
        goto L00424d36;
    }
    L0041CD90( *(esi + 4), ebp - 0x1c, 0, 0);
    L00455640( *(esi + 8), ebx, ebp - 0x58);
    ecx = *(ebp - 0x18);
    *(ebp - 0x54) = *(ebp - 0x54) + ecx;
    *(ebp - 0x4c) = *(ebp - 0x4c) + ecx;
    edx = *(ebp - 0x1c);
    eax = ebp - 0x48;
    *(ebp - 0x50) = *(ebp - 0x50) - 5;
    *(ebp - 0x58) = *(ebp - 0x58) + edi;
    *(ebp - 0x50) = *(ebp - 0x50) + edx;
    (save)eax;
    L0041D830(0, ebp - 0x1c, 0);
    edi = 5;
    if(*(ebp - 0x40) - *(ebp - 0x14) >= 0x96) {
        goto L00424cc1;
    }
    edi = 1;
    L00423850( *(esi + 0x18), *(esi + 0x1c), 0);
    *(ebp - 0x20) = eax;
    *(ebp - 0x24) = esp;
    *(esi + 0x28)( *(esi + 0x2c), esi, ebx, eax, A10);
    L00424930( *(ebp - 0x20), 0, ebp - 0x58, edi);
    goto L00424d23;
    L00423980(ebp - 0x20);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x30) == 0) {
        goto L00424d20;
    }
    (save)-1;
    ecx = *(ebp - 0x38);
    *(ebp - 0x30)();
    esp = *(ebp - 0x24);
    L00423980(esi + 0x68);
    *(esi + 0x68) = *(ebp - 0x20);
    *(esi + 0x6c) = ebx;
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00424D40 - 0x00424D7F
 *	Argument size: 4
 *	Local size: 24
 *	Save regs size: 4
 *	Called by:
 *		L00424F30()
 *		L004255B0()
 *		L00425670()
 */

L00424D40(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff8;



    if(*(A8 + 0x20) == 0) {
        goto L00424d73;
    }
    Vfffffff8 = esp;
    *ebx( *(ecx + 0x24));
    goto L00424d73;
    if(Vffffffec == 0) {
        goto L00424d70;
    }
    ecx = *(ebp - 0x1c);
    Vffffffec(-1);
    esp = *(ebp - 8);
}

/*	Procedure: 0x00424D80 - 0x00424EB2
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00424EC0()
 *		L00424EF0()
 */

L00424D80(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x1c;
    ebx = A18;
    if(A8 == 0) {
        goto L00424d9b;
    }
    if(*A8 == 1371375761) {
        goto L00424da6;
    }
    L00429610(65561);
    if(ebx <= 0xff) {
        goto L00424db3;
    }
    ebx = 0xff;
    *(ebp - 0x28) = 0;
    esi = esi | -1;
    *(ebp - 0x10) = esp;
    eax = L0042E3A0(0x119);
    edx = eax;
    *(ebp - 0x28) = eax;
    *(edx + 4) = A10;
    eax = *(ebp - 0x28);
    *(eax + 8) = A20;
    ecx = *(ebp - 0x28);
    *(ecx + 0x14) = A24;
    ecx = *(ebp - 0x28);
    *(ecx + 0xc) = A1c & 16777215;
    L004342A0( *(ebp - 0x28) + 0x19, A14, ebx);
    *( *(ebp - 0x28) + 0x18) = bl;
    esi = L00429A90(A8 + 0xc, Ac, *(ebp - 0x28));
    *(A8 + 0x3c) = -1;
    *(A8 + 0x61) = 1;
    L00454A20( *(A8 + 8), esi, 0, 1, *(A8 + 0x60) & 0xff);
    goto L00424e83;
    ecx = A8 + 0xc;
    ebx = esi;
    L00429C40(ecx, ebx);
    L0042E3E0(ebp - 0x28);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) == 0) {
        goto L00424e80;
    }
    ecx = *(ebp - 0x24);
    *(ebp - 0x1c)(-1);
    esp = *(ebp - 0x10);
    eax = *(A8 + 0x5c);
    if(eax == -1 || eax < Ac) {
        goto L00424e96;
    }
    *(A8 + 0x5c) = eax + 1;
    esi = *(A8 + 0x6c);
    if(esi == -1 || esi < Ac) {
        goto L00424ea9;
    }
    *(A8 + 0x6c) = esi + 1;
    esp = ebp - 0xc;
    return ebx;
}

/*	Procedure: 0x00424EC0 - 0x00424EE5
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00462C50()
 *		L00463250()
 */

L00424EC0(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    return L00424D80(A8, -1, Ac, A10, A14, A18, A1c, A20);
}

/*	Procedure: 0x00424EE6 - 0x00424EEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00424EE6()
{



}

/*	Procedure: 0x00424EF0 - 0x00424F23
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004010FA()
 *		L0043AFA8()
 *		L00444BB0()
 *		L00454600()
 *		L00463250()
 *		L004633F0()
 */

L00424EF0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    ecx = A10 != 0 ? *A10 & 0xff : 0;
    return L00424D80(A8, -1, Ac, A10 + 1, ecx, A14, A18, A1c);
}

/*	Procedure: 0x00424F24 - 0x00424F2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00424F24()
{



}

/*	Procedure: 0x00424F30 - 0x00424FEB
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00463250()
 *		L004633F0()
 */

L00424F30(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 == 0) {
        return;
    }
    if(*A8 != 1371375761) {
        esp = ebp - 0xc;
        return;
    }
    eax = *(A8 + 0x10);
    *(ebp - 0x10) = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        return;
    }
    edi = *(A8 + 0xc);
    if(!(esi = *(ebp - 0x10) - 1)) {
        do {
            ecx = edi;
            edi = edi + 4;
            L0042E3E0(ecx);
        } while(esi = esi - 1);
    }
    L00429D80(A8 + 0xc);
    *(A8 + 0x3c) = -1;
    *(A8 + 0x61) = 1;
    L00454BE0( *(A8 + 8), 0, *(ebp - 0x10));
    *(A8 + 0x6c) = -1;
    eax = L00423980(A8 + 0x68);
    if(*(A8 + 0x5c) != -1) {
        *(A8 + 0x5c) = -1;
        if(!( *(A8 + 0x50) & 2)) {
            eax = L00424D40(A8);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00424FEC - 0x00424FEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00424FEC()
{



}

/*	Procedure: 0x00424FF0 - 0x00425016
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00424FF0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    return *(A8 + 0x10);
}

/*	Procedure: 0x00425017 - 0x0042501F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425017()
{



}

/*	Procedure: 0x00425020 - 0x0042504E
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425020()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != 1371375761) {
        L00429610(65561);
    }
    eax = *(ebx + 0x10);
    ecx = *(ebp + 0xc);
    esp = ebp - 4;
    ecx :: eax;
    (restore)ebx;
    (restore)ebp;
    asm("setc al");
}

/*	Procedure: 0x0042504F - 0x0042504F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042504F()
{



}

/*	Procedure: 0x00425050 - 0x00425132
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00425140()
 */

L00425050(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x1c;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    *(ebp - 0x10) = 0;
    edi = edi | -1;
    *(ebp - 0x14) = esp;
    eax = L0042E3A0(0x1a);
    edx = eax;
    *(ebp - 0x10) = eax;
    *(edx + 0xc) = 327680;
    edi = L00429A90(A8 + 0xc, Ac, *(ebp - 0x10));
    *(A8 + 0x3c) = -1;
    *(A8 + 0x61) = 1;
    esi = edi;
    L00454A20( *(A8 + 8), esi, 0, 1, *(A8 + 0x60) & 0xff);
    goto L00425103;
    ecx = A8 + 0xc;
    esi = edi;
    L00429C40(ecx, esi);
    L0042E3E0(ebp - 0x10);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x20) != 0) {
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)(-1);
    }
    esp = *(ebp - 0x14);
L00425103:
    eax = *(A8 + 0x5c);
    if(eax != -1 && eax >= Ac) {
        *(A8 + 0x5c) = eax + 1;
    }
    edi = *(A8 + 0x6c);
    if(edi != -1 && edi >= Ac) {
        *(A8 + 0x6c) = edi + 1;
    }
    esp = ebp - 0xc;
    return esi;
}

/*	Procedure: 0x00425133 - 0x0042513F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425133()
{



}

/*	Procedure: 0x00425140 - 0x00425152
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004010FA()
 *		L00444BB0()
 *		L00454600()
 */

L00425140(A8)
/* unknown */ void  A8;
{



    return L00425050(A8, -1);
}

/*	Procedure: 0x00425153 - 0x0042515F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425153()
{



}

/*	Procedure: 0x00425160 - 0x004251C6
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00425600()
 */

L00425160(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    eax = ebx < *(A8 + 0x10) ? *( *(A8 + 0xc) + ebx * 4) : 0;
    if(eax == 0) {
        return 0;
    }
    ebx = *(eax + 0x18) & 0xff;
    if(ebx > A14) {
        ebx = A14;
    }
    L004342A0(A10, eax + 0x19, ebx);
    esp = ebp - 0xc;
    return ebx;
}

/*	Procedure: 0x004251C7 - 0x004251CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004251C7()
{



}

/*	Procedure: 0x004251D0 - 0x00425232
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L004251D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esi = A8;
    (save)edi;
    if(esi == 0 || *esi != 1371375761) {
        L00429610(65561);
    }
    eax = *Ac;
    ecx = *(esi + 0xc);
    edi = *(esi + 0x10);
    esi = eax;
    if(eax == -1) {
        esi = 0;
        goto L00425223;
L00425206:
        if(!( *( *(ecx + esi * 4) + 0xc) & 262144)) {
            *Ac = esi;
            esp = ebp - 0xc;
            (restore)edi;
            return 1;
        }
    }
    esi = esi + 1;
L00425223:
    if(esi < edi) {
        goto L00425206;
    }
    *Ac = esi;
    esp = ebp - 0xc;
    (restore)edi;
    return 0;
}

/*	Procedure: 0x00425233 - 0x0042523F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425233()
{



}

/*	Procedure: 0x00425240 - 0x0042529F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00425240(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)edi;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    eax = *(A8 + 0x10);
    edx = *Ac;
    edi = *(A8 + 0xc);
    if(edx > eax) {
        edx = eax;
        goto L00425290;
L00425282:
        *Ac = edx;
        esp = ebp - 0xc;
        (restore)edi;
        return 1;
    }
L00425290:
    do {
        if(edx == 0) {
            goto L00425294;
        }
        edx = edx - 1;
    } while(*( *(edi + edx * 4) + 0xc) & 262144);
    goto L00425282;
L00425294:
    *Ac = edx;
    esp = ebp - 0xc;
    (restore)edi;
    return 0;
}

/*	Procedure: 0x004252A0 - 0x0042533D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00425670()
 */

L004252A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 4;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    if(Ac >= *(A8 + 0x10)) {
        L00429610(65548);
    }
    eax = *(A8 + 0x10);
    esi = *(A8 + 0xc);
    *(ebp - 0x10) = eax;
    al = 0;
    ebx = 0;
    if(*(ebp - 0x10) > 0) {
        do {
            ecx = *(esi + ebx * 4);
            edx = *(ecx + 0xc);
            if(ebx != Ac) {
                if(edx & 131072) {
                    goto L0042532e;
                }
                *(ecx + 0xc) = edx & -131073;
            } else {
                if(edx & 131072) {
                    goto L0042532e;
                }
                *(ecx + 0xc) = edx | 131072;
            }
            eax = L00455510( *(A8 + 8), ebx);
            al = 1;
L0042532e:
            ebx = ebx + 1;
        } while(ebx < *(ebp - 0x10));
    }
}

/*	Procedure: 0x0042533E - 0x0042533F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042533E()
{



}

/*	Procedure: 0x00425340 - 0x004253C0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00423760()
 */

L00425340(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    (save)edi;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    if(Ac < *(A8 + 0x10)) {
        ecx = *(A8 + 0xc);
        edi = *(ecx + Ac * 4);
    } else {
        edi = 0;
    }
    if(edi == 0) {
        L00429610(65548);
    }
    edx = *(edi + 0xc);
    eax = edx;
    if(!(edx & 131072)) {
        eax = eax & -131073;
        bl = 0;
    } else {
        eax = eax | 131072;
        bl = 1;
    }
    *(edi + 0xc) = eax;
    (save)Ac;
    eax = L00455510( *(A8 + 8));
    al = bl;
    (restore)ecx;
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x004253C1 - 0x004253CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004253C1()
{



}

/*	Procedure: 0x004253D0 - 0x0042543A
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00425670()
 */

L004253D0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 4;
    if(ebx == 0 || *ebx != 1371375761) {
        L00429610(65561);
    }
    eax = *(ebx + 8);
    *(ebp - 0x10) = eax;
    esi = *(ebx + 0x10);
    edi = *(ebx + 0xc);
    al = 0;
    ebx = 0;
    if(esi > 0) {
        do {
            ecx = *(edi + ebx * 4);
            edx = *(ecx + 0xc);
            if(!(edx & 131072)) {
                *(ecx + 0xc) = edx & -131073;
                eax = L00455510( *(ebp - 0x10), ebx);
                al = 1;
            }
            ebx = ebx + 1;
        } while(ebx < esi);
    }
}

/*	Procedure: 0x0042543B - 0x0042543F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042543B()
{



}

/*	Procedure: 0x00425440 - 0x0042548C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00454600()
 */

L00425440(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    esi = A8;
    if(esi == 0 || *esi != 1371375761) {
        L00429610(65561);
    }
    esi = Ac < *(esi + 0x10) ? *( *(esi + 0xc) + Ac * 4) : 0;
    if(esi == 0) {
        L00429610(65548);
    }
    *esi = A10;
    return *esi;
}

/*	Procedure: 0x0042548D - 0x004254D8
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L0042548D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    edx = Ac < *(A8 + 0x10) ? *( *(A8 + 0xc) + Ac * 4) : 0;
    if(edx == 0) {
        return 0;
    }
    eax = *edx;
    esp = ebp - 8;
}

/*	Procedure: 0x004254D9 - 0x004255A2
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L004254D9(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 0x10;
    esi = Ac;
    if(ebx == 0 || *ebx != 1371375761) {
        L00429610(65561);
    }
    *(ebp - 0x1c) = *(esi + 0x14) & 65535;
    eax = L0041FE30( *(ebp - 0x1c) & 65535, 0);
    *(ebp - 0x18) = *(esi + 0xc);
    ecx = *(ebx + 0x10);
    esi = *(ebx + 0xc);
    ebx = 0;
    *(ebp - 0x10) = ecx;
    if(ecx > 0) {
        *(ebp - 0x14) = eax;
        do {
            eax = *(esi + ebx * 4);
            edx = *(eax + 0x14) & 65535;
            if(dx != 0) {
                ecx = *(eax + 0xc) & 65535;
                edi = ecx;
                ecx = ecx & -16385;
                eax = ecx & *(ebp - 0x18);
                edi = edi & 16384;
                if(ecx == eax) {
                    if(edi == 0) {
                        eax = L00428810(dx & 65535);
                        if(*(ebp - 0x14) != eax) {
                            goto L00425590;
                        } else {
                            goto L0042557f;
                        }
                    }
                    if((dx & 65535) == *(ebp - 0x1c)) {
                        goto L00425566;
                    }
                }
            }
L00425590:
            ebx = ebx + 1;
        } while(ebx < *(ebp - 0x10));
        goto L00425598;
L00425566:
        esp = ebp - 0xc;
        return ebx;
L0042557f:
        esp = ebp - 0xc;
        return ebx;
        goto L00425590;
    }
L00425598:
    esp = ebp - 0xc;
    return eax | -1;
}

/*	Procedure: 0x004255A3 - 0x004255AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004255A3()
{



}

/*	Procedure: 0x004255B0 - 0x004255F8
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L004255B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    ecx = A8 + 0x54;
    esi = L00429000(Ac, A10);
    L0042E3E0(ecx);
    *(A8 + 0x54) = esi;
    eax = L00424D40(A8);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x004255F9 - 0x004255FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004255F9()
{



}

/*	Procedure: 0x00425600 - 0x00425664
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0043ACFB()
 *		L0043B15F()
 */

L00425600(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    edx = *(A8 + 0x5c);
    if(edx < *(A8 + 0x10) && !( *(A8 + 0x50) & 2)) {
        return L00425160(A8, edx, Ac, A10);
    }
    eax = L00428EA0( *(A8 + 0x54), Ac, A10);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00425665 - 0x0042566F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425665()
{



}

/*	Procedure: 0x00425670 - 0x004256F9
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00423760()
 *		L00463250()
 *		L004633F0()
 */

L00425670(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)edi;
    if(A8 == 0 || *A8 != 1371375761) {
        eax = L00429610(65561);
    }
    edi = *(A8 + 0x50);
    if(Ac < *(A8 + 0x10)) {
        if(*(A8 + 0x5c) == Ac) {
            esp = ebp - 0xc;
            (restore)edi;
            return 0;
        }
        *(A8 + 0x5c) = Ac;
        (save)Ac;
        eax = L004252A0(A8);
    } else {
        if(*(A8 + 0x5c) == -1) {
            esp = ebp - 0xc;
            (restore)edi;
            return 0;
        }
        *(A8 + 0x5c) = -1;
        L004253D0(A8);
    }
    if(!(edi & 2)) {
        eax = L00424D40(A8);
    }
    esp = ebp - 0xc;
    (restore)edi;
    return 1;
}

/*	Procedure: 0x004256FA - 0x004256FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004256FA()
{



}

/*	Procedure: 0x00425700 - 0x00425726
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00425700(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    return *(A8 + 0x5c);
}

/*	Procedure: 0x00425727 - 0x0042572F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425727()
{



}

/*	Procedure: 0x00425730 - 0x00425756
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00425730(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    return *(A8 + 0x50);
}

/*	Procedure: 0x00425757 - 0x0042575F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425757()
{



}

/*	Procedure: 0x00425760 - 0x0042578F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0043ADB0()
 *		L0043AFA8()
 */

L00425760(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    *(A8 + 0x20) = Ac;
    *(A8 + 0x24) = A10;
    return *(A8 + 0x24);
}

/*	Procedure: 0x00425790 - 0x004257BA
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00425790(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A10 + 0x18;
    edx = *eax & 0xff;
    ecx = Ac + 0x18;
    edx = *ecx & 0xff;
    return L00425D00(ecx + 1, edx, eax + 1, edx);
}

/*	Procedure: 0x004257BB - 0x004257BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004257BB()
{



}

/*	Procedure: 0x004257C0 - 0x00425860
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00454600()
 */

L004257C0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    esp = esp - 0xc;
    ebx = A10;
    if(A8 == 0 || *A8 != 1371375761) {
        eax = L00429610(65561);
    }
    edx = *(A8 + 0x10);
    ecx = edx;
    if(Ac >= ecx) {
        return;
    }
    eax = ebx + Ac;
    if(eax > edx || eax < Ac) {
        ebx = ecx - Ac;
    }
    if(ebx == 0) {
        esp = ebp - 0xc;
        return;
    }
    ecx = ebp - 0x18;
    *(ebp - 0x18) = Ac * 4 + *(A8 + 0xc);
    *(ebp - 0x14) = ebx;
    *(ebp - 0x10) = ebx;
    eax = L00429E20(ecx, 0x425790, 0);
    if(*(A8 + 4) != 0) {
        eax = L00455590( *(A8 + 8), Ac, ebx);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00425861 - 0x0042586F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425861()
{



}

/*	Procedure: 0x00425870 - 0x004258D4
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 */

L00425870(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp - 0x2c;
    if(A8 == 0 || *A8 != 1371375761) {
        L00429610(65561);
    }
    if(Ac >= *(A8 + 0x10)) {
        L00429610(65548);
    }
    L00434150(ebp - 0x34, 0x2c);
    *(ebp - 0x1c) = A10;
    *(ebp - 0x24) = 1;
    *(ebp - 0x20) = Ac;
    return L00423760(A8, ebp - 0x34);
}

/*	Procedure: 0x004258D5 - 0x004258DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004258D5()
{



}

/*	Procedure: 0x004258E0 - 0x00425C9E
 *	Argument size: 8
 *	Local size: 64
 *	Save regs size: 12
 *	Called by:
 *		L00425CC0()
 */

L004258E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(Ac < 0x28) {
        L00429610(65546);
    }
    esi = A8;
    ecx = *esi;
    eax = ecx << 8 & 16711680;
    edi = ecx;
    ebx = ecx;
    eax = eax | edi >> 0x18;
    eax = eax | ebx >> 8 & 65280;
    if((eax | ecx << 0x18) != 625823317) {
        L00429610(65545);
    }
    edx = *(esi + 4) & 65535;
    edi = edx << 8;
    if((edi | edx >> 8) != 1) {
        L00429610(65544);
    }
    ebx = *(esi + 6) & 0xff;
    Vffffffe8 = *(esi + 7) & 0xff;
    Vffffffe8 = Vffffffe8 + (bl & 0xff) + 0x2b;
    Vffffffe8 = Vffffffe8 & -4;
    eax = Vffffffe8;
    Vffffffe4 = eax;
    if(Ac < Vffffffe4) {
        L00429610(65546);
    }
    ecx = *(esi + 0x1c);
    edi = ecx << 8 & 16711680;
    edx = ecx;
    eax = ecx;
    edi = edi | edx >> 0x18;
    edi = edi | eax >> 8 & 65280;
    eax = L00423850(0, 0, edi | ecx << 0x18);
    Vffffffec = eax;
    *(ebp - 0x48) = eax;
    *( *(ebp - 0x48) + 0x61) = 1;
    edi = *(esi + 0x20);
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    edx = edx | edi >> 8 & 65280;
    edx = edx | edi << 0x18;
    *(Vffffffec + 0x5c) = edx;
    if(bl != 0) {
        eax = bl & 0xff;
        eax = L00429000(esi + 0x28, eax);
        *(Vffffffec + 0x54) = eax;
    }
    eax = *(esi + 0x24);
    ecx = eax;
    Vfffffff0 = eax;
    edi = eax;
    ecx = ecx >> 8 & 65280;
    eax = eax << 0x18;
    Vfffffff0 = Vfffffff0 << 8;
    Vfffffff0 = Vfffffff0 & 16711680;
    Vfffffff0 = Vfffffff0 | edi >> 0x18;
    Vfffffff0 = Vfffffff0 | ecx;
    Vfffffff0 = Vfffffff0 | eax;
    ebx = Vfffffff0 < 0x400 ? Vfffffff0 : 0x400;
    (save)ebx;
    L00429A50(Vffffffec + 0xc);
    edi = esi + Vffffffe8;
    (restore)ecx;
    Vffffffe8 = Ac;
    Vffffffe8 = Vffffffe8 - Vffffffe4;
    Vffffffe4 = Vfffffff0;
    if(!(Vffffffe4 = Vffffffe4 - 1)) {
        do {
            if(Vffffffe8 < 0x38) {
                L00429610(65546);
            }
            Vffffffc4 = *(edi + 0x34) & 0xff;
            *(ebp - 0x44) = *(edi + 0x35) & 0xff;
            eax = Vffffffc4 & 0xff;
            ebx = *(ebp - 0x44) & 0xff;
            Vffffffc0 = eax;
            esi = Vffffffc0;
            Vffffffe0 = *(edi + 0x37) & 0xff;
            ecx = *(edi + 0x36) & 0xff;
            Vffffffe0 = Vffffffe0 + ecx + ebx + esi + 0x3b;
            Vffffffe0 = Vffffffe0 & -4;
            if(Vffffffe8 < Vffffffe0) {
                L00429610(65546);
            }
            eax = L0042E310(ebx + esi + 0x1a);
            *(ebp - 0x4c) = eax;
            L00434150( *(ebp - 0x4c), 0x18);
            esi = *edi;
            eax = esi << 8 & 16711680;
            eax = eax | esi >> 0x18;
            ecx = esi;
            esi = esi << 0x18;
            eax = eax | ecx >> 8 & 65280 | esi;
            *( *(ebp - 0x4c) + 4) = eax;
            eax = *(edi + 4);
            ebx = *(ebp - 0x4c);
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            esi = eax;
            eax = eax << 0x18;
            *(ebx + 8) = edx | esi >> 8 & 65280 | eax;
            edx = *(edi + 8) & 65535;
            ecx = *(edi + 0x1a) & 65535;
            ebx = *(ebp - 0x4c);
            esi = edx;
            edx = edx >> 8;
            esi = esi << 8 | edx;
            eax = ecx;
            ecx = ecx >> 8;
            eax = eax << 8 | ecx;
            eax = ax & 65535;
            *(ebx + 0xc) = (si & 65535 & 0xff) << 0x10 | eax;
            esi = *(edi + 0xc);
            ebx = *(ebp - 0x4c);
            edx = esi << 8 & 16711680;
            edx = edx | esi >> 0x18;
            ecx = esi;
            esi = esi << 0x18;
            *(ebx + 0x10) = edx | ecx >> 8 & 65280 | esi;
            edx = *(edi + 0x18) & 65535;
            eax = edx;
            edx = edx >> 8;
            eax = eax << 8 | edx;
            *( *(ebp - 0x4c) + 0x14) = ax;
            esi = *(ebp - 0x4c);
            ebx = *(edi + 0x21) & 0xff;
            *(esi + 0x16) = bl;
            eax = *(edi + 0x22) & 65535;
            ecx = *(ebp - 0x4c);
            dl = al << 8;
            *(ecx + 0x17) = dl | eax >> 8;
            esi = *(ebp - 0x4c) + 0x18;
            ebx = edi + 0x38;
            L00428F50(esi, ebx, Vffffffc4 & 0xff);
            ebx = ebx + (Vffffffc4 & 0xff);
            esi = esi + Vffffffc0 + 1;
            L00428F50(esi, ebx, *(ebp - 0x44) & 0xff);
            ebx = *(ebp - 0x4c);
            Vffffffdc = esp;
            if(ebx == 0) {
                L00429610(65538);
            }
            L00429A00(Vffffffec + 0xc, ebx);
L00425c53:
            edi = edi + Vffffffe0;
            Vffffffe8 = Vffffffe8 - Vffffffe0;
        } while(Vffffffe4 = Vffffffe4 - 1);
        goto L00425c66;
        L0042E3E0(ebp - 0x4c);
        L004234F0(0, 0, 0);
        if(Vffffffd0 != 0) {
            (save)-1;
            ecx = Vffffffc8;
            Vffffffd0();
        }
        esp = *(ebp - 0x24);
        goto L00425c53;
    }
L00425c66:
    L00454A20( *(Vffffffec + 8), 0, 0, Vfffffff0, *(Vffffffec + 0x60) & 0xff);
    eax = ebp - 0x48;
    *(ebp - 0x48) = 0;
    L00423980(eax);
    return Vffffffec;
}

/*	Procedure: 0x00425C9F - 0x00425CB4
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 */

L00425C9F()
{
	/* unknown */ void  ebx;



    ebx = ecx;
    L00423980(ebx);
    return ebx;
}

/*	Procedure: 0x00425CB5 - 0x00425CBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425CB5()
{



}

/*	Procedure: 0x00425CC0 - 0x00425CF4
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 0
 *	Called by:
 *		L0043AFA8()
 */

L00425CC0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  Vfffffffc;



    eax = L004258E0(L0043C150(1296387669, A10, & Vfffffffc), Vfffffffc);
    *(eax + 0x18) = A8;
    *(eax + 0x1c) = Ac;
}

/*	Procedure: 0x00425CF5 - 0x00425CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425CF5()
{



}

/*	Procedure: 0x00425D00 - 0x00425E33
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00425790()
 *		L0044752F()
 */

L00425D00(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x14;
    *(ebp - 0x1c) = A8;
    *(ebp - 0x18) = A10;
    eax = Ac;
    edi = 0x480740;
    *(ebp - 0x10) = eax;
    *(ebp - 0x14) = eax;
    esi = A14;
    do {
        if(*(ebp - 0x14) == 0) {
            goto L00425d2c;
        }
L00425d40:
        if(esi == 0) {
            goto L00425d44;
        }
        eax = L00428490( *(ebp - 0x1c), *(ebp - 0x14), ebp - 0x20);
        edx = ebp - 0x20;
        ebx = eax;
        eax = *(ebp - 0x20);
        *(ebp - 0x1c) = *(ebp - 0x1c) + eax;
        *(ebp - 0x14) = *(ebp - 0x14) - eax;
        eax = L00428490( *(ebp - 0x18), esi, edx);
        ecx = *(ebp - 0x20);
        *(ebp - 0x18) = *(ebp - 0x18) + ecx;
        esi = esi - ecx;
        if(ebx < 0x100) {
            ebx = *(edi + ebx) & 0xff;
        }
        if(eax < 0x100) {
            eax = *(edi + eax) & 0xff;
        }
    } while(ebx == eax);
    goto L00425da1;
L00425d2c:
    if(esi != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        eax = eax | -1;
        (restore)ebx;
        return;
        goto L00425d40;
L00425d44:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return 1;
L00425da1:
        eax = ebx < eax ? eax | -1 : 1;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    esi = *(ebp - 0x10);
    goto L00425e20;
L00425e00:
    eax = ebx < edx ? eax | -1 : 1;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
L00425e20:
    do {
        if(esi == 0 || *(ebp - 0x10) == 0) {
            goto L00425e2a;
        }
        ebx = L00428490(A8, esi, ebp - 0x20);
        eax = *(ebp - 0x20);
        A8 = A8 + eax;
        esi = esi - eax;
        edx = L00428490(A10, *(ebp - 0x10), ebp - 0x20);
        eax = *(ebp - 0x20);
        A10 = A10 + eax;
        *(ebp - 0x10) = *(ebp - 0x10) - eax;
    } while(ebx == edx);
    goto L00425e00;
L00425e2a:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00425E34 - 0x00425E3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425E34()
{



}

/*	Procedure: 0x00425E40 - 0x00425F0C
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00426330()
 *		L00428DE0()
 *		L00433B90()
 *		L00437FE0()
 *		L00448580()
 */

L00425E40()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = *(ebp + 0x14);
    esp = esp - 8;
    esi = *(ebp + 8);
    edi = *(ebp + 0x10);
    if(*(ebp + 0xc) != eax) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    if(*(ebp + 0x18) == 0) {
        eax = L00434380(esi, edi, *(ebp + 0xc));
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return;
    }
    *(ebp - 0x10) = 0x480540;
    goto L00425ef0;
L00425ee5:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return 0;
L00425ef0:
    do {
        if(*(ebp + 0xc) == 0 || *(ebp + 0x14) == 0) {
            goto L00425efc;
        }
        eax = L00428490(esi, *(ebp + 0xc), ebp - 0x14);
        ecx = ebp - 0x14;
        esi = esi + *(ebp - 0x14);
        ebx = eax;
        *(ebp + 0xc) = *(ebp + 0xc) - *(ebp - 0x14);
        eax = L00428490(edi, *(ebp + 0x14), ecx);
        ecx = *(ebp - 0x14);
        edi = edi + *(ebp - 0x14);
        *(ebp + 0x14) = *(ebp + 0x14) - ecx;
        if(ebx < 0x100) {
            ebx = *( *(ebp - 0x10) + ebx) & 0xff;
        }
        if(eax < 0x100) {
            eax = *( *(ebp - 0x10) + eax) & 0xff;
        }
    } while(ebx == eax);
    goto L00425ee5;
L00425efc:
    eax = *(ebp + 0x14);
    *(ebp + 0xc) :: eax;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00425F0D - 0x00425F0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00425F0D()
{



}

/*	Procedure: 0x00425F10 - 0x0042601B
 *	Argument size: 16
 *	Local size: 16
 *	Save regs size: 12
 *	Called by:
 *		L00426020()
 *		L00426180()
 *		L00426330()
 *		L00426440()
 */

L00425F10(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = Ac;
    esi = A10;
    edx = A14;
    if(A8 < 0x80) {
        if(edx == 0) {
            ebx = A8 & 0xff;
            return L00434880(ebx, ebx, esi);
        }
        edi = 0x480540;
        if(A8 < 0x100) {
            A8 = *(0x480540 + A8) & 0xff;
        }
        edx = 0;
        if(esi > 0) {
            do {
                eax = *(edx + ebx) & 0xff;
                if(al < 0x80) {
                    eax = *(edi + (al & 0xff)) & 0xff;
                    if((al & 0xff) == A8) {
                        goto L00425f7b;
                    }
                }
                edx = edx + 1;
            } while(edx < esi);
            goto L00425f8d;
L00425f7b:
            esp = ebp - 0xc;
            return edx + ebx;
        }
L00425f8d:
        esp = ebp - 0xc;
        return 0;
    }
    if(edx == 0) {
        ebx = ebp - 0x14;
        eax = L004345E0(ebx, L00428380(A8, ebp - 0x14, 8), ebx, esi);
        esp = ebp - 0xc;
        return;
    }
    edi = 0x480540;
    if(A8 < 0x100) {
        A8 = *(0x480540 + A8) & 0xff;
        goto L0042600e;
L00425ffe:
        esp = ebp - 0xc;
        return ebx;
    }
L0042600e:
    while(esi != 0) {
        eax = L00428490(ebx, esi, ebp - 0x1c);
        if(eax < 0x100) {
            eax = *(edi + eax) & 0xff;
        }
        if(eax == A8) {
            goto L00425ffe;
        }
        ebx = ebx + *(ebp - 0x1c);
        esi = esi - *(ebp - 0x1c);
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0042601C - 0x0042601F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042601C()
{



}

/*	Procedure: 0x00426020 - 0x00426173
 *	Argument size: 16
 *	Local size: 1040
 *	Save regs size: 12
 *	Called by:
 *		L00426180()
 */

L00426020(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffbf0;
	/* unknown */ void  Vfffffff0;



    edx = A8;
    *(ebp + -1048) = edx;
    *(ebp + -1048) = *(ebp + -1048) + 1;
    eax = *edx & 0xff;
    Vfffffff0 = eax;
    edi = 0;
    *(ebp + -1049) = 0;
    esi = Ac;
    ebx = A10;
    if(Vfffffff0 != 0) {
        do {
            eax = L00428490( *(ebp + -1048), Vfffffff0, ebp + -1044);
            if(*(ebp + -1049) != 0) {
                eax = L00428810(eax);
            }
            *(ebp + edi * 4 + -1040) = eax;
            eax = *(ebp + -1044);
            edi = edi + 1;
            *(ebp + -1048) = *(ebp + -1048) + eax;
        } while(Vfffffff0 = Vfffffff0 - eax);
    }
    if(edi == 1) {
        return L00425F10(Vfffffbf0, esi, ebx, A14);
    }
    if(*(ebp + -1049) != 0) {
        if(ebx == 0) {
            goto L0042616a;
        }
        do {
            eax = L00428810(L00428490(esi, ebx, ebp + -1044));
            edx = 0;
            if(edi > 0) {
                do {
                    if(eax == *(ebp + edx * 4 + -1040)) {
                        goto L004260ff;
                    }
L00426110:
                    edx = edx + 1;
                } while(edx < edi);
            }
            esi = esi + *(ebp + -1044);
        } while(ebx = ebx - *(ebp + -1044));
        goto L0042616a;
L004260ff:
        esp = ebp - 0xc;
        return esi;
        goto L00426110;
L00426149:
        esp = ebp - 0xc;
        return esi;
    }
    while(ebx != 0) {
        eax = L00428490(esi, ebx, ebp + -1044);
        edx = 0;
        if(edi > 0) {
            do {
                if(eax == *(ebp + edx * 4 + -1040)) {
                    goto L00426149;
                }
                edx = edx + 1;
            } while(edx < edi);
        }
        esi = esi + *(ebp + -1044);
        ebx = ebx - *(ebp + -1044);
    }
L0042616a:
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00426174 - 0x0042617F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00426174()
{



}

/*	Procedure: 0x00426180 - 0x0042632B
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 */

L00426180(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 0x24;
    if(esi == 0) {
        return 0;
    }
    eax = *esi & 0xff;
    *(ebp - 0x10) = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    if(*(ebp - 0x10) == 1) {
        eax = L00425F10( *(esi + 1) & 0xff, Ac, A10, A14);
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x30) = 0;
    *(ebp - 0x2c) = 0;
    *(ebp - 0x28) = 0;
    *(ebp - 0x24) = 0;
    if(!(A14 & 1)) {
        edi = 1;
        if(*(ebp - 0x10) >= 1) {
            do {
                eax = *(esi + edi) & 0xff;
                edx = al & 0xff;
                if(edx & 0x80) {
                    goto L00426312;
                }
                cl = dl & 7;
                bl = 1 << cl;
                *(ebp + (edx >> 3) - 0x30) = *(ebp + (edx >> 3) - 0x30) | bl;
                if(edx >= 0x61 && edx <= 0x7a) {
                    goto L0042623f;
                }
                if(edx >= 0x41 && edx <= 0x5a) {
                    al = al + 0x20;
                    goto L0042624f;
L0042623f:
                    al = al - 0x20;
L0042624f:
                    cl = al & 0xff & 7;
                    dl = 1 << cl;
                    *(ebp + (ebx >> 3) - 0x30) = *(ebp + (ebx >> 3) - 0x30) | dl;
                }
                edi = edi + 1;
            } while(edi <= *(ebp - 0x10));
        }
    } else {
        eax = 1;
        if(*(ebp - 0x10) >= 1) {
            do {
                edx = *(esi + eax) & 0xff & 0xff;
                if(edx & 0x80) {
                    goto L00426312;
                }
                cl = dl & 7;
                bl = 1 << cl;
                ecx = edx >> 3;
                eax = eax + 1;
                *(ebp + ecx - 0x30) = *(ebp + ecx - 0x30) | bl;
            } while(eax <= *(ebp - 0x10));
        }
    }
    edi = 0;
    *(ebp - 0x20) = 0;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = 0;
    if(A10 > 0) {
        do {
            ebx = *(edi + Ac) & 0xff;
            ecx = ebx & 7;
            ebx = ebx >> 3;
            esi = 1 << cl;
            if(!(esi & *(ebp + ebx - 0x30) & 0xff)) {
                goto L004262f3;
            }
L00426300:
            edi = edi + 1;
        } while(edi < A10);
        goto L00426308;
L004262f3:
        esp = ebp - 0xc;
        return Ac + edi;
        goto L00426300;
    }
L00426308:
    esp = ebp - 0xc;
    return 0;
L00426312:
    eax = L00426020(esi, Ac, A10, A14);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042632C - 0x0042632F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042632C()
{



}

/*	Procedure: 0x00426330 - 0x004263AC
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00426440()
 */

L00426330(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = A8;
    esi = Ac;
    edx = ebp - 0x18;
    (save)edi;
    esp = esp - 0xc;
    eax = L00428490(ebx, esi, edx);
    esi = esi - *(ebp - 0x18);
    *(ebp - 0x14) = eax;
    *(ebp - 0x10) = A14;
    edi = A10;
    eax = edi;
    ebx = ebx + *(ebp - 0x18);
    *(ebp - 0x10) = *(ebp - 0x10) - esi;
    *(ebp - 0x10) = *(ebp - 0x10) + eax;
    do {
        edi = L00425F10( *(ebp - 0x14), edi, *(ebp - 0x10) - edi, 1);
        if(edi == 0) {
            goto L004263a3;
        }
        edi = edi + *(ebp - 0x18);
        L00425E40(ebx, esi, edi, esi, 1);
    } while(al == 0);
    eax = edi - *(ebp - 0x18);
    esp = ebp - 0xc;
    (restore)edi;
    return;
L004263a3:
    esp = ebp - 0xc;
    (restore)edi;
    return 0;
}

/*	Procedure: 0x004263AD - 0x004263AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004263AD()
{



}

/*	Procedure: 0x004263B0 - 0x00426437
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00426440()
 */

L004263B0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x10;
    esi = *(ebp + 0x10);
    ebx = *(ebp + 8);
    edi = *(ebp + 0xc);
    *(ebp - 0x14) = 0x480540;
    *(ebp - 0x10) = esi;
    goto L00426420;
L00426413:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return 0;
L00426420:
    do {
        if(*(ebp - 0x10) == 0 || esi == 0) {
            goto L0042642a;
        }
        *(ebp - 0x18) = L00428490(ebx, *(ebp - 0x10), ebp - 0x1c);
        eax = *(ebp - 0x1c);
        ecx = ebp - 0x1c;
        ebx = ebx + *(ebp - 0x1c);
        *(ebp - 0x10) = *(ebp - 0x10) - eax;
        eax = L00428490(edi, esi, ecx);
        edi = edi + *(ebp - 0x1c);
        esi = esi - *(ebp - 0x1c);
        if(eax < 0x100) {
            eax = *( *(ebp - 0x14) + eax) & 0xff;
        }
    } while(*(ebp - 0x18) == eax);
    goto L00426413;
L0042642a:
    *(ebp - 0x10) :: esi;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00426438 - 0x0042643F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00426438()
{



}

/*	Procedure: 0x00426440 - 0x00426819
 *	Argument size: 20
 *	Local size: 2100
 *	Save regs size: 12
 *	Called by:
 *		L00448690()
 *		L004626CB()
 */

L00426440(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffbc0;
	/* unknown */ void  Vfffffbc4;
	/* unknown */ void  Vfffffbcc;
	/* unknown */ void  Vfffffbd0;
	/* unknown */ void  Vfffffbd8;
	/* unknown */ void  Vfffffbe4;
	/* unknown */ void  Vfffffbe8;
	/* unknown */ void  Vfffffbec;
	/* unknown */ void  Vfffffbf0;



    esi = A8;
    ebx = Ac;
    if(A18 == 0) {
        return L004345E0(esi, ebx, A10, A14);
    }
    if(A14 < ebx || A14 == 0 || ebx == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = L00428490(esi, ebx, & Vfffffbc0);
    if(ebx == Vfffffbc0) {
        eax = L00425F10(eax, A10, A14, 1);
        esp = ebp - 0xc;
        return;
    }
    if(ebx < 5 || A14 < 0x800) {
        eax = L00426330(esi, ebx, A10, A14);
        esp = ebp - 0xc;
        return;
    }
    ebx :: 0x400;
    Vfffffbe8 = 0;
    if(!(edi = ebp + -2112)) {
        Vfffffbe4 = esp;
        edi = L0042E310(ebx);
        goto L00426560;
        edi = L00426330(esi, ebx, A10, A14);
        if(Vfffffbd8 != 0) {
            (save)-1;
            ecx = Vfffffbd0;
            Vfffffbd8();
        }
        esp = *(ebp + -1052);
        ebx = & Vfffffbe8;
        L0042E3E0(ebx);
        eax = edi;
        esp = ebp - 0xc;
        return;
L00426560:
        Vfffffbe8 = edi;
    }
    ebx = L00427C80(esi, ebx, edi, ebx);
    esi = edi;
    if(A14 < ebx) {
        esi = & Vfffffbe8;
        L0042E3E0(esi);
        esp = ebp - 0xc;
        return 0;
    }
    edi = 0;
    do {
        edx = ebx + 1;
        eax = edx;
        *(ebp + edi * 4 + -1036) = edx;
        ecx = eax;
        *(ebp + edi * 4 + -1028) = ecx;
        *(ebp + edi * 4 + -1024) = eax;
        ecx = eax;
        *(ebp + edi * 4 + -1032) = eax;
        *(ebp + edi * 4 + -1020) = eax;
        *(ebp + edi * 4 + -1016) = ecx;
        *(ebp + edi * 4 + -1012) = eax;
        *(ebp + edi * 4 + -1008) = eax;
        edi = edi + 8;
    } while(edi < 0x100);
    ecx = 0;
    if(ebx > 0) {
        Vfffffbf0 = ebx;
        Vfffffbf0 = Vfffffbf0 - 8;
        if(ebx > 8) {
            do {
                edx = *(ecx + esi) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - ecx;
                edx = ecx + 1;
                eax = *(esi + ecx + 1) & 0xff;
                *(ebp + eax * 4 + -1036) = ebx - edx;
                eax = ecx + 2;
                edx = *(esi + ecx + 2) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - eax;
                edx = ecx + 3;
                eax = *(esi + ecx + 3) & 0xff;
                *(ebp + eax * 4 + -1036) = ebx - edx;
                eax = ecx + 4;
                edx = *(esi + ecx + 4) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - eax;
                edx = ecx + 5;
                eax = *(esi + ecx + 5) & 0xff;
                *(ebp + eax * 4 + -1036) = ebx - edx;
                eax = ecx + 6;
                edx = *(esi + ecx + 6) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - eax;
                edx = ecx + 7;
                eax = *(esi + ecx + 7) & 0xff;
                edi = ebx - edx;
                ecx = ecx + 8;
                *(ebp + eax * 4 + -1036) = edi;
            } while(ecx < Vfffffbf0);
        }
        eax = ecx;
        do {
            edx = *(ecx + esi) & 0xff;
            ecx = ecx + 1;
            edi = ebx - eax;
            eax = ecx;
            *(ebp + edx * 4 + -1036) = edi;
        } while(eax < ebx);
    }
    Vfffffbf0 = A14;
    Vfffffbf0 = Vfffffbf0 - ebx;
    Vfffffbec = 0;
    if(Vfffffbf0 > 0) {
        do {
            edi = A10 + Vfffffbec;
            L004263B0(esi, edi, ebx);
            if(al != 0) {
                goto L00426708;
            }
L00426720:
            edi = Vfffffbec + ebx;
            edx = *(edi + A10) & 0xff;
            if(dl >= 0x80) {
                eax = L00427CA0(A10, edi);
                edx = A14 - eax;
                Vfffffbcc = eax;
                eax = L00428810(L00428490(A10 + Vfffffbcc, edx, 0));
                Vfffffbc4 = 0;
                L00428380(eax, & Vfffffbc4, 8);
                edx = *(ebp + edi - Vfffffbcc + -1084) & 0xff;
            } else {
                ecx = dl & 0xff;
                if(ecx >= 0x41 && ecx <= 0x5a) {
                    dl = dl + 0x20;
                }
            }
            Vfffffbec = Vfffffbec + *(ebp + (dl & 0xff) * 4 + -1036);
        } while(Vfffffbec < Vfffffbf0);
        goto L004267c6;
L00426708:
        ebx = & Vfffffbe8;
        L0042E3E0(ebx);
        eax = edi;
        esp = ebp - 0xc;
        return;
        goto L00426720;
    }
L004267c6:
    if(Vfffffbec == Vfffffbf0) {
        edi = A10 + Vfffffbec;
        L004263B0(esi, edi, ebx);
        if(al != 0) {
            L0042E3E0( & Vfffffbe8);
            eax = edi;
            esp = ebp - 0xc;
            return;
        }
    }
    L0042E3E0( & Vfffffbe8);
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0042681A - 0x0042681F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042681A()
{



}

/*	Procedure: 0x00426820 - 0x0042686D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0040B130()
 *		L0040B590()
 */

L00426820(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)A8;
    ecx = 0;
    if(Ac > 0) {
        do {
            eax = *(ecx + A8) & 0xff;
            if(al <= 0x20 && *((al & 0xff) + 0x480440) & 0xff & 0x60 || al == 0xc2 && ecx + 1 < Ac && *(A8 + ecx + 1) == 0xa0) {
                goto L0042685c;
            }
            ecx = ecx + 1;
        } while(ecx < Ac);
        goto L00426869;
L0042685c:
        eax = ecx + A8;
        (restore)A8;
        return;
    }
L00426869:
    (restore)A8;
    return 0;
}

/*	Procedure: 0x0042686E - 0x0042686F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042686E()
{



}

/*	Procedure: 0x00426870 - 0x00426D7E
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004011C0()
 *		L00426D80()
 *		L00426DC0()
 *		L00428CD0()
 *		L004328E0()
 *		L00443CD0()
 *		L0044489B()
 *		L00445430()
 */

L00426870(Ac, A10, A14, A18)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffeea;
	/* unknown */ void  Vfffffeeb;
	/* unknown */ void  Vfffffeec;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;



    eax = A18;
    (save)edi;
    (save)A10;
    esp = esp - 0x110;
    Vfffffff4 = eax;
    Vfffffff4 = Vfffffff4 & 0x7f;
    ecx = 0;
    ebx = Ac;
    Vfffffeea = 1;
    esi = & Vfffffef0;
    if(!(eax & 0x1000)) {
        edx = ebx;
        edi = 0;
        if(!(edx & -65536)) {
            edx = edx << 0x10;
            edi = 4;
        }
        if(!(edx & -16777216)) {
            edx = edx << 8;
            edi = edi + 2;
        }
        if(!(edx & -268435456)) {
            edi = edi + 1;
        }
        eax = 8 - edi;
        edx = !(A18 & 8192) ? 2 : 0;
        if(!(A18 & 0x100)) {
            edi = edx + eax;
            if(edi < Vfffffff4) {
                ecx = Vfffffff4 - edi;
            }
        } else {
            if(eax < Vfffffff4) {
                eax = Vfffffff4;
            }
        }
        edi = edx + ecx + eax;
        if(edi <= A14) {
            esi = A10;
            Vfffffeea = 0;
        }
        while(ecx = ecx - 1) {
            *esi = 0x20;
            esi = esi + 1;
        }
        if(edx != 0) {
            *esi = 0x30;
            *(esi + 1) = 0x78;
            esi = esi + 2;
        }
        esi = esi + eax;
        edi = "0123456789ABCDEF";
        edx = esi;
        do {
            ecx = ebx & 0xf;
            edx = edx - 1;
            ecx = *(edi + ecx) & 0xff;
            ebx = ebx >> 4;
            *edx = cl;
        } while(eax = eax - 1);
    } else {
        if(!(A18 & 0x400)) {
            edi = 1;
            if(ebx != 0) {
                edi = ebx;
                if(ebx == 0) {
                    eax = 0x20;
                } else {
                    eax = 0;
                    if(!(ebx & -65536)) {
                        edi = edi << 0x10;
                        eax = 0x10;
                    }
                    if(!(edi & -16777216)) {
                        edi = edi << 8;
                        eax = eax + 8;
                    }
                    if(!(edi & -268435456)) {
                        edi = edi << 4;
                        eax = eax + 4;
                    }
                    if(!(edi & -1073741824)) {
                        edi = edi * 4;
                        eax = eax + 2;
                    }
                    if(!(edi & -2147483648)) {
                        eax = eax + 1;
                    }
                }
                edi = 0x20 - eax;
            }
            edx = !(A18 & 8192) ? 2 : 0;
            if(!(A18 & 0x100)) {
                eax = edx + edi;
                if(eax < Vfffffff4) {
                    ecx = Vfffffff4 - eax;
                }
            } else {
                if(edi < Vfffffff4) {
                    edi = Vfffffff4;
                }
            }
            if(edx + ecx + edi <= A14) {
                esi = A10;
                Vfffffeea = 0;
            }
            while(ecx = ecx - 1) {
                *esi = 0x20;
                esi = esi + 1;
            }
            if(edx != 0) {
                *esi = 0x30;
                *(esi + 1) = 0x62;
                esi = esi + 2;
            }
            ecx = esi + edi;
            do {
                al = (bl & 1) + 0x30;
                ecx = ecx - 1;
                ebx = ebx >> 1;
                *ecx = al;
            } while(edi = edi - 1);
        } else {
            edi = ebx;
            Vfffffeec = 0;
            do {
                eax = -858993459;
                asm("mul edi");
                Vfffffeec = Vfffffeec + 1;
                edx = edx >> 3;
            } while(edx != 0);
            Vfffffeeb = 0;
            Vfffffff0 = 0;
            if(!(A18 & 65536)) {
                Vfffffeeb = 0x2d;
                goto L00426b02;
            }
            if(!(A18 & 16384)) {
                Vfffffeeb = 0x2b;
L00426b02:
                Vfffffff0 = 1;
            }
            if(!(A18 & 0x200)) {
                if(!(A18 & 0x100)) {
                    edi = Vfffffeec - 1;
                    eax = -1431655765;
                    asm("mul edi");
                    Vfffffeec = Vfffffeec + (edx >> 1);
                    eax = Vfffffeec + Vfffffff0;
                    if(eax < Vfffffff4) {
                        ecx = Vfffffff4 - eax;
                    }
                } else {
                    eax = Vfffffff4;
                    if(Vfffffeec < eax) {
                        Vfffffeec = eax;
                    }
                    edi = Vfffffeec - 1;
                    eax = -1431655765;
                    asm("mul edi");
                    Vfffffeec = Vfffffeec + (edx >> 1);
                }
                edx = ecx + Vfffffff0 + Vfffffeec;
                if(edx <= A14) {
                    esi = A10;
                    Vfffffeea = 0;
                }
                while(ecx = ecx - 1) {
                    *esi = 0x20;
                    esi = esi + 1;
                }
                if(Vfffffeeb != 0) {
                    *esi = Vfffffeeb;
                    esi = esi + 1;
                }
                esi = esi + Vfffffeec;
                edi = esi;
                Vfffffff0 = 0;
                do {
                    Vfffffff0 = Vfffffff0 + 1;
                    cl = 0x2c;
                    if(!(Vfffffff0 & 3)) {
                        ecx = ebx;
                        eax = -858993459;
                        asm("mul ecx");
                        eax = -858993459;
                        edx = (edx >> 3) * 0xa;
                        ecx = ecx - edx;
                        asm("mul ebx");
                        cl = cl + 0x30;
                        edx = edx >> 3;
                        ebx = edx;
                    }
                    edi = edi - 1;
                    *edi = cl;
                } while(Vfffffff0 < Vfffffeec);
            } else {
                if(!(A18 & 0x100)) {
                    edx = Vfffffeec + Vfffffff0;
                    if(edx < Vfffffff4) {
                        ecx = Vfffffff4 - edx;
                    }
                } else {
                    eax = Vfffffff4;
                    if(Vfffffeec < eax) {
                        Vfffffeec = eax;
                    }
                }
                if(ecx + Vfffffff0 + Vfffffeec <= A14) {
                    esi = A10;
                    Vfffffeea = 0;
                }
                while(ecx = ecx - 1) {
                    *esi = 0x20;
                    esi = esi + 1;
                }
                if(Vfffffeeb != 0) {
                    *esi = Vfffffeeb;
                    esi = esi + 1;
                }
                esi = esi + Vfffffeec;
                edi = esi;
                do {
                    ecx = ebx;
                    edi = edi - 1;
                    eax = -858993459;
                    asm("mul ecx");
                    eax = -858993459;
                    edx = (edx >> 3) * 0xa;
                    ecx = ecx - edx;
                    asm("mul ebx");
                    cl = cl + 0x30;
                    *edi = cl;
                    edx = edx >> 3;
                    ebx = edx;
                } while(Vfffffeec = Vfffffeec - 1);
            }
        }
    }
    if(Vfffffeea != 0) {
        eax = esi - & Vfffffef0;
        if(eax >= A14) {
            eax = A14;
        }
        esi = 0;
        if(eax > 0) {
            eax :: 8;
            if(!(edi = eax - 8)) {
                do {
                    ebx = *(esp + esi + 8) & 0xff;
                    *(esi + A10) = bl;
                    ecx = *(esp + esi + 9) & 0xff;
                    *(A10 + esi + 1) = cl;
                    edx = *(esp + esi + 0xa) & 0xff;
                    *(A10 + esi + 2) = dl;
                    ebx = *(esp + esi + 0xb) & 0xff;
                    *(A10 + esi + 3) = bl;
                    ecx = *(esp + esi + 0xc) & 0xff;
                    *(A10 + esi + 4) = cl;
                    edx = *(esp + esi + 0xd) & 0xff;
                    *(A10 + esi + 5) = dl;
                    ebx = *(esp + esi + 0xe) & 0xff;
                    *(A10 + esi + 6) = bl;
                    ecx = *(esp + esi + 0xf) & 0xff;
                    *(A10 + esi + 7) = cl;
                    esi = esi + 8;
                } while(esi < edi);
            }
            do {
                edx = *(esp + esi + 8) & 0xff;
                *(esi + A10) = dl;
                esi = esi + 1;
            } while(esi < eax);
        }
        esp = esp + 0x110;
        (restore)A10;
        (restore)edi;
        return;
    }
    eax = esi - A10;
    esp = esp + 0x110;
    (restore)A10;
    (restore)edi;
}

/*	Procedure: 0x00426D7F - 0x00426D7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00426D7F()
{



}

/*	Procedure: 0x00426D80 - 0x00426DB0
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00428D10()
 */

L00426D80(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    edx = A8;
    ecx = A14;
    if(edx < 0 && !(ecx & 0x1400)) {
        edx = ~edx;
        ecx = ecx | 65536;
    }
    return L00426870(edx, Ac, A10, ecx);
}

/*	Procedure: 0x00426DB1 - 0x00426DBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00426DB1()
{



}

/*	Procedure: 0x00426DC0 - 0x004273DF
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00416790()
 */

L00426DC0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    ebx = A8;
    edi = 0;
    esp = esp - 0x114;
    ecx = ebx;
    if(Ac == 0 && ebx == ecx) {
        return L00426870(ebx, A10, A14, A18);
    }
    *(ebp + -284) = ebp + -280;
    eax = A18;
    *(ebp - 0x14) = eax;
    *(ebp - 0x14) = *(ebp - 0x14) & 0x7f;
    ebx = 0;
    *(ebp + -286) = 1;
    if(!(eax & 0x1000)) {
        ecx = Ac;
        edx = 0;
        eax = A8;
        if(!(ecx & -1)) {
            ecx = eax;
            eax = 0;
            edx = 8;
        }
        if(!(ecx & -65536)) {
            asm("shld ecx,eax,0x10");
            eax = eax << 0x10;
            edx = edx + 4;
        }
        if(!(ecx & -16777216)) {
            asm("shld ecx,eax,0x8");
            eax = eax << 8;
            edx = edx + 2;
        }
        if(!(ecx & -268435456)) {
            edx = edx + 1;
        }
        *(ebp - 0x10) = 0x10;
        *(ebp - 0x10) = *(ebp - 0x10) - edx;
        edi = !(A18 & 8192) ? 2 : 0;
        if(!(A18 & 0x100)) {
            eax = *(ebp - 0x10) + edi;
            if(eax < *(ebp - 0x14)) {
                ebx = *(ebp - 0x14) - eax;
            }
        } else {
            eax = *(ebp - 0x14);
            if(*(ebp - 0x10) < eax) {
                *(ebp - 0x10) = eax;
            }
        }
        if(edi + ebx + *(ebp - 0x10) <= A14) {
            *(ebp + -284) = A10;
            *(ebp + -286) = 0;
        }
        while(ebx = ebx - 1) {
            *( *(ebp + -284)) = 0x20;
            *(ebp + -284) = *(ebp + -284) + 1;
        }
        if(edi != 0) {
            *( *(ebp + -284)) = 0x30;
            *( *(ebp + -284) + 1) = 0x78;
            *(ebp + -284) = *(ebp + -284) + 2;
        }
        *(ebp + -284) = *(ebp + -284) + *(ebp - 0x10);
        edx = "0123456789ABCDEF";
        ebx = *(ebp + -284);
        do {
            ebx = ebx - 1;
            eax = Ac;
            eax = 0;
            ecx = *(edx + (A8 & 0xf)) & 0xff;
            *ebx = cl;
            eax = Ac;
            asm("shrd [ebp+0x8],eax,0x4");
            Ac = Ac >> 4;
        } while(*(ebp - 0x10) = *(ebp - 0x10) - 1);
    } else {
        if(!(A18 & 0x400)) {
            edi = 1;
            if(!(edx = A8 | Ac)) {
                eax = Ac;
                if(eax == 0) {
                    ecx = 0x20;
                } else {
                    ecx = 0;
                    if(!(eax & -65536)) {
                        eax = eax << 0x10;
                        ecx = 0x10;
                    }
                    if(!(eax & -16777216)) {
                        eax = eax << 8;
                        ecx = ecx + 8;
                    }
                    if(!(eax & -268435456)) {
                        eax = eax << 4;
                        ecx = ecx + 4;
                    }
                    if(!(eax & -1073741824)) {
                        eax = eax * 4;
                        ecx = ecx + 2;
                    }
                    if(!(eax & -2147483648)) {
                        ecx = ecx + 1;
                    }
                }
                if(ecx == 0x20) {
                    edi = A8;
                    if(edi == 0) {
                        eax = 0x20;
                    } else {
                        eax = 0;
                        if(!(edi & -65536)) {
                            edi = edi << 0x10;
                            eax = 0x10;
                        }
                        if(!(edi & -16777216)) {
                            edi = edi << 8;
                            eax = eax + 8;
                        }
                        if(!(edi & -268435456)) {
                            edi = edi << 4;
                            eax = eax + 4;
                        }
                        if(!(edi & -1073741824)) {
                            edi = edi * 4;
                            eax = eax + 2;
                        }
                        if(!(edi & -2147483648)) {
                            eax = eax + 1;
                        }
                    }
                    ecx = ecx + eax;
                }
                edi = 0x40 - ecx;
            }
            edx = !(A18 & 8192) ? 2 : 0;
            if(!(A18 & 0x100)) {
                ecx = edx + edi;
                if(ecx < *(ebp - 0x14)) {
                    ebx = *(ebp - 0x14) - ecx;
                }
            } else {
                if(edi < *(ebp - 0x14)) {
                    edi = *(ebp - 0x14);
                }
            }
            if(edx + ebx + edi <= A14) {
                *(ebp + -284) = A10;
                *(ebp + -286) = 0;
            }
            while(ebx = ebx - 1) {
                *( *(ebp + -284)) = 0x20;
                *(ebp + -284) = *(ebp + -284) + 1;
            }
            if(edx != 0) {
                *( *(ebp + -284)) = 0x30;
                *( *(ebp + -284) + 1) = 0x62;
                *(ebp + -284) = *(ebp + -284) + 2;
            }
            *(ebp + -284) = *(ebp + -284) + edi;
            ecx = *(ebp + -284);
            do {
                bl = (A8 & 1) + 0x30;
                ecx = ecx - 1;
                *ecx = bl;
                eax = Ac;
                asm("shrd [ebp+0x8],eax,0x1");
                Ac = Ac >> 1;
            } while(edi = edi - 1);
        } else {
            ecx = A8;
            edx = Ac;
            *(ebp - 0x10) = 0;
            do {
                *(ebp - 0x10) = *(ebp - 0x10) + 1;
                eax = L004357C0(ecx, edx, 0xa, 0);
                ecx = eax;
            } while(eax = eax | edx);
            *(ebp + -285) = 0;
            *(ebp - 0x18) = 0;
            if(!(A18 & 65536)) {
                *(ebp + -285) = 0x2d;
            } else {
                if(A18 & 16384) {
                    goto L0042712c;
                }
                *(ebp + -285) = 0x2b;
            }
            *(ebp - 0x18) = 1;
L0042712c:
            if(!(A18 & 0x200)) {
                if(!(A18 & 0x100)) {
                    ecx = *(ebp - 0x10) - 1;
                    eax = -1431655765;
                    asm("mul ecx");
                    *(ebp - 0x10) = *(ebp - 0x10) + (edx >> 1);
                    eax = *(ebp - 0x10) + *(ebp - 0x18);
                    if(eax < *(ebp - 0x14)) {
                        ebx = *(ebp - 0x14) - eax;
                    }
                } else {
                    eax = *(ebp - 0x14);
                    if(*(ebp - 0x10) < eax) {
                        *(ebp - 0x10) = eax;
                    }
                    edi = *(ebp - 0x10) - 1;
                    eax = -1431655765;
                    asm("mul edi");
                    *(ebp - 0x10) = *(ebp - 0x10) + (edx >> 1);
                }
                if(ebx + *(ebp - 0x18) + *(ebp - 0x10) <= A14) {
                    *(ebp + -284) = A10;
                    *(ebp + -286) = 0;
                }
                while(ebx = ebx - 1) {
                    *( *(ebp + -284)) = 0x20;
                    *(ebp + -284) = *(ebp + -284) + 1;
                }
                if(*(ebp + -285) != 0) {
                    eax = *(ebp + -284);
                    cl = *(ebp + -285);
                    *eax = cl;
                    *(ebp + -284) = *(ebp + -284) + 1;
                }
                *(ebp + -284) = *(ebp + -284) + *(ebp - 0x10);
                edi = *(ebp + -284);
                *(ebp - 0x18) = 0;
                do {
                    *(ebp - 0x18) = *(ebp - 0x18) + 1;
                    bl = 0x2c;
                    if(!( *(ebp - 0x18) & 3)) {
                        bl = L00435830(A8, Ac, 0xa, 0) + 0x30;
                        A8 = L004357C0(A8, Ac, 0xa, 0);
                        Ac = edx;
                    }
                    edi = edi - 1;
                    *edi = bl;
                } while(*(ebp - 0x18) < *(ebp - 0x10));
            } else {
                if(!(A18 & 0x100)) {
                    edi = *(ebp - 0x10) + *(ebp - 0x18);
                    if(edi < *(ebp - 0x14)) {
                        ebx = *(ebp - 0x14) - edi;
                    }
                } else {
                    eax = *(ebp - 0x14);
                    if(*(ebp - 0x10) < eax) {
                        *(ebp - 0x10) = eax;
                    }
                }
                if(ebx + *(ebp - 0x18) + *(ebp - 0x10) <= A14) {
                    *(ebp + -284) = A10;
                    *(ebp + -286) = 0;
                }
                while(ebx = ebx - 1) {
                    *( *(ebp + -284)) = 0x20;
                    *(ebp + -284) = *(ebp + -284) + 1;
                }
                if(*(ebp + -285) != 0) {
                    eax = *(ebp + -284);
                    *eax = *(ebp + -285);
                    *(ebp + -284) = *(ebp + -284) + 1;
                }
                *(ebp + -284) = *(ebp + -284) + *(ebp - 0x10);
                edi = *(ebp + -284);
                do {
                    edi = edi - 1;
                    *edi = L00435830(A8, Ac, 0xa, 0) + 0x30;
                    A8 = L004357C0(A8, Ac, 0xa, 0);
                    Ac = edx;
                } while(*(ebp - 0x10) = *(ebp - 0x10) - 1);
            }
        }
    }
    if(*(ebp + -286) != 0) {
        edi = ebp + -280;
        eax = *(ebp + -284) - edi;
        if(eax >= A14) {
            eax = A14;
        }
        edx = 0;
        if(eax > 0) {
            eax :: 8;
            if(!(edi = eax - 8)) {
                do {
                    ecx = *(ebp + edx + -280) & 0xff;
                    *(edx + A10) = cl;
                    ebx = *(ebp + edx + -279) & 0xff;
                    *(A10 + edx + 1) = bl;
                    ecx = *(ebp + edx + -278) & 0xff;
                    *(A10 + edx + 2) = cl;
                    ebx = *(ebp + edx + -277) & 0xff;
                    *(A10 + edx + 3) = bl;
                    ecx = *(ebp + edx + -276) & 0xff;
                    *(A10 + edx + 4) = cl;
                    ebx = *(ebp + edx + -275) & 0xff;
                    *(A10 + edx + 5) = bl;
                    ecx = *(ebp + edx + -274) & 0xff;
                    *(A10 + edx + 6) = cl;
                    ebx = *(ebp + edx + -273) & 0xff;
                    *(A10 + edx + 7) = bl;
                    edx = edx + 8;
                } while(edx < edi);
            }
            do {
                ecx = *(ebp + edx + -280) & 0xff;
                *(edx + A10) = cl;
                edx = edx + 1;
            } while(edx < eax);
        }
        esp = ebp - 0xc;
        return;
    }
    eax = *(ebp + -284);
    esp = ebp - 0xc;
    return eax - A10;
}

/*	Procedure: 0x004273E0 - 0x004276CF
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 16
 */

L004273E0(A14, A18, A1c, A20)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffffc;



    esp = esp - 0x18;
    A20 = & Vfffffffc;
    Vfffffffc = A20;
    esi = Vfffffffc;
    A20 = A14;
    *esp = A20;
    ecx = *esp;
    if(A18 == 0 && A14 == ecx) {
        if(*esp == 0) {
            if(A20 != 0) {
                *A1c = 0x30;
                esp = esp + 0x18;
                return 1;
            }
            esp = esp + 0x18;
            return 0;
        }
        if(*esp < 0x400) {
            A20 = *esp;
            edx = 0;
            esi = esi - 1;
            edx = 0xa / 0xa % 0xa / 0xa;
            bl = edx + 0x30;
            *esi = bl;
            if(A20 == 0) {
                goto L0042764f;
            }
            ecx = A20;
            esi = esi - 1;
            A20 = -858993459;
            asm("mul ecx");
            A20 = 1374389535;
            edx = (edx >> 3) * 0xa;
            cl = ecx - edx + 0x30;
            *esi = cl;
            ebx = *esp;
            asm("mul ebx");
            edx = edx >> 5;
            if(edx == 0) {
                goto L0042764f;
            }
            esi = esi - 1;
            ecx = edx;
            A20 = -858993459;
            asm("mul ecx");
            A20 = 274877907;
            edx = (edx >> 3) * 0xa;
            *esi = ecx - edx + 0x30;
            ebp = *esp;
            asm("mul ebp");
            goto L00427640;
        }
        if(*esp < 1048576) {
            edi = *esp >> 0xa;
            bl = 0x4b;
        } else {
            if(*esp < 1073741824) {
                edi = *esp >> 0x14;
                *esp = *esp >> 0xa;
                A20 = *esp;
                bl = 0x4d;
            } else {
                edi = *esp;
                ecx = *esp;
                edi = edi >> 0x1e;
                *esp = ecx >> 0x14;
                bl = 0x47;
            }
        }
    } else {
        if(A18 <= 0x100) {
            != ? 0x427523 : ;
            if(A14 >= 0) {
                goto L00427531;
            }
            ecx = 0x1e;
            edx = 0x14;
            bl = 0x47;
        } else {
L00427531:
            if(A18 <= 262144) {
                != ? 0x427544 : ;
                if(A14 >= 0) {
                    goto L00427552;
                }
                ecx = 0x28;
                edx = 0x1e;
                bl = 0x54;
            } else {
L00427552:
                if(A18 <= 268435456) {
                    != ? 0x427565 : ;
                    if(A14 >= 0) {
                        goto L00427573;
                    }
                    ecx = 0x32;
                    edx = 0x28;
                    bl = 0x50;
                } else {
L00427573:
                    ecx = 0x3c;
                    edx = 0x32;
                    bl = 0x45;
                }
            }
        }
        if(!(cl & 0x20)) {
            ebp = A18;
            edi = A14;
            asm("shrd edi,ebp,cl");
            ebp = ebp >> cl;
        } else {
            edi = A18 >> cl;
            ebp = 0;
        }
        cl = dl;
        if(!(cl & 0x20)) {
            A20 = A18;
            edx = A14;
            asm("shrd edx,eax,cl");
            A20 = A20 >> cl;
        } else {
            edx = A18 >> cl;
            A20 = 0;
        }
        *esp = edx;
    }
    esi = esi - 1;
    *esi = bl;
    esi = esi - 1;
    dl = (( *esp & 0x3ff) + ( *esp & 0x3ff) * 4 >> 9) + 0x30;
    *esi = dl;
    esi = esi - 1;
    edx = 0;
    *esi = 0x2e;
    esi = esi - 1;
    A20 = edi;
    edx = 0xa / 0xa % 0xa / 0xa;
    A20 :: 0;
    if(!( *esi = edx + 0x30)) {
        ebx = A20;
        esi = esi - 1;
        A20 = -858993459;
        asm("mul ebx");
        ecx = edi;
        A20 = 1374389535;
        edx = (edx >> 3) * 0xa;
        ebx = ebx - edx;
        asm("mul ecx");
        bl = bl + 0x30;
        *esi = bl;
        edx = edx >> 5;
        if(edx != 0) {
            esi = esi - 1;
            ebx = edx;
            A20 = -858993459;
            asm("mul ebx");
            A20 = 274877907;
            edx = (edx >> 3) * 0xa;
            bl = ebx - edx + 0x30;
            asm("mul ecx");
            *esi = bl;
L00427640:
            if(edx >> 6 != 0) {
                dl = dl + 0x30;
                esi = esi - 1;
                *esi = dl;
            }
        }
    }
L0042764f:
    A20 = Vfffffffc - esi;
    if(A20 > A20) {
    }
    edx = *esi & 0xff;
    *A1c = dl;
    if(A20 != 1) {
        ebx = *(esi + 1) & 0xff;
        *(A1c + 1) = bl;
        if(A20 != 2) {
            edx = *(esi + 2) & 0xff;
            *(A1c + 2) = dl;
            if(A20 != 3) {
                ebx = *(esi + 3) & 0xff;
                *(A1c + 3) = bl;
                if(A20 != 4) {
                    edx = *(esi + 4) & 0xff;
                    *(A1c + 4) = dl;
                    if(A20 != 5) {
                        ebx = *(esi + 5) & 0xff;
                        *(A1c + 5) = bl;
                        if(A20 != 6) {
                            edx = *(esi + 6) & 0xff;
                            *(A1c + 6) = dl;
                        }
                    }
                }
            }
        }
    }
    esp = esp + 0x18;
}

/*	Procedure: 0x004276D0 - 0x00427931
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044CB90()
 *		L0044D1A0()
 */

L004276D0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 4;
    esi = 0;
    edi = Ac;
    if(ebx != 0) {
        edx = ebx - 9;
        if(edx <= 0x24) {
            switch(edx) {
                case 0:
                    esi = 0x474898;
                    goto L00427750;
                case 1:
L00427710:
                    esi = 0x47489c;
                    goto L00427750;
                case 2:
                    goto L00427717;
                case 3:
                    goto L00427717;
                case 4:
                    goto L00427710;
                case 5:
                    goto L00427717;
                case 6:
                    goto L00427717;
                case 7:
                    goto L00427717;
                case 8:
                    goto L00427717;
                case 9:
                    goto L00427717;
                case 0xa:
                    goto L00427717;
                case 0xb:
                    goto L00427717;
                case 0xc:
                    goto L00427717;
                case 0xd:
                    goto L00427717;
                case 0xe:
                    goto L00427717;
                case 0xf:
                    goto L00427717;
                case 0x10:
                    goto L00427717;
                case 0x11:
                    goto L00427717;
                case 0x12:
                    goto L00427717;
                case 0x13:
                    goto L00427717;
                case 0x14:
                    goto L00427717;
                case 0x15:
                    goto L00427717;
                case 0x16:
                    goto L00427717;
                case 0x17:
L004276f4:
                    esi = 0x4748a4;
                    goto L00427750;
                case 0x18:
                    goto L00427717;
                case 0x19:
                    goto L00427717;
                case 0x1a:
                    goto L00427717;
                case 0x1b:
                    goto L00427717;
                case 0x1c:
                    goto L00427717;
                case 0x1d:
                    goto L00427717;
                case 0x1e:
                    goto L00427717;
                case 0x1f:
                    goto L00427717;
                case 0x20:
                    goto L00427717;
                case 0x21:
                    goto L00427717;
                case 0x22:
                    esi = 0x4749f0;
                    goto L00427750;
                case 0x23:
                    goto L00427717;
                case 0x24:
                    esi = 0x4749e8;
                    goto L00427750;
            }
            goto L004276f4;
        }
L00427717:
        L004287D0(ebx);
        if(eax & 0xf || edi > 0x6a || edi == 0x1a) {
            goto L00427750;
        }
        *(ebp - 0x10) = 1;
        *(ebp - 0xf) = bl;
        esi = ebp - 0x10;
        goto L00427750;
    }
    if(edi != 0) {
        goto L00427750;
    }
    return 0;
    if(esi != 0) {
        goto L00427785;
    }
    if(edi < 0xc8) {
    }
    if(*(edi * 4 + 0x480840) != 0) {
        goto L00427785;
    }
    if(A1c & 2) {
        goto L00427780;
    }
    esp = ebp - 0xc;
    return 0;
    esi = 0x4749f8;
    edi = A14;
    ebx = edi + A18;
    if(A10 & 0x11) {
        goto L0042779a;
    }
    A10 = A10 & -33;
    if(A1c & 1) {
        goto L00427860;
    }
    if(A10 & 0x20) {
        goto L004277c5;
    }
    edi = edi + L00428EA0(0x474a00, edi, ebx - edi);
    if(A10 & 0x10) {
        goto L004277e3;
    }
    edi = edi + L00428EA0(0x474a08, edi, ebx - edi);
    if(A10 & 1) {
        goto L00427801;
    }
    edi = edi + L00428EA0(0x474a10, edi, ebx - edi);
    if(A10 & 2) {
        goto L0042781f;
    }
    edi = edi + L00428EA0(0x474a18, edi, ebx - edi);
    if(A10 & 8) {
        goto L0042783d;
    }
    edi = edi + L00428EA0(0x474a20, edi, ebx - edi);
    if(A10 & 4) {
        goto L00427914;
    }
    (save)ebx - edi;
    (save)edi;
    (save)0x474a28;
    goto L0042790a;
    if(A10 & 0x20) {
        goto L0042787e;
    }
    edi = edi + L00428EA0(0x474a30, edi, ebx - edi);
    if(A10 & 0x10) {
        goto L0042789c;
    }
    edi = edi + L00428EA0(0x474a38, edi, ebx - edi);
    if(A10 & 1) {
        goto L004278ba;
    }
    edi = edi + L00428EA0(0x474a44, edi, ebx - edi);
    if(A10 & 2) {
        goto L004278d8;
    }
    edi = edi + L00428EA0(0x474a18, edi, ebx - edi);
    if(A10 & 8) {
        goto L004278f6;
    }
    edi = edi + L00428EA0(0x474a50, edi, ebx - edi);
    if(A10 & 4) {
        goto L00427914;
    }
    edi = edi + L00428EA0("\tCapsLock-", edi, ebx - edi);
    eax = edi + L00428EA0(esi, edi, ebx - edi) - A14;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00427940 - 0x00427B82
 *	Argument size: 13
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00427B90()
 *		L00432A90()
 *		L00443C90()
 *		L0044489B()
 */

L00427940(A7, A8, Ac, A10)
/* unknown */ void  A7;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffff7;



    ebx = A8;
    (save)A10;
    (save)ebp;
    edx = ebx + Ac;
    esp = esp - 4;
    do {
        eax = *ebx & 0xff;
        if(al > 0x20 || *((al & 0xff) + 0x480440) & 0xff & 0x60) {
            break;
        }
        ebx = ebx + 1;
    } while(ebx < edx);
    if(ebx >= edx) {
        esp = esp + 4;
        (restore)ebp;
        (restore)A10;
        return 0;
    }
    Vfffffff7 = 0;
    eax = *ebx & 0xff;
    if(eax == 0x2d) {
        if(!(A10 & 65536)) {
            esp = esp + 4;
            (restore)ebp;
            (restore)A10;
            return 0;
        }
        Vfffffff7 = 1;
        goto L004279b5;
    }
    if(eax == 0x2b) {
L004279b5:
        ebx = ebx + 1;
    }
    eax = 0;
    if(!(A10 & 0x1000)) {
        if(ebx + 1 >= edx || ( *ebx & 0xff) != 0x30 || ( *(ebx + 1) & 0xff) != 0x78) {
            goto L00427ab9;
        }
        ebx = ebx + 2;
        goto L00427ab9;
    }
    if(!(A10 & 0x400)) {
        if(ebx + 1 < edx && ( *ebx & 0xff) == 0x30 && ( *(ebx + 1) & 0xff) == 0x62) {
            ebx = ebx + 2;
        }
    } else {
        if(A10 & 0x800 || ebx + 1 >= edx || ( *ebx & 0xff) != 0x30) {
            goto L00427af1;
        }
        ecx = *(ebx + 1) & 0xff;
        if(ecx == 0x78) {
            ebx = ebx + 2;
        } else {
            if(ecx != 0x62) {
                goto L00427af1;
            }
            ebx = ebx + 2;
            goto L00427aeb;
L00427aac:
            eax = eax | -1;
            goto L00427b3e;
        }
L00427ab9:
        while(ebx < edx) {
            ecx = *ebx & 0xff;
            ebx = ebx + 1;
            if(ecx < 0x30 || ecx > 0x39) {
                if(ecx < 0x41 || ecx > 0x46) {
                    if(ecx < 0x61 || ecx > 0x66) {
                        break;
                    }
                    ecx = ecx - 0x57;
                } else {
                    ecx = ecx - 0x37;
                }
            } else {
                ecx = ecx - 0x30;
            }
            if(!(eax & -268435456)) {
                goto L00427aac;
            }
            eax = eax << 4 | ecx;
        }
        goto L00427b3e;
L00427ae2:
        eax = eax | -1;
        goto L00427b3e;
    }
L00427aeb:
    while(ebx < edx) {
        ecx = *ebx & 0xff;
        ebx = ebx + 1;
        if(ecx != 0x30) {
            if(ecx != 0x31) {
                break;
            }
            ebp = 1;
        } else {
            ebp = 0;
        }
        if(!(eax & -2147483648)) {
            goto L00427ae2;
        }
        eax = eax + eax | ebp;
    }
    goto L00427b3e;
L00427af1:
    if(ebx < edx) {
        do {
            ecx = *ebx & 0xff;
            ebx = ebx + 1;
            if(ecx >= 0x30) {
                if(ecx > 0x39) {
                    goto L00427b05;
                }
                if(eax >= 429496729 && (eax > 429496729 || ecx - 0x30 > 5)) {
                    goto L00427b26;
                }
                eax = eax + eax * 4 + eax + eax * 4;
                eax = eax + ecx - 0x30;
            } else {
L00427b05:
                if(ecx != 0x2c) {
                    break;
                }
            }
        } while(ebx < edx);
        goto L00427b3e;
L00427b26:
        eax = eax | -1;
    }
L00427b3e:
    if(!(A10 & 65536)) {
        if(A7 != 0) {
            if(eax >= -2147483648) {
                esp = esp + 4;
                (restore)ebp;
                (restore)A10;
                return -2147483648;
            }
            eax = ~eax;
            esp = esp + 4;
            (restore)ebp;
            (restore)A10;
            return;
        }
        if(eax > 2147483647) {
            eax = 2147483647;
        }
    }
    esp = esp + 4;
    (restore)ebp;
    (restore)A10;
}

/*	Procedure: 0x00427B83 - 0x00427B8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00427B83()
{



}

/*	Procedure: 0x00427B90 - 0x00427BAE
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L00427B90(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00427940(A8, Ac, A10 | 65536);
}

/*	Procedure: 0x00427BAF - 0x00427BAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00427BAF()
{



}

/*	Procedure: 0x00427BB0 - 0x00427C7B
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00427C80()
 */

L00427BB0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0xc;
    ebx = Ac;
    if(A8 == A10) {
        esi = A8;
        do {
            eax = L00428490(esi, ebx, ebp - 0x18);
            if(A14 < *(ebp - 0x18)) {
                break;
            }
            if(eax < 0x100) {
                edx = *(A18 + eax) & 0xff;
                if((dl & 0xff) != eax) {
                    L00428380(dl & 0xff, esi, *(ebp - 0x18));
                }
            }
            eax = *(ebp - 0x18);
            ebx = ebx - eax;
            esi = esi + *(ebp - 0x18);
            A14 = A14 - eax;
        } while(ebx != 0);
        return esi - A8;
    }
    for(esi = A10; ebx != 0 && A14 != 0; A14 = A14 - eax) {
        eax = L00428490(A8, ebx, ebp - 0x10);
        ecx = *(ebp - 0x10);
        A8 = A8 + ecx;
        ebx = ebx - ecx;
        if(eax < 0x100) {
            eax = *(A18 + eax) & 0xff;
        }
        eax = L00428380(eax, esi, A14);
        esi = esi + eax;
    }
    eax = esi - A10;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00427C7C - 0x00427C7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00427C7C()
{



}

/*	Procedure: 0x00427C80 - 0x00427C9F
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040CB60()
 *		L004154F0()
 *		L00426440()
 *		L00438030()
 *		L00438060()
 */

L00427C80(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return L00427BB0(A8, Ac, A10, A14, 0x480540);
}

/*	Procedure: 0x00427CA0 - 0x00427D99
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00426440()
 *		L00427DA0()
 *		L00438100()
 *		L00442C60()
 *		L004455F0()
 *		L0044602B()
 *		L00449150()
 *		L0044A620()
 */

L00427CA0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A8;
    ecx = eax;
    (save)ebx;
    ebx = A4;
    if(ecx == 0) {
        (restore)ebx;
        return 0;
    }
    edx = *(ebx + ecx - 1) & 0xff;
    if(dl < 0x80) {
        (restore)ebx;
        return;
    }
    if(!(dl & 0xff & 0x40)) {
        eax = ecx - 1;
        (restore)ebx;
        return;
    }
    if(!(edx = ecx - 1)) {
        (restore)ebx;
        return 0;
    }
    edx = *(ebx + ecx - 2) & 0xff;
    if(dl < 0x80) {
        eax = ecx - 1;
        (restore)ebx;
        return;
    }
    edx = dl & 0xff;
    if(!(edx & 0x40)) {
        if((edx & 0xe0) == 0xc0) {
            (restore)ebx;
            return;
        }
        eax = ecx - 2;
        (restore)ebx;
        return;
    }
    if(!(edx = ecx - 2)) {
        (restore)ebx;
        return 0;
    }
    edx = *(ebx + ecx - 3) & 0xff;
    if(dl < 0x80) {
        eax = ecx - 2;
        (restore)ebx;
        return;
    }
    edx = dl & 0xff;
    if(!(edx & 0x40)) {
        if((edx & 0xf0) == 0xe0) {
            (restore)ebx;
            return;
        }
        eax = ecx - 3;
        (restore)ebx;
        return;
    }
    if(!(edx = ecx - 3)) {
        (restore)ebx;
        return 0;
    }
    edx = *(ebx + ecx - 4) & 0xff;
    if(dl < 0x80) {
        eax = ecx - 3;
        (restore)ebx;
        return;
    }
    ebx = dl & 0xff;
    if(!(ebx & 0x40)) {
        if((ebx & 0xf8) == 0xf0) {
            (restore)ebx;
            return;
        }
        eax = ecx - 4;
        (restore)ebx;
        return;
    }
    eax = ecx - 4;
    (restore)ebx;
}

/*	Procedure: 0x00427D9A - 0x00427D9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00427D9A()
{



}

/*	Procedure: 0x00427DA0 - 0x00427F34
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00401790()
 *		L00401D10()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E830()
 *		L004125B0()
 *		L004154F0()
 *		L0044602B()
 */

L00427DA0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0x24;
    *(ebp - 0x10) = edi != 0 ? *edi & 0xff : 0;
    if(*(ebp - 0x10) == 0) {
        eax = A18;
        if(A10 > eax) {
            A10 = eax;
        }
        A10 = L00427CA0(Ac, A10);
        eax = A14;
        if(Ac != eax) {
            L004342A0(eax, Ac, A10);
        }
        return A10;
    }
    if(*(ebp - 0x10) == 1) {
        ebx = *(edi + 1) & 0xff;
        if(bl >= 0x80) {
            L00429610(65538);
        }
        ecx = Ac;
        eax = A14;
        esi = ecx;
        edi = eax;
        esi = esi + A10;
        for(edi = edi + A18; ecx < esi && eax < edi; eax = eax + 1) {
            edx = *ecx & 0xff;
            ecx = ecx + 1;
            if(dl == bl) {
                continue;
            }
            *eax = dl;
        }
        eax = L00427CA0(A14, eax - A14);
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x30) = 0;
    *(ebp - 0x2c) = 0;
    *(ebp - 0x28) = 0;
    *(ebp - 0x24) = 0;
    *(ebp - 0x20) = 0;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = 0;
    esi = 1;
    if(*(ebp - 0x10) >= 1) {
        do {
            ebx = *(edi + esi) & 0xff;
            if(bl >= 0x80) {
                L00429610(65538);
            }
            eax = bl & 0xff;
            cl = al & 7;
            eax = eax >> 3;
            dl = 1 << cl;
            esi = esi + 1;
            *(ebp + eax - 0x30) = *(ebp + eax - 0x30) | dl;
        } while(esi <= *(ebp - 0x10));
    }
    edx = Ac;
    *(ebp - 0x10) = edx;
    edi = A14;
    *(ebp - 0x10) = *(ebp - 0x10) + A10;
    for(esi = edi + A18; edx < *(ebp - 0x10) && edi < esi; edi = edi + 1) {
        ebx = *edx & 0xff;
        ecx = bl & 0xff;
        eax = ecx >> 3;
        ecx = ecx & 7;
        eax = ( *(ebp + eax - 0x30) & 0xff) >> cl;
        edx = edx + 1;
        if(eax & 1) {
            continue;
        }
        *edi = bl;
    }
    eax = L00427CA0(A14, edi - A14);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00427F35 - 0x00427F3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00427F35()
{



}

/*	Procedure: 0x00427F40 - 0x00427FD3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0040E160()
 *		L00428830()
 *		L00429190()
 *		L004381A0()
 *		L004381F0()
 *		L0044602B()
 *		L00449150()
 */

L00427F40(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    eax = A8;
    ebx = *Ac;
    esi = *eax;
    if(ebx == 0) {
        return 0;
    }
    if(esi == 0) {
        eax = L00429610(65538);
    }
    al = 0;
    do {
        ecx = *esi & 0xff;
        if(cl > 0x20 || *((cl & 0xff) + 0x480440) & 0xff & 0x60) {
            break;
        }
        ebx = ebx - 1;
        esi = esi + 1;
        al = 1;
    } while(ebx != 0);
    while(ebx != 0) {
        ecx = *(ebx + esi - 1) & 0xff;
        if(cl > 0x20 || *((cl & 0xff) + 0x480440) & 0xff & 0x60) {
            break;
        }
        ebx = ebx - 1;
        al = 1;
    }
    *A8 = esi;
    *Ac = ebx;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00427FD4 - 0x00427FDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00427FD4()
{



}

/*	Procedure: 0x00427FE0 - 0x00428027
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00442740()
 */

L00427FE0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    (save)esi;
    esi = Ac + A8;
    do {
        if(ebx = ebx - 1) {
            break;
        }
        esi = esi - 1;
        eax = *esi & 0xff;
    } while(al <= 0x20 && *((al & 0xff) + 0x480440) & 0xff & 0x60);
    if(ebx == -1) {
        (restore)esi;
        return 0;
    }
    eax = esi + 1 - edx;
    (restore)esi;
}

/*	Procedure: 0x00428028 - 0x0042802F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428028()
{



}

/*	Procedure: 0x00428030 - 0x00428182
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444E38()
 *		L004452F0()
 *		L00445720()
 *		L004579D0()
 */

L00428030(A10, A14, A18, A1c, A20)
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A14;
    (save)ebp;
    if(esi == 0) {
        *A20 = 0;
        ebx = *A20;
        eax = A1c;
        *eax = ebx;
        (restore)ebp;
        return 0;
    }
    if(A18 >= esi) {
        eax = A1c;
        *eax = esi;
        *A20 = 0;
        (restore)ebp;
        return 0;
    }
    eax = A10 + A18;
    ebx = *eax & 0xff;
    edx = eax;
    ecx = A18;
    if(bl <= 0x20) {
        ebx = *((bl & 0xff) + 0x480440) & 0xff;
        if(ebx & 0x60) {
            goto L00428102;
        }
        do {
            if(ecx = ecx - 1) {
                break;
            }
            edx = edx - 1;
            ebx = *edx & 0xff;
        } while(bl <= 0x20 && *((bl & 0xff) + 0x480440) & 0xff & 0x60);
        ecx = ecx == -1 ? 0 : edx + 1 - A10;
        ebp = esi - A18;
        do {
            if(ebp = ebp - 1) {
                break;
            }
            edx = *eax & 0xff;
            eax = eax + 1;
        } while(dl <= 0x20 && *((dl & 0xff) + 0x480440) & 0xff & 0x60);
        if(ebp != -1) {
            esi = eax - A10 - 1;
        }
    } else {
L00428102:
        do {
            if(ecx = ecx - 1) {
                break;
            }
            edx = edx - 1;
            ebx = *edx & 0xff;
            if(bl > 0x20) {
                goto L00428102;
            }
            ebx = *((bl & 0xff) + 0x480440) & 0xff;
        } while(ebx & 0x60);
        ecx = ecx == -1 ? 0 : edx + 1 - A10;
        ebx = esi - A18;
L00428140:
        do {
            if(ebx = ebx - 1) {
                break;
            }
            edx = *eax & 0xff;
            eax = eax + 1;
            if(dl > 0x20) {
                goto L00428140;
            }
        } while(*((dl & 0xff) + 0x480440) & 0xff & 0x60);
        if(ebx != -1) {
            esi = eax - A10 - 1;
        }
    }
    edx = esi;
    eax = A1c;
    *eax = ecx;
    *A20 = edx - ecx;
    (restore)ebp;
    return 1;
}

/*	Procedure: 0x00428183 - 0x0042818F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428183()
{



}

/*	Procedure: 0x00428190 - 0x0042832F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00428190()
 *		L00428330()
 */

L00428190()
{



    (save)ebp;
    ebp = esp;
    eax = *(ebp + 8);
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    *(ebp - 0x10) = eax;
    ebx = *(ebp + 0x10);
    *(ebp - 0x14) = eax;
    eax = *(ebp + 0xc);
    *(ebp - 0x10) = *(ebp - 0x10) + eax;
    for(edi = ebx + *(ebp + 0x14); ebx < edi; *(ebp - 0x14) = *(ebp - 0x14) + 1) {
        eax = *(ebp - 0x10);
        *(ebp - 0x14) :: eax;
        if(!(ecx = *ebx & 0xff) && (cl & 0xff) != 0x2a) {
            goto L004281d8;
        }
        eax = cl & 0xff;
        if(eax == 0x2a) {
            goto L004281ea;
        }
L00428240:
        if(eax != 0x3f) {
            if(eax != 0x5b) {
                if(eax == 0x5c) {
                    ebx = ebx + 1;
                    if(ebx >= edi) {
                        goto L004282ed;
                    }
                    ecx = *ebx & 0xff;
                }
                eax = *(ebp - 0x14);
                if(cl == *eax) {
                    goto L00428310;
                } else {
                    goto L00428301;
                }
            }
            ebx = ebx + 1;
            for(edx = *( *(ebp - 0x14)) & 0xff; ebx < edi; ebx = ebx + 1) {
L00428270:
                ecx = *ebx & 0xff;
                eax = cl & 0xff;
                if(eax == 0x5d) {
                    goto L0042827b;
                }
                if(cl == dl) {
                    goto L004282d3;
                }
                if(ebx + 1 < edi) {
                    eax = *(ebx + 1) & 0xff;
                    if(eax == 0x2d) {
                        if(ebx + 2 >= edi) {
                            goto L004282a0;
                        }
L004282b0:
                        cl :: dl;
                        if(!(eax = *(ebx + 2) & 0xff) && al >= dl || cl >= dl && al <= dl) {
                            goto L004282d3;
                        }
                        ebx = ebx + 2;
                    }
                }
            }
            goto L00428264;
L004282d3:
            while(ebx < edi && ( *ebx & 0xff) != 0x5d) {
                ebx = ebx + 1;
            }
        }
L00428310:
        ebx = ebx + 1;
    }
    eax = *(ebp - 0x10);
    *(ebp - 0x14) :: eax;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    asm("setnc al");
    return;
L004281d8:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return 0;
L004281ea:
    eax = ebx + 1;
    if(eax >= edi) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 1;
        goto L00428200;
L0042821b:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 1;
L00428229:
        while(1) {
            eax = *(ebp - 0x10);
            if(*(ebp - 0x14) >= eax) {
                break;
            }
L00428200:
            if(L00428190( *(ebp - 0x14), *(ebp - 0x10) - *(ebp - 0x14), ebx + 1, esi) != 0) {
                goto L0042821b;
            }
            *(ebp - 0x14) = *(ebp - 0x14) + 1;
        }
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
        goto L00428240;
L00428264:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
        goto L00428270;
L0042827b:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
L004282a0:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
        goto L004282b0;
L004282ed:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
L00428301:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
        goto L00428310;
    }
    eax = ebx + 1;
    esi = edi - eax;
    goto L00428229;
}

/*	Procedure: 0x00428330 - 0x0042837A
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00414DD0()
 */

L00428330(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    (save)esi;
    esi = 0;
    ebx = 0;
    eax = A10;
    if(A14 > 0) {
        do {
            if(( *(ebx + eax) & 0xff) == 0x2a) {
                esi = esi + 1;
            }
            ebx = ebx + 1;
        } while(ebx < A14);
    }
    if(esi > 0x20) {
        esp = ebp - 8;
        (restore)esi;
        return 0;
    }
    eax = L00428190(A8, Ac, eax, A14);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0042837B - 0x0042837F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042837B()
{



}

/*	Procedure: 0x00428380 - 0x00428481
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00425F10()
 *		L00426440()
 *		L00427BB0()
 *		L00428640()
 *		L0042F420()
 *		L0044489B()
 *		L00461BD0()
 */

L00428380(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)Ac;
    if(A4 >> 7 == 0) {
        if(Ac == 0) {
            (restore)Ac;
            return 0;
        }
        *A8 = cl;
        (restore)Ac;
        return 1;
    }
    if(A4 >> 0xb == 0) {
        if(Ac < 2) {
            (restore)Ac;
            return 0;
        }
        al = A4 >> 6 | 0xc0;
        *A8 = al;
        cl = cl & 0x3f | 0x80;
        *(A8 + 1) = cl;
        (restore)Ac;
        return 2;
    }
    if(A4 >> 0x10 == 0) {
        if(Ac < 3) {
            (restore)Ac;
            return 0;
        }
        al = A4 >> 0xc | 0xe0;
        *A8 = al;
        al = A4 >> 6 & 0x3f | 0x80;
        *(A8 + 1) = al;
        cl = cl & 0x3f | 0x80;
        *(A8 + 2) = cl;
        (restore)Ac;
        return 3;
    }
    if(A4 >> 0x15 == 0) {
        if(Ac < 4) {
            (restore)Ac;
            return 0;
        }
        al = A4 >> 0x12 | 0xf0;
        *A8 = al;
        al = A4 >> 0xc & 0x3f | 0x80;
        *(A8 + 1) = al;
        *(A8 + 2) = A4 >> 6 & 0x3f | 0x80;
        *(A8 + 3) = cl & 0x3f | 0x80;
        (restore)Ac;
        return 4;
    }
    if(Ac < 3) {
        (restore)Ac;
        return 0;
    }
    *A8 = 0xef;
    *(A8 + 1) = 0xbf;
    *(A8 + 2) = 0xbd;
    (restore)Ac;
    return 3;
}

/*	Procedure: 0x00428482 - 0x0042848F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428482()
{



}

/*	Procedure: 0x00428490 - 0x00428632
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L0040E160()
 *		L00425D00()
 *		L00425E40()
 *		L00425F10()
 *		L00426020()
 *		L00426330()
 *		L004263B0()
 *		L00426440()
 *		L00427BB0()
 *		L004286E0()
 *		L0042F2A0()
 *		L0044489B()
 *		L004455F0()
 *		L00445720()
 *		L0044BE90()
 *		L004675A0()
 *		L00467910()
 *		L00467A30()
 */

L00428490(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;



    edx = A18;
    esp = esp - 4;
    if(edx == 0) {
        edx = 0;
        eax = 0;
    } else {
        eax = *A14 & 0xff;
        ecx = al & 0xff;
        if(!(ecx & 0x80)) {
            eax = al & 0xff;
        } else {
            if(!(ecx & 0x40)) {
                eax = 65533;
            } else {
                if(!(ecx & 0x20)) {
                    if(edx < 2) {
                        goto L00428620;
                    }
                    edx = *(A14 + 1) & 0xff;
                    eax = (ecx & 0x1f) << 6;
                    eax = eax | edx & 0x3f;
                    if(eax < 0x80 || edx >> 6 != 2) {
                        eax = 65533;
                    }
                    edx = 2;
                    goto L0042860b;
                }
                if(!(ecx & 0x10)) {
                    if(edx < 3) {
                        goto L00428620;
                    }
                    ebp = (ecx & 0xf) << 0xc;
                    ebx = *(A14 + 1) & 0xff;
                    eax = (ebx & 0x3f) << 6 | ebp;
                    edx = *(A14 + 2) & 0xff;
                    eax = eax | edx & 0x3f;
                    if(eax >= 0x800) {
                        ebp = edx >> 6;
                        if((ebp | ebx & 0xc0) == 0x82) {
                            goto L0042857b;
                        }
                    }
                    eax = 65533;
L0042857b:
                    edx = 3;
                    goto L0042860b;
                }
                if(!(ecx & 8)) {
                    if(edx < 4) {
                        goto L00428620;
                    }
                    *esp = *(A14 + 1) & 0xff;
                    ebp = (ecx & 7) << 0x12;
                    eax = ( *esp & 0x3f) << 0xc | ebp;
                    edx = *(A14 + 2) & 0xff;
                    eax = eax | (edx & 0x3f) << 6;
                    ebx = *(A14 + 3) & 0xff;
                    eax = eax | ebx & 0x3f;
                    if(eax >= 65536) {
                        ebp = ebx >> 6;
                        ebx = (edx & 0xc0) >> 3;
                        if((ebp | ebx | *esp & 0xc0) == 0x92) {
                            goto L004285fa;
                        }
                    }
                    eax = 65533;
L004285fa:
                    edx = 4;
                    goto L0042860b;
                }
                eax = 65533;
            }
        }
        edx = 1;
    }
L0042860b:
    if(A1c != 0) {
        *A1c = edx;
    }
    esp = esp + 4;
    return;
L00428620:
    if(A1c != 0) {
        *A1c = edx;
    }
    esp = esp + 4;
    return 65533;
}

/*	Procedure: 0x00428633 - 0x0042863F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428633()
{



}

/*	Procedure: 0x00428640 - 0x004286DC
 *	Argument size: 16
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0042C260()
 *		L0042CFC0()
 *		L0042E830()
 */

L00428640(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A10;
    *(ebp - 0x10) = ebx;
    *(ebp - 0x10) = *(ebp - 0x10) + A14;
    edi = A8;
    if(!(esi = (Ac >> 1) - 1)) {
        do {
            eax = *edi & 65535;
            edx = eax;
            edi = edi + 2;
            if(edx >> 0xb == 0x1b) {
                if(!(eax & 0x400) && esi != 0) {
                    edx = *edi & 65535;
                    if(edx >> 0xa == 0x37) {
                        goto L00428691;
                    }
                }
                eax = 65533;
                goto L004286b5;
L00428691:
                eax = (eax & 0x3ff) << 0xa;
                eax = eax | edx & 0x3ff;
                edi = edi + 2;
                esi = esi - 1;
                eax = eax + 65536;
            }
L004286b5:
            eax = L00428380(eax, ebx, *(ebp - 0x10) - ebx);
            if(eax == 0) {
                break;
            }
            ebx = ebx + eax;
        } while(esi = esi - 1);
    }
    return ebx - A10;
}

/*	Procedure: 0x004286DD - 0x004286DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004286DD()
{



}

/*	Procedure: 0x004286E0 - 0x00428776
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041C2E0()
 *		L0041C5A0()
 *		L0041CA10()
 *		L0042A740()
 *		L0042C050()
 *		L00433B90()
 */

L004286E0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    ecx = A8;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    ebx = A10;
    *(ebp - 0x14) = ebx;
    esi = ecx;
    edi = ecx;
    esi = esi + Ac;
    *(ebp - 0x14) = *(ebp - 0x14) + A14;
    do {
        eax = L00428490(edi, esi - edi, ebp - 0x10);
        edi = edi + *(ebp - 0x10);
        if(eax > 65535) {
            if(*(ebp - 0x14) - ebx < 4) {
                break;
            }
            ecx = eax + -65536 >> 0xa & 0x3ff;
            eax = eax & 0x3ff;
            ecx = ecx | -10240;
            *ebx = cx;
            *(ebx + 2) = eax | -9216;
            ebx = ebx + 4;
        } else {
            if(*(ebp - 0x14) - ebx < 2) {
                break;
            }
            *ebx = ax;
            ebx = ebx + 2;
        }
    } while(edi < esi);
    eax = ebx - A10;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00428777 - 0x0042877F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428777()
{



}

/*	Procedure: 0x00428780 - 0x004287A6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044489B()
 */

L00428780(A4)
/* unknown */ void  A4;
{



    al = 1;
    if((A4 < 0x30 || A4 > 0x39) && (A4 < 0x41 || A4 > 0x46) && (A4 < 0x61 || A4 > 0x66)) {
        al = 0;
    }
}

/*	Procedure: 0x004287A7 - 0x004287AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004287A7()
{



}

/*	Procedure: 0x004287B0 - 0x004287CF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00446E30()
 */

L004287B0(A4)
/* unknown */ void  A4;
{



    if(A4 > 0xff) {
        return 0;
    }
    eax = *(A4 + 0x480440) & 0xff;
    return 0;
}

/*	Procedure: 0x004287D0 - 0x004287E7
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L004287D0(A4)
/* unknown */ void  A4;
{



    if(A4 > 0xff) {
        return 0;
    }
    return *(A4 + 0x480440) & 0xff;
}

/*	Procedure: 0x004287E8 - 0x004287EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004287E8()
{



}

/*	Procedure: 0x004287F0 - 0x00428802
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041FE30()
 *		L0042C260()
 *		L0042D720()
 *		L0042DAB0()
 */

L004287F0(A4)
/* unknown */ void  A4;
{



    if(A4 < 0x100) {
        eax = *(eax + 0x480640) & 0xff;
    }
}

/*	Procedure: 0x00428803 - 0x0042880F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428803()
{



}

/*	Procedure: 0x00428810 - 0x00428822
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041FE30()
 *		L004254D9()
 *		L00426020()
 *		L00426440()
 */

L00428810(A4)
/* unknown */ void  A4;
{



    if(A4 < 0x100) {
        eax = *(eax + 0x480540) & 0xff;
    }
}

/*	Procedure: 0x00428823 - 0x0042882F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428823()
{



}

/*	Procedure: 0x00428830 - 0x004288B0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00428830(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    (save) & Ac;
    eax = L00427F40( & A8);
    (restore)ecx;
    if(Ac >= 2) {
        eax = *A8 & 0xff;
        if(eax == 0x2b) {
            goto L0042885a;
        }
        if(eax == 0x2d) {
L0042885a:
            A8 = A8 + 1;
            Ac = Ac - 1;
        }
    }
    esi = 0;
    if(Ac > 0) {
        do {
            eax = *(esi + A8) & 0xff;
            ecx = eax & 7;
            eax = eax >> 3;
            ebx = 1 << cl;
            if(!(ebx & *(eax + 0x480cf0) & 0xff)) {
                goto L00428891;
            }
L004288a0:
            esi = esi + 1;
        } while(esi < Ac);
        goto L004288a8;
L00428891:
        esp = ebp - 8;
        (restore)esi;
        (restore)ebx;
        return 0;
        goto L004288a0;
    }
L004288a8:
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x004288B1 - 0x004288BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004288B1()
{



}

/*	Procedure: 0x004288C0 - 0x0042896E
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L00401790()
 *		L00401D10()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L00403D00()
 *		L00406950()
 *		L00408F30()
 *		L00409390()
 *		L00409860()
 *		L00409B60()
 *		L0040AFD0()
 *		L004104E0()
 *		L00412880()
 *		L00412B90()
 *		L004148A0()
 *		L00414CB0()
 *		L00416790()
 *		L0041DB20()
 *		L0042CFC0()
 *		L0042E830()
 *		L0042FAA0()
 *		L00437460()
 *		L004395A0()
 *		L00448690()
 *		L00450800()
 *		L00462270()
 *		L00464908()
 */

L004288C0(A14, A18)
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A14 == 0) {
        esp = esp + 4;
        return 0;
    }
    eax = A18 != 0 ? *A18 & 0xff : 0;
    *A14 = al;
    edx = 1;
    if(eax >= 1) {
        eax :: 8;
        if(!(edi = eax - 8)) {
            do {
                ebx = *(A18 + edx) & 0xff;
                *(A14 + edx) = bl;
                ebx = *(A18 + edx + 1) & 0xff;
                *(A14 + edx + 1) = bl;
                ebx = *(A18 + edx + 2) & 0xff;
                *(A14 + edx + 2) = bl;
                ebx = *(A18 + edx + 3) & 0xff;
                *(A14 + edx + 3) = bl;
                ebx = *(A18 + edx + 4) & 0xff;
                *(A14 + edx + 4) = bl;
                ebx = *(A18 + edx + 5) & 0xff;
                *(A14 + edx + 5) = bl;
                ebx = *(A18 + edx + 6) & 0xff;
                *(A14 + edx + 6) = bl;
                ebx = *(A18 + edx + 7) & 0xff;
                *(A14 + edx + 7) = bl;
                edx = edx + 8;
            } while(edx <= edi);
        }
        do {
            ebx = *(A18 + edx) & 0xff;
            *(A14 + edx) = bl;
            edx = edx + 1;
        } while(edx <= eax);
    }
    esp = esp + 4;
}

/*	Procedure: 0x0042896F - 0x0042896F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042896F()
{



}

/*	Procedure: 0x00428970 - 0x00428A28
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L00402D10()
 *		L00405E70()
 *		L0040A760()
 *		L00412880()
 *		L00415380()
 *		L0041C5A0()
 *		L0042E570()
 */

L00428970(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A14 == 0) {
        esp = esp + 4;
        return 0;
    }
    eax = A18 != 0 ? *A18 & 0xff : 0;
    if(eax > A1c) {
        eax = A1c;
    }
    *A14 = al;
    edx = 1;
    if(eax >= 1) {
        eax :: 8;
        if(!(edi = eax - 8)) {
            do {
                ebx = *(A18 + edx) & 0xff;
                *(A14 + edx) = bl;
                ebx = *(A18 + edx + 1) & 0xff;
                *(A14 + edx + 1) = bl;
                ebx = *(A18 + edx + 2) & 0xff;
                *(A14 + edx + 2) = bl;
                ebx = *(A18 + edx + 3) & 0xff;
                *(A14 + edx + 3) = bl;
                ebx = *(A18 + edx + 4) & 0xff;
                *(A14 + edx + 4) = bl;
                ebx = *(A18 + edx + 5) & 0xff;
                *(A14 + edx + 5) = bl;
                ebx = *(A18 + edx + 6) & 0xff;
                *(A14 + edx + 6) = bl;
                ebx = *(A18 + edx + 7) & 0xff;
                *(A14 + edx + 7) = bl;
                edx = edx + 8;
            } while(edx <= edi);
        }
        do {
            ebx = *(A18 + edx) & 0xff;
            *(A14 + edx) = bl;
            edx = edx + 1;
        } while(edx <= eax);
    }
    esp = esp + 4;
}

/*	Procedure: 0x00428A29 - 0x00428A2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428A29()
{



}

/*	Procedure: 0x00428A30 - 0x00428B1A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00401D10()
 *		L00402D10()
 *		L00403D00()
 *		L00404640()
 *		L00406950()
 *		L00408A50()
 *		L00408CB0()
 *		L00408F30()
 *		L00412880()
 *		L00415DE0()
 *		L00416790()
 *		L00438100()
 */

L00428A30(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffffc;



    ebx = Ac;
    esp = esp - 8;
    if(ebx == 0) {
        esp = esp + 8;
        return 0;
    }
    A10 :: 0;
    if(!(eax = *ebx & 0xff)) {
        esp = esp + 8;
        return;
    }
    ecx = *A10 & 0xff;
    *esp = ecx;
    Vfffffffc = eax;
    Vfffffffc = Vfffffffc + *esp;
    if(Vfffffffc > 0xff) {
        *esp = 0xff;
        Vfffffffc = 0xff;
        *esp = *esp - eax;
    }
    *ebx = Vfffffffc;
    ebx = ebx + eax;
    ecx = 1;
    if(*esp >= 1) {
        esi = *esp - 8;
        if(*esp > 8) {
            do {
                eax = *(A10 + ecx) & 0xff;
                *(ebx + ecx) = al;
                eax = *(A10 + ecx + 1) & 0xff;
                *(ebx + ecx + 1) = al;
                eax = *(A10 + ecx + 2) & 0xff;
                *(ebx + ecx + 2) = al;
                eax = *(A10 + ecx + 3) & 0xff;
                *(ebx + ecx + 3) = al;
                eax = *(A10 + ecx + 4) & 0xff;
                *(ebx + ecx + 4) = al;
                eax = *(A10 + ecx + 5) & 0xff;
                *(ebx + ecx + 5) = al;
                eax = *(A10 + ecx + 6) & 0xff;
                *(ebx + ecx + 6) = al;
                eax = *(A10 + ecx + 7) & 0xff;
                *(ebx + ecx + 7) = al;
                ecx = ecx + 8;
            } while(ecx <= esi);
        }
        do {
            eax = *(A10 + ecx) & 0xff;
            *(ebx + ecx) = al;
            ecx = ecx + 1;
        } while(ecx <= *esp);
    }
    esp = esp + 8;
    return Vfffffffc;
}

/*	Procedure: 0x00428B1B - 0x00428B1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428B1B()
{



}

/*	Procedure: 0x00428B20 - 0x00428C0E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004148A0()
 */

L00428B20(Ac, A10, A14)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffffc;



    esi = Ac;
    esp = esp - 8;
    ebx = A14;
    if(esi == 0) {
        esp = esp + 8;
        return 0;
    }
    A10 :: 0;
    if(!(eax = *esi & 0xff)) {
        esp = esp + 8;
        return;
    }
    ecx = *A10 & 0xff;
    *esp = ecx;
    if(ecx > ebx) {
        *esp = ebx;
    }
    Vfffffffc = eax;
    Vfffffffc = Vfffffffc + *esp;
    if(Vfffffffc > 0xff) {
        *esp = 0xff;
        Vfffffffc = 0xff;
        *esp = *esp - eax;
    }
    *esi = Vfffffffc;
    *esp :: 1;
    ecx = 1;
    if(!(ebx = eax + esi)) {
        esi = *esp - 8;
        if(*esp > 8) {
            do {
                eax = *(A10 + ecx) & 0xff;
                *(ebx + ecx) = al;
                eax = *(A10 + ecx + 1) & 0xff;
                *(ebx + ecx + 1) = al;
                eax = *(A10 + ecx + 2) & 0xff;
                *(ebx + ecx + 2) = al;
                eax = *(A10 + ecx + 3) & 0xff;
                *(ebx + ecx + 3) = al;
                eax = *(A10 + ecx + 4) & 0xff;
                *(ebx + ecx + 4) = al;
                eax = *(A10 + ecx + 5) & 0xff;
                *(ebx + ecx + 5) = al;
                eax = *(A10 + ecx + 6) & 0xff;
                *(ebx + ecx + 6) = al;
                eax = *(A10 + ecx + 7) & 0xff;
                *(ebx + ecx + 7) = al;
                ecx = ecx + 8;
            } while(ecx <= esi);
        }
        do {
            eax = *(A10 + ecx) & 0xff;
            *(ebx + ecx) = al;
            ecx = ecx + 1;
        } while(ecx <= *esp);
    }
    esp = esp + 8;
    return Vfffffffc;
}

/*	Procedure: 0x00428C0F - 0x00428C0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428C0F()
{



}

/*	Procedure: 0x00428C10 - 0x00428CC6
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L00404640()
 */

L00428C10(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ecx = A14;
    esp = esp - 4;
    esi = A1c;
    if(ecx == 0) {
        esp = esp + 4;
        return 0;
    }
    edx = *ecx & 0xff;
    eax = esi + edx;
    if(eax > 0xff) {
        eax = 0xff;
        esi = 0xff - edx;
    }
    ebx = edx + ecx + 1;
    edx = 0;
    *ecx = al;
    if(esi > 0) {
        esi :: 8;
        if(!(edi = esi - 8)) {
            do {
                ecx = *(edx + A18) & 0xff;
                *(ebx + edx) = cl;
                ecx = *(A18 + edx + 1) & 0xff;
                *(ebx + edx + 1) = cl;
                ecx = *(A18 + edx + 2) & 0xff;
                *(ebx + edx + 2) = cl;
                ecx = *(A18 + edx + 3) & 0xff;
                *(ebx + edx + 3) = cl;
                ecx = *(A18 + edx + 4) & 0xff;
                *(ebx + edx + 4) = cl;
                ecx = *(A18 + edx + 5) & 0xff;
                *(ebx + edx + 5) = cl;
                ecx = *(A18 + edx + 6) & 0xff;
                *(ebx + edx + 6) = cl;
                ecx = *(A18 + edx + 7) & 0xff;
                *(ebx + edx + 7) = cl;
                edx = edx + 8;
            } while(edx < edi);
        }
        do {
            ecx = *(edx + A18) & 0xff;
            *(ebx + edx) = cl;
            edx = edx + 1;
        } while(edx < esi);
    }
    esp = esp + 4;
}

/*	Procedure: 0x00428CC7 - 0x00428CCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428CC7()
{



}

/*	Procedure: 0x00428CD0 - 0x00428D0F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00408A50()
 *		L00408B5A()
 *		L00408F30()
 *		L00409B60()
 *		L00412880()
 *		L00412B90()
 *		L004148A0()
 */

L00428CD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    if(A8 == 0) {
        return 0;
    }
    ebx = *A8 & 0xff;
    edx = ebx + A8 + 1;
    *A8 = ebx + L00426870(Ac, edx, 0xff - ebx, A10);
    esp = ebp - 8;
    return ebx;
}

/*	Procedure: 0x00428D10 - 0x00428D4F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 */

L00428D10(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    if(A8 == 0) {
        return 0;
    }
    ebx = *A8 & 0xff;
    edx = ebx + A8 + 1;
    *A8 = ebx + L00426D80(Ac, edx, 0xff - ebx, A10);
    esp = ebp - 8;
    return ebx;
}

/*	Procedure: 0x00428D50 - 0x00428D77
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00404640()
 *		L00408B5A()
 *		L00408CB0()
 *		L00408F30()
 *		L00412880()
 *		L004148A0()
 */

L00428D50(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    if(A4 == 0) {
        return 0;
    }
    if(( *A4 & 0xff) < 0xff) {
        *A4 = eax + 1;
        *(A4 + eax) = A8 & 0xff;
    }
}

/*	Procedure: 0x00428D78 - 0x00428D7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428D78()
{



}

/*	Procedure: 0x00428D80 - 0x00428DDE
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00401790()
 *		L00402D10()
 *		L00404010()
 *		L0040D600()
 *		L004100F0()
 *		L004154F0()
 *		L00450740()
 *		L00462620()
 *		L00467470()
 */

L00428D80(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebp;
    ecx = Ac != 0 ? *Ac & 0xff : 0;
    edx = A10 != 0 ? *A10 & 0xff : 0;
    if(ecx != edx) {
        (restore)ebp;
        return 0;
    }
    ebp = 1;
    if(ecx >= 1) {
        do {
            eax = *(Ac + ebp) & 0xff;
            edx = *(A10 + ebp) & 0xff;
            if(al != dl) {
                goto L00428dce;
            }
            ebp = ebp + 1;
        } while(ebp <= ecx);
        goto L00428dd9;
L00428dce:
        (restore)ebp;
        return 0;
    }
L00428dd9:
    (restore)ebp;
    return 1;
}

/*	Procedure: 0x00428DDF - 0x00428DDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428DDF()
{



}

/*	Procedure: 0x00428DE0 - 0x00428E1C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00411640()
 */

L00428DE0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebx;
    eax = A8;
    edx = Ac != 0 ? *Ac & 0xff : 0;
    ebx = eax != 0 ? *eax & 0xff : 0;
    edx = Ac + 1;
    eax = L00425E40(eax + 1, ebx, edx, edx, A10);
    esp = ebp - 4;
    (restore)ebx;
}

/*	Procedure: 0x00428E1D - 0x00428E1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428E1D()
{



}

/*	Procedure: 0x00428E20 - 0x00428E5A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004148A0()
 */

L00428E20(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A4;
    (save)ebx;
    if(eax == 0) {
        (restore)ebx;
        return;
    }
    ebx = *eax & 0xff;
    edx = 0;
    if(ebx > 0) {
        do {
            if(A8 == *(edx + eax + 1)) {
                goto L00428e49;
            }
L00428e50:
            edx = edx + 1;
        } while(edx < ebx);
        goto L00428e57;
L00428e49:
        eax = eax + 1 + edx;
        (restore)ebx;
        return;
        goto L00428e50;
    }
L00428e57:
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00428E5B - 0x00428E5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428E5B()
{



}

/*	Procedure: 0x00428E60 - 0x00428E97
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00402D10()
 *		L00405E70()
 *		L0042FAA0()
 */

L00428E60(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A4;
    (save)ebx;
    if(eax == 0) {
        (restore)ebx;
        return;
    }
    ebx = ( *eax & 0xff) + eax;
    if(ebx > eax) {
        ecx = A8 & 0xff;
        do {
            edx = *ebx & 0xff;
            ebx = ebx - 1;
            if(edx == ecx) {
                goto L00428e8a;
            }
L00428e90:
        } while(ebx > eax);
        goto L00428e94;
L00428e8a:
        eax = ebx + 1;
        (restore)ebx;
        return;
        goto L00428e90;
    }
L00428e94:
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00428E98 - 0x00428E9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428E98()
{



}

/*	Procedure: 0x00428EA0 - 0x00428F48
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L004011C0()
 *		L00401B20()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L00403D00()
 *		L00404010()
 *		L004051B0()
 *		L00405E70()
 *		L00406950()
 *		L00409390()
 *		L00409B60()
 *		L00409E60()
 *		L0040A760()
 *		L0040AA30()
 *		L0040AD20()
 *		L0040B3A0()
 *		L0040B9B0()
 *		L0040CB60()
 *		L0040D600()
 *		L0040D880()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E830()
 *		L0040F2D0()
 *		L004105F0()
 *		L00410960()
 *		L00412280()
 *		L00412F60()
 *		L004148A0()
 *		L00414FA0()
 *		L00415120()
 *		L004157B0()
 *		L00416000()
 *		L00416790()
 *		L00417EC0()
 *		L0041CB50()
 *		L00425600()
 *		L00429440()
 *		L004303D0()
 *		L00433B90()
 *		L00437730()
 *		L00437890()
 *		L004395A0()
 */

L00428EA0(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A14 == 0) {
        esp = esp + 4;
        return 0;
    }
    eax = *A14 & 0xff;
    if(eax > A1c) {
        eax = A1c;
    }
    edx = 0;
    if(eax > 0) {
        eax :: 8;
        if(!(edi = eax - 8)) {
            do {
                ebx = *(edx + A14 + 1) & 0xff;
                *(edx + A18) = bl;
                ebx = *(A14 + edx + 2) & 0xff;
                *(A18 + edx + 1) = bl;
                ebx = *(A14 + edx + 3) & 0xff;
                *(A18 + edx + 2) = bl;
                ebx = *(A14 + edx + 4) & 0xff;
                *(A18 + edx + 3) = bl;
                ebx = *(A14 + edx + 5) & 0xff;
                *(A18 + edx + 4) = bl;
                ebx = *(A14 + edx + 6) & 0xff;
                *(A18 + edx + 5) = bl;
                ebx = *(A14 + edx + 7) & 0xff;
                *(A18 + edx + 6) = bl;
                ebx = *(A14 + edx + 8) & 0xff;
                *(A18 + edx + 7) = bl;
                edx = edx + 8;
            } while(edx < edi);
        }
        do {
            ebx = *(edx + A14 + 1) & 0xff;
            *(edx + A18) = bl;
            edx = edx + 1;
        } while(edx < eax);
    }
    esp = esp + 4;
}

/*	Procedure: 0x00428F49 - 0x00428F4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428F49()
{



}

/*	Procedure: 0x00428F50 - 0x00428FF7
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004024A0()
 *		L00403190()
 *		L00404640()
 *		L00405B70()
 *		L0040A760()
 *		L0040B130()
 *		L0040B590()
 *		L0040BB40()
 *		L0040D7E0()
 *		L0040DB20()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E5B0()
 *		L0040E700()
 *		L0040E830()
 *		L0040F570()
 *		L0040F6E0()
 *		L0040F7B0()
 *		L0040F8A0()
 *		L0040FE40()
 *		L004102F0()
 *		L004107E0()
 *		L00411920()
 *		L00411DF0()
 *		L00413C00()
 *		L00413D00()
 *		L00415DE0()
 *		L00416000()
 *		L0041CA10()
 *		L004258E0()
 *		L00430450()
 *		L00447DF0()
 *		L00448630()
 */

L00428F50(A10, A14, A18)
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    ecx = A10;
    esp = esp - 4;
    eax = A18;
    if(ecx == 0) {
        esp = esp + 4;
        return 0;
    }
    if(eax > 0xff) {
        eax = 0xff;
    }
    edx = 0;
    ebx = ecx;
    *ecx = al;
    if(eax > 0) {
        eax :: 8;
        if(!(edi = eax - 8)) {
            do {
                ecx = *(edx + A14) & 0xff;
                *(edx + ebx + 1) = cl;
                ecx = *(A14 + edx + 1) & 0xff;
                *(ebx + edx + 2) = cl;
                ecx = *(A14 + edx + 2) & 0xff;
                *(ebx + edx + 3) = cl;
                ecx = *(A14 + edx + 3) & 0xff;
                *(ebx + edx + 4) = cl;
                ecx = *(A14 + edx + 4) & 0xff;
                *(ebx + edx + 5) = cl;
                ecx = *(A14 + edx + 5) & 0xff;
                *(ebx + edx + 6) = cl;
                ecx = *(A14 + edx + 6) & 0xff;
                *(ebx + edx + 7) = cl;
                ecx = *(A14 + edx + 7) & 0xff;
                *(ebx + edx + 8) = cl;
                edx = edx + 8;
            } while(edx < edi);
        }
        do {
            ecx = *(edx + A14) & 0xff;
            *(edx + ebx + 1) = cl;
            edx = edx + 1;
        } while(edx < eax);
    }
    esp = esp + 4;
}

/*	Procedure: 0x00428FF8 - 0x00428FFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00428FF8()
{



}

/*	Procedure: 0x00429000 - 0x004290C7
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L004255B0()
 *		L004258E0()
 *		L00439D78()
 *		L00439F58()
 *		L0043AC00()
 *		L0043B64E()
 */

L00429000(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    if(Ac == 0) {
        return 0;
    }
    if(Ac > 0xff) {
        Ac = 0xff;
    }
    eax = L0042E310(Ac + 1);
    cl = Ac;
    *eax = cl;
    edx = 0;
    ebx = eax;
    if(Ac > 0) {
        edi = Ac - 8;
        if(Ac > 8) {
            do {
                ecx = *(edx + A8) & 0xff;
                *(edx + ebx + 1) = cl;
                ecx = *(A8 + edx + 1) & 0xff;
                *(ebx + edx + 2) = cl;
                ecx = *(A8 + edx + 2) & 0xff;
                *(ebx + edx + 3) = cl;
                ecx = *(A8 + edx + 3) & 0xff;
                *(ebx + edx + 4) = cl;
                ecx = *(A8 + edx + 4) & 0xff;
                *(ebx + edx + 5) = cl;
                ecx = *(A8 + edx + 5) & 0xff;
                *(ebx + edx + 6) = cl;
                ecx = *(A8 + edx + 6) & 0xff;
                *(ebx + edx + 7) = cl;
                ecx = *(A8 + edx + 7) & 0xff;
                *(ebx + edx + 8) = cl;
                edx = edx + 8;
            } while(edx < edi);
        }
        do {
            ecx = *(edx + A8) & 0xff;
            *(edx + ebx + 1) = cl;
            edx = edx + 1;
        } while(edx < Ac);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x004290C8 - 0x004290CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004290C8()
{



}

/*	Procedure: 0x004290D0 - 0x00429187
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00439DE0()
 *		L0043AAA0()
 *		L0043B450()
 */

L004290D0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    esp = esp - 4;
    if(A8 == 0) {
        return 0;
    }
    eax = *A8 & 0xff;
    *(ebp - 0xc) = eax;
    if(eax == 0) {
        esp = ebp - 8;
        return 0;
    }
    eax = L0042E310( *(ebp - 0xc) + 1);
    ecx = *(ebp - 0xc);
    esi = *(ebp - 0xc);
    ecx = ecx + 1;
    edx = 0;
    esi = esi - 8;
    if(ecx > 8) {
        do {
            ecx = *(A8 + edx) & 0xff;
            *(eax + edx) = cl;
            ecx = *(A8 + edx + 1) & 0xff;
            *(eax + edx + 1) = cl;
            ecx = *(A8 + edx + 2) & 0xff;
            *(eax + edx + 2) = cl;
            ecx = *(A8 + edx + 3) & 0xff;
            *(eax + edx + 3) = cl;
            ecx = *(A8 + edx + 4) & 0xff;
            *(eax + edx + 4) = cl;
            ecx = *(A8 + edx + 5) & 0xff;
            *(eax + edx + 5) = cl;
            ecx = *(A8 + edx + 6) & 0xff;
            *(eax + edx + 6) = cl;
            ecx = *(A8 + edx + 7) & 0xff;
            *(eax + edx + 7) = cl;
            edx = edx + 8;
        } while(edx <= esi);
    }
    do {
        ecx = *(A8 + edx) & 0xff;
        *(eax + edx) = cl;
        edx = edx + 1;
    } while(edx <= *(ebp - 0xc));
    esp = ebp - 8;
}

/*	Procedure: 0x00429188 - 0x0042918F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429188()
{



}

/*	Procedure: 0x00429190 - 0x004291EB
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004154F0()
 */

L00429190(A8)
/* unknown */ void  A8;
{



    esp = esp - 8;
    if(A8 == 0) {
        return;
    }
    *(ebp - 8) = A8 + 1;
    ecx = *A8 & 0xff;
    edx = ebp - 0xc;
    *(ebp - 0xc) = ecx;
    eax = L00427F40(ebp - 8, edx);
    ecx = A8 + 1;
    *A8 = *(ebp - 8) != ecx ? L004342A0(ecx, *(ebp - 8), *(ebp - 0xc)) : *(ebp - 0xc) & 0xff;
    esp = ebp - 4;
}

/*	Procedure: 0x004291EC - 0x004291EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004291EC()
{



}

/*	Procedure: 0x004291F0 - 0x0042934E
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00401280()
 *		L00408CB0()
 *		L00408F30()
 *		L00429440()
 *		L0042FAA0()
 */

L004291F0(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x108;
    if(A8 == 0) {
        return 0;
    }
    eax = M00480fd4;
    esi = *A8;
    *(ebp + -272) = eax;
    if(eax != 0) {
        ebx = ebp + -268;
        *(ebp + -272)(M00480fd8, esi, ebp + -267, 0xff);
        *(ebp + -268) = al;
        if(*(ebp + -268) != 0) {
            goto L00429286;
        }
    }
    L00434DD0(esi, 0x480d10, 0x4f, ebp + -276);
    ebx = al != 0 ? *( *(ebp + -276) * 4 + 0x480e4c) : M00480e4c;
L00429286:
    edx = esi;
    ecx = si & 65535;
    esi = *(A8 + 4);
    edx = edx >> 0x10;
    if(esi == 0 || *esi == 0) {
        eax = *(A8 + 0x10);
        eax = eax == 0 ? L00459EC0(A10, A14, "%#s (ID %i/%i)", ebx, edx, ecx) : L00459EC0(A10, A14, "%#s (ID %i/%i [%li])", ebx, edx, ecx, eax);
    } else {
        eax = *(A8 + 0x10);
        eax = eax == 0 ? L00459EC0(A10, A14, "%#s (ID %i/%i @ %s #%lu)", ebx, edx, ecx, esi, *(A8 + 8)) : L00459EC0(A10, A14, "%#s (ID %i/%i [%li] @ %s #%lu)", ebx, edx, ecx, eax, esi, *(A8 + 8));
    }
    ebx = eax;
    if(*(A8 + 0x18) != 0) {
        edx = A8 + 0x18;
        ecx = A14 - ebx;
        ebx = ebx + L00459EC0(A10 + ebx, ecx, " (%#s)", edx);
    }
    esp = ebp - 0xc;
    return ebx;
}

/*	Procedure: 0x0042934F - 0x0042934F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042934F()
{



}

/*	Procedure: 0x00429350 - 0x0042940F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00416790()
 */

L00429350(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = A8;
    (save)esi;
    (save)edi;
    eax = A10;
    if(ebx == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 0;
    }
    edx = *ebx;
    edi = *(ebx + 4);
    edx = edx >> 0x10;
    edi :: 0;
    if((ecx = cx & 65535) || *edi == 0) {
        ebx = *(ebx + 0x10);
        if(ebx != 0) {
            goto L019618a8;
        }
        eax = L00459EC0(Ac, eax, "ID %i/%i", edx, ecx);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
        eax = L00459EC0(Ac, eax, "ID %i/%i [%li]", edx, ecx, ebx);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    esi = *(ebx + 0x10);
    if(esi == 0) {
        eax = L00459EC0(Ac, eax, "ID %i/%i @ %s #%lu", edx, ecx, edi, *(ebx + 8));
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    eax = L00459EC0(Ac, eax, "ID %i/%i [%li] @ %s #%lu", edx, ecx, esi, edi, *(ebx + 8));
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00429410 - 0x0042941B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429410()
{



    return L0042E710();
}

/*	Procedure: 0x0042941C - 0x0042943C
 *	Argument size: 0
 *	Local size: 4
 *	Save regs size: 0
 */

L0042941C(Ac)
/* unknown */ void  Ac;
{
	/* unknown */ void  Vfffffffc;



    Vfffffffc = *(Ac + 4);
    return L00439BF0( & Vfffffffc);
}

/*	Procedure: 0x0042943D - 0x0042943F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042943D()
{



}

/*	Procedure: 0x00429440 - 0x0042955A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00429560()
 */

L00429440(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x480;
    if(A8 == 0) {
        return;
    }
    edi = *(A8 + 0xc);
    if(!(edi & 0x80)) {
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x10) = esp;
    esi = L00428EA0(Ac, ebp + -1164, 0xff);
    ecx = ebp + esi + -1164;
    esi = esi + L004291F0(A8, 0, ecx, 0x400 - esi);
    eax = L004348B0(0x28, ebp + -1164, esi);
    if(eax != 0) {
        *(eax - 1) = 0xa;
    }
    L00434150(ebp + -140, 0x68);
    edi & 0x40;
    *(ebp + -136) = 1;
    *(ebp - 0x7c) = 1;
    *(ebp - M00000064) = 0x3e8;
    *(ebp - 0x34) = 0x4756bc;
    *(ebp - 0x28) = esi;
    eax = 0x429420;
    if(!( *(ebp - 0x2c) = ebp + -1164)) {
        eax = 0x429410;
        *(ebp - 0x44) = 0x4756c4;
    }
    eax = L004395A0(eax, 0, ebp + -140, 0);
    goto L00429553;
    (save) *A8;
    eax = L00459F70("Error 0x%8.8lX");
    (restore)ecx;
    if(*(ebp - 0x1c) != 0) {
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)(-1);
    }
    esp = *(ebp - 0x10);
L00429553:
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042955B - 0x0042955F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042955B()
{



}

/*	Procedure: 0x00429560 - 0x004295E9
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041B02A()
 *		L0041C340()
 *		L0041C3B0()
 *		L0041C400()
 *		L0041C450()
 *		L0041C499()
 *		L0041C4E9()
 *		L0041C550()
 *		L0041F050()
 *		L0041F14C()
 *		L0041FDA0()
 *		L0042E090()
 *		L0042E520()
 *		L0042EFFF()
 *		L00433759()
 *		L00438A50()
 *		L00438BF0()
 *		L00438C70()
 *		L0045A270()
 */

L00429560(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    esp = esp - 0x70;
    if(A8 == 0) {
        return;
    }
    eax = 0;
    do {
        *(ebp + eax - 0x74) = *(eax + A8);
        *(ebp + eax - 0x70) = *(eax + A8 + 4);
        *(ebp + eax - 0x6c) = *(eax + A8 + 8);
        *(ebp + eax - 0x68) = *(eax + A8 + 0xc);
        eax = eax + 0x10;
    } while(eax < 0x50);
    *(ebp - 0x24) = *(A8 + 0x50);
    ecx = *(A8 + 0x54);
    ebx = M00480fcc;
    *(ebp - 0x20) = ecx;
    if(ebx != 0) {
        *(ebp - 8) = esp;
        (save)ebp - 0x74;
        (save)M00480fd0;
        eax = *ebx();
        goto L004295e2;
        if(*(ebp - 0x14) != 0) {
            (save)-1;
            ecx = *(ebp - 0x1c);
            eax = *(ebp - 0x14)();
        }
        esp = *(ebp - 8);
    } else {
        eax = L00429440(ebp - 0x74, 0);
L004295e2:
    }
    esp = ebp - 4;
}

/*	Procedure: 0x004295EA - 0x004295EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004295EA()
{



}

/*	Procedure: 0x004295F0 - 0x00429603
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 *		L0042FAA0()
 */

L004295F0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    M00480fcc = A4;
    M00480fd0 = A8;
    return M00480fd0;
}

/*	Procedure: 0x00429604 - 0x0042960F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429604()
{



}

/*	Procedure: 0x00429610 - 0x00429681
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004016B0()
 *		L00401A50()
 *		L00401B20()
 *		L00401D10()
 *		L00402400()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L00403980()
 *		L00403A90()
 *		L00403D00()
 *		L00404640()
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L004051B0()
 *		L00405970()
 *		L00405B70()
 *		L00405D00()
 *		L00405DF0()
 *		L00405E70()
 *		L00406950()
 *		L004071C0()
 *		L00409B60()
 *		L00409E60()
 *		L0040A620()
 *		L0040A760()
 *		L0040AA30()
 *		L0040AD20()
 *		L0040AFD0()
 *		L0040B130()
 *		L0040B3A0()
 *		L0040B590()
 *		L0040B7E0()
 *		L0040B9B0()
 *		L0040CB60()
 *		L0040D0F0()
 *		L0040D600()
 *		L0040D880()
 *		L0040DB20()
 *		L0040DC10()
 *		L0040DF50()
 *		L0040E200()
 *		L0040E5B0()
 *		L0040E700()
 *		L0040E830()
 *		L0040EE00()
 *		L0040F110()
 *		L0040F570()
 *		L0040F6E0()
 *		L0040F7B0()
 *		L0040F8A0()
 *		L0040FAE0()
 *		L004102F0()
 *		L004104E0()
 *		L004105F0()
 *		L004107E0()
 *		L00410960()
 *		L00410DC0()
 *		L00410EB0()
 *		L004110F0()
 *		L004112D0()
 *		L00411640()
 *		L00412280()
 *		L004125B0()
 *		L00412E50()
 *		L00412EE0()
 *		L00412F60()
 *		L00413D00()
 *		L00414CB0()
 *		L00414FA0()
 *		L00415120()
 *		L004157B0()
 *		L00415A60()
 *		L00416000()
 *		L00416F00()
 *		L00417E20()
 *		L00417EC0()
 *		L00418340()
 *		L00418850()
 *		L00418DBB()
 *		L00418FB8()
 *		L00419310()
 *		L004196E0()
 *		L00419B10()
 *		L00419C50()
 *		L00419D20()
 *		L00419DD0()
 *		L00419F80()
 *		L00419FF0()
 *		L0041A080()
 *		L0041A0E0()
 *		L0041A130()
 *		L0041A1A0()
 *		L0041A1E0()
 *		L0041A230()
 *		L0041A270()
 *		L0041A300()
 *		L0041A6A9()
 *		L0041A71E()
 *		L0041AE20()
 *		L0041AF2D()
 *		L0041B02A()
 *		L0041B5B0()
 *		L0041B5F0()
 *		L0041B670()
 *		L0041B6B0()
 *		L0041B6F0()
 *		L0041B730()
 *		L0041B820()
 *		L0041B860()
 *		L0041C5A0()
 *		L0041CA10()
 *		L0041CB50()
 *		L0041CBA0()
 *		L0041CCB0()
 *		L0041CD90()
 *		L0041CF00()
 *		L0041CFA0()
 *		L0041D010()
 *		L0041D060()
 *		L0041D0C0()
 *		L0041D100()
 *		L0041D180()
 *		L0041D1C0()
 *		L0041D250()
 *		L0041D2F0()
 *		L0041D3C0()
 *		L0041D470()
 *		L0041D830()
 *		L0041D9B0()
 *		L0041DB20()
 *		L0041FFD0()
 *		L004206D0()
 *		L00421520()
 *		L0042198B()
 *		L00421AB0()
 *		L00424930()
 *		L00424FF0()
 *		L00425020()
 *		L00425050()
 *		L00425160()
 *		L004251D0()
 *		L00425240()
 *		L004252A0()
 *		L00425340()
 *		L004253D0()
 *		L00425440()
 *		L0042548D()
 *		L004254D9()
 *		L004255B0()
 *		L00425600()
 *		L00425670()
 *		L00425700()
 *		L00425730()
 *		L00425760()
 *		L004257C0()
 *		L00425870()
 *		L004258E0()
 *		L00427DA0()
 *		L00427F40()
 *		L00429760()
 *		L00429790()
 *		L004297E0()
 *		L00429870()
 *		L00429960()
 *		L00429A00()
 *		L00429A50()
 *		L00429A90()
 *		L00429B10()
 *		L00429E20()
 *		L00429F50()
 *		L0042A660()
 *		L0042AB80()
 *		L0042AD50()
 *		L0042B070()
 *		L0042B280()
 *		L0042B480()
 *		L0042B600()
 *		L0042B800()
 *		L0042BAE0()
 *		L0042BDB0()
 *		L0042BF80()
 *		L0042C050()
 *		L0042C260()
 *		L0042C440()
 *		L0042C570()
 *		L0042C600()
 *		L0042C770()
 *		L0042C860()
 *		L0042C930()
 *		L0042CA40()
 *		L0042CB20()
 *		L0042CB70()
 *		L0042CCB0()
 *		L0042CE90()
 *		L0042CFC0()
 *		L0042DAB0()
 *		L0042E010()
 *		L0042E1AA()
 *		L0042E20C()
 *		L0042E27D()
 *		L0042E310()
 *		L0042E350()
 *		L0042E3A0()
 *		L0042E410()
 *		L0042E5B0()
 *		L0042E830()
 *		L0042ECF0()
 *		L0042F070()
 *		L0042F0B0()
 *		L0042F1C0()
 *		L0042F2A0()
 *		L0042F3B0()
 *		L00430080()
 *		L004300F0()
 *		L004302D0()
 *		L00430310()
 *		L00430350()
 *		L00430380()
 *		L004303D0()
 *		L00430420()
 *		L00430450()
 *		L00430540()
 *		L004305D0()
 *		L0043105A()
 *		L00431260()
 *		L00431A10()
 *		L00431CB0()
 *		L00431F8B()
 *		L0043216C()
 *		L00432250()
 *		L00432450()
 *		L00432610()
 *		L004328E0()
 *		L00432A60()
 *		L00432C80()
 *		L00432D40()
 *		L00433030()
 *		L00433130()
 *		L00433200()
 *		L004333F0()
 *		L00433470()
 *		L00433580()
 *		L00433B90()
 *		L00435AB0()
 *		L00435AE0()
 *		L00435B10()
 *		L004360B0()
 *		L00436100()
 *		L00436310()
 *		L00436370()
 *		L004364A0()
 *		L004364F0()
 *		L00436670()
 *		L004366B0()
 *		L00436960()
 *		L00436CF0()
 *		L00437E20()
 *		L00438060()
 *		L00438100()
 *		L004395A0()
 *		L00439DE0()
 *		L0043A240()
 *		L0043A530()
 *		L0043AAA0()
 *		L0043ADB0()
 *		L0043B450()
 *		L0043B5CF()
 *		L0043BA80()
 *		L0043BC50()
 *		L0043C000()
 *		L0043C150()
 *		L0043C220()
 *		L0043C350()
 *		L0043C410()
 *		L00442340()
 *		L004424B0()
 *		L00442540()
 *		L00442660()
 *		L00442710()
 *		L00442EF0()
 *		L00443030()
 *		L00443120()
 *		L004431B0()
 *		L00443200()
 *		L00443480()
 *		L00443550()
 *		L004435A0()
 *		L00443810()
 *		L004438D0()
 *		L00443B70()
 *		L00443C60()
 *		L00443C90()
 *		L00443D10()
 *		L00443D60()
 *		L00443DA0()
 *		L00443DE0()
 *		L004441C0()
 *		L00444E38()
 *		L004450B8()
 *		L0044528A()
 *		L004452F0()
 *		L00445720()
 *		L00445D10()
 *		L00445D60()
 *		L00445D90()
 *		L00445E20()
 *		L00445F60()
 *		L00445FA0()
 *		L00446000()
 *		L00446A60()
 *		L00446AB0()
 *		L00446B20()
 *		L00446BA0()
 *		L00446BE0()
 *		L00446C60()
 *		L00446CF0()
 *		L00446D20()
 *		L00446E30()
 *		L00447050()
 *		L00447780()
 *		L00447FF0()
 *		L00448160()
 *		L004483B0()
 *		L00448690()
 *		L00449060()
 *		L00449200()
 *		L00449230()
 *		L00449340()
 *		L00449380()
 *		L00449400()
 *		L00449440()
 *		L00449480()
 *		L004494C0()
 *		L00449500()
 *		L00449590()
 *		L004495F0()
 *		L004496A0()
 *		L004496D0()
 *		L00449710()
 *		L00449C60()
 *		L00449DE0()
 *		L00449E70()
 *		L0044A090()
 *		L0044A0D0()
 *		L0044A180()
 *		L0044A480()
 *		L0044A4D0()
 *		L0044A620()
 *		L0044A8D0()
 *		L0044B0C0()
 *		L0044BAE0()
 *		L0044BBF0()
 *		L0044BC40()
 *		L0044BC80()
 *		L0044BCD0()
 *		L0044BD30()
 *		L0044BE30()
 *		L0044BE90()
 *		L0044BF40()
 *		L00450AF0()
 *		L00450B60()
 *		L00450D60()
 *		L00450E10()
 *		L00450F00()
 *		L004510B8()
 *		L004510F0()
 *		L00451230()
 *		L00451290()
 *		L00451610()
 *		L00451650()
 *		L004516A0()
 *		L004516D0()
 *		L00451720()
 *		L00451750()
 *		L00451780()
 *		L00451930()
 *		L004519AD()
 *		L004519F0()
 *		L00451A30()
 *		L00451B10()
 *		L00451C10()
 *		L00452360()
 *		L00452390()
 *		L0045246A()
 *		L00452BD0()
 *		L00453020()
 *		L00453180()
 *		L00454730()
 *		L004548E0()
 *		L00454930()
 *		L00454970()
 *		L004549A0()
 *		L00454A20()
 *		L00454BE0()
 *		L00454DD0()
 *		L00454E00()
 *		L00454E40()
 *		L00454E80()
 *		L00454F10()
 *		L00454F60()
 *		L004550A0()
 *		L00455240()
 *		L004553D0()
 *		L00455430()
 *		L00455510()
 *		L00455590()
 *		L00455640()
 *		L004556A0()
 *		L00455700()
 *		L00455760()
 *		L00455790()
 *		L004557C0()
 *		L004557F0()
 *		L00455820()
 *		L00455850()
 *		L00455880()
 *		L004558B0()
 *		L004558F0()
 *		L00455930()
 *		L0045643E()
 *		L00456500()
 *		L00456540()
 *		L00456600()
 *		L00456670()
 *		L004568C0()
 *		L00456900()
 *		L004569F0()
 *		L00456A30()
 *		L00456AA0()
 *		L00456AE0()
 *		L00456B0E()
 *		L00456C80()
 *		L00456CC0()
 *		L00456D00()
 *		L00457690()
 *		L0045791C()
 *		L00457948()
 *		L00457990()
 *		L004579D0()
 *		L00457AE0()
 *		L0045CD30()
 *		L0045CEF0()
 *		L0045D260()
 *		L0045D360()
 *		L0045D390()
 *		L0045D4B0()
 *		L00462160()
 *		L00462270()
 *		L00464908()
 */

L00429610()
{



    (save)ebp;
    ebp = esp;
    (save)edi;
    esp = esp - 0xb0;
    eax = 0;
    edi = ebp + -180;
    ecx = 0x16;
    asm("rep stosd");
    *(ebp + -180) = *(ebp + 8);
    do {
        *(ebp + eax - 0x5c) = *(ebp + eax + -180);
        *(ebp + eax - 0x58) = *(ebp + eax + -176);
        *(ebp + eax - 0x54) = *(ebp + eax + -172);
        *(ebp + eax - 0x50) = *(ebp + eax + -168);
        eax = eax + 0x10;
    } while(eax < 0x50);
    *(ebp - 0xc) = *(ebp - M00000064);
    ecx = *(ebp - 0x60);
    *(ebp - 8) = ecx;
    (save)0;
    (save)ebp - 0x5c;
    (save)"!SError!!";
    L004234F0();
}

/*	Procedure: 0x00429690 - 0x00429751
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00429760()
 *		L00429790()
 *		L004297E0()
 *		L00429870()
 *		L004298D0()
 *		L00429960()
 *		L00429A00()
 *		L00429A50()
 *		L00429A90()
 *		L00429B10()
 *		L00429BC0()
 *		L00429C40()
 *		L00429CD0()
 */

L00429690(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    ecx = Ac;
    ecx = A10 * A10;
    if(ecx != 0) {
        ecx = ecx <= 0x10 ? 0x10 : ecx <= 0x20 ? 0x20 : ecx <= 0x40 ? 0x40 : ecx <= 0x80 ? 0x80 : ecx <= 0x100 ? 0x100 : ecx <= 0x200 ? 0x200 : ecx <= 0x400 ? 0x400 : ecx <= 0x800 ? 0x800 : ecx + 0xfff & -4096;
    }
    eax = ecx;
    edx = 0;
    edx = A10 / A10 % A10 / A10;
    esi = eax;
    if(esi != *(A8 + 8)) {
        eax = L0042E410( *A8, ecx);
        *A8 = eax;
        *(A8 + 8) = esi;
    }
}

/*	Procedure: 0x00429752 - 0x0042975F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429752()
{



}

/*	Procedure: 0x00429760 - 0x0042978D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004125B0()
 */

L00429760(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    return L00429690(A8, *(A8 + 4) + Ac, 1);
}

/*	Procedure: 0x0042978E - 0x0042978F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042978E()
{



}

/*	Procedure: 0x00429790 - 0x004297D2
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00443480()
 */

L00429790(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(A10 > *(A8 + 8)) {
        L00429690(A8, A10, 1);
    }
    *(A8 + 4) = A10;
    return L004342A0( *A8, Ac, A10);
}

/*	Procedure: 0x004297D3 - 0x004297DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004297D3()
{



}

/*	Procedure: 0x004297E0 - 0x00429863
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004435A0()
 */

L004297E0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 == 0) {
        L00429610(65538);
    }
    eax = *(A8 + 4);
    *(ebp - 0x10) = eax;
    if(Ac > eax) {
        Ac = eax;
    }
    if(A14 != 0) {
        edi = *(ebp - 0x10) + A14;
        if(edi > *(A8 + 8)) {
            L00429690(A8, edi, 1);
        }
        esi = *A8 + Ac;
        L004342A0(esi + A14, esi, *(ebp - 0x10) - Ac);
        if(A10 != 0) {
            L004342A0(esi, A10, A14);
        }
        *(A8 + 4) = edi;
    }
    return Ac;
}

/*	Procedure: 0x00429864 - 0x0042986F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429864()
{



}

/*	Procedure: 0x00429870 - 0x004298CC
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004125B0()
 */

L00429870(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    (save)edi;
    if(A8 == 0) {
        L00429610(65538);
    }
    edi = *(A8 + 4);
    if(A10 != 0) {
        esi = edi + A10;
        if(esi > *(A8 + 8)) {
            L00429690(A8, esi, 1);
        }
        if(Ac != 0) {
            L004342A0( *A8 + edi, Ac, A10);
        }
        *(A8 + 4) = esi;
    }
    esp = ebp - 0xc;
    eax = edi;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x004298CD - 0x004298CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004298CD()
{



}

/*	Procedure: 0x004298D0 - 0x00429952
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004299E0()
 *		L004438D0()
 */

L004298D0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A10;
    if(A8 == 0) {
        return 0;
    }
    ebx = *(A8 + 4);
    if(Ac >= ebx) {
        esp = ebp - 0xc;
        return ebx;
    }
    eax = Ac + esi;
    if(eax > ebx || eax < Ac) {
        esi = ebx - Ac;
    }
    if(esi != 0) {
        ecx = *A8 + Ac;
        edx = Ac + esi;
        eax = ebx - edx;
        L004342A0(ecx, esi + ecx, eax);
        eax = ebx - esi;
        *(A8 + 4) = eax;
        L00429690(A8, *(A8 + 4), 1);
    }
    esp = ebp - 0xc;
    return Ac;
}

/*	Procedure: 0x00429953 - 0x0042995F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429953()
{



}

/*	Procedure: 0x00429960 - 0x004299DF
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00454A20()
 */

L00429960(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 == 0) {
        L00429610(65538);
    }
    eax = *(A8 + 4);
    *(ebp - 0x10) = eax;
    if(Ac > eax) {
        Ac = eax;
    }
    if(A10 != 0) {
        edi = *(ebp - 0x10) + A10;
        if(edi > *(A8 + 8)) {
            L00429690(A8, edi, 1);
        }
        esi = *A8 + Ac;
        L004342A0(esi + A10, esi, *(ebp - 0x10) - Ac);
        L00433E50(esi, A10, A14 & 0xff);
        *(A8 + 4) = edi;
    }
    return Ac;
}

/*	Procedure: 0x004299E0 - 0x004299F7
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00454A20()
 *		L00454BE0()
 */

L004299E0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L004298D0(A8, Ac, A10);
}

/*	Procedure: 0x004299F8 - 0x004299FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004299F8()
{



}

/*	Procedure: 0x00429A00 - 0x00429A43
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409B60()
 *		L00409E60()
 *		L00413D00()
 *		L00414CB0()
 *		L00416F00()
 *		L00418DBB()
 *		L00419B10()
 *		L004258E0()
 *		L00448690()
 *		L00462270()
 */

L00429A00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)esi;
    (save)edi;
    if(A8 == 0) {
        L00429610(65538);
    }
    edi = *(A8 + 4);
    edi :: *(A8 + 8);
    if(!(esi = edi + 1)) {
        L00429690(A8, esi, 4);
    }
    edx = *A8;
    *(edx + edi * 4) = Ac;
    *(A8 + 4) = esi;
    esp = ebp - 0xc;
    eax = edi;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00429A44 - 0x00429A4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429A44()
{



}

/*	Procedure: 0x00429A50 - 0x00429A82
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004258E0()
 *		L004435A0()
 */

L00429A50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    eax = *(A8 + 4) + Ac;
    if(eax > *(A8 + 8)) {
        eax = L00429690(A8, eax, 4);
    }
}

/*	Procedure: 0x00429A83 - 0x00429A8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429A83()
{



}

/*	Procedure: 0x00429A90 - 0x00429B0C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00425050()
 *		L00443200()
 *		L00450800()
 */

L00429A90(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 8;
    esi = Ac;
    if(A8 == 0) {
        L00429610(65538);
    }
    eax = *(A8 + 4);
    *(ebp - 0x10) = eax;
    *(ebp - 0x14) = eax;
    ebx = *(ebp - 0x14) + 1;
    if(*(ebp - 0x14) >= *(A8 + 8)) {
        L00429690(A8, ebx, 4);
    }
    if(esi > *(ebp - 0x14)) {
        esi = *(ebp - 0x10);
    }
    ecx = *A8;
    L004342A0(ecx + (esi + 1) * 4, ecx + esi * 4, ( *(ebp - 0x14) - esi) * 4);
    eax = *A8;
    *(eax + esi * 4) = A10;
    *(A8 + 4) = ebx;
    esp = ebp - 0xc;
    return esi;
}

/*	Procedure: 0x00429B0D - 0x00429B0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429B0D()
{



}

/*	Procedure: 0x00429B10 - 0x00429BBD
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00454A20()
 */

L00429B10(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 8;
    esi = A14;
    if(A8 == 0) {
        L00429610(65538);
    }
    ecx = *(A8 + 4);
    *(ebp - 0x10) = ecx;
    if(Ac > ecx) {
        Ac = ecx;
    }
    if(esi != 0) {
        *(ebp - 0x14) = *(ebp - 0x10);
        *(ebp - 0x14) = *(ebp - 0x14) + esi;
        if(*(ebp - 0x14) > *(A8 + 8)) {
            L00429690(A8, *(ebp - 0x14), 4);
        }
        edx = ( *(ebp - 0x10) - Ac) * 4;
        edi = Ac * 4 + *A8;
        esi = esi * 4;
        L004342A0(esi + edi, edi, edx);
        if(A10 != 0) {
            L004342A0(edi, A10, esi);
        } else {
            L00434150(edi, esi);
        }
        *(A8 + 4) = *(ebp - 0x14);
    }
    return Ac;
}

/*	Procedure: 0x00429BBE - 0x00429BBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429BBE()
{



}

/*	Procedure: 0x00429BC0 - 0x00429C37
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00401310()
 *		L00409E60()
 *		L0040A4E0()
 *		L00416F00()
 *		L00417050()
 */

L00429BC0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)esi;
    (save)edi;
    edx = Ac;
    if(A8 != 0) {
        edi = *(A8 + 4);
        esi = 0;
        ecx = *A8;
        if(edi > 0) {
            do {
                if(edx == *(ecx + esi * 4)) {
                    goto L00429bec;
                }
                esi = esi + 1;
            } while(esi < edi);
            goto L00429c2d;
L00429bec:
            ecx = ecx + esi * 4;
            edx = ecx + 4;
            L004342A0(ecx, edx, (edi - 1 - esi) * 4);
            eax = edi - 1;
            *(A8 + 4) = eax;
            L00429690(A8, eax, 4);
            esp = ebp - 0xc;
            eax = esi;
            (restore)edi;
            (restore)esi;
            return;
        }
    }
L00429c2d:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return eax | -1;
}

/*	Procedure: 0x00429C38 - 0x00429C3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429C38()
{



}

/*	Procedure: 0x00429C40 - 0x00429CCC
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00414DD0()
 *		L00414EE0()
 *		L00425050()
 *		L00443200()
 *		L004505E0()
 *		L00450800()
 */

L00429C40(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x18;
    if(A8 == 0) {
        return 0;
    }
    ebx = *(A8 + 4);
    if(Ac >= ebx) {
        esp = ebp - 0xc;
        return 0;
    }
    ecx = Ac * 4 + *A8;
    edi = *ecx;
    eax = (ebx - 1 - Ac) * 4;
    L004342A0(ecx, ecx + 4, eax);
    eax = ebx - 1;
    *(A8 + 4) = eax;
    *(ebp - 0x10) = esp;
    L00429690(A8, *(A8 + 4), 4);
    goto L00429cc3;
    if(*(ebp - 0x1c) != 0) {
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)(-1);
    }
    esp = *(ebp - 0x10);
L00429cc3:
    esp = ebp - 0xc;
    return edi;
}

/*	Procedure: 0x00429CCD - 0x00429CCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429CCD()
{



}

/*	Procedure: 0x00429CD0 - 0x00429D7C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004438D0()
 *		L00454BE0()
 */

L00429CD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x18;
    eax = Ac;
    ebx = A10;
    if(A8 == 0) {
        return 0;
    }
    ecx = *(A8 + 4);
    edi = ecx;
    if(eax >= edi) {
        esp = ebp - 0xc;
        return 0;
    }
    edx = ebx + eax;
    if(edx > ecx || edx < eax) {
        ebx = edi - eax;
    }
    if(ebx == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    edx = ebx + eax;
    ecx = eax * 4 + *A8;
    eax = (edi - edx) * 4;
    L004342A0(ecx, ecx + ebx * 4, eax);
    eax = edi - ebx;
    *(A8 + 4) = eax;
    *(ebp - 0x10) = esp;
    eax = L00429690(A8, *(A8 + 4), 4);
    goto L00429d73;
    if(*(ebp - 0x1c) != 0) {
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)(-1);
    }
    esp = *(ebp - 0x10);
L00429d73:
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00429D7D - 0x00429D7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429D7D()
{



}

/*	Procedure: 0x00429D80 - 0x00429DA4
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409AB0()
 *		L00409B60()
 *		L00413D00()
 *		L00424F30()
 *		L00462320()
 *		L00462379()
 */

L00429D80(A8)
/* unknown */ void  A8;
{



    if(A8 != 0) {
        L0042E3E0(A8);
        *(A8 + 8) = 0;
        eax = *(A8 + 8);
        *(A8 + 4) = eax;
    }
}

/*	Procedure: 0x00429DA5 - 0x00429DAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429DA5()
{



}

/*	Procedure: 0x00429DB0 - 0x00429DDB
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00429DB0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A4;
    (save)ebx;
    if(eax != 0) {
        edx = *(eax + 4);
        ebx = *eax;
        eax = 0;
        if(edx <= 0) {
            goto L00429dd7;
        }
        do {
            if(A8 == *(ebx + eax * 4)) {
                goto L00429dcd;
            }
L00429dd0:
            eax = eax + 1;
        } while(eax < edx);
        goto L00429dd7;
L00429dcd:
        (restore)ebx;
        return;
        goto L00429dd0;
    }
L00429dd7:
    eax = eax | -1;
    (restore)ebx;
}

/*	Procedure: 0x00429DDC - 0x00429DDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429DDC()
{



}

/*	Procedure: 0x00429DE0 - 0x00429E1A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409B60()
 *		L00409E60()
 *		L0040A620()
 *		L0040A760()
 *		L0040AA30()
 *		L0040B7E0()
 *		L00416F00()
 *		L00419B10()
 *		L0043C350()
 */

L00429DE0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    edx = A4;
    (save)ebx;
    if(edx != 0) {
        ebx = *edx;
        edx = *(edx + 4);
        if(ebx == 0) {
            goto L00429e17;
        }
        eax = 0;
        if(edx <= 0) {
            goto L00429e17;
        }
        do {
            if(A8 == *(ebx + eax * 4)) {
                goto L00429e07;
            }
L00429e10:
            eax = eax + 1;
        } while(eax < edx);
        goto L00429e17;
L00429e07:
        (restore)ebx;
        return 1;
        goto L00429e10;
    }
L00429e17:
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00429E1B - 0x00429E1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00429E1B()
{



}

/*	Procedure: 0x00429E20 - 0x00429F42
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004257C0()
 *		L00429F50()
 *		L00437E20()
 *		L0044755B()
 */

L00429E20(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 0x18;
    if(esi == 0 || Ac == 0) {
        eax = L00429610(65538);
    }
    ebx = *(esi + 4);
    if(ebx < 2) {
        return;
    }
    *(ebp - 0x20) = *esi;
    *(ebp - 0x1c) = ebx;
    *(ebp - 0x24) = ebx;
    *(ebp - 0x24) = *(ebp - 0x24) >> 1;
    *(ebp - 0x24) = *(ebp - 0x24) + 1;
    *(ebp - 0x14) = *(ebp - 0x24);
    *(ebp - 0x14) = *(ebp - 0x14) - 1;
    *(ebp - 0x14) = *(ebp - 0x14) << 2;
    eax = *(ebp - 0x20);
    *(ebp - 0x14) = *(ebp - 0x14) + eax;
    *(ebp - 0x10) = ebx;
    *(ebp - 0x10) = *(ebp - 0x10) - 1;
    *(ebp - 0x10) = *(ebp - 0x10) << 2;
    *(ebp - 0x10) = *(ebp - 0x10) + eax;
L00429e85:
    while(1) {
        if(*(ebp - 0x24) <= 1) {
            esi = *( *(ebp - 0x14));
            edx = *( *(ebp - 0x10));
            *( *(ebp - 0x14)) = edx;
            eax = *(ebp - 0x10);
            *eax = esi;
            *(ebp - 0x1c) = *(ebp - 0x1c) - 1;
            if(*(ebp - 0x1c) == 1) {
                break;
            }
L00429ec0:
            *(ebp - 0x10) = *(ebp - 0x10) - 4;
        } else {
            *(ebp - 0x24) = *(ebp - 0x24) - 1;
            *(ebp - 0x14) = *(ebp - 0x14) - 4;
        }
        eax = *(ebp - 0x24);
        ebx = (eax - 1) * 4;
        ecx = eax + eax;
        ebx = ebx + *(ebp - 0x20);
        *(ebp - 0x18) = eax;
        if(ecx > *(ebp - 0x1c)) {
            continue;
        }
        do {
            *(ebp - 0x18) = *(ebp - 0x18) << 1;
            esi = ebx;
            ebx = ( *(ebp - 0x18) - 1) * 4;
            eax = *(ebp - 0x1c);
            ebx = ebx + *(ebp - 0x20);
            if(*(ebp - 0x18) < eax) {
                edi = ebx + 4;
                if(Ac(A10, *ebx, *edi) < 0) {
                    *(ebp - 0x18) = *(ebp - 0x18) + 1;
                    ebx = edi;
                }
            }
            if(Ac(A10, *esi, *ebx) >= 0) {
                goto L00429e85;
            }
            eax = *esi;
            *esi = *ebx;
            *ebx = eax;
        } while(*(ebp - 0x18) + *(ebp - 0x18) <= *(ebp - 0x1c));
    }
    esp = ebp - 0xc;
    return;
    goto L00429ec0;
}

/*	Procedure: 0x00429F50 - 0x0042A096
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00462720()
 */

L00429F50(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 0x18;
    if(ebx == 0) {
        L00429610(65538);
    }
    eax = *(ebx + 4);
    *(ebp - 0x10) = eax;
    if(eax == 0) {
        if(A18 != 0) {
            *A18 = 0;
        }
        return 0;
    }
    *(ebp - 0x14) = 0;
    if(Ac != 0) {
        eax = L0042E310( *(ebp - 0x10) * 4);
        *(ebp - 0x24) = eax;
        *(ebp - 0x14) = *(ebp - 0x24);
        esi = *ebx;
        edi = 0;
        ebx = 0;
        if(*(ebp - 0x10) > 0) {
            do {
                (save) *(esi + ebx * 4);
                Ac(A14);
                (restore)ecx;
                if(al != 0) {
                    edx = *(esi + ebx * 4);
                    *( *(ebp - 0x24) + edi * 4) = edx;
                    edi = edi + 1;
                }
                ebx = ebx + 1;
            } while(ebx < *(ebp - 0x10));
        }
    } else {
        eax = L0042E350( *ebx, *(ebp - 0x10) * 4);
        *(ebp - 0x24) = eax;
        *(ebp - 0x14) = *(ebp - 0x24);
        edi = *(ebp - 0x10);
    }
    if(A10 != 0) {
        ecx = ebp - 0x20;
        *ecx = 0;
        *(ecx + 4) = 0;
        *(ecx + 8) = 0;
        eax = *(ebp - 0x24);
        edx = edi;
        *(ebp - 0x20) = eax;
        *(ebp - 0x1c) = edx;
        *(ebp - 0x18) = edx;
        L00429E20(ecx, A10, A14);
    }
    if(A18 != 0) {
        *A18 = edi;
    }
    if(edi == 0) {
        edi = ebp - 0x14;
        L0042E3E0(edi);
        esp = ebp - 0xc;
        return 0;
    }
    if(edi < *(ebp - 0x10)) {
        *(ebp - 0x24) = L0042E410( *(ebp - 0x24), edi * 4);
    }
    ecx = ebp - 0x14;
    *(ebp - 0x14) = 0;
    L0042E3E0(ecx);
    eax = *(ebp - 0x24);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042A097 - 0x0042A09F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A097()
{



}

/*	Procedure: 0x0042A0A0 - 0x0042A0C9
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 *		L00432760()
 *		L00432F60()
 *		L00433580()
 *		L0045A1A0()
 */

L0042A0A0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    (save)ebx;
    if(A4 == 0 || A8 == 0) {
        (restore)ebx;
        return;
    }
    ebx = *A4;
    eax = *(A4 + 8);
    *(A8 + eax) = ebx;
    *A4 = A8;
    if(ebx == 0) {
        *(A4 + 4) = A8;
    }
    *(A4 + 0xc) = *(A4 + 0xc) + 1;
    (restore)ebx;
}

/*	Procedure: 0x0042A0CA - 0x0042A0CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A0CA()
{



}

/*	Procedure: 0x0042A0D0 - 0x0042A10A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409860()
 *		L00409B60()
 *		L0040B130()
 *		L0040BB40()
 *		L004102F0()
 *		L00411920()
 *		L00411DF0()
 *		L0041C5A0()
 *		L0041CBA0()
 *		L0042E20C()
 *		L0042F0B0()
 *		L0042F1C0()
 *		L00432610()
 *		L00432D40()
 *		L00433030()
 *		L00433130()
 *		L00433580()
 *		L0045A000()
 *		L0045A0A0()
 *		L0045A270()
 */

L0042A0D0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    (save)ebx;
    if(A4 == 0 || A8 == 0) {
        (restore)ebx;
        return;
    }
    ebx = *(A4 + 8);
    *(A8 + ebx) = 0;
    edx = *(A4 + 4);
    if(edx != 0) {
        *(edx + ebx) = A8;
    } else {
        *A4 = A8;
    }
    *(A4 + 4) = A8;
    *(A4 + 0xc) = *(A4 + 0xc) + 1;
    (restore)ebx;
}

/*	Procedure: 0x0042A10B - 0x0042A10F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A10B()
{



}

/*	Procedure: 0x0042A110 - 0x0042A141
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042E090()
 *		L00432760()
 *		L00432F60()
 *		L00433030()
 *		L00433130()
 *		L004334F0()
 *		L0045A0A0()
 *		L0045A270()
 */

L0042A110(A4)
/* unknown */ void  A4;
{



    (save)ebx;
    if(A4 == 0) {
        (restore)ebx;
        return 0;
    }
    eax = *A4;
    if(eax != 0) {
        edx = eax + *(A4 + 8);
        ebx = *edx;
        *edx = 0;
        *A4 = ebx;
        if(ebx == 0) {
            *(A4 + 4) = ebx;
        }
        *(A4 + 0xc) = *(A4 + 0xc) - 1;
    }
    (restore)ebx;
}

/*	Procedure: 0x0042A142 - 0x0042A14F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A142()
{



}

/*	Procedure: 0x0042A150 - 0x0042A1AF
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401310()
 *		L00409AB0()
 *		L004104E0()
 *		L0041C860()
 *		L0041CBA0()
 *		L0042BD00()
 *		L0042F150()
 *		L0042F1C0()
 *		L0042F250()
 *		L00432760()
 *		L0044BB30()
 */

L0042A150(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    (save)ebx;
    (save)esi;
    ecx = A8;
    if(A4 == 0 || ecx == 0) {
        (restore)esi;
        (restore)ebx;
        return 0;
    }
    eax = *A4;
    esi = 0;
    ebx = *(A4 + 8);
    if(eax != 0) {
        do {
            if(eax == ecx) {
                goto L0042a176;
            }
            esi = eax;
            eax = *(eax + ebx);
        } while(eax != 0);
        goto L0042a1ab;
L0042a176:
        eax = eax + ebx;
        ecx = *eax;
        *eax = 0;
        if(esi != 0) {
            *(esi + ebx) = ecx;
        } else {
            *A4 = ecx;
        }
        if(ecx == 0) {
            *(A4 + 4) = esi;
        }
        *(A4 + 0xc) = *(A4 + 0xc) - 1;
        (restore)esi;
        (restore)ebx;
        return 1;
    }
L0042a1ab:
    (restore)esi;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x0042A1B0 - 0x0042A1E2
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A1B0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    (save)ebx;
    if(A4 == 0 || A8 == 0) {
        (restore)ebx;
        return 0;
    }
    ebx = *A4;
    eax = *(A4 + 8);
    if(ebx != 0) {
        do {
            if(ebx == A8) {
                goto L0042a1d6;
            }
            ebx = *(ebx + eax);
        } while(ebx != 0);
        goto L0042a1df;
L0042a1d6:
        (restore)ebx;
        return 1;
    }
L0042a1df:
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x0042A1E3 - 0x0042A1EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A1E3()
{



}

/*	Procedure: 0x0042A1F0 - 0x0042A212
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042A430()
 *		L0042C260()
 *		L0042CFC0()
 *		L0042E830()
 */

L0042A1F0(A4)
/* unknown */ void  A4;
{



    if(A4 == 0) {
        return 0;
    }
    edx = A4;
    do {
        eax = edx;
        edx = edx + 2;
    } while(*eax != 0);
    return edx - 2 - A4;
}

/*	Procedure: 0x0042A213 - 0x0042A21F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A213()
{



}

/*	Procedure: 0x0042A220 - 0x0042A246
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042AB80()
 *		L0042BDB0()
 *		L0042C050()
 *		L0042C260()
 *		L0042C440()
 *		L0042E830()
 */

L0042A220(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    edx = (A8 & -2) + A4;
    eax = edx;
    if(edx != A4) {
        do {
            eax = eax - 2;
            if(*eax == 0x5c) {
                goto L0042a23d;
            }
L0042a240:
        } while(eax != A4);
        goto L0042a244;
L0042a23d:
        return;
        goto L0042a240;
    }
L0042a244:
    return 0;
}

/*	Procedure: 0x0042A247 - 0x0042A24F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A247()
{



}

/*	Procedure: 0x0042A250 - 0x0042A2F8
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042A740()
 *		L0042C050()
 */

L0042A250(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A8;
    (save)ebx;
    ebx = A4;
    if(eax == 0) {
        (restore)ebx;
        return 0;
    }
    if(eax > 0xff) {
        (restore)ebx;
        return 0;
    }
    if(( *ebx & 0xff) == 0x2e) {
        (restore)ebx;
        return 0;
    }
    ecx = *(ebx + eax - 1) & 0xff;
    if(ecx == 0x2e) {
        (restore)ebx;
        return 0;
    }
    if(ecx == 0x20) {
        (restore)ebx;
        return 0;
    }
    if(!(eax = eax - 1)) {
        do {
            edx = *ebx & 0xff;
            ecx = dl & 0xff;
            ebx = ebx + 1;
            if(ecx == 0 || (ecx = ecx - 0xa) || (ecx = ecx - 3) || (ecx = ecx - 0x15) || (ecx = ecx - 8) || (ecx = ecx - 5) || (ecx = ecx - 0xb) || (ecx = ecx - 2)) {
                goto L0042a2e7;
            }
            ecx = ecx - 2;
            if(ecx <= 1 || (ecx = ecx - 0x1e) || !(ecx = ecx - 0x20)) {
                goto L0042a2e7;
            }
L0042a2f0:
        } while(eax = eax - 1);
        goto L0042a2f5;
L0042a2e7:
        (restore)ebx;
        return 0;
        goto L0042a2f0;
    }
L0042a2f5:
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x0042A2F9 - 0x0042A2FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A2F9()
{



}

/*	Procedure: 0x0042A300 - 0x0042A396
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0042A740()
 *		L0042C050()
 *		L0042CFC0()
 */

L0042A300(A14, A18)
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  V2;
	/* unknown */ void  V3;
	/* unknown */ void  ebx;



    al = 0;
    bl = 0;
    V3 = 0;
    V2 = 0;
    if(A18 >= 4) {
        ecx = *(A14 + A18 - 1) & 0xff;
        dl = 1;
        if(ecx != 0x6b && ecx != 0x4b) {
            dl = 0;
        }
        if(dl != 0) {
            bl = 1;
        }
    }
    if(bl != 0) {
        ecx = *(A14 + A18 - 2) & 0xff;
        dl = 1;
        if(ecx != 0x6e && ecx != 0x4e) {
            dl = 0;
        }
        if(dl != 0) {
            V2 = 1;
        }
    }
    if(V2 != 0) {
        ebx = *(A14 + A18 - 3) & 0xff;
        dl = 1;
        if(ebx != 0x6c && ebx != 0x4c) {
            dl = 0;
        }
        if(dl != 0) {
            V3 = 1;
        }
    }
    if(V3 != 0 && ( *(A14 + A18 - 4) & 0xff) == 0x2e) {
        al = 1;
    }
}

/*	Procedure: 0x0042A397 - 0x0042A39F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A397()
{



}

/*	Procedure: 0x0042A3A0 - 0x0042A42F
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 16
 *	Called by:
 *		L0042A740()
 *		L0042AD50()
 *		L0042AF10()
 *		L0042B070()
 *		L0042B600()
 *		L0042B800()
 *		L0042BAE0()
 *		L0042C050()
 */

L0042A3A0(A18, A1c)
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  V3;
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    al = 0;
    cl = 0;
    bl = 0;
    V3 = 0;
    if(A1c >= 8) {
        edi = *(A18 + A1c - 2) & 65535;
        dl = 1;
        if(edi != 0x6b && edi != 0x4b) {
            dl = 0;
        }
        if(dl != 0) {
            bl = 1;
        }
    }
    if(bl != 0) {
        ebx = *(A18 + A1c - 4) & 65535;
        dl = 1;
        if(ebx != 0x6e && ebx != 0x4e) {
            dl = 0;
        }
        if(dl != 0) {
            cl = 1;
        }
    }
    if(cl != 0) {
        edx = *(A18 + A1c - 6) & 65535;
        bl = 1;
        if(edx != 0x6c && edx != 0x4c) {
            bl = 0;
        }
        if(bl != 0) {
            V3 = 1;
        }
    }
    if(V3 != 0 && ( *(A18 + A1c - 8) & 65535) == 0x2e) {
        al = 1;
    }
}

/*	Procedure: 0x0042A430 - 0x0042A57D
 *	Argument size: 16
 *	Local size: 600
 *	Save regs size: 8
 *	Called by:
 *		L0042A580()
 *		L0042A660()
 *		L0042A740()
 */

L0042A430(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffff4;



    esi = ebp + -608;
    *(ebp + -608) = 0;
    Vfffffff4 = 0;
    (save)esi;
    (save)0x479038;
    (save)1;
    (save)0;
    (save)0x479048;
    if(CoCreateInstance() != 0) {
        *(ebp + -608) = 0;
    } else {
        (save) & Vfffffff4;
        (save)0x479058;
        (save) *(ebp + -608);
        if(*( *( *(ebp + -608)))() != 0) {
            Vfffffff4 = 0;
        } else {
            (save)0;
            (save)A8;
            (save)Vfffffff4;
            if(*( *Vfffffff4 + 0x14)() == 0) {
                if(Ac == 0) {
                    goto L0042a4e3;
                }
                (save)3;
                (save)0;
                (save) *(ebp + -608);
                if(*( *( *(ebp + -608)) + 0x4c)() == 0) {
L0042a4e3:
                    ecx = ebp + -604;
                    (save)1;
                    (save)ecx;
                    (save)(A14 >> 1) - 1;
                    (save)A10;
                    (save) *(ebp + -608);
                    if(*( *( *(ebp + -608)) + 0xc)() == 0) {
                        (save)Vfffffff4;
                        *( *Vfffffff4 + 8)();
                        (save) *(ebp + -608);
                        *( *( *(ebp + -608)) + 8)();
                        L0045A140();
                        return L0042A1F0(A10);
                    }
                }
            }
        }
    }
    if(Vfffffff4 != 0) {
        (save)Vfffffff4;
        *( *Vfffffff4 + 8)();
    }
    if(*(ebp + -608) != 0) {
        (save) *(ebp + -608);
        *( *( *(ebp + -608)) + 8)();
    }
    L0045A140();
    esp = ebp - 8;
    return 0;
}

/*	Procedure: 0x0042A57E - 0x0042A57F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A57E()
{



}

/*	Procedure: 0x0042A580 - 0x0042A651
 *	Argument size: 16
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0042A740()
 *		L0042AF10()
 *		L0042BAE0()
 *		L0042CFC0()
 */

L0042A580(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
struct _WIN32_FIND_DATAW * A14;
{
	struct _WIN32_FIND_DATAW * ebx;
	/* unknown */ void  edi;



    ebx = A14;
    eax = L0042E310(0x1000);
    *(ebp - 0x10) = eax;
    edi = L0042A430(A8, Ac & 0xff, *(ebp - 0x10), 0xffe);
    if(edi == 0) {
        ebx = ebp - 0x10;
        L0042E3E0(ebx);
        *A10 = 0;
        return 0;
    }
    (save)edi + 2;
    eax = L0042E410( *(ebp - 0x10));
    edx = eax;
    (restore)ecx;
    *(ebp - 0x10) = eax;
    *(edx + edi) = 0;
    *A10 = edi;
    if(ebx != 0) {
        if(edi <= 6) {
            L00434150(ebx, 0x250);
            *ebx = 0x10;
        } else {
            eax = FindFirstFileW( *(ebp - 0x10), ebx);
            if(eax == 0 || eax == -1) {
                L0042E3E0(ebp - 0x10);
                *A10 = 0;
                esp = ebp - 0xc;
                return 0;
            }
            FindClose(eax);
        }
    }
    eax = *(ebp - 0x10);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042A652 - 0x0042A65F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A652()
{



}

/*	Procedure: 0x0042A660 - 0x0042A73B
 *	Argument size: 4
 *	Local size: 28
 *	Save regs size: 8
 *	Called by:
 *		L0042AD50()
 *		L0042B070()
 */

L0042A660(A8)
/* unknown */ void  A8;
{
	DWORD ebx;
	WCHAR * esi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;
	WCHAR * Vfffffff4;



    Vfffffff0 = esp;
    esi = L0042E310(0x1000);
    Vfffffff4 = esi;
    ebx = L0042A430(A8, 0, esi, 0xffe);
    if(ebx == 0) {
        L00429610(196717);
    }
    if(ebx <= 6) {
        L0042E3E0( & Vfffffff4);
        return 0x44;
    }
    *(esi + ebx) = 0;
    ebx = GetFileAttributesW(esi);
    if(ebx == -1) {
        L00429610(196710);
    }
    if(!(ebx & 0x10)) {
        L0042E3E0( & Vfffffff4);
        esp = ebp - 8;
        return 0x44;
    }
    L0042E3E0( & Vfffffff4);
    goto L0042a730;
    if(Vffffffe4 != 0) {
        ecx = *(ebp - 0x24);
        Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
    esp = ebp - 8;
    return 0x24;
L0042a730:
    esp = ebp - 8;
    return 4;
}

/*	Procedure: 0x0042A73C - 0x0042A73F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042A73C()
{



}

/*	Procedure: 0x0042A740 - 0x0042AB76
 *	Argument size: 36
 *	Local size: 564
 *	Save regs size: 12
 *	Called by:
 *		L0042B070()
 *		L0042B280()
 *		L0042B480()
 *		L0042B600()
 *		L0042B800()
 *		L0042BAE0()
 *		L0042BED0()
 */

L0042A740(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A8;
    Vffffffe8 = 0;
    Vfffffff0 = 0;
    *A24 = 0;
    if(A1c > 0xff) {
        A1c = 0xff;
    }
    if(A1c != 0) {
        (save)A1c;
        L0042A250(A18);
        (restore)ecx;
        if(al != 0) {
            goto L0042a795;
        }
        *A24 = 1;
    } else {
L0042a795:
        Vffffffc4 = L004286E0(A18, A1c, ebp + -572, 0x200);
        if(Ac >= 2) {
            if(*(ebx + Ac - 2) == 0x5c) {
                Ac = Ac - 2;
            }
            (save)Ac;
            L0042A3A0(ebx);
            (restore)ecx;
            if(al != 0) {
                if(A14 != 0 || A1c != 0) {
                    ebx = L0042A580(ebx, 1, & Ac, 0);
                    Vffffffe8 = ebx;
                } else {
                    if(A20 != 0) {
                        eax = L0042A580(ebx, 1, A28, 0);
                        ebx = & Vffffffe8;
                        edi = eax;
                        L0042E3E0(ebx);
                        return edi;
                    }
                }
            }
            if(A14 == 0) {
                if(A1c == 0) {
                    *A28 = Ac;
                    eax = L0042E310(Ac + 2);
                    Vfffffff0 = eax;
                    L004342A0(Vfffffff0, ebx, Ac);
                    *(Vfffffff0 + Ac) = 0;
                    ebx = Vfffffff0;
                    L0042E3E0( & Vffffffe8);
                    eax = ebx;
                    esp = ebp - 0xc;
                    return;
                }
                ecx = Ac + 2 + Vffffffc4;
                *A28 = ecx;
                eax = L0042E310( *A28 + 2);
                Vfffffff0 = eax;
                L004342A0(Vfffffff0, ebx, Ac);
                ebx = Vfffffff0 + Ac;
                *ebx = 0x5c;
                ebx = ebx + 2;
                ebx = ebx + L004342A0(ebx, ebp + -572, Vffffffc4);
                *ebx = 0;
                if(A20 != 0) {
                    (save)A1c;
                    L0042A300(A18);
                    (restore)ecx;
                    if(al != 0) {
                        goto L0042a906;
                    }
                }
                ebx = & Vffffffe8;
                esi = Vfffffff0;
                L0042E3E0(ebx);
                eax = esi;
                esp = ebp - 0xc;
                return;
L0042a906:
                Vffffffe0 = esp;
                edi = L0042A580(Vfffffff0, 1, A28, 0);
                goto L0042a948;
                L0042E3E0( & Vfffffff0);
                L004234F0(0, 0, 0);
                if(Vffffffd4 != 0) {
                    (save)-1;
                    ecx = Vffffffcc;
                    Vffffffd4();
                }
                esp = *(ebp - 0x20);
L0042a948:
                L0042E3E0( & Vfffffff0);
                Vfffffff0 = edi;
                L0042E3E0( & Vffffffe8);
                eax = edi;
                esp = ebp - 0xc;
                return;
            }
            eax = A14 + A14 + Ac + Vffffffc4 + 0x10;
            if(eax <= 8192) {
                eax = 8192;
            }
            edi = eax & -2;
            eax = L0042E310(edi);
            Vfffffff0 = eax;
            Vffffffec = eax;
            Vffffffec = Vffffffec + edi;
            Vffffffec = Vffffffec - 2;
            esi = eax;
            eax = L004342A0(eax, ebx, Ac);
            edi = A10;
            esi = esi + eax;
            Vffffffe4 = edi;
            Vffffffe4 = Vffffffe4 + A14;
            if(edi >= Vffffffe4) {
                goto L0042aaab;
            }
            *(ebp + -574) = 0;
            do {
                ebx = *(edi + 2) & 0xff;
                edi = edi + 3;
                *(ebp + -573) = 0;
                if(ebx + edi == Vffffffe4 && *(ebp + -574) != 0) {
                    *(ebp + -573) = 1;
                }
                Vffffffc8 = ebx;
                (save)ebx;
                L0042A250(edi);
                (restore)ecx;
                if(al == 0) {
                    goto L0042aa0c;
                }
                if(esi + ebx * 2 >= Vffffffec) {
                    goto L0042ab50;
                }
                if(esi == Vfffffff0 || *(esi - 2) != 0x5c) {
                    *esi = 0x5c;
                    esi = esi + 2;
                }
                esi = esi + L004286E0(edi, Vffffffc8, esi, Vffffffec - esi);
                if(*(ebp + -573) == 0 || A20 != 0) {
                    (save)Vffffffc8;
                    L0042A300(edi);
                    (restore)ecx;
                    if(al != 0) {
                        *esi = 0;
                        eax = L0042A430(Vfffffff0, 1, Vfffffff0, Vffffffec - Vfffffff0);
                        if(eax == 0) {
                            goto L0042ab50;
                        }
                        esi = Vfffffff0 + eax;
                    }
                }
                edi = edi + ebx;
            } while(edi < Vffffffe4);
            goto L0042aaab;
L0042aa0c:
            if(*(ebp + -573) != 0) {
                *A24 = 1;
                goto L0042ab50;
L0042aaab:
                if(A1c == 0) {
                    goto L0042ab18;
                }
                if(esi + Vffffffc4 < Vffffffec) {
                    *esi = 0x5c;
                    esi = esi + 2;
                    esi = esi + L004342A0(esi, ebp + -572, Vffffffc4);
                    if(A20 == 0) {
                        goto L0042ab18;
                    }
                    (save)A1c;
                    L0042A300(A18);
                    (restore)ecx;
                    if(al == 0) {
                        goto L0042ab18;
                    }
                    *esi = 0;
                    eax = L0042A430(Vfffffff0, 1, Vfffffff0, Vffffffec - Vfffffff0);
                    if(eax != 0) {
                        esi = Vfffffff0 + eax;
L0042ab18:
                        *esi = 0;
                        ebx = esi - Vfffffff0;
                        *A28 = ebx;
                        eax = L0042E410(Vfffffff0, *A28 + 2);
                        Vfffffff0 = eax;
                        edi = Vfffffff0;
                        L0042E3E0( & Vffffffe8);
                        eax = edi;
                        esp = ebp - 0xc;
                        return;
                    }
                }
            }
        }
    }
L0042ab50:
    L0042E3E0( & Vfffffff0);
    *A28 = 0;
    L0042E3E0( & Vffffffe8);
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0042AB77 - 0x0042AB7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042AB77()
{



}

/*	Procedure: 0x0042AB80 - 0x0042AD48
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042B070()
 *		L0042B280()
 *		L0042B480()
 *		L0042B600()
 *		L0042B800()
 *		L0042BAE0()
 *		L0042BDB0()
 *		L0042BED0()
 */

L0042AB80(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
WCHAR * A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 4;
    eax = A10;
    edx = *eax;
    ecx = 0;
    edi = A8;
    esi = Ac;
    if(edx != 0) {
        L00437590( *esi, edx, eax);
        if(al == 0) {
            L00429610(65546);
        }
        edx = *esi;
        eax = *edx & 65535;
        ecx = eax;
        eax = eax >> 8;
        ecx = ecx << 8;
        edx = edx + 2;
        ecx = ecx | eax;
        *esi = edx;
        *A10 = *A10 - 2;
    }
    edx = edi;
    if(edx < 0x100 && edi != 0) {
        if(edx == 5) {
            if(cx < 1) {
                L00429610(196730);
            }
            edi = *esi + 2;
            if(*edi < 2 || ( *(edi + 2) & 0xff) != 0x3a) {
                L00429610(196730);
            }
            *(ebp - 0x10) = *(edi + 1) & 0xff;
            ecx = *(ebp - 0x10) & 0xff;
            if((ecx < 0x41 || ecx > 0x5a) && (ecx < 0x61 || ecx > 0x7a)) {
                L00429610(196730);
            }
            edi = edi + ( *edi & 0xff) + 1;
            *A10 = *A10 - edi - *esi;
            *esi = edi;
            *A14 = *(ebp - 0x10) & 0xff;
            *(A14 + 2) = 0x3a;
            *(A14 + 4) = 0x5c;
            *(A14 + 6) = 0;
            *A1c = 6;
            esp = ebp - 0xc;
            return A14;
        }
        eax = GetModuleFileNameW(0, A14, (A18 >> 1) - 1);
        if(eax <= 0) {
            esp = ebp - 0xc;
            return 0;
        }
        esi = eax + eax;
        (save)esi;
        eax = L0042A220(A14);
        (restore)ecx;
        if(eax != 0) {
            *eax = 0;
            esi = eax - A14;
        }
        *A1c = esi;
        esp = ebp - 0xc;
        return A14;
    }
    if(edx >= -256) {
        *A14 = dl & 0xff;
        *(A14 + 2) = 0x3a;
        *(A14 + 4) = 0x5c;
        *(A14 + 6) = 0;
        *A1c = 6;
        esp = ebp - 0xc;
        return A14;
    }
    if(edi == 0) {
        L00429610(65538);
    }
    if(*(edi + 4) != 480691098) {
        L00429610(65561);
    }
    *A1c = *(edi + 0xc);
    eax = *(edi + 8);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042AD49 - 0x0042AD4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042AD49()
{



}

/*	Procedure: 0x0042AD50 - 0x0042AF0E
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 */

L0042AD50(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
HANDLE Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	WCHAR * ebx;
	/* unknown */ void  esi;
	HANDLE edi;



    edi = Ac;
    esp = esp - 0x20;
    esi = A10;
    if(edi == 0) {
        L00429610(65538);
    }
    eax = L0042E3A0(0x1c);
    edx = eax;
    *(ebp - 0x2c) = eax;
    *(edx + 4) = 480691098;
    *(ebp - 0x10) = esp;
    ebx = L0042E310(edi + 2);
    L004342A0(ebx, A8, edi);
    *(ebx + edi) = 0;
    *( *(ebp - 0x2c) + 8) = ebx;
    *( *(ebp - 0x2c) + 0xc) = edi;
    eax = GetFileAttributesW(ebx);
    *(ebp - 0x28) = eax;
    if(eax == -1) {
        L00429610(196710);
    }
    if(!( *(ebp - 0x28) & 0x10)) {
        *( *(ebp - 0x2c) + 0x10) = 2;
    } else {
        (save)edi;
        L0042A3A0(ebx);
        (restore)ecx;
        if(al != 0) {
            eax = L0042A660(ebx);
            *( *(ebp - 0x2c) + 0x10) = eax;
        } else {
            *( *(ebp - 0x2c) + 0x10) = 1;
            if(!(esi & 0xf)) {
                esi = esi | 0x13;
            }
            ecx = -2147483648;
            if(!(esi & 2)) {
                ecx = -1073741824;
            }
            eax = 0;
            if(!(esi & 4)) {
                eax = 1;
            }
            if(!(esi & 8)) {
                eax = eax | 2;
            }
            edi = CreateFileW(ebx, ecx, eax, 0, 3, 0x80, 0);
            if(edi == 0 || edi == -1) {
                eax = GetLastError();
                if(!(esi & 0x10)) {
                    if(eax == 5) {
                        goto L0042ae78;
                    }
                    if(eax == 0x20) {
L0042ae78:
                        edi = CreateFileW(ebx, -2147483648, 3, 0, 3, 0x80, 0);
                        if(edi != 0 && edi != -1) {
                            goto L0042aea1;
                        }
                    }
                }
                L0042FA00();
            }
L0042aea1:
            *( *(ebp - 0x2c)) = edi;
        }
    }
    if(A14 != 0) {
        L0042C260( *(ebp - 0x2c), A14 + 1, 0xff);
        *A14 = al;
    }
    if(A18 != 0) {
        edx = *( *(ebp - 0x2c) + 0x10);
        *A18 = edx;
        goto L0042af04;
        L0042BD00(ebp - 0x2c);
        L004234F0(0, 0, 0);
        if(*(ebp - 0x1c) != 0) {
            ecx = *(ebp - 0x24);
            *(ebp - 0x1c)(-1);
        }
        esp = *(ebp - 0x10);
    }
L0042af04:
    return *(ebp - 0x2c);
}

/*	Procedure: 0x0042AF0F - 0x0042AF0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042AF0F()
{



}

/*	Procedure: 0x0042AF10 - 0x0042B06C
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042B070()
 *		L0042B480()
 *		L0042B800()
 */

L0042AF10(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = A8;
    (save)esi;
    (save)edi;
    esp = esp - 0x28;
    esi = *(ebx + 0xc);
    *(ebp - 0x28) = esi;
    (save)esi;
    (restore)ecx;
    if(L0042A3A0( *(ebx + 8)) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return eax | -1;
    }
    edi = esi + 8;
    eax = L0042E310(esi + 0xa);
    *(ebp - 0x34) = eax;
    L004342A0( *(ebp - 0x34), *(ebx + 8), *(ebp - 0x28));
    *( *(ebp - 0x34) + esi) = 0x2e;
    *( *(ebp - 0x34) + esi + 2) = 0x6c;
    *( *(ebp - 0x34) + esi + 4) = 0x6e;
    *( *(ebp - 0x34) + esi + 6) = 0x6b;
    *( *(ebp - 0x34) + esi + 8) = 0;
    esi = GetFileAttributesW( *(ebp - 0x34));
    if(esi == -1) {
        ebx = ebp - 0x34;
        L0042E3E0(ebx);
        eax = esi;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    if(Ac != 0) {
        *(ebp - 0x10) = esp;
        *(ebp - 0x2c) = L0042A580( *(ebp - 0x34), 0, ebp - 0x30, 0);
        goto L0042b003;
        L0042E3E0(ebp - 0x34);
        L004234F0(0, 0, 0);
        if(*(ebp - 0x1c) != 0) {
            (save)-1;
            ecx = *(ebp - 0x24);
            *(ebp - 0x1c)();
        }
        esp = *(ebp - 0x10);
L0042b003:
        L0042E3E0(ebp - 0x34);
        eax = *(ebp - 0x2c);
        *(ebp - 0x34) = eax;
        edi = *(ebp - 0x30);
        if(eax == 0) {
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            return eax | -1;
        }
        esi = GetFileAttributesW( *(ebp - 0x34));
        if(esi == -1) {
            ebx = ebp - 0x34;
            L0042E3E0(ebx);
            eax = esi;
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            return;
        }
    }
    L0042E3E0(ebx + 8);
    *(ebx + 8) = *(ebp - 0x34);
    *(ebx + 0xc) = edi;
    esp = ebp - 0xc;
    eax = esi;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0042B06D - 0x0042B06F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042B06D()
{



}

/*	Procedure: 0x0042B070 - 0x0042B271
 *	Argument size: 20
 *	Local size: 2088
 *	Save regs size: 12
 *	Called by:
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L004051B0()
 *		L00405970()
 *		L00405B70()
 *		L00405D00()
 *		L00415120()
 */

L0042B070(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
DWORD A14;
/* unknown */ void  A18;
{
	WCHAR * ebx;
	/* unknown */ void  esi;
	DWORD edi;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A14;
    esi = A18;
    ebx = L0042AB80(A8, & Ac, & A10, ebp + -2096, 0x800, & Vffffffe8);
    if(ebx == 0) {
        L00429610(196710);
    }
    eax = L0042E3A0(0x1c);
    Vfffffff0 = eax;
    *(eax + 4) = 480691098;
    Vffffffe4 = esp;
    ecx = edi != 0 ? *edi & 0xff : 0;
    edx = ebp + -2097;
    ebx = L0042A740(ebx, Vffffffe8, Ac, A10, edi + 1, ecx, 0, edx, & Vffffffec);
    if(ebx == 0) {
        L00429610(196710);
    }
    *(Vfffffff0 + 8) = ebx;
    *(Vfffffff0 + 0xc) = Vffffffec;
    edi = GetFileAttributesW(ebx);
    if(edi == -1) {
        (save)0;
        edi = L0042AF10(Vfffffff0);
        (restore)ecx;
        if(edi == -1) {
            L00429610(196710);
        }
        ebx = *(Vfffffff0 + 8);
        Vffffffec = *(Vfffffff0 + 0xc);
    }
    if(!(edi & 0x10)) {
        *(Vfffffff0 + 0x10) = 2;
    } else {
        (save)Vffffffec;
        L0042A3A0(ebx);
        (restore)ecx;
        if(al != 0) {
            eax = L0042A660(ebx);
            *(Vfffffff0 + 0x10) = eax;
        } else {
            *(Vfffffff0 + 0x10) = 1;
            if(!(esi & 0xf)) {
                esi = esi | 0x13;
            }
            ecx = -2147483648;
            if(!(esi & 2)) {
                ecx = -1073741824;
            }
            eax = 0;
            if(!(esi & 4)) {
                eax = 1;
            }
            if(!(esi & 8)) {
                eax = eax | 2;
            }
            edi = CreateFileW(ebx, ecx, eax, 0, 3, 0x80, 0);
            if(edi == 0 || edi == -1) {
                eax = GetLastError();
                if(!(esi & 0x10)) {
                    if(eax == 5) {
                        goto L0042b208;
                    }
                    if(eax == 0x20) {
L0042b208:
                        edi = CreateFileW(ebx, -2147483648, 3, 0, 3, 0x80, 0);
                        if(edi != 0 && edi != -1) {
                            goto L0042b231;
                        }
                    }
                }
                L0042FA00();
            }
L0042b231:
            *Vfffffff0 = edi;
        }
    }
    *(Vfffffff0 + 0x14) = esi;
    return Vfffffff0;
    L0042BD00( & Vfffffff0);
    L004234F0(0, 0, 0);
    if(Vffffffd8 != 0) {
        ecx = Vffffffd0;
        Vffffffd8(-1);
    }
    esp = *(ebp - 0x1c);
    return Vfffffff0;
}

/*	Procedure: 0x0042B272 - 0x0042B27F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042B272()
{



}

/*	Procedure: 0x0042B280 - 0x0042B45E
 *	Argument size: 24
 *	Local size: 2092
 *	Save regs size: 12
 *	Called by:
 *		L0042B460()
 */

L0042B280(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
HANDLE A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	WCHAR * ebx;
	/* unknown */ void  esi;
	HANDLE edi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A14;
    esi = A18;
    ebx = L0042AB80(A8, & Ac, & A10, ebp + -2100, 0x800, & Vffffffd0);
    if(ebx == 0) {
        L00429610(196711);
    }
    eax = L0042E3A0(A1c);
    Vfffffff0 = eax;
    *(Vfffffff0 + 4) = 480691098;
    Vffffffec = esp;
    ecx = edi != 0 ? *edi & 0xff : 0;
    eax = ebp + -2101;
    ebx = L0042A740(ebx, Vffffffd0, Ac, A10, edi + 1, ecx, 1, eax, & Vffffffd4);
    if(ebx == 0) {
        L00429610(196711);
    }
    *(Vfffffff0 + 8) = ebx;
    *(Vfffffff0 + 0xc) = Vffffffd4;
    if(!(esi & 0xf)) {
        esi = esi | 0x13;
    }
    eax = -2147483648;
    if(!(esi & 2)) {
        eax = -1073741824;
    }
    ecx = 0;
    if(!(esi & 4)) {
        ecx = 1;
    }
    if(!(esi & 8)) {
        ecx = ecx | 2;
    }
    edi = CreateFileW(ebx, eax, ecx, 0, 3, 0x80, 0);
    if(edi == 0 || edi == -1) {
        eax = GetFileAttributesW(ebx);
        if(eax != -1 && !(eax & 0x10)) {
            L00429610(196714);
        }
        eax = GetLastError();
        if(!(esi & 0x10)) {
            if(eax == 5) {
                goto L0042b3b5;
            }
            if(eax == 0x20) {
L0042b3b5:
                edi = CreateFileW(ebx, -2147483648, 3, 0, 3, 0x80, 0);
                if(edi != 0 && edi != -1) {
                    goto L0042b3e0;
                }
            }
        }
        L0042FA00();
    }
L0042b3e0:
    *Vfffffff0 = edi;
    *(Vfffffff0 + 0x10) = 1;
    *(Vfffffff0 + 0x14) = esi;
    goto L0042b454;
    Vffffffcc = Vffffffe4;
    L0042BD00( & Vfffffff0);
    if(!(esi & 0x20) && *Vffffffcc == 196711) {
        if(Vffffffe0 != 0) {
            ecx = Vffffffd8;
            Vffffffe0(-1);
        }
        esp = *(ebp - 0x14);
        return 0;
    }
    L004234F0(0, 0, 0);
    if(Vffffffe0 != 0) {
        ecx = Vffffffd8;
        Vffffffe0(-1);
    }
    esp = *(ebp - 0x14);
L0042b454:
    esp = ebp - 0xc;
    return Vfffffff0;
}

/*	Procedure: 0x0042B45F - 0x0042B45F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042B45F()
{



}

/*	Procedure: 0x0042B460 - 0x0042B47F
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00406950()
 *		L00414800()
 *		L00415120()
 *		L004159D0()
 *		L0043C000()
 *		L00464908()
 */

L0042B460(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L0042B280(A8, Ac, A10, A14, A18, 0x1c);
}

/*	Procedure: 0x0042B480 - 0x0042B5DE
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042B5E0()
 */

L0042B480(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    ecx = ebp - 0x28;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x828;
    edi = A14;
    esi = L0042AB80(A8, & Ac, & A10, ebp + -2096, 0x800, ecx);
    if(esi == 0) {
        L00429610(196712);
    }
    eax = L0042E3A0(A1c);
    *(ebp - 0x30) = eax;
    *( *(ebp - 0x30) + 4) = 480691098;
    *(ebp - 0x10) = esp;
    ecx = edi != 0 ? *edi & 0xff : 0;
    eax = ebp + -2097;
    edi = L0042A740(esi, *(ebp - 0x28), Ac, A10, edi + 1, ecx, 1, eax, ebp - 0x2c);
    if(edi == 0) {
        L00429610(196712);
    }
    *( *(ebp - 0x30) + 8) = edi;
    ecx = *(ebp - 0x30);
    *(ecx + 0xc) = *(ebp - 0x2c);
    esi = GetFileAttributesW(edi);
    if(esi == -1) {
        (save)1;
        esi = L0042AF10( *(ebp - 0x30));
        (restore)ecx;
        if(esi == -1) {
            L00429610(196712);
        }
    }
    if(!(esi & 0x10)) {
        L00429610(196715);
    }
    *( *(ebp - 0x30) + 0x10) = 2;
    ecx = *(ebp - 0x30);
    *(ecx + 0x14) = A18;
    goto L0042b5d4;
    edx = ebp - 0x30;
    ebx = *(ebp - 0x18);
    L0042BD00(edx);
    if(!(A18 & 0x20) && *ebx == 196712) {
        if(*(ebp - 0x1c) != 0) {
            ecx = *(ebp - 0x24);
            *(ebp - 0x1c)(-1);
        }
        esp = *(ebp - 0x10);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return 0;
    }
    L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)(-1);
    }
    esp = *(ebp - 0x10);
L0042b5d4:
    eax = *(ebp - 0x30);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0042B5DF - 0x0042B5DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042B5DF()
{



}

/*	Procedure: 0x0042B5E0 - 0x0042B5FF
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00403C00()
 *		L00404010()
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L00409390()
 *		L00415120()
 *		L00463640()
 *		L004636B0()
 *		L00464908()
 */

L0042B5E0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L0042B480(A8, Ac, A10, A14, A18, 0x1c);
}

/*	Procedure: 0x0042B600 - 0x0042B7F1
 *	Argument size: 24
 *	Local size: 2092
 *	Save regs size: 12
 *	Called by:
 *		L00408CB0()
 *		L0040C640()
 *		L00411DF0()
 *		L00412880()
 *		L00413B90()
 *		L00415B9D()
 *		L00448EC0()
 */

L0042B600(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
unsigned long  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	HANDLE ebx;
	/* unknown */ void  esi;
	unsigned long  edi;
	/* unknown */ void  Vffffffcc;
	WCHAR * Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A14;
    esi = A18;
    if(A1c == 0) {
        L00429610(65538);
    }
    edx = ebp + -2100;
    ebx = L0042AB80(A8, & Ac, & A10, edx, 0x800, & Vffffffcc);
    if(ebx == 0) {
        L00429610(196712);
    }
    eax = L0042E3A0(0x1c);
    Vfffffff0 = eax;
    *(Vfffffff0 + 4) = 480691098;
    Vffffffec = esp;
    ecx = edi != 0 ? *edi & 0xff : 0;
    eax = ebp + -2101;
    eax = L0042A740(ebx, Vffffffcc, Ac, A10, edi + 1, ecx, 0, eax, & Vffffffd4);
    Vffffffd0 = eax;
    if(eax == 0) {
        edi = *(ebp + -2101) != 0 ? 196726 : 196712;
        L00429610(edi);
    }
    *(Vfffffff0 + 8) = Vffffffd0;
    *(Vfffffff0 + 0xc) = Vffffffd4;
    (save)Vffffffd4;
    L0042A3A0(Vffffffd0);
    (restore)ecx;
    if(al != 0) {
        L00429610(196726);
    }
    if(!(esi & 0xf)) {
        esi = esi | 0x13;
    }
    eax = -2147483648;
    if(!(esi & 2)) {
        eax = -1073741824;
    }
    ecx = 0;
    if(!(esi & 4)) {
        ecx = 1;
    }
    if(!(esi & 8)) {
        ecx = ecx | 2;
    }
    edi = !(esi & 0x40) ? 2 : !(esi & 0x80) ? 4 : 1;
    ebx = CreateFileW(Vffffffd0, eax, ecx, 0, edi, 0x80, 0);
    if(ebx == 0 || ebx == -1) {
        eax = GetLastError();
        if(!(esi & 0x10)) {
            if(eax == 5) {
                goto L0042b77d;
            }
            if(eax == 0x20) {
L0042b77d:
                ebx = CreateFileW(Vffffffd0, -2147483648, 3, 0, edi, 0x80, 0);
                if(ebx != 0 && ebx != -1) {
                    goto L0042b7a7;
                }
            }
        }
        L0042FA00();
    }
L0042b7a7:
    *Vfffffff0 = ebx;
    *(Vfffffff0 + 0x10) = 1;
    *(Vfffffff0 + 0x14) = esi;
    return Vfffffff0;
    L0042BD00( & Vfffffff0);
    L004234F0(0, 0, 0);
    if(Vffffffe0 != 0) {
        ecx = Vffffffd8;
        Vffffffe0(-1);
    }
    esp = *(ebp - 0x14);
    return Vfffffff0;
}

/*	Procedure: 0x0042B7F2 - 0x0042B7FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042B7F2()
{



}

/*	Procedure: 0x0042B800 - 0x0042BA2E
 *	Argument size: 24
 *	Local size: 2088
 *	Save regs size: 12
 *	Called by:
 *		L0042BA30()
 */

L0042B800(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
WCHAR * A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	WCHAR * ebx;
	WCHAR * edi;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A14;
    ebx = L0042AB80(A8, & Ac, & A10, ebp + -2096, 0x800, & Vffffffd0);
    if(ebx == 0) {
        L00429610(196712);
    }
    eax = L0042E3A0(A1c);
    Vfffffff0 = eax;
    *(Vfffffff0 + 4) = 480691098;
    Vffffffec = esp;
    *(Vfffffff0 + 0x10) = 2;
    if(!(A18 & 0x80)) {
        edx = edi != 0 ? *edi & 0xff : 0;
        ecx = ebp + -2097;
        ebx = L0042A740(ebx, Vffffffd0, Ac, A10, edi + 1, edx, 1, ecx, & Vffffffd4);
        if(ebx == 0) {
            edx = *(ebp + -2097) != 0 ? 196726 : 196712;
            L00429610(edx);
        }
        *(Vfffffff0 + 8) = ebx;
        *(Vfffffff0 + 0xc) = Vffffffd4;
        eax = GetFileAttributesW(ebx);
        if(eax == -1) {
            (save)1;
            eax = L0042AF10(Vfffffff0);
            (restore)ecx;
            ebx = *(Vfffffff0 + 8);
            Vffffffd4 = *(Vfffffff0 + 0xc);
        }
        if(eax == -1) {
            if(CreateDirectoryW(ebx, 0) != 0) {
                goto L0042b9f3;
            }
            goto L0042b9ee;
        }
        if(!(eax & 0x10)) {
            L00429610(196723);
        }
    } else {
        ecx = edi != 0 ? *edi & 0xff : 0;
        eax = ebp + -2097;
        edi = L0042A740(ebx, Vffffffd0, Ac, A10, edi + 1, ecx, 0, eax, & Vffffffd4);
        if(edi == 0) {
            ebx = *(ebp + -2097) != 0 ? 196726 : 196712;
            L00429610(ebx);
        }
        *(Vfffffff0 + 8) = edi;
        *(Vfffffff0 + 0xc) = Vffffffd4;
        (save)Vffffffd4;
        L0042A3A0(edi);
        (restore)ecx;
        if(al != 0) {
            L00429610(196726);
        }
        if(CreateDirectoryW(edi, 0) == 0) {
            if(A18 & 0x40) {
                goto L0042b9ee;
            }
            RemoveDirectoryW(edi);
            if(CreateDirectoryW(edi, 0) == 0) {
L0042b9ee:
                L0042FA00();
            }
        }
    }
L0042b9f3:
    *(Vfffffff0 + 0x14) = A18;
    return Vfffffff0;
    L0042BD00( & Vfffffff0);
    L004234F0(0, 0, 0);
    if(Vffffffe0 != 0) {
        ecx = Vffffffd8;
        Vffffffe0(-1);
    }
    esp = *(ebp - 0x14);
    return Vfffffff0;
}

/*	Procedure: 0x0042BA2F - 0x0042BA2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042BA2F()
{



}

/*	Procedure: 0x0042BA30 - 0x0042BA4F
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00404640()
 *		L00409390()
 *		L00412880()
 *		L00416790()
 */

L0042BA30(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L0042B800(A8, Ac, A10, A14, A18, 0x1c);
}

/*	Procedure: 0x0042BA50 - 0x0042BADD
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0042BAE0()
 */

L0042BA50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 8;
    (save)ebp - 0x10;
    (save)0x479038;
    (save)1;
    (save)0;
    (save)0x479048;
    ebx = CoCreateInstance();
    if(ebx >= 0) {
        (save)Ac;
        (save) *(ebp - 0x10);
        *( *( *(ebp - 0x10)) + 0x50)();
        (save)ebp - 0xc;
        (save)0x479058;
        (save) *(ebp - 0x10);
        ebx = *( *( *(ebp - 0x10)))();
        if(ebx >= 0) {
            (save)1;
            (save)A8;
            (save) *(ebp - 0xc);
            *( *( *(ebp - 0xc)) + 0x18)();
            (save) *(ebp - 0xc);
            edx = *(ebp - 0xc);
            ebx = eax;
            *( *edx + 8)();
        }
        (save) *(ebp - 0x10);
        *( *( *(ebp - 0x10)) + 8)();
    }
    L0045A140();
    esp = ebp - 8;
    return ebx;
}

/*	Procedure: 0x0042BADE - 0x0042BADF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042BADE()
{



}

/*	Procedure: 0x0042BAE0 - 0x0042BCF4
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404990()
 */

L0042BAE0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x834;
    edi = A14;
    if(A1c == 0) {
        L00429610(65538);
    }
    if(*(A1c + 4) != 480691098) {
        L00429610(65561);
    }
    edx = ebp + -2108;
    ebx = L0042AB80(A8, & Ac, & A10, edx, 0x800, ebp - 0x38);
    if(ebx == 0) {
        L00429610(196712);
    }
    eax = L0042E3A0(0x1c);
    *(ebp - 0x10) = eax;
    *(eax + 4) = 480691098;
    *(ebp - 0x18) = esp;
    ecx = edi != 0 ? *edi & 0xff : 0;
    edx = ebp + -2109;
    eax = L0042A740(ebx, *(ebp - 0x38), Ac, A10, edi + 1, ecx, 0, edx, ebp - 0x14);
    *(ebp - 0x34) = eax;
    if(eax == 0) {
        ebx = *(ebp + -2109) != 0 ? 196726 : 196712;
        L00429610(ebx);
    }
    ecx = *(ebp - 0x34);
    *( *(ebp - 0x10) + 8) = ecx;
    edx = *(ebp - 0x10);
    *(edx + 0xc) = *(ebp - 0x14);
    (save) *(ebp - 0x14);
    L0042A3A0( *(ebp - 0x34));
    (restore)ecx;
    if(al == 0) {
        edi = L0042E310( *(ebp - 0x14) + 0xa);
        L004342A0(edi, *(ebp - 0x34), *(ebp - 0x14));
        *(edi + *(ebp - 0x14)) = 0x2e;
        *(edi + *(ebp - 0x14) + 2) = 0x6c;
        *(edi + *(ebp - 0x14) + 4) = 0x6e;
        edx = ebp - 0x34;
        *(edi + *(ebp - 0x14) + 6) = 0x6b;
        *(edi + *(ebp - 0x14) + 8) = 0;
        L0042E3E0(edx);
        *(ebp - 0x14) = *(ebp - 0x14) + 8;
        *(ebp - 0x34) = edi;
        *( *(ebp - 0x10) + 8) = edi;
        ebx = *(ebp - 0x10);
        *(ebx + 0xc) = *(ebp - 0x14);
    }
    *(ebp - 0x30) = 0;
    edi = *(A1c + 8);
    (save) *(A1c + 0xc);
    L0042A3A0(edi);
    (restore)ecx;
    if(al != 0) {
        edi = L0042A580(edi, 1, ebp - 0x3c, 0);
        if(edi == 0) {
            L00429610(196717);
        }
        *(ebp - 0x30) = edi;
    }
    (save)edi;
    eax = L0042BA50( *(ebp - 0x34));
    (restore)ecx;
    if(eax != 0) {
        L0042F970(eax);
    }
    eax = ebp - 0x30;
    *( *(ebp - 0x10) + 0x10) = 4;
    *( *(ebp - 0x10) + 0x14) = A18;
    L0042E3E0(eax);
    return *(ebp - 0x10);
    L0042BD00(ebp - 0x10);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x24) != 0) {
        ecx = *(ebp - 0x2c);
        *(ebp - 0x24)(-1);
    }
    esp = *(ebp - 0x18);
    return *(ebp - 0x10);
}

/*	Procedure: 0x0042BCF5 - 0x0042BCFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042BCF5()
{



}

/*	Procedure: 0x0042BD00 - 0x0042BDA6
 *	Argument size: 0
 *	Local size: 4
 *	Save regs size: 0
 *	Called by:
 *		L00401310()
 *		L00404010()
 *		L00404640()
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L004051B0()
 *		L00405970()
 *		L00405B70()
 *		L00405D00()
 *		L00406950()
 *		L00408CB0()
 *		L00409390()
 *		L00412880()
 *		L00413B90()
 *		L00414800()
 *		L00415120()
 *		L004159D0()
 *		L00415B9D()
 *		L00416790()
 *		L0042AD50()
 *		L0042B070()
 *		L0042B280()
 *		L0042B480()
 *		L0042B600()
 *		L0042B800()
 *		L0042BAE0()
 *		L0043C000()
 *		L00447170()
 *		L00448EC0()
 *		L00449010()
 *		L00462C50()
 *		L00463250()
 *		L004633F0()
 *		L004634B0()
 *		L00463569()
 *		L00463640()
 *		L004636B0()
 */

L0042BD00(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  Vfffffffc;



    eax = A8;
    edx = *eax;
    Vfffffffc = edx;
    if(edx == 0) {
        return;
    }
    *eax = 0;
    if(Vfffffffc >= -256) {
        esp = ebp;
        return;
    }
    eax = Vfffffffc;
    if(*(eax + 4) != 480691098) {
        esp = ebp;
        return;
    }
    eax = *Vfffffffc;
    if(eax != 0) {
        CloseHandle(eax);
    }
    ecx = Vfffffffc;
    if(*(ecx + 0x18) != 0) {
        L0042A150(0x480f88, ecx);
        L0042A150(0x480f98, Vfffffffc);
        L0042E3E0(Vfffffffc + 0x38);
    }
    L0042E3E0(Vfffffffc + 8);
    *(Vfffffffc + 4) = 0;
    esp = ebp;
    return L0042E3E0( & Vfffffffc);
}

/*	Procedure: 0x0042BDA7 - 0x0042BDAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042BDA7()
{



}

/*	Procedure: 0x0042BDB0 - 0x0042BECF
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00462C50()
 *		L00463250()
 *		L00463569()
 */

L0042BDB0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = ebp - 0x20;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x82c;
    *(ebp - 0x18) = 0;
    *(ebp - 0x1c) = 0;
    ecx = ebp - 0x18;
    edi = ebp + -2080;
    edi = L0042AB80(A8, ecx, ebp - 0x1c, edi, 0x800, ecx);
    if(edi != 0) {
        (save) *(ebp - 0x20);
        eax = L0042A220(edi);
        (restore)ecx;
        if(eax != 0) {
            esi = eax - edi;
            if(esi != 2) {
                goto L0042be1d;
            }
            if(*edi != 0x5c) {
L0042be1d:
                eax = L0042E310(esi + 2);
                *(ebp - 0x10) = eax;
                *(ebp - 0x14) = esi;
                L004342A0( *(ebp - 0x10), edi, esi);
                *( *(ebp - 0x10) + esi) = 0;
                *(ebp + -2084) = esp;
                ebx = L0042E3A0(0x1c);
                goto L0042be88;
                L0042E3E0(ebp - 0x10);
                L004234F0(0, 0, 0);
                if(*(ebp + -2096) != 0) {
                    ecx = *(ebp + -2104);
                    *(ebp + -2096)(-1);
                }
                esp = *(ebp + -2084);
L0042be88:
                *(ebx + 4) = 480691098;
                *(ebx + 8) = *(ebp - 0x10);
                *(ebx + 0xc) = *(ebp - 0x14);
                *(ebx + 0x10) = 2;
                *(ebx + 0x14) = Ac;
                esp = ebp - 0xc;
                eax = ebx;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                return;
            }
        }
    }
    if(!(Ac & 0x20)) {
        L00429610(196712);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x0042BED0 - 0x0042BF73
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00415120()
 */

L0042BED0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    esp = esp - 0x810;
    ecx = ebp - 0x10;
    eax = ebp + -2064;
    edx = ebp + 0x10;
    ebx = *(ebp + 0x14);
    eax = L0042AB80( *(ebp + 8), ebp + 0xc, edx, eax, 0x800, ecx);
    if(eax == 0) {
        esp = ebp - 4;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    ecx = ebx != 0 ? *ebx & 0xff : 0;
    eax = L0042A740(eax, *(ebp - 0x10), *(ebp + 0xc), *(ebp + 0x10), ebx + 1, ecx, 0, ebp + -2065, ebp - 0xc);
    if(eax == 0) {
        esp = ebp - 4;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    *(ebp - 8) = eax;
    ebx = GetFileAttributesW(eax);
    eax = L0042E3E0(ebp - 8);
    ebx :: -1;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x0042BF74 - 0x0042BF7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042BF74()
{



}

/*	Procedure: 0x0042BF80 - 0x0042C049
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00404D80()
 */

L0042BF80(A8)
int A8;
{
	/* unknown */ void  ebx;
	int esi;



    esi = A8;
    esp = esp - 0x24;
    if(esi == 0) {
        L00429610(65538);
    }
    if(*(esi + 4) != 480691098) {
        L00429610(65561);
    }
    edx = *esi;
    if(edx != 0) {
        CloseHandle(edx);
        *esi = 0;
    }
    ebx = *(esi + 0xc);
    eax = L0042E310(ebx + 4);
    *(ebp - 0x2c) = eax;
    L004342A0( *(ebp - 0x2c), *(esi + 8), ebx);
    *( *(ebp - 0x2c) + ebx) = 0;
    edx = *(ebp - 0x2c);
    *(edx + ebx + 2) = 0;
    L00434150(ebp - 0x28, 0x1e);
    ecx = *(ebp - 0x2c);
    *(ebp - 0x20) = ecx;
    *(ebp - 0x24) = 3;
    *(ebp - 0x18) = 0x450;
    esi = SHFileOperationW(ebp - 0x28);
    if(esi != 0) {
        esi = GetLastError();
    }
    L0045A140();
    eax = L0042E3E0(ebp - 0x2c);
    if(esi != 0) {
        eax = L0042F970(esi);
    }
}

/*	Procedure: 0x0042C04A - 0x0042C04F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C04A()
{



}

/*	Procedure: 0x0042C050 - 0x0042C22C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00405970()
 *		L0042C22D()
 */

L0042C050(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x20c;
    esi = A10;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    (save)esi;
    L0042A250(Ac);
    (restore)ecx;
    if(al == 0) {
        L00429610(196726);
    }
    *(ebp + -536) = *(A8 + 8);
    edi = *(A8 + 0xc);
    (save)esi;
    L0042A300(Ac);
    (restore)ecx;
    if(al != 0) {
        (save)edi;
        L0042A3A0( *(ebp + -536));
        (restore)ecx;
        if(al == 0) {
            L00429610(196726);
        }
    }
    (save)edi;
    edi = L0042A220( *(ebp + -536));
    (restore)ecx;
    if(edi == 0) {
        L00429610(196710);
    }
    edi = edi + 2;
    ecx = ebp + -532;
    edi = edi - *(ebp + -536);
    eax = L004286E0(Ac, esi, ecx, 0x200);
    edx = eax + edi + 2;
    *(ebp - 0x14) = eax;
    esi = eax + edi;
    eax = L0042E310(edx);
    *(ebp - 0x10) = eax;
    L004342A0( *(ebp - 0x10), *(ebp + -536), edi);
    L004342A0( *(ebp - 0x10) + edi, ebp + -532, *(ebp - 0x14));
    *( *(ebp - 0x10) + esi) = 0;
    *(ebp - 0x14) = 0;
    eax = *A8;
    if(eax != 0) {
        CloseHandle(eax);
        *A8 = 0;
        *(ebp - 0x14) = 1;
    }
    edi = 0;
    if(MoveFileW( *(ebp + -536), *(ebp - 0x10)) != 0) {
        eax = L0042E3E0(ebp + -536);
        *(A8 + 8) = *(ebp - 0x10);
        *(A8 + 0xc) = esi;
    } else {
        edx = ebp - 0x10;
        edi = GetLastError();
        eax = L0042E3E0(edx);
    }
    if(*(ebp - 0x14) != 0) {
        esi = *(A8 + 0x14);
        eax = -2147483648;
        if(!(esi & 2)) {
            eax = -1073741824;
        }
        ecx = 0;
        if(!(esi & 4)) {
            ecx = 1;
        }
        if(!(esi & 8)) {
            ecx = ecx | 2;
        }
        eax = CreateFileW( *(A8 + 8), eax, ecx, 0, 3, 0x80, 0);
        esi = eax;
        if(esi == 0 || esi == -1) {
            esi = 0;
            if(edi == 0) {
                eax = GetLastError();
                edi = eax;
            }
        }
        *A8 = esi;
    }
    if(edi != 0) {
        eax = L0042F970(edi);
    }
}

/*	Procedure: 0x0042C22D - 0x0042C255
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C22D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac != 0 ? *Ac & 0xff : 0;
    return L0042C050(A8, Ac + 1, eax);
}

/*	Procedure: 0x0042C256 - 0x0042C25F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C256()
{



}

/*	Procedure: 0x0042C260 - 0x0042C38E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00405970()
 *		L0042AD50()
 *		L0042CB70()
 *		L0042CCB0()
 *		L00437F70()
 *		L00462C50()
 *		L00463250()
 */

L0042C260(A8, Ac, A10)
WCHAR * A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	WCHAR * esi;
	WCHAR * edi;



    esi = A8;
    esp = esp - 0x210;
    ebx = A10;
    if(esi == 0) {
        L00429610(65538);
    }
    if(*(esi + 4) != 480691098) {
        L00429610(65561);
    }
    edi = *(esi + 8);
    esi = *(esi + 0xc);
    if(esi == 4 && ( *(edi + 2) & 65535) == 0x3a) {
        esi = *edi & 65535;
        L004287F0(esi);
        *(ebp + -524) = ax;
        *(ebp + -522) = 0x3a;
        *(ebp + -520) = 0x20;
        *(ebp + -518) = 0;
        *(ebp + -532) = ax;
        *(ebp + -530) = 0x3a;
        *(ebp + -528) = 0x5c;
        *(ebp + -526) = 0;
        if((ax & 65535) - 0x41 > 1) {
            ecx = ebp + -540;
            eax = ebp + -536;
            edi = ebp + -518;
            esi = ebp + -532;
            GetVolumeInformationW(esi, edi, 0x3c, 0, eax, ecx, 0, 0);
        }
        (save)ebx;
        ebx = ebp + -524;
        (save)Ac;
        eax = L0042A1F0(ebx);
        (save)eax;
        (save)ebp + -524;
        esp = esp + 0x10;
        return L00428640();
    }
    (save)esi;
    eax = L0042A220(edi);
    (restore)ecx;
    eax = eax != 0 ? eax + 2 : edi;
    eax = L00428640(eax, esi + edi - eax, Ac, ebx);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042C38F - 0x0042C38F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C38F()
{



}

/*	Procedure: 0x0042C390 - 0x0042C439
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044602B()
 */

L0042C390(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A8;
    (save)ebx;
    if(eax == 0) {
        (restore)ebx;
        return 0;
    }
    if(eax > 0xff) {
        eax = 0xff;
    }
    for(ebx = A4; eax != 0 && ( *(eax + ebx - 1) & 0xff) == 0x20; eax = eax - 1) {
    }
    if(eax == 0) {
        (restore)ebx;
        return;
    }
    if(( *ebx & 0xff) == 0x2e) {
        *ebx = 0x2d;
    }
    if(( *(eax + ebx - 1) & 0xff) == 0x2e) {
        *(eax + ebx - 1) = 0x2d;
    }
    if(!(edx = eax - 1)) {
        do {
            ecx = *ebx & 0xff;
            if(ecx != 0 && !(ecx = ecx - 0xa) && !(ecx = ecx - 3) && !(ecx = ecx - 0x15) && !(ecx = ecx - 8) && !(ecx = ecx - 5) && !(ecx = ecx - 0xb) && !(ecx = ecx - 2)) {
                ecx = ecx - 2;
                if(ecx > 1 && !(ecx = ecx - 0x1e) && (ecx = ecx - 0x20)) {
                    goto L0042c430;
                }
            }
            *ebx = 0x2d;
L0042c430:
            ebx = ebx + 1;
        } while(edx = edx - 1);
    }
    (restore)ebx;
}

/*	Procedure: 0x0042C43A - 0x0042C43F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C43A()
{



}

/*	Procedure: 0x0042C440 - 0x0042C563
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404F40()
 */

L0042C440(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x14;
    esi = Ac;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    if(esi == 0) {
        L00429610(65538);
    }
    if(*(esi + 4) != 480691098) {
        L00429610(65561);
    }
    edx = *(A8 + 8);
    *(ebp - 0x14) = edx;
    eax = *(A8 + 0xc);
    *(ebp - 0x10) = eax;
    eax = L0042A220(edx, *(ebp - 0x10));
    *(ebp - 0x1c) = eax;
    if(eax == 0) {
        L00429610(196710);
    }
    eax = *(esi + 8);
    edi = *(ebp - 0x14) + *(ebp - 0x10) - *(ebp - 0x1c);
    *(ebp - 0x10) = eax;
    eax = *(esi + 0xc);
    *(ebp - 0x18) = eax;
    esi = edi + eax;
    eax = L0042E310(edi + eax + 2);
    *(ebp - 0x20) = eax;
    L004342A0( *(ebp - 0x20), *(ebp - 0x10), *(ebp - 0x18));
    L004342A0( *(ebp - 0x20) + *(ebp - 0x18), *(ebp - 0x1c), edi);
    *( *(ebp - 0x20) + esi) = 0;
    eax = *A8;
    if(eax != 0) {
        CloseHandle(eax);
        *A8 = 0;
    }
    if(MoveFileW( *(ebp - 0x14), *(ebp - 0x20)) == 0) {
        L0042E3E0(ebp - 0x20);
        L0042F970(GetLastError());
    }
    eax = L0042E3E0(ebp - 0x14);
    *(A8 + 8) = *(ebp - 0x20);
    *(A8 + 0xc) = esi;
}

/*	Procedure: 0x0042C564 - 0x0042C56F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C564()
{



}

/*	Procedure: 0x0042C570 - 0x0042C5F9
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00406950()
 *		L00408CB0()
 *		L00448EC0()
 */

L0042C570(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)esi;
    esp = esp - 4;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    esi = *A8;
    if(esi == 0) {
        L00429610(196714);
    }
    if(!(Ac & 16384)) {
        esp = ebp - 8;
        (restore)esi;
        edx = 0;
        return 0;
    }
    esi = GetFileSize(esi, ebp - 0xc);
    if(esi == -1) {
        eax = GetLastError();
        if(eax != 0) {
            L0042F970(eax);
        }
    }
    ecx = *(ebp - 0xc);
    esp = ebp - 8;
    eax = esi;
    (restore)esi;
    edx = ecx;
}

/*	Procedure: 0x0042C5FA - 0x0042C5FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C5FA()
{



}

/*	Procedure: 0x0042C600 - 0x0042C762
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0040C640()
 *		L00411DF0()
 *		L00414800()
 *		L004159D0()
 *		L0043C000()
 *		L00448EC0()
 */

L0042C600(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
long  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	unsigned long  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0x14;
    if(edi == 0) {
        L00429610(65538);
    }
    if(*(edi + 4) != 480691098) {
        L00429610(65561);
    }
    if(A14 == 0) {
        L00429610(65538);
    }
    eax = *edi;
    *(ebp - 0x20) = eax;
    if(eax == 0) {
        L00429610(196714);
    }
    if(!(A18 & 16384)) {
        esi = GetFileSize( *(ebp - 0x20), ebp - 0x1c);
        if(esi == -1) {
            eax = GetLastError();
            if(eax != 0) {
                L0042F970(eax);
            }
        }
        eax = *(ebp - 0x1c);
        edx = esi;
        ecx = eax;
        edx = edx;
        if(A10 <= ecx) {
            != ? 0x42c6a8 : ;
            if(Ac < edx) {
                eax = 0;
                esi = *A14;
                edi = esi + Ac;
                asm("adc eax,[ebp+0x10]");
                if(eax >= ecx) {
                    != ? 0x42c6be : ;
                    if(edi > edx) {
                        esi = edx - Ac;
                    }
                }
                if(esi != 0) {
                    *(ebp - 0x18) = A10;
                    if(SetFilePointer( *(ebp - 0x20), Ac, ebp - 0x18, 0) == -1) {
                        eax = GetLastError();
                        if(eax != 0) {
                            L0042F970(eax);
                        }
                    }
                    eax = L0042E310(esi);
                    *(ebp - 0x10) = eax;
                    if(ReadFile( *(ebp - 0x20), eax, esi, ebp - 0x14, 0) == 0) {
                        L0042E3E0(ebp - 0x10);
                        L0042F970(GetLastError());
                    }
                    if(*(ebp - 0x14) == 0) {
                        L0042E3E0(ebp - 0x10);
                    } else {
                        *A14 = *(ebp - 0x14);
                        return *(ebp - 0x10);
                    }
                }
            }
        }
    }
    *A14 = 0;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0042C763 - 0x0042C76F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C763()
{



}

/*	Procedure: 0x0042C770 - 0x0042C856
 *	Argument size: 24
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00449060()
 */

L0042C770(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
long  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
unsigned long  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  edi;



    eax = *A14;
    edi = 0;
    *(ebp - 0x18) = eax;
    if(A8 == 0 || eax == 0 || A18 == 0) {
        edi = 65538;
    } else {
        if(*(A8 + 4) != 480691098) {
            edi = 65561;
        } else {
            if(*A8 == 0) {
                edi = 196714;
            } else {
                if(!(A1c & 16384)) {
                    edi = 65541;
                } else {
                    eax = A10;
                    ecx = ebp - 0x14;
                    *(ebp - 0x14) = eax;
                    if(SetFilePointer( *A8, Ac, ecx, 0) == -1) {
                        eax = GetLastError();
                        if(eax == 0) {
                            goto L0042c800;
                        }
                        edi = L0042F780(eax);
                    } else {
L0042c800:
                        if(WriteFile( *A8, *(ebp - 0x18), A18, ebp - 0x10, 0) == 0) {
                            edi = L0042F780(GetLastError());
                        } else {
                            if(*(ebp - 0x10) < A18) {
                                edi = 196708;
                            }
                        }
                    }
                }
            }
        }
    }
    eax = L0042E3E0(A14);
    if(edi != 0) {
        eax = L00429610(edi);
    }
}

/*	Procedure: 0x0042C857 - 0x0042C85F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C857()
{



}

/*	Procedure: 0x0042C860 - 0x0042C927
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00408CB0()
 */

L0042C860(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
long  Ac;
/* unknown */ void  A10;
/* unknown */ void  * A14;
unsigned long  A18;
/* unknown */ void  A1c;
{



    esp = esp - 8;
    if(A8 == 0) {
        eax = L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        eax = L00429610(65561);
    }
    if(A18 == 0) {
        return;
    }
    if(!(A1c & 16384)) {
        L00429610(65541);
    }
    if(*A8 == 0) {
        L00429610(196714);
    }
    eax = A10;
    ecx = ebp - 0x10;
    *(ebp - 0x10) = eax;
    if(SetFilePointer( *A8, Ac, ecx, 0) == -1) {
        eax = GetLastError();
        if(eax != 0) {
            L0042F970(eax);
        }
    }
    eax = WriteFile( *A8, A14, A18, ebp - 0x14, 0);
    if(eax == 0) {
        L0042FA00();
    }
    if(*(ebp - 0x14) < A18) {
        eax = L00429610(196708);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042C928 - 0x0042C92F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042C928()
{



}

/*	Procedure: 0x0042C930 - 0x0042CA34
 *	Argument size: 16
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L0040C970()
 *		L00412280()
 *		L00412880()
 *		L00413B90()
 */

L0042C930(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
long  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  * esi;
	/* unknown */ void  edi;



    eax = *Ac;
    edi = 0;
    *(ebp - 0x14) = eax;
    if(A8 == 0 || eax == 0 || A10 == 0) {
        edi = 65538;
    } else {
        if(*(A8 + 4) != 480691098) {
            edi = 65561;
        } else {
            if(!(A14 & 16384)) {
                edi = 65541;
            } else {
                esi = *A8;
                if(esi == 0) {
                    edi = 196714;
                } else {
                    if(SetFilePointer(esi, A10, 0, 0) == -1 || SetEndOfFile(esi) == 0 || SetFilePointer(esi, 0, 0, 0) == -1 || WriteFile(esi, *(ebp - 0x14), A10, ebp - 0x10, 0) == 0) {
                        goto L0042ca10;
                    }
                    if(*(ebp - 0x10) < A10) {
                        edi = 196708;
                    }
                    FlushFileBuffers(esi);
                }
            }
        }
    }
    eax = L0042E3E0(Ac);
    if(edi != 0) {
        eax = L00429610(edi);
    }
    return;
L0042ca10:
    L0042E3E0(Ac);
    esp = ebp - 0xc;
    return L00429610(L0042F780(GetLastError()));
}

/*	Procedure: 0x0042CA35 - 0x0042CA3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042CA35()
{



}

/*	Procedure: 0x0042CA40 - 0x0042CB11
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00415B9D()
 */

L0042CA40(A8, Ac, A10, A14)
/* unknown */ void  * A8;
/* unknown */ void  * Ac;
long  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  * esi;



    esi = A8;
    esp = esp - 4;
    if(esi == 0) {
        L00429610(65538);
    }
    if(*(esi + 4) != 480691098) {
        L00429610(65561);
    }
    if(A10 == 0) {
        L00429610(65538);
    }
    if(!(A14 & 16384)) {
        L00429610(65541);
    }
    esi = *esi;
    if(esi == 0) {
        L00429610(196714);
    }
    if(SetFilePointer(esi, A10, 0, 0) != -1 && SetEndOfFile(esi) != 0 && SetFilePointer(esi, 0, 0, 0) != -1 && WriteFile(esi, Ac, A10, ebp - 0xc, 0) != 0) {
        if(*(ebp - 0xc) < A10) {
            L00429610(196708);
        }
        return FlushFileBuffers(esi);
    }
    esp = ebp - 8;
    return L0042FA00();
}

/*	Procedure: 0x0042CB12 - 0x0042CB1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042CB12()
{



}

/*	Procedure: 0x0042CB20 - 0x0042CB52
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00405970()
 */

L0042CB20(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    return *(A8 + 0x10);
}

/*	Procedure: 0x0042CB53 - 0x0042CB5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042CB53()
{



}

/*	Procedure: 0x0042CB60 - 0x0042CB60
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00405B70()
 */

L0042CB60()
{



}

/*	Procedure: 0x0042CB61 - 0x0042CB6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042CB61()
{



}

/*	Procedure: 0x0042CB70 - 0x0042CBD3
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042CCB0()
 */

L0042CB70(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp - 0x100;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    eax = L0042C260(A8, ebp + -260, 0x100);
    return L00437890(ebp + -260, eax, *(A8 + 0x10), Ac, A10);
}

/*	Procedure: 0x0042CBD4 - 0x0042CBDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042CBD4()
{



}

/*	Procedure: 0x0042CBE0 - 0x0042CCAC
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0042CCB0()
 */

L0042CBE0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  * Ac;
{
	WCHAR * ebx;
	/* unknown */ void  * esi;



    esi = Ac;
    esp = esp - 0x254;
    eax = L0042E310(esi + 8);
    ebx = eax;
    *(ebp + -604) = eax;
    L004342A0(ebx, A8, esi);
    *(ebx + esi) = 0x5c;
    *(ebx + esi + 2) = 0x2a;
    *(ebx + esi + 4) = 0;
    esi = FindFirstFileW(ebx, ebp + -600);
    if(esi == 0 || esi == -1) {
        esi = ebp + -604;
        L0042E3E0(esi);
        return 0;
    }
    ebx = 0;
    do {
        if(( *(ebp + -556) & 65535) == 0x2e) {
            edx = *(ebp + -554);
            if(dx == 0 || (dx & 65535) == 0x2e && *(ebp + -552) == 0) {
                continue;
            }
        }
        ebx = ebx + 1;
    } while(FindNextFileW(esi, ebp + -600) != 0);
    FindClose(esi);
    L0042E3E0(ebp + -604);
    eax = ebx;
    esp = ebp - 8;
}

/*	Procedure: 0x0042CCAD - 0x0042CCAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042CCAD()
{



}

/*	Procedure: 0x0042CCB0 - 0x0042CE8E
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004051B0()
 *		L00406950()
 *		L00447780()
 */

L0042CCB0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    esp = esp - 0x284;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    edx = *A8;
    if(edx != 0) {
        if(GetFileInformationByHandle(edx, ebp + -656) == 0) {
            L0042FA00();
        }
        eax = *(ebp + -624);
        *Ac = *(ebp + -620);
        edi = eax;
        *(Ac + 4) = edi;
        *(Ac + 0x30) = 0;
        *(Ac + 8) = L0042EF90(ebp + -636);
        *(Ac + 0xc) = edx;
        eax = L0042EF90(ebp + -652);
        *(Ac + 0x10) = eax;
        *(Ac + 0x14) = edx;
    } else {
        eax = FindFirstFileW( *(A8 + 8), ebp + -604);
        if(eax != 0) {
            if(eax == -1) {
                goto L0042cdc1;
            }
            FindClose(eax);
            *(Ac + 8) = L0042EF90(ebp + -584);
            *(Ac + 0xc) = edx;
            *(Ac + 0x10) = L0042EF90(ebp + -600);
            *(Ac + 0x14) = edx;
            eax = *(ebp + -576);
            edx = *(ebp + -572);
            *Ac = edx;
            *(Ac + 4) = eax;
        } else {
L0042cdc1:
            *(Ac + 8) = 0;
            *(Ac + 0xc) = 0;
            *(Ac + 0x10) = 0;
            *(Ac + 0x14) = 0;
            *Ac = 0;
            *(Ac + 4) = 0;
        }
        if(!( *(A8 + 0x10) & 2)) {
            eax = L0042CBE0( *(A8 + 8), *(A8 + 0xc));
            *(Ac + 0x30) = eax;
            *Ac = 0;
            *(Ac + 4) = 0;
        } else {
            *(Ac + 0x30) = 0;
        }
    }
    *(Ac + 0x20) = *(A8 + 0x10);
    *(Ac + 0x18) = 0;
    *(Ac + 0x1c) = 0;
    *(Ac + 0x24) = 0;
    *(Ac + 0x28) = 0;
    *(Ac + 0x2c) = 0;
    edi = *(Ac + 0x34);
    if(edi != 0) {
        eax = L0042C260(A8, edi + 1, 0xff);
        *( *(Ac + 0x34)) = al;
    }
    edi = *(Ac + 0x38);
    if(edi != 0) {
        (save)0;
        eax = L0042CB70(A8, edi + 1, 0x3f);
        *( *(Ac + 0x38)) = al;
    }
    edi = *(Ac + 0x3c);
    if(edi != 0) {
        *edi = 0;
    }
}

/*	Procedure: 0x0042CE8F - 0x0042CE8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042CE8F()
{



}

/*	Procedure: 0x0042CE90 - 0x0042CFAF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00447780()
 */

L0042CE90(A8)
/* unknown */ void  A8;
{



    esp = esp - 0x208;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    edx = *(A8 + 8);
    eax = *(A8 + 0xc);
    if(!( *(A8 + 0x10) & 2)) {
        if(eax != 0 && eax <= 6) {
            *(ebp + -268) = *edx & 65535;
            *(ebp + -266) = 0x3a;
            *(ebp + -264) = 0x5c;
            *(ebp + -262) = 0;
            eax = GetDriveTypeW(ebp + -268) - 2;
            if(eax <= 4) {
                switch(eax) {
                    case 0:
L0042cf1d:
                        eax = 0x41;
                        goto L0042cf45;
                    case 1:
                        goto L0042cf40;
                    case 2:
                        eax = 0x3e;
                        goto L0042cf45;
                    case 3:
                        eax = 0x3f;
                        goto L0042cf45;
                    case 4:
                        eax = 0x3c;
                        goto L0042cf45;
                }
                goto L0042cf1d;
            }
L0042cf40:
            return 0x3d;
        }
        esp = ebp - 4;
        return 0x28;
    }
    L0042C260(A8, ebp + -524, 0x100);
    ecx = eax;
    eax = ebp + -260;
    L00437890(ebp + -524, ecx, 0, eax, 0x100);
    L00437790(ebp + -260, eax);
    esp = ebp - 4;
}

/*	Procedure: 0x0042CFB0 - 0x0042CFB2
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00406950()
 */

L0042CFB0()
{



    return 0;
}

/*	Procedure: 0x0042CFC0 - 0x0042D692
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404010()
 *		L0042E27D()
 *		L004634B0()
 */

L0042CFC0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0x2e0;
    if(edi == 0) {
        L00429610(65538);
    }
    if(*(edi + 4) != 480691098) {
        L00429610(65561);
    }
    ebx = *(edi + 0xc);
    if(ebx == 0) {
        L00429610(65546);
    }
    eax = L0042E310(ebx + 0x210);
    *(ebp + -620) = eax;
    *(ebp + -732) = eax;
    L004342A0( *(ebp + -732), *(edi + 8), ebx);
    eax = *(ebp + -620);
    ecx = ebx;
    if(*(eax + ebx - 2) != 0x5c) {
        *(eax + ebx) = 0x5c;
        ecx = ecx + 2;
    }
    *( *(ebp + -620) + ecx) = 0x2a;
    *( *(ebp + -620) + ecx + 2) = 0;
    eax = FindFirstFileW( *(ebp + -620), ebp + -604);
    *(ebp + -624) = eax;
    if(eax == 0 || eax == -1) {
        if(A10 != 0) {
            *A10 = 0;
        }
        L0042E3E0(ebp + -732);
        return 0;
    }
    *(ebp + -632) = 8;
    *(ebp + -724) = 8192;
    *(ebp + -616) = 0;
    *(ebp + -736) = 8192;
    *(ebp + -608) = 0;
    *(ebp + -612) = 0;
    *(ebp + -636) = 0;
    *(ebp + -652) = esp;
    L0042E310(8192);
    *(ebp + -608) = eax;
    L0042E310(8192);
    *(ebp + -612) = eax;
    *(ebp + -628) = ebp + -560;
    *(ebp + -640) = *(ebp + -620);
    *(ebp + -640) = *(ebp + -640) + ebx;
    *(ebp + -640) = *(ebp + -640) + 2;
    *(ebp + -744) = ebp + -584;
    *(ebp + -740) = ebp + -600;
    do {
        if(!( *(ebp + -604) & 6)) {
            eax = L0042A1F0( *(ebp + -628));
            *(ebp + -644) = eax;
            if(eax != 2) {
                goto L0042d187;
            }
            if(( *(ebp + -560) & 65535) != 0x2e) {
L0042d187:
                if(*(ebp + -644) != 4 || ( *(ebp + -560) & 65535) != 0x2e) {
                    goto L0042d1ac;
                }
                if(( *(ebp + -558) & 65535) != 0x2e) {
L0042d1ac:
                    if(*(ebp + -632) + 0x40 > *(ebp + -724)) {
                        *(ebp + -724) = *(ebp + -724) + 8192;
                        *(ebp + -608) = L0042E410( *(ebp + -608), *(ebp + -724));
                    }
                    edi = *(ebp + -608) + *(ebp + -632);
                    L00434150(edi, 0x40);
                    *(ebp + -632) = *(ebp + -632) + 0x40;
                    *(ebp + -636) = *(ebp + -636) + 1;
                    if(( *(ebp + -644) >> 1) + ( *(ebp + -644) >> 1) * 2 + *(ebp + -616) + 0x50 > *(ebp + -736)) {
                        *(ebp + -736) = *(ebp + -736) + 8192;
                        *(ebp + -612) = L0042E410( *(ebp + -612), *(ebp + -736));
                    }
                    esi = *(ebp + -612) + *(ebp + -616);
                    ecx = esi + 1;
                    *(edi + 0x34) = esi - *(ebp + -612);
                    L00428640( *(ebp + -628), *(ebp + -644), ecx, 0xff);
                    *esi = al;
                    ebx = ( *esi & 0xff) + esi + 1;
                    *(edi + 0x38) = ebx - *(ebp + -612);
                    if(*(ebp + -604) & 0x10) {
                        edx = *esi & 0xff;
                        (save)edx;
                        L0042A300(esi + 1);
                        (restore)ecx;
                        if(al == 0) {
                            *(ebp + -648) = 1;
                            (save)0x30;
                            (save)ebx + 1;
                            (save)0;
                            edx = *esi & 0xff;
                            (save)edx;
                            (save)esi + 1;
                        } else {
                            *(ebp + -648) = 4;
                            L004342A0( *(ebp + -640), *(ebp + -628), *(ebp + -644) + 2);
                            eax = ebp + -604;
                            *(ebp + -700) = esp;
                            *(ebp + -728) = L0042A580( *(ebp + -620), 0, ebp + -748, eax);
L0042d356:
                            if(*(ebp + -728) == 0) {
                                goto L0042d35f;
                            }
                            L0042E3E0(ebp + -728);
                            if(!( *(ebp + -604) & 0x10)) {
                                goto L0042d39b;
                            }
                            eax = L00428640( *(ebp + -628), L0042A1F0( *(ebp + -628)), *(ebp + -640), 0xff);
                            (save)0x30;
                            (save)ebx + 1;
                            (save)0;
                            (save)eax;
                            (save) *(ebp + -640);
                        }
                        L00437890();
                        esp = esp + 0x14;
                        *ebx = al;
                        goto L0042d414;
L0042d39b:
                        *(ebp + -648) = *(ebp + -648) | 0x40;
                        L004288C0(ebx, 0x475a90);
                        *(edi + 0x30) = 65535;
                        goto L0042d414;
L0042d35f:
                        *(ebp + -648) = *(ebp + -648) | 0x20;
                        L004288C0(ebx, 0x475a7c);
                        *(ebp + -572) = 0;
                    } else {
                        *(ebp + -648) = 2;
                        L004288C0(ebx, 0x475a74);
                        *(edi + 0x30) = 65535;
                    }
L0042d414:
                    eax = *(ebp + -576);
                    edx = *(ebp + -572);
                    *edi = edx;
                    *(edi + 4) = eax;
                    *(edi + 8) = L0042EF90( *(ebp + -744));
                    *(edi + 0xc) = edx;
                    *(edi + 0x10) = L0042EF90( *(ebp + -740));
                    *(edi + 0x14) = edx;
                    *(edi + 0x20) = *(ebp + -648);
                    *(ebp + -616) = ( *ebx & 0xff) + ebx;
                    *(ebp + -616) = *(ebp + -616) + 1;
                    *(edi + 0x3c) = *(ebp + -616) - *(ebp + -612);
                    *( *(ebp + -616)) = 0;
                    *(ebp + -616) = *(ebp + -616) + 1;
                    *(ebp + -616) = *(ebp + -616) - *(ebp + -612);
                }
            }
        }
    } while(FindNextFileW( *(ebp + -624), ebp + -604) != 0);
    goto L0042d4b8;
    *(ebp + -728) = 0;
    if(*(ebp + -712) != 0) {
        (save)-1;
        ecx = *(ebp + -720);
        *(ebp + -712)();
    }
    esp = *(ebp + -700);
    goto L0042d356;
L0042d4b8:
    FindClose( *(ebp + -624));
    *(ebp + -624) = 0;
    if(*(ebp + -636) == 0) {
        if(A10 != 0) {
            *A10 = 0;
        }
        L0042E3E0(ebp + -608);
        L0042E3E0(ebp + -612);
        L0042E3E0(ebp + -732);
        esp = ebp - 0xc;
        return 0;
    }
    *(ebp + -632) = *(ebp + -632) + *(ebp + -616);
    *(ebp + -608) = L0042E410( *(ebp + -608), *(ebp + -632));
    if(A10 != 0) {
        *A10 = *(ebp + -632);
        goto L0042d5a6;
        if(*(ebp + -624) != 0) {
            FindClose( *(ebp + -624));
        }
        L0042E3E0(ebp + -608);
        L0042E3E0(ebp + -612);
        L004234F0(0, 0, 0);
        if(*(ebp + -664) != 0) {
            (save)-1;
            ecx = *(ebp + -672);
            *(ebp + -664)();
        }
        esp = *(ebp + -652);
    }
L0042d5a6:
    ebx = ( *(ebp + -636) << 6) + *(ebp + -608) + 8;
    L004342A0(ebx, *(ebp + -612), *(ebp + -616));
    L0042E3E0(ebp + -612);
    *( *(ebp + -608)) = 0;
    esi = *(ebp + -608);
    *(esi + 4) = *(ebp + -636);
    ecx = *(ebp + -608) + 8;
    if(!( *(ebp + -636) = *(ebp + -636) - 1)) {
        do {
            *(ecx + 0x34) = *(ecx + 0x34) + ebx;
            *(ecx + 0x38) = *(ecx + 0x38) + ebx;
            *(ecx + 0x3c) = *(ecx + 0x3c) + ebx;
            ecx = ecx + 0x40;
        } while(*(ebp + -636) = *(ebp + -636) - 1);
    }
    if(!(Ac & 2)) {
        *(ebp + -676) = esp;
        L00437E20( *(ebp + -608));
        goto L0042d676;
        L0042E3E0(ebp + -608);
        L004234F0(0, 0, 0);
        if(*(ebp + -688) != 0) {
            (save)-1;
            ecx = *(ebp + -696);
            *(ebp + -688)();
        }
        esp = *(ebp + -676);
    }
L0042d676:
    ecx = ebp + -732;
    edi = *(ebp + -608);
    L0042E3E0(ecx);
    eax = edi;
    esp = ebp - 0xc;
}

/*	Procedure: 0x0042D693 - 0x0042D69F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042D693()
{



}

/*	Procedure: 0x0042D718 - 0x0042D71F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042D718()
{



}

/*	Procedure: 0x0042D720 - 0x0042DAA3
 *	Argument size: 4
 *	Local size: 1100
 *	Save regs size: 12
 *	Called by:
 *		L00403D00()
 *		L004633F0()
 */

L0042D720(Ac)
/* unknown */ void  Ac;
{
	WCHAR * ebx;
	/* unknown */ void  esi;
	DWORD edi;
	DWORD Vfffffbb4;
	DWORD Vfffffbb8;
	DWORD Vfffffbbc;
	/* unknown */ void  Vfffffbc0;
	WCHAR Vfffffbc4;
	/* unknown */ void  Vfffffdc7;
	WCHAR Vfffffdc8;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	DWORD Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    eax = GetLogicalDriveStringsW(0xff, & Vfffffdc8);
    Vffffffe0 = eax;
    if(eax > 0x100) {
        Vffffffe0 = 0x100;
    }
    ecx = 0;
    Vffffffe8 = 0;
    if(Vffffffe0 > 0) {
L0042d760:
        if(*(ebp + ecx * 2 + -568) == 0) {
            Vffffffe8 = Vffffffe8 + 1;
        }
        ecx = ecx + 1;
        if(ecx < Vffffffe0) {
            goto L0042d760;
        }
    }
    edi = Vffffffe8 * 0x5b + 8;
    eax = L0042E310((Vffffffe8 << 8) + edi);
    Vffffffc8 = eax;
    Vfffffbc0 = eax;
    L00434150(Vfffffbc0, edi);
    eax = Vffffffc8;
    Vffffffec = eax;
    *(Vffffffec + 4) = Vffffffe8;
    Vffffffec = Vffffffec + 8;
    esi = Vffffffec;
    ebx = & Vfffffdc8;
    ecx = ebx;
    Vffffffec = Vffffffec + Vffffffe8 * 0x58;
    Vfffffff0 = Vffffffec;
    Vffffffd4 = Vffffffe0;
    Vffffffd4 = Vffffffd4 << 1;
    Vffffffd4 = Vffffffd4 + ecx;
    Vffffffe0 = Vffffffe8;
    if(!(Vffffffe0 = Vffffffe0 - 1)) {
        edi = Vffffffec + 4;
        *edi = 0;
        L004287F0( *ebx & 65535);
        Vfffffdc7 = al;
        *(Vffffffec + 1) = Vfffffdc7;
        *(Vffffffec + 2) = 0x3a;
        *(Vffffffec + 3) = 0x20;
        *(Vffffffec + 4) = 0;
        eax = GetDriveTypeW(ebx);
        edx = eax - 2;
        Vffffffcc = 3;
        if(edx <= 4) {
            switch(edx) {
                case 0:
L0042d83e:
                    Vffffffe4 = 0x300;
                    Vffffffdc = 0x41;
                    goto L0042d895;
                case 1:
                    Vffffffe4 = 0x400;
                    goto L0042d88e;
                case 2:
                    Vffffffe4 = 0x200;
                    Vffffffdc = 0x3e;
                    goto L0042d895;
                case 3:
                    Vffffffe4 = 0x500;
                    Vffffffdc = 0x3f;
                    goto L0042d895;
                case 4:
                    Vffffffe4 = 0x100;
                    Vffffffdc = 0x3c;
                    goto L0042d895;
            }
            goto L0042d83e;
        }
        Vffffffe4 = 0;
        Vffffffdc = 0x3d;
        if(eax != 2) {
            goto L0042d8b7;
        }
        eax = Vfffffdc7 & 0xff;
        if(eax != 0x41 && eax != 0x42) {
            goto L0042d8b7;
        }
        Vffffffe4 = 0x700;
        goto L0042d9a7;
        ecx = ebp + -1108;
        edx = ebp + -1112;
        if(GetVolumeInformationW(ebx, & Vfffffbc4, 0xff, 0, edx, ecx, 0, 0) == 0) {
            goto L0042d9a7;
        }
        (save)0xc8;
        (save)edi;
        (save)L0042A1F0( & Vfffffbc4);
        (save) & Vfffffbc4;
        Vffffffcc = Vffffffcc + L00428640();
        esp = esp + 0x10;
        if(GetDiskFreeSpaceW(ebx, & Vfffffbb4, & Vfffffbb8, & Vfffffbbc, & Vffffffd0) != 0) {
            goto L0042d940;
        }
        Vffffffd0 = 0;
        Vfffffbbc = Vffffffd0;
        eax = Vffffffd0;
        edi = Vfffffbb4;
        edi = Vfffffbb8 * Vfffffbb8;
        ecx = 0;
        edx = eax;
        Vffffffd8 = 0;
        edx = Vffffffd8 * Vffffffd8;
        ecx = edi * edi + edx;
        asm("mul edi");
        *esi = eax;
        *(esi + 4) = edx + ecx;
        *(ebp + -1104) = 0;
        eax = Vffffffd8;
        Vffffffd8 = (Vffffffd0 - Vfffffbbc) * (Vffffffd0 - Vfffffbbc);
        eax = edi;
        edx = eax;
        edx = *(ebp + -1104) * *(ebp + -1104);
        edi = Vffffffd8 + edx;
        asm("mul ecx");
        *(esi + 8) = eax;
        *(esi + 0xc) = edx + edi;
        *(esi + 0x20) = -1;
        *(esi + 0x24) = Vffffffe4;
        *(esi + 0x30) = Vffffffdc;
        *(esi + 0x2c) = 8;
        *(esi + 0x50) = Vfffffdc7 & 0xff | -256;
        *(esi + 0x44) = Vffffffec - Vfffffff0;
        *Vffffffec = Vffffffcc;
        Vffffffec = Vffffffec + Vffffffcc + 1;
        *(esi + 0x48) = Vffffffec - Vfffffff0;
        *Vffffffec = 0;
        *(esi + 0x4c) = Vffffffec + 1 - Vfffffff0;
        *(Vffffffec + 1) = 0;
        Vffffffec = Vffffffec + 2;
        esi = esi + 0x58;
        if(ebx < Vffffffd4) {
L0042da20:
            edx = ebx;
            ebx = ebx + 2;
            if(*edx != 0 && ebx < Vffffffd4) {
                goto L0042da20;
            }
        }
        if(Vffffffe0 = Vffffffe0 - 1) {
            goto L0042d7e7;
        }
    }
    esi = Vffffffec - Vffffffc8;
    if(Ac == 0) {
        goto L0042da4b;
    }
    *Ac = esi;
    eax = Vffffffc8;
    Vfffffff0 = Vfffffff0 - eax;
    edi = L0042E410(eax, esi);
    Vfffffff0 = Vfffffff0 + edi;
    Vffffffe8 = Vffffffe8 - 1;
    Vfffffbc0 = 0;
    if(ecx = edi + 8) {
        goto L0042da8d;
    }
    *(ecx + 0x44) = *(ecx + 0x44) + Vfffffff0;
    *(ecx + 0x48) = *(ecx + 0x48) + Vfffffff0;
    *(ecx + 0x4c) = *(ecx + 0x4c) + Vfffffff0;
    ecx = ecx + 0x58;
    if(Vffffffe8 = Vffffffe8 - 1) {
        goto L0042da72;
    }
    L0042E3E0( & Vfffffbc0);
    return edi;
}

/*	Procedure: 0x0042DAB0 - 0x0042DDAF
 *	Argument size: 8
 *	Local size: 696
 *	Save regs size: 12
 *	Called by:
 *		L004051B0()
 */

L0042DAB0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffd48;
	DWORD Vfffffd4c;
	DWORD Vfffffd50;
	WCHAR Vfffffd54;
	/* unknown */ void  Vffffff57;
	/* unknown */ void  Vffffff58;
	WCHAR Vffffff5c;
	DWORD Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	WCHAR Vffffffec;
	/* unknown */ void  Vffffffee;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff2;



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    eax = *(Ac + 0x48);
    ebx = *(Ac + 0x44);
    Vffffffe0 = eax;
    edi = *(Ac + 0x4c);
    L00434150(Ac, 0x58);
    *(Ac + 0x44) = ebx;
    *(Ac + 0x48) = Vffffffe0;
    *(Ac + 0x4c) = edi;
    eax = A8;
    if(*(eax + 0xc) < 4 || ( *( *(eax + 8) + 2) & 65535) != 0x3a) {
        L00429610(196730);
    }
    L004287F0( *( *(A8 + 8)) & 65535);
    Vffffff57 = al;
    Vffffffec = Vffffff57 & 0xff;
    Vffffffee = 0x3a;
    Vfffffff0 = 0x5c;
    Vfffffff2 = 0;
    edi = GetDriveTypeW( & Vffffffec) - 2;
    if(edi <= 4) {
        switch(edi) {
            case 0:
L0042db84:
                Vffffff58 = 0x300;
                Vffffffe8 = 0x41;
                goto L0042dbf1;
            case 1:
                Vffffff58 = 0x400;
                goto L0042dbea;
            case 2:
                Vffffff58 = 0x200;
                Vffffffe8 = 0x3e;
                goto L0042dbf1;
            case 3:
                Vffffff58 = 0x500;
                Vffffffe8 = 0x3f;
                goto L0042dbf1;
            case 4:
                Vffffff58 = 0x100;
                Vffffffe8 = 0x3c;
                goto L0042dbf1;
        }
        goto L0042db84;
    }
    Vffffff58 = 0;
    Vffffffe8 = 0x3d;
    Vfffffd54 = 0;
    Vffffff5c = 0;
    if(eax != 2 || (Vffffff57 & 0xff) != 0x41 && eax != 0x42) {
        goto L0042dc28;
    }
    Vffffff58 = 0x700;
    goto L0042dcfd;
    edx = ebp + -704;
    eax = ebp + -708;
    GetVolumeInformationW( & Vffffffec, & Vfffffd54, 0xff, 0, eax, edx, & Vffffff5c, 0x3f);
    if(eax == 0) {
        goto L0042dcfd;
    }
    ecx = ebp + -700;
    GetDiskFreeSpaceW( & Vffffffec, ecx, & Vfffffd4c, & Vfffffd50, & Vffffffdc);
    if(eax != 0) {
        goto L0042dc96;
    }
    Vffffffdc = 0;
    Vfffffd50 = Vffffffdc;
    edi = *(ebp + -700);
    ecx = 0;
    edx = Vffffffdc;
    Vffffffe4 = 0;
    ecx = Vfffffd4c * Vfffffd4c * Vfffffd4c * Vfffffd4c + Vffffffe4 * Vffffffe4;
    asm("mul edi");
    *Ac = eax;
    *(Ac + 4) = edx + ecx;
    Vfffffd48 = 0;
    eax = Vffffffe4;
    Vffffffe4 = (Vffffffdc - Vfffffd50) * (Vffffffdc - Vfffffd50);
    edx = edi;
    edi = Vffffffe4 + Vfffffd48 * Vfffffd48;
    asm("mul ecx");
    *(Ac + 8) = eax;
    *(Ac + 0xc) = edx + edi;
    *(Ac + 0x20) = -1;
    *(Ac + 0x24) = Vffffff58;
    *(Ac + 0x30) = Vffffffe8;
    *(Ac + 0x2c) = 8;
    L0042df10(A8);
    *(Ac + 0x50) = eax;
    if(ebx == 0) {
        goto L0042dd65;
    }
    *(ebx + 1) = Vffffff57;
    ecx = ebx + 4;
    *(ebx + 2) = 0x3a;
    *(ebx + 3) = 0x20;
    L0042A1F0( & Vfffffd54);
    L00428640( & Vfffffd54, eax, ecx, 0xc8);
    *ebx = al + 3;
    if(Vffffffe0 == 0) {
        goto L0042dd96;
    }
    (save)0x3f;
    (save)Vffffffe0 + 1;
    L0042A1F0( & Vffffff5c);
    (save)eax;
    (save) & Vffffff5c;
    L00428640();
    esp = esp + 0x10;
    *Vffffffe0 = al;
    if(*(Ac + 0x4c) == 0) {
        goto L0042dda0;
    }
    *eax = 0;
}

/*	Procedure: 0x0042DDB0 - 0x0042DF7F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00405B70()
 */

L0042DDB0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    (save)esi;
    (save)edi;
    esp = esp - 0x310;
    edi = Ac;
    ebx = A10;
    if(A8 != 0) {
        goto L0042ddd4;
    }
    L00429610(65538);
    if(*(esi + 4) == 480691098) {
        goto L0042dde8;
    }
    L00429610(65561);
    if(*(esi + 0xc) < 4) {
        goto L0042ddfa;
    }
    if(( *( *(esi + 8) + 2) & 65535) == 0x3a) {
        goto L0042de05;
    }
    L00429610(196730);
    L004287F0( *( *(esi + 8)) & 65535);
    ebx :: 2;
    *(ebp + -530) = 0x3a;
    *(ebp + -528) = 0x5c;
    *(ebp + -526) = 0;
    if(( *(ebp + -532) = al & 0xff) || ( *(edi + 1) & 0xff) != 0x3a || (( *edi & 0xff) <= 0x41 || edx >= 0x5a) && (edx <= 0x61 || edx >= 0x7a)) {
        goto L0042de62;
    }
    edi = edi + 2;
    ebx = ebx - 2;
    edx = ebp + -536;
    esi = ebp + -540;
    *(ebp + -540) = ebx;
    *(ebp + -536) = edi;
    (save)esi;
    L00427F40(edx);
    (restore)ecx;
    if(*(ebp + -540) < 0x100) {
        goto L0042de95;
    }
    L004342A0(ebp + -796, *(ebp + -536), 0x100);
    edi = eax;
    L0042C390(ebp + -796, edi);
    ebx = ebp + -524;
    L004286E0(ebp + -796, edi, ebx, 0x1fe);
    edx = ebp + -524;
    ecx = ebp + -532;
    *(ebp + (eax >> 1) * 2 + -524) = 0;
    SetVolumeLabelW(ecx, edx);
    if(eax != 0) {
        goto L0042df01;
    }
    L0042FA00();
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    if(A8 < -256) {
        goto L0042df27;
    }
    esp = ebp - 4;
    return ebx;
    if(ebx != 0) {
        goto L0042df36;
    }
    L00429610(65538);
    if(*(ebx + 4) == 480691098) {
        goto L0042df4a;
    }
    L00429610(65561);
    if(*(ebx + 0xc) < 4) {
        goto L0042df5c;
    }
    if(( *( *(ebx + 8) + 2) & 65535) == 0x3a) {
        goto L0042df67;
    }
    L00429610(196730);
    L004287F0( *( *(ebx + 8)) & 65535);
    esp = ebp - 4;
    return eax | -256;
}

/*	Procedure: 0x0042DF80 - 0x0042E003
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00405D00()
 *		L00415120()
 */

L0042DF80(A8)
/* unknown */ void  A8;
{



    esp = esp - 0x18;
    if(A8 != 0) {
        goto L0042df99;
    }
    L00429610(65538);
    if(*(A8 + 4) == 480691098) {
        goto L0042dfad;
    }
    L00429610(65561);
    *(ebp - 0x18) = M00480fba;
    *(ebp - 0x14) = M00480fbe;
    *(ebp - 0x10) = M00480fc2;
    eax = ebp - 0x1a;
    *(ebp - 0xc) = M00480fc4;
    *(ebp - 8) = M00480fc8;
    *eax = 0;
    edx = eax;
    ecx = ebp - 0xc;
    ShellExecuteW(0, ebp - 0x18, *(A8 + 8), edx, ecx, 1);
    return L0045A140();
}

/*	Procedure: 0x0042E010 - 0x0042E06B
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00405DF0()
 */

L0042E010(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = 0;
    if(!(Ac & 1)) {
        esi = 1;
    }
    if(A8 != 0) {
        L00429610(65540);
    }
    eax = GetModuleHandleA("SHELL32");
    if(eax != 0) {
        if(GetProcAddress(eax, "SHEmptyRecycleBinW") != 0) {
            (save)esi;
            (save)0;
            (save)0;
            *ebx();
        }
        eax = L0045A140();
    }
}

/*	Procedure: 0x0042E06C - 0x0042E06F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E06C()
{



}

/*	Procedure: 0x0042E070 - 0x0042E08C
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004051B0()
 */

L0042E070(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 != 0) {
        *A8 = 0x19;
    }
    if(Ac != 0) {
        *Ac = 0x25d;
    }
}

/*	Procedure: 0x0042E08D - 0x0042E08F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E08D()
{



}

/*	Procedure: 0x0042E090 - 0x0042E12B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042E5B0()
 */

L0042E090()
{



    M00480f98 = M00480f88;
    (save)ebp;
    M00480f9c = M00480f8c;
    ebp = esp;
    (save)ebx;
    (save)esi;
    esp = esp - 0x18;
    M00480fa4 = M00480f94;
    M00480f88 = 0;
    M00480f8c = 0;
    M00480f94 = 0;
L0042e0e0:
    while(1) {
        eax = L0042A110(0x480f98);
        esi = eax;
        if(esi == 0) {
            goto L0042e125;
        }
        *(esi + 0x1a) = 1;
        *(ebp - 0xc) = esp;
        *(esi + 0x1c)( *(esi + 0x20), esi, 0x21);
    }
    eax = *(ebp - 0x14);
    ebx = eax;
    L00429560(eax);
    if(*(ebp - 0x18) != 0) {
        ecx = *(ebp - 0x20);
        *(ebp - 0x18)(-1);
    }
    esp = *(ebp - 0xc);
    goto L0042e0e0;
L0042e125:
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
}

/*	Procedure: 0x0042E12C - 0x0042E12F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E12C()
{



}

/*	Procedure: 0x0042E130 - 0x0042E130
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409830()
 */

L0042E130()
{



}

/*	Procedure: 0x0042E131 - 0x0042E13F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E131()
{



}

/*	Procedure: 0x0042E1AA - 0x0042E20B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0042E1AA(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        eax = L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x19) != 1) {
        eax = L00429610(65539);
    }
    if(*(A8 + 0x1a) == 0) {
        esp = ebp - 4;
        return 0;
    }
    *(A8 + 0x19) = 0;
    esp = ebp - 4;
    return 1;
}

/*	Procedure: 0x0042E20C - 0x0042E27C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0042E20C(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        L00429610(65561);
    }
    if(*(A8 + 0x19) != 0 || *(A8 + 0x18) == 0) {
        L00429610(65539);
    }
    L0042A0D0(0x480f88, A8);
    *(A8 + 0x19) = 5;
    *(A8 + 0x1a) = 0;
    return PostMessageW(0, 0x496, 0, 0);
}

/*	Procedure: 0x0042E27D - 0x0042E302
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 */

L0042E27D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp - 4;
    if(A8 == 0) {
        eax = L00429610(65538);
    }
    if(*(A8 + 4) != 480691098) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x19) != 5) {
        eax = L00429610(65539);
    }
    if(*(A8 + 0x1a) == 0) {
        return 0;
    }
    *(A8 + 0x19) = 0;
    eax = L0042CFC0(A8, 0, A10);
    *(ebp - 0xc) = eax;
    if(Ac != 0) {
        *Ac = eax;
    } else {
        eax = L0042E3E0(ebp - 0xc);
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x0042E303 - 0x0042E30F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E303()
{



}

/*	Procedure: 0x0042E310 - 0x0042E34E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00401A50()
 *		L004024A0()
 *		L00403190()
 *		L00403980()
 *		L00403D00()
 *		L00404010()
 *		L00409390()
 *		L00409E60()
 *		L0040B7E0()
 *		L0040C970()
 *		L00410C20()
 *		L00412280()
 *		L00413C00()
 *		L004148A0()
 *		L00414CB0()
 *		L00416000()
 *		L00416F00()
 *		L00418850()
 *		L00418DBB()
 *		L0041DB20()
 *		L004258E0()
 *		L00426440()
 *		L00429000()
 *		L004290D0()
 *		L00429F50()
 *		L0042A580()
 *		L0042A660()
 *		L0042A740()
 *		L0042AD50()
 *		L0042AF10()
 *		L0042BAE0()
 *		L0042BDB0()
 *		L0042BF80()
 *		L0042C050()
 *		L0042C440()
 *		L0042C600()
 *		L0042CBE0()
 *		L0042CFC0()
 *		L0042D720()
 *		L0042E410()
 *		L0042E830()
 *		L0042F420()
 *		L00430630()
 *		L00430D50()
 *		L00431A10()
 *		L0043216C()
 *		L00432250()
 *		L00432450()
 *		L00433200()
 *		L00436960()
 *		L00437460()
 *		L00437E20()
 *		L00442170()
 *		L0044755B()
 *		L00447780()
 *		L00449060()
 *		L00449230()
 *		L00456B0E()
 *		L00457AE0()
 *		L00462270()
 *		L00466E30()
 *		L00466FD0()
 *		L0046CAA0()
 */

L0042E310(A8)
unsigned long  A8;
{
	unsigned long  ebx;



    ebx = A8;
    if(ebx == 0) {
        L00429610(65538);
    }
    ebx = GlobalAlloc(0, ebx);
    if(ebx == 0) {
        L00429610(131173);
    }
    esp = ebp - 4;
    M004811f4 = M004811f4 + 1;
    return ebx;
}

/*	Procedure: 0x0042E34F - 0x0042E34F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E34F()
{



}

/*	Procedure: 0x0042E350 - 0x0042E39D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00406950()
 *		L0040C340()
 *		L0040E700()
 *		L00411920()
 *		L00413D00()
 *		L00429F50()
 *		L00433130()
 *		L00436960()
 *		L0043A530()
 *		L0043A718()
 *		L0044BBF0()
 */

L0042E350(A8, Ac)
/* unknown */ void  A8;
unsigned long  Ac;
{



    (save)esi;
    if(Ac == 0) {
        L00429610(65538);
    }
    esi = GlobalAlloc(0, Ac);
    if(esi == 0) {
        L00429610(131173);
    }
    L004342A0(esi, A8, Ac);
    esp = ebp - 8;
    eax = esi;
    (restore)esi;
    M004811f4 = M004811f4 + 1;
}

/*	Procedure: 0x0042E39E - 0x0042E39F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E39E()
{



}

/*	Procedure: 0x0042E3A0 - 0x0042E3DE
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00403D00()
 *		L00409390()
 *		L00409860()
 *		L00409B60()
 *		L0040AD20()
 *		L0040B130()
 *		L0040BB40()
 *		L0040DF50()
 *		L0040EE00()
 *		L0040FAE0()
 *		L004102F0()
 *		L00410960()
 *		L00410DC0()
 *		L00411920()
 *		L00411DF0()
 *		L00412F60()
 *		L00413D00()
 *		L00417EC0()
 *		L00419310()
 *		L0041C5A0()
 *		L004206D0()
 *		L00421520()
 *		L00423850()
 *		L00425050()
 *		L0042AD50()
 *		L0042B070()
 *		L0042B280()
 *		L0042B480()
 *		L0042B600()
 *		L0042B800()
 *		L0042BAE0()
 *		L0042BDB0()
 *		L0042F070()
 *		L0042F0B0()
 *		L004300F0()
 *		L00432610()
 *		L00432D40()
 *		L004334F0()
 *		L00433580()
 *		L00435A30()
 *		L004395A0()
 *		L00439DE0()
 *		L0043A240()
 *		L0043A530()
 *		L0043AAA0()
 *		L0043ADB0()
 *		L0043B450()
 *		L0043BA80()
 *		L0043BC50()
 *		L0043BED0()
 *		L0043C220()
 *		L00442170()
 *		L00442340()
 *		L00447050()
 *		L00448EC0()
 *		L00449230()
 *		L00450000()
 *		L00450800()
 *		L00450D60()
 *		L004510F0()
 *		L00454730()
 *		L0045CD30()
 *		L00462060()
 */

L0042E3A0(A8)
unsigned long  A8;
{
	unsigned long  ebx;



    ebx = A8;
    if(ebx == 0) {
        L00429610(65538);
    }
    ebx = GlobalAlloc(0x40, ebx);
    if(ebx == 0) {
        L00429610(131173);
    }
    esp = ebp - 4;
    M004811f4 = M004811f4 + 1;
    return ebx;
}

/*	Procedure: 0x0042E3DF - 0x0042E3DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E3DF()
{



}

/*	Procedure: 0x0042E3E0 - 0x0042E407
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401310()
 *		L00401A50()
 *		L00401AF8()
 *		L004024A0()
 *		L00403190()
 *		L00403980()
 *		L00403D00()
 *		L00404010()
 *		L00406950()
 *		L00409AB0()
 *		L00409B60()
 *		L00409E60()
 *		L0040AD20()
 *		L0040B130()
 *		L0040B7E0()
 *		L0040C640()
 *		L0040C970()
 *		L0040DF50()
 *		L0040E700()
 *		L0040EE00()
 *		L0040FAE0()
 *		L004102F0()
 *		L004104E0()
 *		L00410960()
 *		L00410EB0()
 *		L004110F0()
 *		L00411920()
 *		L00411DF0()
 *		L00412280()
 *		L004125B0()
 *		L00412880()
 *		L00412E50()
 *		L00412F60()
 *		L00413D00()
 *		L00414800()
 *		L00414CB0()
 *		L00414DD0()
 *		L00414EE0()
 *		L004159D0()
 *		L00416000()
 *		L00416F00()
 *		L00417EC0()
 *		L00418850()
 *		L00418DBB()
 *		L00419310()
 *		L00419A70()
 *		L0041C5A0()
 *		L0041C860()
 *		L0041DB20()
 *		L004206D0()
 *		L00421520()
 *		L00423850()
 *		L00423980()
 *		L00424F30()
 *		L00425050()
 *		L004255B0()
 *		L004258E0()
 *		L00426440()
 *		L00429D80()
 *		L00429F50()
 *		L0042A580()
 *		L0042A660()
 *		L0042A740()
 *		L0042AF10()
 *		L0042BAE0()
 *		L0042BD00()
 *		L0042BDB0()
 *		L0042BED0()
 *		L0042BF80()
 *		L0042C050()
 *		L0042C440()
 *		L0042C600()
 *		L0042C770()
 *		L0042C930()
 *		L0042CBE0()
 *		L0042CFC0()
 *		L0042E27D()
 *		L0042E410()
 *		L0042E830()
 *		L0042F0B0()
 *		L0042F150()
 *		L0042F420()
 *		L004300F0()
 *		L00430240()
 *		L00430630()
 *		L00430760()
 *		L00430A70()
 *		L00432610()
 *		L00432760()
 *		L00432B90()
 *		L00432F60()
 *		L00433030()
 *		L00433130()
 *		L00433200()
 *		L00433580()
 *		L00435A50()
 *		L00436020()
 *		L00436370()
 *		L00436960()
 *		L00437E20()
 *		L004395A0()
 *		L00439BF0()
 *		L00439D78()
 *		L00439DE0()
 *		L0043A240()
 *		L0043A530()
 *		L0043A718()
 *		L0043A869()
 *		L0043AAA0()
 *		L0043AC4D()
 *		L0043ADB0()
 *		L0043B450()
 *		L0043B6C0()
 *		L0043BA80()
 *		L0043BC50()
 *		L0043C000()
 *		L0043C220()
 *		L00442170()
 *		L00442340()
 *		L00442430()
 *		L00443B70()
 *		L00444708()
 *		L00445E20()
 *		L00446A10()
 *		L00446E30()
 *		L00447170()
 *		L00448690()
 *		L00448EC0()
 *		L00449010()
 *		L00449230()
 *		L004492F0()
 *		L0044BB30()
 *		L004505E0()
 *		L00450800()
 *		L00450DA0()
 *		L004511D0()
 *		L00454600()
 *		L004547B0()
 *		L00456B0E()
 *		L00457AE0()
 *		L0045CEB0()
 *		L00462060()
 *		L00462100()
 *		L00462270()
 *		L00462320()
 *		L00462379()
 *		L00462720()
 *		L004633F0()
 *		L004634B0()
 *		L00466E30()
 *		L00467280()
 */

L0042E3E0(A8)
/* unknown */ void  A8;
{



    ecx = *A8;
    if(ecx == 0) {
        return;
    }
    *A8 = 0;
    M004811f4 = M004811f4 - 1;
    return GlobalFree(ecx);
}

/*	Procedure: 0x0042E408 - 0x0042E40F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E408()
{



}

/*	Procedure: 0x0042E410 - 0x0042E467
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004024A0()
 *		L00403190()
 *		L00416000()
 *		L00429690()
 *		L00429F50()
 *		L0042A580()
 *		L0042A740()
 *		L0042CFC0()
 *		L004358B0()
 *		L00435970()
 *		L00442170()
 *		L00447240()
 *		L00447618()
 */

L0042E410(A8, Ac)
/* unknown */ void  * A8;
unsigned long  Ac;
{



    if(A8 == 0) {
        if(Ac != 0) {
            A8 = L0042E310(Ac);
        }
    } else {
        if(Ac == 0) {
            L0042E3E0( & A8);
            goto L0042e460;
        }
        eax = GlobalReAlloc(A8, Ac, 2);
        A8 = eax;
        if(eax == 0) {
            L00429610(131173);
L0042e460:
        }
    }
    return A8;
}

/*	Procedure: 0x0042E468 - 0x0042E46F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E468()
{



}

/*	Procedure: 0x0042E470 - 0x0042E484
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408A50()
 */

L0042E470(A4)
/* unknown */ void  A4;
{



    if(A4 != 0) {
        *A4 = M004811f4;
    }
    edx = 0;
    return 0;
}

/*	Procedure: 0x0042E485 - 0x0042E48F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E485()
{



}

/*	Procedure: 0x0042E490 - 0x0042E510
 *	Argument size: 16
 *	Local size: 32
 *	Save regs size: 12
 *	Called by:
 *		L00417EC0()
 */

L0042E490(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  Vffffffe0;



    edx = ebp - 0x2c;
    L00434150(edx, 0x20);
    ecx = ebp - 0x2c;
    *(ebp - 0x2c) = 0x20;
    A14 = GlobalMemoryStatus(ecx);
    if(A8 != 0) {
        A14 = *(ebp - 0x24) - Vffffffe0;
        *A8 = A14;
        *(A8 + 4) = 0;
    }
    if(Ac != 0) {
        ecx = *(ebp - 0x24);
        A14 = 0;
        *Ac = ecx;
        *(Ac + 4) = 0;
    }
    if(A10 != 0) {
        *A10 = 0;
        *(A10 + 4) = 0;
    }
    if(A14 != 0) {
        *A14 = 0;
        *(A14 + 4) = 0;
    }
}

/*	Procedure: 0x0042E511 - 0x0042E51F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E511()
{



}

/*	Procedure: 0x0042E520 - 0x0042E568
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042E5B0()
 */

L0042E520()
{
	/* unknown */ void  ebx;



    ebx = M00480fe4;
    esp = esp - 0x18;
    if(ebx != 0) {
        *(ebp - 8) = esp;
        eax = *ebx(M00480fe8, 0);
        goto L0042e563;
        eax = L00429560( *(ebp - 0x10));
        if(*(ebp - 0x14) != 0) {
            ecx = *(ebp - 0x1c);
            *(ebp - 0x14)(-1);
        }
        esp = *(ebp - 8);
    }
L0042e563:
}

/*	Procedure: 0x0042E569 - 0x0042E56F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E569()
{



}

/*	Procedure: 0x0042E570 - 0x0042E5AA
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409390()
 */

L0042E570(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    if(ebx == 0) {
        ebx = A8;
    }
    L00428970(0x481054, A8, 0x1f);
    L00428970(0x481034, ebx, 0x1f);
    return L0041C2E0();
}

/*	Procedure: 0x0042E5AB - 0x0042E5AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E5AB()
{



}

/*	Procedure: 0x0042E5B0 - 0x0042E70C
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409830()
 *		L0042FAA0()
 */

L0042E5B0()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 0x1c;
    if(M004a1020 != 0) {
        L00429610(65565);
    }
    M004a1020 = 1;
    if(M004811f1 != 0) {
        L0042E520();
    }
    do {
        L0045A270();
        if(al == 0) {
            eax = GetMessageW(ebp - 0x1c, 0, 0, 0);
        } else {
            eax = PeekMessageW(ebp - 0x1c, 0, 0, 0, 1);
            eax :: 0;
        }
        cl = 0;
        if(cl != 0) {
            eax = DispatchMessageW(ebp - 0x1c);
            if(*(ebp - 0x1c) == 0) {
                if(edx = *(ebp - 0x18) - 0x12) {
                    eax = L00438BF0();
                } else {
                    if(edx = edx - 0x300) {
                        eax = L0041FDA0( *(ebp - 0x14));
                    } else {
                        if(edx = edx - 0x17d) {
                            eax = L0041C340();
                        } else {
                            if(edx = edx - 7) {
                                if(PeekMessageW(ebp - 0x1c, 0, 0, 0, 1) != 0) {
                                    DispatchMessageW(ebp - 0x1c);
                                    if(*(ebp - 0x1c) == 0) {
                                        if(edx = *(ebp - 0x18) - 0x12) {
                                            L00438BF0();
                                        } else {
                                            if(edx = edx - 0x300) {
                                                L0041FDA0( *(ebp - 0x14));
                                            } else {
                                                if(edx = edx - 0x17d) {
                                                    L0041C340();
                                                } else {
                                                    if(!(edx = edx - 0x11)) {
                                                        L0045A1A0();
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                eax = L0042E090();
                            } else {
                                if(edx = edx - 0xa) {
                                    eax = L0045A1A0();
                                }
                            }
                        }
                    }
                }
            }
        }
    } while(M00480ff4 == 0);
    (restore)ebp;
    M004a1020 = 0;
}

/*	Procedure: 0x0042E70D - 0x0042E70F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E70D()
{



}

/*	Procedure: 0x0042E710 - 0x0042E72D
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00429410()
 *		L0042FDF0()
 *		L0046CAE0()
 */

L0042E710()
{
	/* unknown */ void  ebp;



    ebp = esp;
    if(M0048126c != 0) {
        *L0048126c();
    }
    return ExitProcess(0);
}

/*	Procedure: 0x0042E72E - 0x0042E72F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E72E()
{



}

/*	Procedure: 0x0042E730 - 0x0042E823
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042E830()
 *		L0042EBC0()
 *		L0042EC50()
 */

L0042E730()
{



    (save)ebx;
    if(M00481210 != 0) {
        esp = ebp - 4;
        (restore)ebx;
        return 1;
    }
    eax = GetModuleHandleA("KERNEL32");
    ebx = eax;
    if(ebx != 0) {
        eax = GetProcAddress(ebx, "CreateToolhelp32Snapshot");
        M00481210 = eax;
        if(eax != 0) {
            eax = GetProcAddress(ebx, "Process32FirstW");
            M00481214 = eax;
            if(eax != 0) {
                eax = GetProcAddress(ebx, "Process32NextW");
                M00481218 = eax;
                if(eax != 0) {
                    eax = GetProcAddress(ebx, "Thread32First");
                    M0048121c = eax;
                    if(eax != 0) {
                        eax = GetProcAddress(ebx, "Thread32Next");
                        M00481220 = eax;
                        if(eax != 0) {
                            eax = GetProcAddress(ebx, "GetProcessTimes");
                            M00481224 = eax;
                            if(M00481228 == 0) {
                                eax = LoadLibraryA("PSAPI");
                                M00481228 = eax;
                                if(eax != 0) {
                                    eax = GetProcAddress(eax, "GetProcessMemoryInfo");
                                    M0048122c = eax;
                                }
                            }
                            esp = ebp - 4;
                            (restore)ebx;
                            return 1;
                        }
                    }
                }
            }
        }
    }
    M00481210 = 0;
    esp = ebp - 4;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x0042E824 - 0x0042E82F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042E824()
{



}

/*	Procedure: 0x0042E830 - 0x0042EBBF
 *	Argument size: 4
 *	Local size: 384
 *	Save regs size: 12
 *	Called by:
 *		L00417EC0()
 */

L0042E830(Ac)
/* unknown */ void  Ac;
{
	/* unknown */ void  * ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffe84;
	/* unknown */ void  Vfffffe90;
	struct _MEMORYSTATUS Vfffffeac;  /* size = 32 bytes */
	/* unknown */ void  Vfffffecc;
	/* unknown */ void  Vfffffed0;
	/* unknown */ void  Vfffffed4;
	/* unknown */ void  Vfffffedc;
	/* unknown */ void  Vfffffee0;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffee5;
	/* unknown */ void  * Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  * Vfffffff0;



    if(Ac != 0) {
        *Ac = 0;
    }
    L0042E730();
    if(al == 0) {
        return 0;
    }
    eax = L0042E310(71168);
    Vfffffee0 = eax;
    Vfffffedc = Vfffffee0;
    (save)0;
    (save)2;
    eax = *L00481210();
    Vfffffff0 = eax;
    if(eax == 0) {
        L0042E3E0( & Vfffffedc);
        esp = ebp - 0xc;
        return 0;
    }
    esi = Vfffffee0;
    Vffffffe8 = 0;
    edi = 0;
    L00434150(esi, 0x22c);
    *Vfffffee0 = 0x22c;
    (save)Vfffffee0;
    (save)Vfffffff0;
    if(*L00481214() == 0) {
        CloseHandle(Vfffffff0);
        esi = & Vfffffedc;
        L0042E3E0(esi);
        esp = ebp - 0xc;
        return 0;
L0042e900:
        do {
            ebx = L0042A1F0(esi + 0x24);
            (save)ebx;
            eax = L0042A220(esi + 0x24);
            (restore)ecx;
            if(eax == 0) {
                eax = esi + 0x24;
            } else {
                ecx = ebx + esi + 0x24;
                eax = eax + 2;
                ebx = ecx - eax;
            }
            L00428640(eax, ebx, Vffffffe4, 0xff);
            Vfffffee4 = al;
            L004288C0(esi + 0x24, & Vfffffee4);
            edi = edi + (Vfffffee4 & 0xff) + 1 + (Vfffffee4 & 0xff) + 1 + 1;
            esi = esi + 0x22c;
            Vffffffe8 = Vffffffe8 + 1;
            if(Vffffffe8 == 0x80) {
                break;
            }
            L00434150(esi, 0x22c);
            *esi = 0x22c;
            *(esi + 8) = *(esi + -548);
            (save)esi;
            (save)Vfffffff0;
        } while(*L00481218() != 0);
        CloseHandle(Vfffffff0);
        ebx = Vffffffe8 * 0x48 + 8;
        Vffffffe4 = ebx;
        Vffffffe4 = Vffffffe4 + edi;
        eax = Vffffffe4;
        Vfffffff0 = eax;
        eax = L0042E310(Vfffffff0);
        Vffffffec = eax;
        L00434150(Vffffffec, ebx);
        *(Vffffffec + 4) = Vffffffe8;
        L00434150( & (Vfffffeac.dwLength), 0x20);
        Vfffffeac.dwLength = 0x20;
        GlobalMemoryStatus( & (Vfffffeac.dwLength));
        edi = Vffffffec + 8;
        esi = Vffffffec + ebx;
        if(!(Vffffffe8 = Vffffffe8 - 1)) {
            do {
                *edi = *(Vfffffee0 + 8);
                *(edi + 0x20) = -1;
                *(edi + 0x28) = 0xff;
                *(edi + 0x29) = 0xff;
                if(M00481224 != 0) {
                    ebx = OpenProcess(0x410, 0, *(Vfffffee0 + 8));
                    if(ebx == 0) {
                        ebx = OpenProcess(0x400, 0, *(Vfffffee0 + 8));
                    }
                    if(ebx != 0) {
                        (save) & Vfffffed4;
                        edx = ebp + -396;
                        (save) & Vfffffecc;
                        (save)edx;
                        (save)ebp + -388;
                        (save)ebx;
                        if(*L00481224() != 0) {
                            *(edi + 8) = L0042EF90(ebp + -388);
                            *(edi + 0xc) = edx;
                            eax = Vfffffecc + Vfffffed4;
                            edx = Vfffffed0;
                            asm("adc edx,[ebp+0xfffffed8]");
                            *(edi + 0x20) = L004357C0(eax, edx, 10000000, 0);
                        }
                        if(M0048122c != 0) {
                            (save)0x28;
                            (save) & Vfffffe84;
                            (save)ebx;
                            if(*L0048122c() != 0) {
                                *(edi + 0x10) = Vfffffe90;
                                *(edi + 0x14) = 0;
                            }
                        }
                        CloseHandle(ebx);
                    }
                }
                *(edi + 0x38) = esi;
                esi = esi + L004288C0(esi, Vfffffee0 + 0x24) + 1;
                *(edi + 0x3c) = esi;
                esi = esi + L004288C0(esi, Vfffffee0 + 0x24) + 1;
                *(edi + 0x40) = esi;
                *esi = 0;
                esi = esi + 1;
                edi = edi + 0x48;
                Vfffffee0 = Vfffffee0 + 0x22c;
            } while(Vffffffe8 = Vffffffe8 - 1);
        }
        if(Vffffffe4 != esi - Vffffffec) {
            L00429610(65546);
        }
        if(Ac != 0) {
            *Ac = Vfffffff0;
        }
        L0042E3E0( & Vfffffedc);
        esp = ebp - 0xc;
        return Vffffffec;
    }
    Vffffffe4 = & Vfffffee5;
    goto L0042e900;
}

/*	Procedure: 0x0042EBC0 - 0x0042EC4F
 *	Argument size: 4
 *	Local size: 28
 *	Save regs size: 12
 *	Called by:
 *		L0042ECF0()
 */

L0042EBC0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  * edi;
	/* unknown */ void  Vffffffe4;



    L0042E730();
    if(al == 0) {
        return 0;
    }
    edi = *L00481210(4, A8);
    if(edi == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    L00434150(ebp - 0x28, 0x1c);
    edx = ebp - 0x28;
    *(ebp - 0x28) = 0x1c;
    (save)edx;
    esi = 0;
    (save)edi;
    if(*L0048121c() != 0) {
        do {
            if(Vffffffe4 == A8) {
                goto L0042ec2a;
            }
            (save)ebp - 0x28;
            (save)edi;
        } while(*L00481220() != 0);
        goto L0042ec3f;
L0042ec2a:
        esi = *(ebp - 0x20);
    }
L0042ec3f:
    CloseHandle(edi);
    esp = ebp - 0xc;
    return esi;
}

/*	Procedure: 0x0042EC50 - 0x0042ECE2
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042ECF0()
 */

L0042EC50(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  * edi;



    if(L0042E730() == 0) {
        return 0;
    }
    eax = *L00481210(2, 0);
    edi = eax;
    if(edi == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    L00434150(Ac, 0x22c);
    *Ac = 0x22c;
    (save)Ac;
    (save)edi;
    if(*L00481214() != 0) {
        do {
            if(*(Ac + 8) == A8) {
                goto L0042ecb6;
            }
            (save)Ac;
            (save)edi;
        } while(*L00481218() != 0);
        goto L0042ecd2;
L0042ecb6:
        eax = CloseHandle(edi);
        esp = ebp - 0xc;
        return 1;
    }
L0042ecd2:
    eax = CloseHandle(edi);
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0042ECE3 - 0x0042ECEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042ECE3()
{



}

/*	Procedure: 0x0042ECF0 - 0x0042EE37
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00418340()
 */

L0042ECF0(A8, A10)
unsigned long  A8;
/* unknown */ void  * A10;
{
	/* unknown */ void  * ebx;
	unsigned long  esi;
	/* unknown */ void  * edi;



    ebx = A10;
    edi = ebx;
    esp = esp - 0x244;
    esi = A8;
    if(!(edi = edi & 4)) {
        (save)ebp + -588;
        (restore)ecx;
        if(L0042EC50(esi) == 0) {
            eax = L00429610(65554);
        }
    }
    if(!(ebx & 1)) {
        ebx = OpenProcess(1, 0, esi);
        if(ebx == 0) {
            esi = GetLastError();
            if(esi == 0x57) {
                L00429610(65554);
            }
            L0042F970(esi);
        }
        if(TerminateProcess(ebx, 0) == 0) {
            CloseHandle(ebx);
            L0042F970(GetLastError());
        }
        eax = CloseHandle(ebx);
    } else {
        if(!(ebx & 2)) {
            ebx = L0042EBC0(esi);
            if(ebx == 0) {
                L00429610(65554);
            }
            eax = PostThreadMessageW(ebx, 0x12, 0, 0);
            if(eax == 0) {
                eax = L0042FA00();
            }
        }
    }
    if(edi != 0) {
        Sleep(0x3e8);
        *(ebp - 0x20) = M00481230;
        *(ebp - 0x1c) = M00481234;
        esi = ebp + -590;
        *(ebp - 0x18) = M00481238;
        *(ebp - 0x10) = M0048123e;
        eax = esi;
        edx = ebp + -552;
        ecx = ebp - 0x20;
        *(ebp - 0x14) = M0048123a;
        *esi = 0;
        ShellExecuteW(0, ecx, edx, eax, ebp - 0x14, 1);
        eax = L0045A140();
    }
}

/*	Procedure: 0x0042EE38 - 0x0042EE3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042EE38()
{



}

/*	Procedure: 0x0042EE40 - 0x0042EE40
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00417E20()
 *		L00417E90()
 */

L0042EE40()
{



}

/*	Procedure: 0x0042EE41 - 0x0042EE4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042EE41()
{



}

/*	Procedure: 0x0042EE50 - 0x0042EEF3
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042EF00()
 *		L0042EF30()
 */

L0042EE50()
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffff0;



    (save)esi;
    esp = esp - 0xc;
    esp = esp & -8;
    GetSystemTimeAsFileTime(esp);
    eax = *esp;
    if(Vfffffff0 <= M00481254) {
        != ? 0x42ee7e : ;
        if(eax <= M00481250) {
            edx = *esp;
            esp = ebp - 8;
            M00481250 = edx;
            M00481254 = Vfffffff0;
            (restore)esi;
            edx = M0048124c;
            return M00481248;
        }
    }
    ecx = *esp - M00481250;
    edx = Vfffffff0;
    asm("sbb edx,[0x481254]");
    esi = L004357C0(ecx, edx, 0xa, 0);
    eax = *esp;
    ebx = edx;
    esp = ebp - 8;
    M00481250 = eax;
    M00481254 = Vfffffff0;
    M00481248 = M00481248 + esi;
    asm("adc [0x48124c],ebx");
    (restore)esi;
    edx = M0048124c;
    return M00481248;
}

/*	Procedure: 0x0042EEF4 - 0x0042EEFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042EEF4()
{



}

/*	Procedure: 0x0042EF00 - 0x0042EF20
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00415B9D()
 *		L0041FA90()
 *		L00424930()
 *		L00444E38()
 */

L0042EF00()
{
	/* unknown */ void  ebx;



    eax = L004357C0(L0042EE50(), edx, 0x3e8, 0);
    ebx = eax;
    ecx = edx;
}

/*	Procedure: 0x0042EF21 - 0x0042EF2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042EF21()
{



}

/*	Procedure: 0x0042EF30 - 0x0042EF4B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00405E70()
 *		L00406950()
 *		L00436CE0()
 *		L00438A50()
 */

L0042EF30()
{



    eax = L004357C0(L0042EE50(), edx, 1000000, 0);
    ecx = eax;
}

/*	Procedure: 0x0042EF4C - 0x0042EF4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042EF4C()
{



}

/*	Procedure: 0x0042EF50 - 0x0042EF8C
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004021F8()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L00405E70()
 *		L00406020()
 *		L00408F30()
 *		L00409390()
 *		L0040A760()
 *		L0040CB60()
 *		L0040D0F0()
 *		L0040D880()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E830()
 *		L004112D0()
 *		L00414DD0()
 *		L00414EE0()
 *		L004157B0()
 *		L00416790()
 *		L004300F0()
 *		L00436F90()
 *		L00437370()
 *		L00447780()
 */

L0042EF50()
{



    ecx = ebp - 0xc;
    (save)ebx;
    esp = esp - 8;
    GetSystemTimeAsFileTime(ecx);
    ebx = L004357C0( *(ebp - 0xc), *(ebp - 8), 10000, 0) + 558349312;
    ecx = edx;
    asm("adc ecx,0xfffff76b");
    esp = ebp - 4;
    eax = ebx;
    edx = ecx;
    (restore)ebx;
}

/*	Procedure: 0x0042EF8D - 0x0042EF8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042EF8D()
{



}

/*	Procedure: 0x0042EF90 - 0x0042EFC5
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042CCB0()
 *		L0042CFC0()
 *		L0042E830()
 */

L0042EF90(A4)
/* unknown */ void  A4;
{



    edx = A4;
    (save)ebx;
    eax = *edx;
    edx = *(edx + 4);
    if(!(ecx = eax | edx)) {
        (restore)ebx;
        return;
    }
    ebx = L004357C0(eax, edx, 10000, 0) + 558349312;
    ecx = edx;
    asm("adc ecx,0xfffff76b");
    eax = ebx;
    edx = ecx;
    (restore)ebx;
}

/*	Procedure: 0x0042EFC6 - 0x0042EFCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042EFC6()
{



}

/*	Procedure: 0x0042EFD0 - 0x0042EFFE
 *	Argument size: -172
 *	Local size: 172
 *	Save regs size: 0
 *	Called by:
 *		L004157B0()
 *		L00436CF0()
 *		L004372D0()
 */

L0042EFD0()
{
	struct _TIME_ZONE_INFORMATION Vffffff54;  /* size = 172 bytes */



    edx = Vffffff54.Bias;
    if(GetTimeZoneInformation( & (Vffffff54.Bias)) == 2) {
        edx = edx + Vffffff54.DaylightBias;
    }
    return ~(edx * 0x3c);
}

/*	Procedure: 0x0042EFFF - 0x0042F06D
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 */

L0042EFFF(A10)
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = M00481258;
    esp = esp - 0x18;
    ecx = A10;
    if(ebx != 0) {
        do {
            if(*(ebx + 8) == ecx) {
                goto L0042f019;
            }
L0042f060:
            ebx = *ebx;
        } while(ebx != 0);
        goto L0042f066;
L0042f019:
        if(*(ebx + 0x14) == 0) {
            L0042F250(ebx);
        }
        *(ebp - 8) = esp;
        eax = *(ebx + 0xc)( *(ebx + 0x10), ebx);
        goto L0042f053;
        eax = L00429560( *(ebp - 0x10));
        if(*(ebp - 0x14) != 0) {
            ecx = *(ebp - 0x1c);
            *(ebp - 0x14)(-1);
        }
        esp = *(ebp - 8);
L0042f053:
        return;
        goto L0042f060;
    }
L0042f066:
    esp = ebp - 4;
}

/*	Procedure: 0x0042F06E - 0x0042F06F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F06E()
{



}

/*	Procedure: 0x0042F070 - 0x0042F0A3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409390()
 *		L00418DBB()
 */

L0042F070(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    eax = L0042E3A0(0x18);
    *(eax + 0xc) = A8;
    *(eax + 0x10) = Ac;
    *(eax + 4) = 520956705;
}

/*	Procedure: 0x0042F0A4 - 0x0042F0AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F0A4()
{



}

/*	Procedure: 0x0042F0B0 - 0x0042F141
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00408F30()
 *		L00414FA0()
 *		L00415120()
 *		L00453020()
 */

L0042F0B0(A8, Ac, A10, A14)
UINT A8;
/* unknown */ void  Ac;
unsigned int A10;
/* unknown */ void  A14;
{
	UINT ebx;



    ebx = A8;
    esp = esp - 4;
    if(ebx == 0) {
        L00429610(65538);
    }
    eax = L0042E3A0(0x18);
    *(ebp - 8) = eax;
    *( *(ebp - 8) + 0xc) = ebx;
    edx = *(ebp - 8);
    *(edx + 0x10) = Ac;
    ebx = SetTimer(0, 0, A10, M0042f000);
    if(ebx == 0) {
        L0042E3E0(ebp - 8);
        L00429610(65563);
    }
    *( *(ebp - 8) + 8) = ebx;
    dl = 0;
    *( *(ebp - 8) + 0x14) = dl;
    L0042A0D0(0x481258, *(ebp - 8));
    *( *(ebp - 8) + 4) = 520956705;
    return *(ebp - 8);
}

/*	Procedure: 0x0042F142 - 0x0042F14F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F142()
{



}

/*	Procedure: 0x0042F150 - 0x0042F1B8
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00423980()
 *		L004511D0()
 *		L00453020()
 */

L0042F150(A8)
/* unknown */ void  A8;
{



    (save)esi;
    esi = *A8;
    if(esi == 0) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    if(*(esi + 4) != 520956705) {
        *A8 = 0;
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    *(esi + 4) = 0;
    eax = *(esi + 8);
    if(eax != 0) {
        KillTimer(0, eax);
        *(esi + 8) = 0;
        L0042A150(0x481258, esi);
    }
    eax = L0042E3E0(A8);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0042F1B9 - 0x0042F1BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F1B9()
{



}

/*	Procedure: 0x0042F1C0 - 0x0042F247
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004021F8()
 *		L00406950()
 *		L00414C70()
 *		L00418DBB()
 */

L0042F1C0(A8, Ac, A10)
/* unknown */ void  A8;
unsigned int Ac;
/* unknown */ void  A10;
{



    (save)esi;
    if(A8 == 0 || *(A8 + 4) != 520956705) {
        L00429610(65561);
    }
    ecx = *(A8 + 8);
    if(ecx != 0) {
        KillTimer(0, ecx);
        *(A8 + 8) = 0;
        L0042A150(0x481258, A8);
    }
    esi = SetTimer(0, 0, Ac, M0042f000);
    if(esi == 0) {
        L00429610(65563);
    }
    *(A8 + 8) = esi;
    *(A8 + 0x14) = 0;
    eax = L0042A0D0(0x481258, A8);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0042F248 - 0x0042F24F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F248()
{



}

/*	Procedure: 0x0042F250 - 0x0042F299
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00414C70()
 *		L0042EFFF()
 */

L0042F250(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        return;
    }
    if(*(A8 + 4) != 520956705) {
        esp = ebp - 4;
        return;
    }
    eax = *(A8 + 8);
    if(eax != 0) {
        KillTimer(0, eax);
        *(A8 + 8) = 0;
        eax = L0042A150(0x481258, A8);
    }
    esp = ebp - 4;
}

/*	Procedure: 0x0042F29A - 0x0042F29F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F29A()
{



}

/*	Procedure: 0x0042F2A0 - 0x0042F3A4
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042F3B0()
 */

L0042F2A0(A8, Ac)
unsigned long  A8;
/* unknown */ void  Ac;
{
	unsigned long  ebx;



    ebx = A8;
    (save)esi;
    esi = Ac;
    (save)edi;
    esp = esp - 0x10;
    edi = esi + ebx;
    *(ebp - 0x1c) = esi;
    *(ebp - 0x1c) = *(ebp - 0x1c) << 1;
    *(ebp - 0x1c) = *(ebp - 0x1c) + 0x12;
    eax = ebx;
    if(ebx < edi) {
        do {
            ecx = *eax & 0xff;
            eax = eax + 1;
            if(ecx == 0xa) {
                *(ebp - 0x1c) = *(ebp - 0x1c) + 2;
            }
        } while(eax < edi);
    }
    eax = GlobalAlloc(8194, *(ebp - 0x1c));
    *(ebp - 0x10) = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 0;
    }
    eax = GlobalLock( *(ebp - 0x10));
    *(ebp - 0x14) = eax;
    esi = *(ebp - 0x14);
    do {
        eax = L00428490(ebx, edi - ebx, ebp - 0x18);
        ebx = ebx + *(ebp - 0x18);
        if(eax > 65535) {
            ecx = eax + -65536 >> 0xa & 0x3ff;
            eax = eax & 0x3ff;
            ecx = ecx | -10240;
            *esi = cx;
            *(esi + 2) = eax | -9216;
            esi = esi + 4;
        } else {
            if(eax == 0xa) {
                *esi = 0xd;
                esi = esi + 2;
            }
            *esi = ax;
            esi = esi + 2;
        }
    } while(ebx < edi);
    *esi = 0;
    ebx = esi + 2 - *(ebp - 0x14);
    if(ebx > *(ebp - 0x1c)) {
        L00429610(65546);
    }
    GlobalUnlock( *(ebp - 0x10));
    eax = GlobalReAlloc( *(ebp - 0x10), ebx, 2);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0042F3A5 - 0x0042F3AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F3A5()
{



}

/*	Procedure: 0x0042F3B0 - 0x0042F41B
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408B5A()
 *		L00444570()
 *		L00444660()
 *		L00457AE0()
 */

L0042F3B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    if(Ac == 0) {
        esp = ebp - 4;
        (restore)ebx;
        return;
    }
    (save)Ac;
    ebx = L0042F2A0(A8);
    (restore)ecx;
    if(ebx == 0) {
        L00429610(131173);
    }
    if(OpenClipboard(0) == 0) {
        eax = GlobalFree(ebx);
        esp = ebp - 4;
        (restore)ebx;
        return;
    }
    EmptyClipboard();
    if(SetClipboardData(0xd, ebx) == 0) {
        GlobalFree(ebx);
    }
    esp = ebp - 4;
    (restore)ebx;
    return CloseClipboard();
}

/*	Procedure: 0x0042F41C - 0x0042F41F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F41C()
{



}

/*	Procedure: 0x0042F420 - 0x0042F54F
 *	Argument size: 8
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L0042F550()
 *		L00450E10()
 */

L0042F420(A8, Ac)
/* unknown */ void  * A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	LPVOID esi;
	/* unknown */ void  edi;



    if(A8 != 0) {
        edi = GlobalSize(A8) >> 1;
        if(edi >= 2) {
            ecx = edi;
            eax = ecx + ecx * 2;
            *(ebp - 0x10) = eax;
            *(ebp - 0x18) = L0042E310( *(ebp - 0x10));
            esi = GlobalLock(A8);
            if(esi == 0) {
                L0042E3E0(ebp - 0x18);
            } else {
                ebx = *(ebp - 0x18);
                *(ebp - 0x14) = ebx;
                *(ebp - 0x14) = *(ebp - 0x14) + *(ebp - 0x10);
                if(!(edi = edi - 1)) {
                    do {
                        eax = *esi & 65535;
                        esi = esi + 2;
                        if(eax == 0) {
                            break;
                        }
                        if(eax >> 0xb == 0x1b) {
                            if(!(eax & 0x400) && edi != 0) {
                                ecx = *esi & 65535;
                                if(ecx >> 0xa == 0x37) {
                                    goto L0042f4c4;
                                }
                            }
                            eax = 65533;
                            goto L0042f4e5;
L0042f4c4:
                            eax = (eax & 0x3ff) << 0xa;
                            eax = eax | ecx & 0x3ff;
                            esi = esi + 2;
                            edi = edi - 1;
                            eax = eax + 65536;
                        }
L0042f4e5:
                        if(eax != 0xd) {
                            eax = L00428380(eax, ebx, *(ebp - 0x14) - ebx);
                            if(eax == 0) {
                                break;
                            }
                            ebx = ebx + eax;
                        }
                    } while(edi = edi - 1);
                }
                GlobalUnlock(A8);
                if(!(esi = ebx - *(ebp - 0x18))) {
                    L0042E3E0(ebp - 0x18);
                } else {
                    if(Ac != 0) {
                        *Ac = esi;
                    }
                    return *(ebp - 0x18);
                }
            }
        }
    }
    if(Ac != 0) {
        *Ac = 0;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0042F550 - 0x0042F5E3
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00444708()
 *		L00446E30()
 */

L0042F550(Ac)
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esp = esp - 0x18;
    if(Ac != 0) {
        *Ac = 0;
    }
    if(OpenClipboard(0) == 0) {
        return 0;
    }
    eax = GetClipboardData(0xd);
    if(eax == 0) {
        CloseClipboard();
        esp = ebp - 8;
        return 0;
    }
    *(ebp - 0xc) = esp;
    esi = L0042F420(eax, Ac);
    goto L0042f5d5;
    CloseClipboard();
    L004234F0(0, 0, 0);
    if(*(ebp - 0x18) != 0) {
        (save)-1;
        ecx = *(ebp - 0x20);
        *(ebp - 0x18)();
    }
    esp = *(ebp - 0xc);
L0042f5d5:
    CloseClipboard();
    esp = ebp - 8;
    return esi;
}

/*	Procedure: 0x0042F5E4 - 0x0042F5EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F5E4()
{



}

/*	Procedure: 0x0042F5F0 - 0x0042F71B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041DCE0()
 *		L00444E38()
 *		L004450B8()
 *		L0044528A()
 *		L004452F0()
 *		L00457948()
 *		L00457990()
 */

L0042F5F0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    ebx = A8;
    if(M004a1024 == 0) {
        eax = LoadCursorW(0, 32512);
        M004a1024 = eax;
        M004a1028 = eax;
        M004a102c = LoadCursorW(0, 32513);
        eax = LoadCursorW(0, 32515);
        M004a1030 = eax;
        M004a1034 = eax;
        M004a1038 = LoadCursorW(0, 32514);
        M004a103c = LoadCursorW(0, 32648);
        M004a1040 = LoadCursorW(0, 32640);
        M004a1044 = LoadCursorW(0, 32644);
        M004a1048 = LoadCursorW(0, 32645);
        M004a1050 = LoadCursorW(0, 32642);
        M004a104c = LoadCursorW(0, 32643);
        edx = M004a1028;
        ecx = edx;
        M004a1054 = edx;
        M004a1058 = ecx;
        M004a105c = ecx;
        M004a1060 = edx;
        M004a1064 = ecx;
    }
    if(ebx >= 0x12) {
        ebx = 1;
    }
    eax = *(ebx * 4 + 4853796);
    if(eax == 0) {
        eax = M004a1028;
    }
    eax = SetCursor(eax);
    esp = ebp - 4;
    M00481268 = ebx;
}

/*	Procedure: 0x0042F71C - 0x0042F71F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F71C()
{



}

/*	Procedure: 0x0042F720 - 0x0042F725
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00457948()
 */

L0042F720()
{



    return M00481268;
}

/*	Procedure: 0x0042F726 - 0x0042F72F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F726()
{



}

/*	Procedure: 0x0042F730 - 0x0042F73C
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00444E38()
 */

L0042F730()
{



    return GetDoubleClickTime();
}

/*	Procedure: 0x0042F73D - 0x0042F73F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F73D()
{



}

/*	Procedure: 0x0042F740 - 0x0042F74F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00424930()
 *		L00454600()
 */

L0042F740(A8)
struct tagPOINT * A8;
{



    return GetCursorPos(A8);
}

/*	Procedure: 0x0042F750 - 0x0042F75F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004337B0()
 *		L0043C150()
 *		L00459F70()
 *		L0045A000()
 *		L0045CEF0()
 */

L0042F750(A8)
/* unknown */ void  A8;
{



    return L00459F00(A8);
}

/*	Procedure: 0x0042F760 - 0x0042F776
 *	Argument size: -8
 *	Local size: 8
 *	Save regs size: 0
 *	Called by:
 *		L00435380()
 *		L004353E0()
 */

L0042F760()
{
	struct _FILETIME Vfffffff8;  /* size = 8 bytes */



    GetSystemTimeAsFileTime( & (Vfffffff8.dwLowDateTime));
    return Vfffffff8.dwLowDateTime;
}

/*	Procedure: 0x0042F777 - 0x0042F77F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F777()
{



}

/*	Procedure: 0x0042F780 - 0x0042F96C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042C770()
 *		L0042C930()
 *		L0042F970()
 *		L0042FA00()
 *		L00432350()
 */

L0042F780(A4)
/* unknown */ void  A4;
{



    ecx = A4;
    if(ecx >= 10000 && ecx < 12000) {
        if(!(ecx = ecx - 10048)) {
            if(ecx = ecx - 1) {
                goto L0042f800;
            }
            if(ecx = ecx - 1) {
                goto L0042f807;
            }
            if(ecx = ecx - 1) {
                goto L0042f810;
            }
            if(ecx = ecx - 1) {
                goto L0042f817;
            }
            if(ecx = ecx - 1) {
                goto L0042f820;
            }
            if(ecx = ecx - 1) {
                goto L0042f827;
            }
            if(ecx = ecx - 1) {
                goto L0042f830;
            }
            if(ecx = ecx - 4) {
                goto L0042f837;
            }
            if(ecx = ecx - 1) {
                goto L0042f840;
            }
            if(ecx = ecx - 1) {
                goto L0042f847;
            }
            if(ecx = ecx - 3) {
                goto L0042f850;
            }
            if(ecx = ecx - 1) {
                goto L0042f857;
            }
            if(ecx = ecx - 0x3a8) {
                goto L0042f860;
            }
            if(ecx = ecx - 1) {
                goto L0042f867;
            }
            if(ecx = ecx - 2) {
                goto L0042f870;
            }
        } else {
            eax = 262249;
            goto L0042f87c;
L0042f800:
            eax = 262249;
            goto L0042f87c;
L0042f807:
            eax = 262255;
            goto L0042f87c;
L0042f810:
            eax = 262255;
            goto L0042f87c;
L0042f817:
            eax = 262253;
            goto L0042f87c;
L0042f820:
            eax = 262253;
            goto L0042f87c;
L0042f827:
            eax = 262250;
            goto L0042f87c;
L0042f830:
            eax = 262248;
            goto L0042f87c;
L0042f837:
            eax = 262248;
            goto L0042f87c;
L0042f840:
            eax = 262252;
            goto L0042f87c;
L0042f847:
            eax = 262251;
            goto L0042f87c;
L0042f850:
            eax = 262253;
            goto L0042f87c;
L0042f857:
            eax = 262255;
            goto L0042f87c;
L0042f860:
            eax = 262247;
            goto L0042f87c;
L0042f867:
            eax = 262247;
            goto L0042f87c;
L0042f870:
            eax = 262247;
            goto L0042f87c;
        }
        eax = 262244;
L0042f87c:
        return;
    }
    if(!(eax = ecx - 2)) {
        if(eax = eax - 1) {
            goto L0042f8f0;
        }
        if(eax = eax - 2) {
            goto L0042f8f7;
        }
        if(eax = eax - 1) {
            goto L0042f900;
        }
        if(eax = eax - 2) {
            goto L0042f907;
        }
        if(eax = eax - 1) {
            goto L0042f910;
        }
        if(eax = eax - 0x17) {
            goto L0042f940;
        }
        if(eax = eax - 0x30) {
            goto L0042f930;
        }
        if(eax = eax - 7) {
            goto L0042f917;
        }
        if(eax = eax - 0x19) {
            goto L0042f937;
        }
        if(eax = eax - 0xb) {
            goto L0042f950;
        }
        if(eax = eax - 0x26) {
            goto L0042f947;
        }
        if(eax = eax - 0x16) {
            goto L0042f927;
        }
        if(eax = eax - 0x17) {
            goto L0042f957;
        }
        if(eax = eax - 0x31f) {
            goto L0042f920;
        }
        if(eax = eax - 0x135) {
            goto L0042f960;
        }
    } else {
        eax = 196711;
        goto L0042f96c;
L0042f8f0:
        eax = 196710;
        goto L0042f96c;
L0042f8f7:
        eax = 65556;
        goto L0042f96c;
L0042f900:
        eax = 131174;
        goto L0042f96c;
L0042f907:
        eax = 131173;
        goto L0042f96c;
L0042f910:
        eax = 131174;
        goto L0042f96c;
L0042f917:
        eax = 65538;
        goto L0042f96c;
L0042f920:
        eax = 196710;
        goto L0042f96c;
L0042f927:
        eax = 196723;
        goto L0042f96c;
L0042f930:
        eax = 196723;
        goto L0042f96c;
L0042f937:
        eax = 196720;
        goto L0042f96c;
L0042f940:
        eax = 196725;
        goto L0042f96c;
L0042f947:
        eax = 196726;
        goto L0042f96c;
L0042f950:
        eax = 196726;
        goto L0042f96c;
L0042f957:
        eax = 196726;
        goto L0042f96c;
L0042f960:
        eax = 65556;
        goto L0042f96c;
    }
    eax = 65563;
L0042f96c:
}

/*	Procedure: 0x0042F96D - 0x0042F96F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042F96D()
{



}

/*	Procedure: 0x0042F970 - 0x0042F9F1
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041C5A0()
 *		L0041FFD0()
 *		L0042BAE0()
 *		L0042BF80()
 *		L0042C050()
 *		L0042C440()
 *		L0042C570()
 *		L0042C600()
 *		L0042C860()
 *		L0042ECF0()
 *		L00432450()
 *		L00432610()
 *		L00432D40()
 */

L0042F970()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    esp = esp - 0xb0;
    esi = *(ebp + 8);
    eax = 0;
    edi = ebp + -184;
    ecx = 0x16;
    asm("rep stosd");
    *(ebp + -184) = L0042F780(esi);
    *(ebp + -168) = esi;
    eax = 0;
    do {
        *(ebp + eax - 0x60) = *(ebp + eax + -184);
        *(ebp + eax - 0x5c) = *(ebp + eax + -180);
        *(ebp + eax - 0x58) = *(ebp + eax + -176);
        *(ebp + eax - 0x54) = *(ebp + eax + -172);
        eax = eax + 0x10;
    } while(eax < 0x50);
    *(ebp - 0x10) = *(ebp - 0x68);
    ecx = *(ebp - M00000064);
    *(ebp - 0xc) = ecx;
    (save)0;
    (save)ebp - 0x60;
    (save)"!SError!!";
    L004234F0();
}

/*	Procedure: 0x0042FA00 - 0x0042FA86
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041CCB0()
 *		L0041CD90()
 *		L0041FFD0()
 *		L0042AD50()
 *		L0042B070()
 *		L0042B280()
 *		L0042B600()
 *		L0042B800()
 *		L0042C860()
 *		L0042CA40()
 *		L0042CCB0()
 *		L0042ECF0()
 *		L0042FE40()
 */

L0042FA00()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    esp = esp - 0xb0;
    esi = GetLastError();
    eax = 0;
    edi = ebp + -184;
    ecx = 0x16;
    asm("rep stosd");
    *(ebp + -184) = L0042F780(esi);
    *(ebp + -168) = esi;
    eax = 0;
    do {
        *(ebp + eax - 0x60) = *(ebp + eax + -184);
        *(ebp + eax - 0x5c) = *(ebp + eax + -180);
        *(ebp + eax - 0x58) = *(ebp + eax + -176);
        *(ebp + eax - 0x54) = *(ebp + eax + -172);
        eax = eax + 0x10;
    } while(eax < 0x50);
    *(ebp - 0x10) = *(ebp - 0x68);
    ecx = *(ebp - M00000064);
    *(ebp - 0xc) = ecx;
    (save)0;
    (save)ebp - 0x60;
    (save)"!SError!!";
    L004234F0();
}

/*	Procedure: 0x0042FA9C - 0x0042FA9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042FA9C()
{



}

/*	Procedure: 0x0042FAA0 - 0x0042FBAE
 *	Argument size: 8
 *	Local size: 384
 *	Save regs size: 4
 *	Called by:
 *		L0042FDF0()
 */

L0042FAA0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vfffffe84;
	/* unknown */ void  Vfffffe90;
	/* unknown */ void  Vfffffe94;
	/* unknown */ void  Vfffffe98;
	/* unknown */ void  Vfffffea4;
	/* unknown */ void  Vfffffebc;
	/* unknown */ void  Vfffffedc;
	/* unknown */ void  Vfffffeec;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffefc;
	/* unknown */ void  Vfffffefd;



    Vfffffe90 = esp;
    L004295F0(0, 0);
    (save)0;
    L00438CC0(0x42fa90);
    (restore)ecx;
    if(A8 != 0) {
        L004291F0(A8, 0, & Vfffffefd, 0xff);
        Vfffffefc = al;
        (save)0x28;
        eax = L00428E60( & Vfffffefc);
        (restore)ecx;
        if(eax != 0) {
            *(eax - 1) = 0xa;
        }
    } else {
        L004288C0( & Vfffffefc, Ac);
    }
    L00434150( & Vfffffe94, 0x68);
    Vfffffef0 = & Vfffffefc;
    Vfffffe94 = 0x100;
    Vfffffe98 = 1;
    Vfffffea4 = 1;
    Vfffffebc = 0x3e8;
    Vfffffedc = 0x4760ac;
    Vfffffeec = 0x4760b4;
    L004395A0(0, 0, & Vfffffe94, 0);
    eax = L0042E5B0();
    goto L0042fba9;
    if(Vfffffe84 != 0) {
        ecx = *(ebp + -388);
        eax = Vfffffe84(-1);
    }
    esp = *(ebp + -368);
L0042fba9:
}

/*	Procedure: 0x0042FBAF - 0x0042FBAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042FBAF()
{



}

/*	Procedure: 0x0042FBB0 - 0x0042FD1C
 *	Argument size: 0
 *	Local size: 2052
 *	Save regs size: 4
 *	Called by:
 *		L0042FD20()
 */

L0042FBB0()
{
	WCHAR * ebx;
	/* unknown */ void  Vfffff7fc;
	/* unknown */ void  Vfffff7fe;
	/* unknown */ void  Vfffff9e8;



    ebx = ebp + -2056;
    eax = GetModuleFileNameW(0, ebx, 0x400);
    ecx = eax;
    if(ecx == 0) {
        return;
    }
    if(ecx > 0xf8) {
        ebx = ecx;
        eax = 274877907;
        asm("mul ebx");
        eax = -858993459;
        Vfffff9e8 = 0;
        edx = edx >> 6;
        ebx = edx;
        asm("mul ebx");
        eax = 1374389535;
        edx = (edx >> 3) * 0xa;
        ebx = ebx - edx + 0x30;
        *(ebp + -2056) = bx;
        ebx = ecx;
        asm("mul ebx");
        eax = -858993459;
        edx = edx >> 5;
        ebx = edx;
        asm("mul ebx");
        eax = ecx;
        ebx = ebx - (edx >> 3) * 0xa + 0x30;
        edx = 0;
        *(ebp + -2054) = bx;
        edx = 0xa / 0xa % 0xa / 0xa;
        ebx = eax;
        ecx = edx;
        eax = -858993459;
        asm("mul ebx");
        ebx = ebx - (edx >> 3) * 0xa + 0x30;
        Vfffff7fc = bx;
        Vfffff7fe = ecx + 0x30;
    }
    for(ebx = ebp + -2056; 1; ebx = ebx + 2) {
        edx = *ebx & 65535;
        if(dx == 0) {
            break;
        }
        if((dx & 65535) == 0x5c) {
            *ebx = 0x2f;
        }
    }
    *ebx = 0x2f;
    *(ebx + 2) = 0x52;
    ebx = ebx + 4;
    *ebx = 0x55;
    *(ebx + 2) = 0x4e;
    ebx = ebx + 4;
    *ebx = 0x4c;
    *(ebx + 2) = 0x4f;
    ebx = ebx + 4;
    *ebx = 0x43;
    *(ebx + 2) = 0x4b;
    ebx = ebx + 4;
    *ebx = 0;
    CreateMutexW(0, 0, ebp + -2056);
    eax = GetLastError();
    if(eax == 0xb7) {
        MessageBoxA(0, "Program already running.", "Already Running", 0x10);
        eax = ExitProcess(0);
    }
    esp = ebp - 4;
}

/*	Procedure: 0x0042FD1D - 0x0042FD1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042FD1D()
{



}

/*	Procedure: 0x0042FD20 - 0x0042FDED
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042FDF0()
 */

L0042FD20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    L0042FBB0();
    M004811e8 = A8;
    ecx = *L00486D34;
    eax = ecx << 8 & 16711680;
    eax = eax | ecx >> 0x18;
    edx = ecx;
    ecx = ecx << 0x18;
    M00481000 = (eax | edx >> 8 & 65280 | ecx) + 0x486cf8;
    eax = *L00486D38;
    esi = eax << 8 & 16711680;
    esi = esi | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    M00481004 = (esi | ecx >> 8 & 65280 | eax) >> 2;
    M00481018 = "%FNT";
    M0048101c = 0;
    M00481028 = 1;
    M004811f0 = 0;
    GetSystemTimeAsFileTime(M00481250);
    M00481248 = M00481250;
    M0048124c = M00481254;
    return OleInitialize(0);
}

/*	Procedure: 0x0042FDEE - 0x0042FDEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042FDEE()
{



}

/*	Procedure: 0x0042FDF0 - 0x0042FE36
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		__entry_point__()
 */

L0042FDF0()
{



    (save)ebp;
    ebp = esp;
    esp = esp - 0x18;
    *(ebp - 4) = esp;
    L0042FD20( *(ebp + 8), *(ebp + 0x10));
    L00409830();
    goto L0042fe2a;
    L0042FAA0( *(ebp - 0xc), 0);
    if(*(ebp - 0x10) != 0) {
        (save)-1;
        ecx = *(ebp - 0x18);
        *(ebp - 0x10)();
    }
    esp = *(ebp - 4);
L0042fe2a:
    L0042E710();
    (restore)ebp;
    return 0;
}

/*	Procedure: 0x0042FE37 - 0x0042FE3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042FE37()
{



}

/*	Procedure: 0x0042FE40 - 0x0042FF8A
 *	Argument size: 4
 *	Local size: 20
 *	Save regs size: 8
 *	Called by:
 *		L00414F70()
 */

L0042FE40(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;



    if(M004a106c == 0) {
        eax = LoadLibraryA("ADVAPI32");
        M004a106c = eax;
        if(eax != 0) {
            M004a1070 = GetProcAddress(eax, "OpenProcessToken");
            M004a1074 = GetProcAddress(M004a106c, "LookupPrivilegeValueA");
            eax = GetProcAddress(M004a106c, "AdjustTokenPrivileges");
            M004a1078 = eax;
            if(M004a1070 != 0 && M004a1074 != 0 && eax != 0) {
                (save) & Vfffffff4;
                (save)0x28;
                (save)GetCurrentProcess();
                if(*L004a1070() == 0) {
                    L0042FA00();
                }
                L00434150(ebp - 0x1c, 0x10);
                (save)ebp - 0x18;
                (save)"SeShutdownPrivilege";
                (save)0;
                *L004a1074();
                eax = ebp - 0x1c;
                *(ebp - 0x1c) = 1;
                Vfffffff0 = 2;
                (save)0;
                (save)0;
                (save)0;
                (save)eax;
                (save)0;
                (save)Vfffffff4;
                *L004a1078();
            }
        }
    }
    esi = 0;
    if(!(A8 & 0x10)) {
        esi = M004a1078 != 0 ? 0x10 : esi | 4;
    }
    if(!(A8 & 1)) {
        eax = ExitWindowsEx(esi | 8, 0);
        if(eax != 0) {
            goto L0042ff84;
        }
        (save)0;
        (save)esi | 1;
    } else {
        if(!(A8 & 2)) {
            esi = esi | 2;
        }
        (save)0;
        (save)esi;
    }
    eax = ExitWindowsEx();
    if(eax == 0) {
        eax = L0042FA00();
    }
L0042ff84:
}

/*	Procedure: 0x0042FF8B - 0x0042FF8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0042FF8B()
{



}

/*	Procedure: 0x0042FF90 - 0x00430070
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004157B0()
 *		L0043BEF0()
 */

L0042FF90()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    esp = esp - 0x94;
    ecx = ebp + -156;
    esi = *(ebp + 8);
    ebx = *(ebp + 0xc);
    L00434150(ecx, 0x94);
    edx = ebp + -156;
    *(ebp + -156) = 0x94;
    GetVersionExA(edx);
    if(esi != 0) {
        ecx = *(ebp + -140) - 1;
        eax = 0x100;
        if(ecx <= 1) {
            switch(ecx) {
                case 0:
L0042ffe9:
                    eax = eax | 0x200;
                    goto L0042fff5;
                case 1:
                    eax = eax | 0x400;
                    goto L0042fff5;
            }
            goto L0042ffe9;
        }
L0042fff5:
        *esi = eax;
    }
    if(ebx == 0) {
        goto L00430050;
    }
    (save)0x47614c;
    L004288C0(ebx);
    (restore)ecx;
    if(*(ebp + -140) != 2) {
        goto L0043001e;
    }
    L00428A30(ebx, 0x476158);
    L00428CD0(ebx, *(ebp + -152), 0x800);
    L00428D50(ebx, 0x2e);
    L00428CD0(ebx, *(ebp + -148), 0x802);
    eax = *(ebp + -152) * 0x3e8 + *(ebp + -148);
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return;
}

/*	Procedure: 0x00430080 - 0x004300EE
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004300F0()
 */

L00430080(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)A10;
    if(A8 == 0 || *A8 != 715279084) {
        eax = L00429610(65561);
    }
    if(A10 != 0) {
        if(A10 < 0x14 || A10 > 65535) {
            eax = L00429610(65538);
        }
        *(A8 + 0xa0) = si;
        *(A8 + 0xa4) = Ac;
    } else {
        eax = 0x476399;
        *(A8 + 0xa0) = *L00476398 & 0xff;
        *(A8 + 0xa4) = 0x476399;
    }
    esp = ebp - 8;
    (restore)A10;
}

/*	Procedure: 0x004300EF - 0x004300EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004300EF()
{



}

/*	Procedure: 0x004300F0 - 0x0043023C
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 8
 */

L004300F0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A8;
    esp = esp - 0x28;
    if(esi == 0) {
        L00429610(65538);
    }
    eax = L0042E3A0(0x1578);
    *(ebp - 0x30) = eax;
    *(eax + 0xc) = esi;
    ebx = *(ebp - 0x30);
    *(ebx + 4) = Ac;
    eax = ebp - 0x2c;
    *( *(ebp - 0x30) + 0x99) = A10 & 0xff;
    *( *(ebp - 0x30) + 0x10) = 262144;
    *( *(ebp - 0x30) + 8) = 0x430070;
    L004353E0(eax, 0xc);
    edx = *(ebp - 0x2c);
    *( *(ebp - 0x30) + 0x1c) = edx;
    eax = L0042EF50();
    esi = edx << 8;
    ebx = 0;
    esi = esi & 16711680;
    esi = esi | edx >> 0x18;
    ebx = edx;
    edx = edx << 0x18;
    esi = esi | ebx >> 8 & 65280 | edx;
    ebx = eax << 8 & 16711680;
    ebx = ebx | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    ebx = ebx | edx >> 8 & 65280 | eax;
    ecx = *(ebp - 0x30) + 0x68;
    *ecx = esi;
    *(ecx + 4) = ebx;
    edx = *(ebp - 0x28);
    *( *(ebp - 0x30) + 0x68) = dx;
    eax = *(ebp - 0x30);
    ecx = edx;
    edx = edx >> 0x18;
    *(eax + 0x6e) = *(eax + 0x6e) ^ ecx >> 0x10 & 3;
    *( *(ebp - 0x30) + 0x6f) = dl;
    eax = *(ebp - 0x30);
    *(eax + 0x70) = *(ebp - 0x24);
    *( *(ebp - 0x30)) = 715279084;
    *(ebp - 0xc) = esp;
    L00430080( *(ebp - 0x30), A14, A18);
    return *(ebp - 0x30);
    eax = *(ebp - 0x30);
    *eax = 0;
    L0042E3E0(ebp - 0x30);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x18) != 0) {
        ecx = *(ebp - 0x20);
        *(ebp - 0x18)(-1);
    }
    esp = *(ebp - 0xc);
    return *(ebp - 0x30);
}

/*	Procedure: 0x0043023D - 0x0043023F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043023D()
{



}

/*	Procedure: 0x00430240 - 0x004302C1
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00401310()
 */

L00430240(A8)
/* unknown */ void  A8;
{



    (save)esi;
    (save)edi;
    edi = *A8;
    if(edi == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    if(*edi != 715279084) {
        *A8 = 0;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    *edi = 0;
    L00434270(edi + 0x4b4, 0x10c0);
    L0042E3E0(edi + 0x14);
    esi = edi + 0xb4;
    if(!(edi = *(edi + 0xa8) - 1)) {
        do {
            L0042E3E0(esi);
            esi = esi + 8;
        } while(edi = edi - 1);
    }
    eax = L0042E3E0(A8);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x004302C2 - 0x004302CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004302C2()
{



}

/*	Procedure: 0x004302D0 - 0x00430305
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L004302D0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    *(A8 + 0x80) = Ac;
    *(A8 + 0x84) = A10;
    return *(A8 + 0x84);
}

/*	Procedure: 0x00430306 - 0x0043030F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430306()
{



}

/*	Procedure: 0x00430310 - 0x00430345
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L00430310(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    *(A8 + 0x88) = Ac;
    *(A8 + 0x8c) = A10;
    return *(A8 + 0x8c);
}

/*	Procedure: 0x00430346 - 0x0043034F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430346()
{



}

/*	Procedure: 0x00430350 - 0x00430379
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L00430350(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    *(A8 + 0x10) = Ac;
    return *(A8 + 0x10);
}

/*	Procedure: 0x0043037A - 0x0043037F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043037A()
{



}

/*	Procedure: 0x00430380 - 0x004303C9
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00401310()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L0040853A()
 */

L00430380(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    esi = *(A8 + 0x94);
    eax = ax & 65535;
    esi = esi >> 0x10;
    edx = eax << 0x10;
    ecx = eax ^ esi;
    *(A8 + 0x94) = edx | eax;
    esp = ebp - 8;
    (restore)esi;
    return eax | ecx << 0x10;
}

/*	Procedure: 0x004303CA - 0x004303CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004303CA()
{



}

/*	Procedure: 0x004303D0 - 0x00430414
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00401D10()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E830()
 *		L004112D0()
 */

L004303D0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    if(A14 != 0) {
        *A14 = 0;
    }
    return L00428EA0(A8 + 0x48, Ac, A10);
}

/*	Procedure: 0x00430415 - 0x0043041F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430415()
{



}

/*	Procedure: 0x00430420 - 0x00430446
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L00403C00()
 *		L00404010()
 *		L0040D0F0()
 *		L0040E830()
 *		L0040F110()
 *		L004100F0()
 *		L00411640()
 *		L00415DE0()
 *		L00416790()
 */

L00430420(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    esp = ebp - 4;
    return A8 + 0x48;
}

/*	Procedure: 0x00430447 - 0x0043044F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430447()
{



}

/*	Procedure: 0x00430450 - 0x00430492
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0040E830()
 */

L00430450(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = A10;
    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    if(ebx > 0x1f) {
        ebx = 0x1f;
    }
    return L00428F50(A8 + 0x48, Ac, ebx);
}

/*	Procedure: 0x00430493 - 0x0043049F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430493()
{



}

/*	Procedure: 0x004304A0 - 0x00430530
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00430540()
 *		L00430F40()
 */

L004304A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = Ac;
    (save)A10;
    (save)A8;
    esp = esp - 0x2c;
    *(ebp - 0x34) = *(A8 + 0x4b4);
    *(ebp - 0x30) = *eax;
    *(ebp - 0x2c) = *(A8 + 0x4b8);
    *(ebp - 0x28) = *(A8 + 0x4bc);
    *(ebp - 0x24) = *(eax + 4);
    *(ebp - 0x20) = *(A8 + 0x4c0);
    *(ebp - 0x1c) = *(A8 + 0x4c4);
    *(ebp - 0x18) = *(eax + 8);
    *(ebp - 0x14) = *(A8 + 0x4c8);
    *(ebp - 0x10) = *(A8 + 0x4cc);
    ecx = *(A8 + 0x4d0);
    edx = ebp - 0x34;
    *(ebp - 0xc) = ecx;
    L0045C850(edx, 0x2c, A10);
    eax = L004406B0(A8 + 0x4d4, A10, A10);
    esp = ebp - 8;
    (restore)A8;
    (restore)A10;
}

/*	Procedure: 0x00430531 - 0x0043053F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430531()
{



}

/*	Procedure: 0x00430540 - 0x004305CC
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0040D0F0()
 */

L00430540(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp - 0x14;
    if(A8 == 0 || *A8 != 715279084) {
        eax = L00429610(65561);
    }
    if(Ac == 0 || *(A8 + 0x90) == 0) {
        return 0;
    }
    L004342A0(A8 + 0x4b4, Ac, 0x20);
    L0043D8D0(A8 + 0x4d4, Ac);
    eax = ebp - 0x1c;
    L004304A0(A8, A8 + 0x68, eax);
    eax = L00434380( *(A8 + 0x90), ebp - 0x1c, 0x14);
    esp = ebp - 8;
}

/*	Procedure: 0x004305CD - 0x004305CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004305CD()
{



}

/*	Procedure: 0x004305D0 - 0x0043062B
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L004305D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != 715279084) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x98) != 0) {
        eax = L00429610(65539);
    }
    if(Ac != 0) {
        *(A8 + 0x98) = 1;
        *(A8 + 0x94) = *(A8 + 0x94) | 1;
    } else {
        *(A8 + 0x98) = 4;
        *(A8 + 0x94) = *(A8 + 0x94) & -2;
    }
}

/*	Procedure: 0x0043062C - 0x0043062F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043062C()
{



}

/*	Procedure: 0x00430630 - 0x0043072E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00430760()
 */

L00430630(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    (save)edi;
    esp = esp - 0x10;
    esi = *(A8 + 0xa8);
    *(ebp - 0x10) = esi;
    *(ebp - 0x1c) = A10;
    ebx = A8 + 0xb4;
    edx = ebx;
    if(!(esi = esi - 1)) {
        do {
            *(ebp - 0x1c) = *(ebp - 0x1c) + *(edx + 4);
            edx = edx + 8;
        } while(esi = esi - 1);
    }
    edi = *(A8 + 0xac);
    *(ebp - 0x1c) = *(ebp - 0x1c) - edi;
    A8 = L0042E310( *(ebp - 0x1c));
    *(ebp - 0x14) = A8;
    esi = *(ebp - 0x14);
    if(!( *(ebp - 0x10) = *(ebp - 0x10) - 1)) {
        do {
            *(ebp - 0x18) = *ebx;
            ecx = *(ebx + 4);
            A8 = edi >= ecx ? ecx : edi;
            edi = edi - A8;
            A8 = L004342A0(esi, *(ebp - 0x18) + A8, ecx - A8);
            edx = ebp - 0x18;
            esi = esi + A8;
            L0042E3E0(edx);
            *ebx = 0;
            *(ebx + 4) = 0;
            ebx = ebx + 8;
        } while(*(ebp - 0x10) = *(ebp - 0x10) - 1);
    }
    L004342A0(esi, Ac, A10);
    *(A8 + 0xa8) = 1;
    *(A8 + 0xac) = 0;
    *(A8 + 0xb0) = *(ebp - 0x1c);
    *(A8 + 0xb4) = *(ebp - 0x14);
    *(A8 + 0xb8) = *(ebp - 0x1c);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0043072F - 0x0043072F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043072F()
{



}

/*	Procedure: 0x00430730 - 0x00430750
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00430760()
 *		L00430D50()
 *		L00430F40()
 *		L0043105A()
 *		L00431F8B()
 */

L00430730(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x94) = *(A8 + 0x94) | 4;
    *(A8 + 0x98) = 8;
    return L00432B90( *(A8 + 0xc));
}

/*	Procedure: 0x00430751 - 0x0043075F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430751()
{



}

/*	Procedure: 0x00430760 - 0x00430848
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00431260()
 */

L00430760(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x24;
    if(*(A8 + 0x98) == 8) {
        return 0;
    }
    esi = *(A8 + 0xc);
    ebx = 0;
    do {
        edx = ebp - 0x2d;
        eax = L00433200(esi, ebp - 0x2c, edx, 0);
        *(ebp - 0x10) = eax;
        if(eax == 0) {
            goto L0043079f;
        }
L004307b0:
        edx = *(A8 + 0xa8);
        ebx = ebx + *(ebp - 0x2c);
        if(edx != 0x80) {
            ecx = A8 + edx * 8 + 0xb4;
            *ecx = *(ebp - 0x10);
            *(ecx + 4) = *(ebp - 0x2c);
            *(A8 + 0xa8) = edx + 1;
            *(A8 + 0xb0) = *(A8 + 0xb0) + *(ebp - 0x2c);
        } else {
            *(ebp - 0x14) = esp;
            L00430630(A8, *(ebp - 0x10), *(ebp - 0x2c));
L00430805:
            L0042E3E0(ebp - 0x10);
        }
    } while(*(ebp - 0x2d) != 0);
    goto L0043083f;
L0043079f:
    esp = ebp - 0xc;
    return ebx;
    goto L004307b0;
    L0042E3E0(ebp - 0x10);
    L00430730(A8);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x20) != 0) {
        (save)-1;
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)();
    }
    esp = *(ebp - 0x14);
    goto L00430805;
L0043083f:
    esp = ebp - 0xc;
    return ebx;
}

/*	Procedure: 0x00430849 - 0x0043084F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430849()
{



}

/*	Procedure: 0x00430850 - 0x004308E7
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432250()
 */

L00430850(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    edx = Ac;
    *(ebp - 0x14) = *(A8 + 0xac);
    edi = *(A8 + 0xb0);
    if(edx != 0) {
        if(edx >= edi) {
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return 0;
        }
        *(ebp - 0x14) = *(ebp - 0x14) + edx;
        edi = edi - edx;
    }
    if(A14 > edi) {
        A14 = edi;
    }
    ebx = A14;
    ebx :: 0;
    *(ebp - 0x10) = A10;
    if(!(esi = A8 + 0xb4)) {
        do {
            edx = *esi;
            edi = *(esi + 4);
            if(*(ebp - 0x14) != 0) {
                eax = *(ebp - 0x14) >= edi ? edi : *(ebp - 0x14);
                *(ebp - 0x14) = *(ebp - 0x14) - eax;
                edx = edx + eax;
                edi = edi - eax;
            }
            if(edi >= ebx) {
                edi = ebx;
            }
            L004342A0( *(ebp - 0x10), edx, edi);
            ebx = ebx - edi;
            *(ebp - 0x10) = *(ebp - 0x10) + edi;
            esi = esi + 8;
        } while(ebx != 0);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return A14;
}

/*	Procedure: 0x004308E8 - 0x004308EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004308E8()
{



}

/*	Procedure: 0x004308F0 - 0x004309B1
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004309C0()
 */

L004308F0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    esi = *Ac;
    ecx = *A10;
    edi = A14;
    *(ebp - 0x14) = ecx;
    if(ecx != 0) {
        ebx = 0x10 - ecx;
        if(ebx > A18) {
            L004342A0(esi + *(ebp - 0x14), edi, A18);
            *(ebp - 0x14) = *(ebp - 0x14) + A18;
            eax = A10;
            *eax = *(ebp - 0x14);
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return;
        }
        *(ebp - 0x10) = ebx;
        L004342A0(esi + *(ebp - 0x14), edi, ebx);
        A18 = A18 - *(ebp - 0x10);
        edi = edi + ebx;
        L004413A0(A8, esi, esi);
        esi = esi + 0x10;
    }
    if(!(ebx = (A18 >> 4) - 1)) {
        do {
            L004413A0(A8, edi, esi);
            edi = edi + 0x10;
            esi = esi + 0x10;
        } while(ebx = ebx - 1);
    }
    ebx = A18 & 0xf;
    L004342A0(esi, edi, ebx);
    *Ac = esi;
    eax = A10;
    *eax = ebx;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x004309B2 - 0x004309BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004309B2()
{



}

/*	Procedure: 0x004309C0 - 0x00430A6D
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00431F8B()
 *		L0043216C()
 */

L004309C0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    edx = A8;
    (save)edi;
    esp = esp - 0x10;
    ebx = Ac;
    *(ebp - 0x1c) = *(edx + 0xac);
    esi = *(edx + 0xb0);
    if(ebx != 0) {
        if(ebx >= esi) {
            esp = ebp - 0xc;
            (restore)edi;
            return 0;
        }
        *(ebp - 0x1c) = *(ebp - 0x1c) + ebx;
        esi = esi - ebx;
    }
    if(A14 > esi) {
        A14 = esi;
    }
    esi = A14;
    esi :: 0;
    *(ebp - 0x18) = A10;
    *(ebp - 0x14) = 0;
    if(!(edi = edx + 0xb4)) {
        *(ebp - 0x10) = edx;
        *(ebp - 0x10) = *(ebp - 0x10) + 0x4d4;
        do {
            ecx = *edi;
            ebx = *(edi + 4);
            if(*(ebp - 0x1c) != 0) {
                eax = *(ebp - 0x1c) >= ebx ? ebx : *(ebp - 0x1c);
                *(ebp - 0x1c) = *(ebp - 0x1c) - eax;
                ecx = ecx + eax;
                ebx = ebx - eax;
            }
            if(ebx >= esi) {
                ebx = esi;
            }
            edx = ebp - 0x14;
            L004308F0( *(ebp - 0x10), ebp - 0x18, edx, ecx, ebx);
            esi = esi - ebx;
            edi = edi + 8;
        } while(esi != 0);
    }
    esp = ebp - 0xc;
    (restore)edi;
    return A14;
}

/*	Procedure: 0x00430A6E - 0x00430A6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430A6E()
{



}

/*	Procedure: 0x00430A70 - 0x00430B34
 *	Argument size: 8
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L00431F8B()
 *		L0043216C()
 *		L00432250()
 */

L00430A70(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = Ac;
    ecx = *(A8 + 0xb0);
    if(esi > ecx) {
        esi = ecx;
    }
    ecx = ecx - esi;
    *(A8 + 0xb0) = ecx;
    eax = A8;
    esi = esi + *(eax + 0xac);
    *(ebp - 0x14) = eax;
    *(ebp - 0x14) = *(ebp - 0x14) + 0xb4;
    *(ebp - 0x10) = *(eax + 0xa8);
    *(ebp - 0x10) = *(ebp - 0x10) << 3;
    eax = *(ebp - 0x14);
    *(ebp - 0x10) = *(ebp - 0x10) + eax;
    ebx = eax;
    do {
        edi = *(ebx + 4);
        if(esi < edi) {
            break;
        }
        L0042E3E0(ebx);
        ebx = ebx + 8;
        esi = esi - edi;
    } while(ebx < *(ebp - 0x10));
    eax = A8;
    *(eax + 0xac) = esi;
    if(ebx != *(ebp - 0x14)) {
        eax = *(ebp - 0x10) - ebx;
        asm("cdq");
        esi = eax + (edx & 7) >> 3;
        *(A8 + 0xa8) = esi;
        L004342A0( *(ebp - 0x14), ebx, esi * 8);
        *( *(ebp - 0x14) + esi * 8) = -1;
        eax = *(ebp - 0x14);
        *(eax + esi * 8 + 4) = -1;
    }
}

/*	Procedure: 0x00430B35 - 0x00430B3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430B35()
{



}

/*	Procedure: 0x00430B40 - 0x00430D41
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L00430D50()
 *		L00430F40()
 */

L00430B40(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebp = A1c >> 2;
    edx = 0;
    eax = A14;
    if(ebp > 0) {
        ebp :: 8;
        if(!(ecx = ebp - 8)) {
            do {
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4) = *(A18 + edx * 4) ^ (esi | eax << 0x18);
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4 + 4) = *(A18 + edx * 4 + 4) ^ (esi | eax << 0x18);
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4 + 8) = *(A18 + edx * 4 + 8) ^ (esi | eax << 0x18);
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4 + 0xc) = *(A18 + edx * 4 + 0xc) ^ (esi | eax << 0x18);
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4 + 0x10) = *(A18 + edx * 4 + 0x10) ^ (esi | eax << 0x18);
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4 + 0x14) = *(A18 + edx * 4 + 0x14) ^ (esi | eax << 0x18);
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4 + 0x18) = *(A18 + edx * 4 + 0x18) ^ (esi | eax << 0x18);
                eax = eax + eax + 18552;
                esi = eax << 8 & 16711680;
                esi = esi | eax >> 0x18;
                esi = esi | eax >> 8 & 65280;
                *(A18 + edx * 4 + 0x1c) = *(A18 + edx * 4 + 0x1c) ^ (esi | eax << 0x18);
                edx = edx + 8;
            } while(edx < ecx);
        }
        do {
            eax = eax + eax + 18552;
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            ecx = ecx | eax >> 8 & 65280;
            *(A18 + edx * 4) = *(A18 + edx * 4) ^ (ecx | eax << 0x18);
            edx = edx + 1;
        } while(edx < ebp);
    }
}

/*	Procedure: 0x00430D42 - 0x00430D4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430D42()
{



}

/*	Procedure: 0x00430D50 - 0x00430F32
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0043105A()
 */

L00430D50(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    (save)edi;
    esp = esp - 0x40;
    eax = *(A8 + 0x28) & 0xff;
    *(ebp - 0x44) = eax;
    esi = *(ebp - 0x44) + 0x27 & -4;
    *(ebp - 0x2c) = esp;
    *(ebp - 0x48) = esi;
    *(ebp - 0x4c) = L0042E310(esi);
    goto L00430da3;
    L00430730(A8);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x38) != 0) {
        (save)-1;
        ecx = *(ebp - 0x40);
        *(ebp - 0x38)();
    }
    esp = *(ebp - 0x2c);
L00430da3:
    *( *(ebp - 0x4c) + esi - 4) = 0;
    eax = L00435380();
    *(ebp - 0x10) = eax;
    eax = *(ebp - 0x10) << 8 & 16711680;
    eax = eax | *(ebp - 0x10) >> 0x18;
    eax = eax | *(ebp - 0x10) >> 8 & 65280;
    eax = eax | *(ebp - 0x10) << 0x18;
    *( *(ebp - 0x4c)) = eax;
    *( *(ebp - 0x4c) + 4) = 1347965989;
    edx = *(A8 + 4);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    edi = edx;
    edx = edx << 0x18;
    ecx = ecx | edi >> 8 & 65280 | edx;
    *( *(ebp - 0x4c) + 8) = ecx;
    *( *(ebp - 0x4c) + 0xc) = 1;
    edx = *(ebp - 0x4c);
    *(edx + 0xd) = *(A8 + 0x99) & 0xff;
    *( *(ebp - 0x4c) + 0xe) = 0;
    ecx = *(ebp - 0x4c);
    *(ecx + 0xf) = *(ebp - 0x44);
    *( *(ebp - 0x4c) + 0x10) = 0;
    *( *(ebp - 0x4c) + 0x14) = 0;
    ecx = *(ebp - 0x10);
    edi = ( *(A8 + 0xa0) & 65535) - 0x13;
    eax = ecx;
    edx = 0;
    *(A8 + 0x9c) = edi / edi % edi / edi;
    edx = *(A8 + 0x9c) & 65535;
    eax = edx;
    edx = edx >> 8;
    eax = eax << 8 | edx;
    *( *(ebp - 0x4c) + 0x16) = ax;
    eax = *(A8 + 0x68);
    if(eax == *(A8 + 0x74)) {
        ecx = *(A8 + 0x6c);
        if(ecx == *(A8 + 0x78)) {
            edx = *(A8 + 0x70);
            if(edx == *(A8 + 0x7c)) {
                *(A8 + 0x70) = *(A8 + 0x70) + 1;
            }
        }
    }
    eax = *(ebp - 0x4c);
    *(eax + 0x18) = *(A8 + 0x68);
    ecx = *(ebp - 0x4c);
    *(ecx + 0x1c) = *(A8 + 0x6c);
    edx = *(ebp - 0x4c);
    *(edx + 0x20) = *(A8 + 0x70);
    L004342A0( *(ebp - 0x4c) + 0x24, A8 + 0x29, *(ebp - 0x44));
    L00430B40( *(ebp - 0x10), *(ebp - 0x4c) + 4, esi - 4);
    *(ebp - 0x14) = esp;
    eax = L00433030( *(A8 + 0xc), ebp - 0x4c, *(ebp - 0x48), 0);
    goto L00430f2b;
    L00430730(A8);
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x20) != 0) {
        ecx = *(ebp - 0x28);
        eax = *(ebp - 0x20)(-1);
    }
    esp = *(ebp - 0x14);
L00430f2b:
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00430F33 - 0x00430F3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00430F33()
{



}

/*	Procedure: 0x00430F40 - 0x00431059
 *	Argument size: 8
 *	Local size: 68
 *	Save regs size: 8
 *	Called by:
 *		L0043105A()
 */

L00430F40(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff4;



    edx = ebp - 0x4c;
    (save)0x2c;
    L00434150(edx);
    (restore)ecx;
    if(Ac == 0x10) {
        eax = ebp - 0x4c;
        Vffffffdc = 0x10;
        L004304A0(A8, A8 + 0x74, eax);
        ebx = *(A8 + 0x9e) & 65535;
        ecx = ( *(A8 + 0xa0) & 65535) - 0x14;
        if((bx & 65535) <= ecx) {
            L004342A0( & Vffffffc8, (bx & 65535) + *(A8 + 0xa4), 0x14);
        }
    } else {
        Vffffffdc = Ac;
        ecx = *(A8 + 0x78) ^ 538933136;
        edx = ecx << 8 & 16711680;
        eax = ecx;
        ebx = ecx;
        edx = edx | eax >> 0x18;
        edx = edx | ebx >> 8 & 65280;
        *(ebp - 0x4c) = edx | ecx << 0x18;
    }
    edx = *(ebp - 0x4c);
    ecx = edx;
    eax = ebp - 0x48;
    ecx = ecx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    L00430B40(ecx | edx << 0x18, eax, 0x28);
    Vfffffff4 = esp;
    eax = L00433130( *(A8 + 0xc), ebp - 0x4c, 0x2c, 0);
    goto L00431053;
    L00430730(A8);
    eax = L004234F0(0, 0, 0);
    if(Vffffffe8 != 0) {
        ecx = Vffffffe0;
        Vffffffe8(-1);
    }
    esp = *(ebp - 0xc);
L00431053:
}

/*	Procedure: 0x0043105A - 0x0043125E
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L0043105A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    ebx = Ac;
    edx = *(ebx + 4);
    eax = edx << 8 & 16711680;
    edi = edx;
    ecx = edx;
    edi = edi >> 0x18;
    eax = eax | edi;
    eax = eax | ecx >> 8 & 65280;
    if((eax | edx << 0x18) != 626284624) {
        ebx = 262257;
    } else {
        ecx = *(ebx + 0xc) & 0xff;
        if(ecx != 1) {
            if(ecx > 1) {
                edi = 262259;
                bl = 4;
                goto L00431218;
            }
            edi = 262258;
            bl = 3;
            goto L00431218;
        }
        ecx = *(ebx + 0xd) & 0xff;
        *(A8 + 0x9a) = cl;
        edi = *(A8 + 0x88);
        if(edi != 0) {
            eax = *(ebx + 8);
            ecx = eax;
            edx = *(A8 + 0x9a) & 0xff;
            ecx = ecx << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            ecx = ecx | eax >> 8 & 65280;
            edi = *edi( *(A8 + 0x8c), A8, ecx | eax << 0x18, edx);
            if(edi == 0) {
                goto L004311c0;
            }
            bl = 2;
            if(edi == 262259) {
                bl = 4;
                goto L00431218;
            }
            if(edi != 262258) {
                goto L00431218;
            }
            bl = 3;
            goto L00431218;
        }
        eax = *(ebx + 8);
        edi = eax << 8 & 16711680;
        edx = eax;
        ecx = eax;
        edi = edi | edx >> 0x18;
        edi = edi | ecx >> 8 & 65280;
        if(*(A8 + 4) != (edi | eax << 0x18)) {
            edi = 262257;
            bl = 2;
            goto L00431218;
        }
        ecx = *(A8 + 0x99) & 0xff;
        edx = *(A8 + 0x9a) & 0xff;
        if(dl != cl) {
            if(dl > cl) {
                edi = 262259;
                bl = 4;
                goto L00431218;
            }
            edi = 262258;
            bl = 3;
            goto L00431218;
        }
L004311c0:
        edi = *(ebx + 0x14) & 65535;
        edx = edi << 8;
        edi = edi >> 8;
        edx = ((edx | edi) & 65535) + 0x27;
        eax = ( *(ebx + 0xe) & 0xff) + edx;
        eax = eax + ( *(ebx + 0xf) & 0xff) & -4;
        if(eax > 0x800) {
            ebx = 262261;
        } else {
            return;
        }
    }
    L00430730(A8);
    L00429610(ebx);
    esp = ebp - 0xc;
    return 0;
L00431218:
    *(A8 + 0x94) = *(A8 + 0x94) | 4;
    *(A8 + 0x98) = 8;
    if(( *(A8 + 0x98) & 0xff) == 4) {
        L00430D50(A8);
    }
    L00430F40(A8, bl & 0xff);
    L00432C00( *(A8 + 0xc));
    L00429610(edi);
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0043125F - 0x0043125F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043125F()
{



}

/*	Procedure: 0x00431260 - 0x0043176F
 *	Argument size: 4
 *	Local size: 2132
 *	Save regs size: 12
 *	Called by:
 *		L0040853A()
 */

L00431260(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  V84c;



    esp = esp & -8;
    ebx = & V84c;
    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    *(ebx + -2108) = L00430760(A8);
    ecx = ( *(A8 + 0x98) & 0xff) - 1;
    if(ecx <= 4) {
        switch(ecx) {
            case 0:
                goto L004312b7;
            case 1:
                goto L004312e3;
            case 2:
                goto L00431469;
            case 3:
                goto L004312e3;
            case 4:
                goto L004315c3;
        }
L004312b7:
        if(L00432A60( *(A8 + 0xc)) == 0x10) {
            *(A8 + 0x94) = *(A8 + 0x94) | 2;
            L00430D50(A8);
            *(A8 + 0x98) = 2;
            goto L0043175b;
L004312e3:
            edi = *(A8 + 0xb0);
            if(edi >= 0x24) {
                L00430850(A8, 0, ebx + -2048, 0x24);
                eax = *(ebx + -2048);
                ecx = eax;
                edx = ebx + -2044;
                ecx = ecx << 8 & 16711680;
                ecx = ecx | eax >> 0x18;
                ecx = ecx | eax >> 8 & 65280;
                eax = L00430B40(ecx | eax << 0x18, edx, 0x20);
                *(ebx + -2052) = eax;
                eax = L00431060(A8, ebx + -2048);
                *(ebx + -2056) = eax;
                if(edi >= eax) {
                    edi = ebx + -2012;
                    L00430850(A8, 0x24, edi, eax - 0x24);
                    L00430A70(A8, *(ebx + -2056));
                    L00430B40( *(ebx + -2052), edi, *(ebx + -2056) - 0x24);
                    edi = ebx + -2048;
                    edx = *(edi + 0x14) & 65535;
                    ecx = edx;
                    edx = edx >> 8;
                    ecx = ((ecx << 8 | edx) & 65535) + edi;
                    eax = ( *(edi + 0xe) & 0xff) + ecx;
                    edx = *(edi + 0xf) & 0xff;
                    eax = eax + 0x24;
                    if(edx < 0x1f) {
                        goto L004313d2;
                    }
                    L00428F50(A8 + 0x48, eax, 0x1f);
                    ecx = *(edi + 0x16) & 65535;
                    edx = ecx;
                    ecx = ecx >> 8;
                    *(A8 + 0x9e) = edx << 8 | ecx;
                    *(A8 + 0x74) = *(edi + 0x18);
                    *(A8 + 0x78) = *(edi + 0x1c);
                    *(A8 + 0x7c) = *(edi + 0x20);
                    if(*(A8 + 0x98) != 2) {
                        goto L00431456;
                    }
                    eax = *(A8 + 0x68);
                    if(eax != *(A8 + 0x74)) {
                        goto L00431440;
                    }
                    edi = *(A8 + 0x6c);
                    if(edi != *(A8 + 0x78)) {
                        goto L00431440;
                    }
                    eax = *(A8 + 0x70);
                    if(eax != *(A8 + 0x7c)) {
                        goto L00431440;
                    }
                    L00430730(A8);
                    L00429610(262260);
                    L00430F40(A8, 0x10);
                    *(A8 + 0x98) = 3;
                    goto L0043175b;
                    L00430D50(A8);
                    *(A8 + 0x98) = 5;
                    goto L0043175b;
L00431469:
                    if(*(A8 + 0xb0) >= 0x2c) {
                        L00430850(A8, 0, ebx + -2048, 0x2c);
                        L00430A70(A8, 0x2c);
                        ecx = *(ebx + -2048);
                        edx = ecx;
                        eax = ebx + -2044;
                        edx = edx << 8 & 16711680;
                        edx = edx | ecx >> 0x18;
                        edx = edx | ecx >> 8 & 65280;
                        L00430B40(edx | ecx << 0x18, eax, 0x28);
                        eax = ebx + -2048;
                        *(ebx + -2056) = eax;
                        eax = *(eax + 0x28) & 0xff;
                        *(ebx + -2052) = eax;
                        if(eax == 0x10) {
                            goto L00431530;
                        }
                        L00430730(A8);
                        *(A8 + 0x94) = *(A8 + 0x94) | 8;
                        edx = *(ebx + -2052) - 1;
                        if(edx > 3) {
                            goto L00431524;
                        }
                        goto ( *(edx * 4 + 0x4764cc));
                        ecx = 262256;
                        goto L00431529;
                        ecx = 262258;
                        goto L00431529;
                        ecx = 262259;
                        goto L00431529;
                        L00429610(262257);
                        L00434380( *(ebx + -2056) + 0x14, ( *(A8 + 0x9c) & 65535) + *(A8 + 0xa4), 0x14);
                        if(al != 0) {
                            goto L00431568;
                        }
                        L00430730(A8);
                        L00429610(262260);
                        ecx = ebx + -2128;
                        L004304A0(A8, A8 + 0x68, ecx);
                        L00434380( *(ebx + -2056), ebx + -2128, 0x14);
                        if(al != 0) {
                            goto L004315b0;
                        }
                        L00430730(A8);
                        *(A8 + 0x94) = *(A8 + 0x94) | 8;
                        L00429610(262256);
                        *(A8 + 0x98) = 6;
                        *(A8 + 0x94) = *(A8 + 0x94) | 0x10;
                        goto L0043175b;
L004315c3:
                        if(*(A8 + 0xb0) >= 0x2c) {
                            L00430850(A8, 0, ebx + -2048, 0x2c);
                            L00430A70(A8, 0x2c);
                            ecx = *(ebx + -2048);
                            edi = ecx;
                            edx = ebx + -2044;
                            edi = edi << 8 & 16711680;
                            edi = edi | ecx >> 0x18;
                            edi = edi | ecx >> 8 & 65280;
                            L00430B40(edi | ecx << 0x18, edx, 0x28);
                            *(ebx + -2052) = 0;
                            edi = ebx + -2048;
                            L00434380(edi + 0x14, ( *(A8 + 0x9c) & 65535) + *(A8 + 0xa4), 0x14);
                            if(al == 0) {
                                goto L004316d0;
                            }
                            *(A8 + 0x90) = edi;
                            *(ebx + -2060) = esp;
                            edi = *(A8 + 0x80);
                            if(edi == 0) {
                                goto L004316c6;
                            }
                            *edi( *(A8 + 0x84), A8, A8 + 0x48, 0);
                            *(ebx + -2052) = al;
                            goto L004316c6;
                            *(A8 + 0x90) = 0;
                            L00430730(A8);
                            L004234F0(0, 0, 0);
                            if(*(ebx + -2072) == 0) {
                                goto L004316c0;
                            }
                            (save)-1;
                            ecx = *(ebx + -2080);
                            *(ebx + -2072)();
                            esp = *(ebx + -2060);
                            *(A8 + 0x90) = 0;
                            *(ebx + -2084) = esp;
                            if(*(ebx + -2052) == 0) {
                                goto L004316e6;
                            }
                            eax = 0x10;
                            goto L004316eb;
                            L00430F40(A8, 1);
                            goto L0043172b;
                            L00430730(A8);
                            L004234F0(0, 0, 0);
                            if(*(ebx + -2096) == 0) {
                                goto L00431725;
                            }
                            (save)-1;
                            ecx = *(ebx + -2104);
                            *(ebx + -2096)();
                            esp = *(ebx + -2084);
                            if(*(ebx + -2052) == 0) {
                                goto L00431744;
                            }
                            *(A8 + 0x94) = *(A8 + 0x94) | 0x10;
                            *(A8 + 0x98) = 6;
                            goto L0043175b;
                            *(A8 + 0x94) = *(A8 + 0x94) | 0xc;
                            *(A8 + 0x98) = 8;
                            L00432C00( *(A8 + 0xc));
                        }
                    }
                }
            }
        }
    }
L0043175b:
    return *(ebx + -2108);
}

/*	Procedure: 0x00431770 - 0x0043179F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004071C0()
 */

L00431770(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    if(A8 == 0) {
        goto L00431783;
    }
    if(*ebx == 715279084) {
        goto L0043178e;
    }
    L00429610(65561);
    return *(ebx + 0xb0);
}

/*	Procedure: 0x004317A0 - 0x004319BF
 *	Argument size: 20
 *	Local size: 28
 *	Save regs size: 12
 *	Called by:
 *		L00408060()
 *		L0040853A()
 */

L004317A0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V6;
	/* unknown */ void  V8;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffffc;



    esp = esp & -8;
    esi = Ac;
    if(A8 == 0) {
        goto L004317be;
    }
    if(*edi == 715279084) {
        goto L004317c9;
    }
    L00429610(65561);
    if(*(edi + 0x18) == 0) {
        goto L004317da;
    }
    L00429610(65539);
    if(*(edi + 0x98) != 6) {
        goto L00431960;
    }
    V10 = *(edi + 0xb0);
    if(*(edi + 0xb0) < 0x10) {
        goto L00431960;
    }
    L004309C0(edi, 0, & Vfffffffc, 0x10);
    *(edi + 8)( & Vfffffffc, 0);
    if((V8 << 8 & 16711680 | V8 >> 0x18 | V8 >> 8 & 65280 | V8 << 0x18) > *(edi + 0x10)) {
        goto L00431859;
    }
    if(((V6 & 65535) << 8 | (V6 & 65535) >> 8) == 0) {
        goto L0043186b;
    }
    L00430730(edi);
    L00429610(262261);
    if(esi == 0) {
        goto L00431871;
    }
    *esi = ebx;
    if(V10 < (ebx + 0xf & -16) + 0x10) {
        goto L00431960;
    }
    edx = *esp << 8 & 16711680;
    eax = esi;
    ecx = esi;
    edx = edx | eax >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    if(edx = edx | esi << 0x18) {
        goto L004319a0;
    }
    if(A14 == 0) {
        goto L004318bc;
    }
    *A14 = edx;
    if(ecx = V0 << 8 & 16711680 | V0 >> 0x18 | V0 >> 8 & 65280 | V0 << 0x18) {
        goto L004319a0;
    }
    if(A10 == 0) {
        goto L004318f5;
    }
    *A10 = ecx;
    eax = (V4 & 65535) << 8 | (V4 & 65535) >> 8;
    if(A18 == 0) {
        goto L0043191b;
    }
    cl = 0;
    *A18 = cl;
    if(ebx != 0) {
        goto L00431933;
    }
    *(edi + 0x18) = 0x10;
    return 0x10;
    L0042E310(ebx);
    esi = eax;
    *(edi + 0x14) = esi;
    *(edi + 0x18) = ebx + 0x10;
    L004309C0(edi, 0x10, esi, ebx);
    esp = ebp - 0xc;
    return esi;
    if(esi == 0) {
        goto L0043196a;
    }
    *esi = 0;
    if(A10 == 0) {
        goto L00431979;
    }
    *A10 = 0;
    if(A14 == 0) {
        goto L00431988;
    }
    *A14 = 0;
    if(A18 == 0) {
        goto L00431994;
    }
    *A18 = 0;
    esp = ebp - 0xc;
    return 0;
    L00430730(edi);
    L00429610(262260);
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x004319C0 - 0x00431A06
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00408060()
 *		L0040853A()
 */

L004319C0(A8)
/* unknown */ void  A8;
{



    if(A8 != 0) {
        goto L004319d1;
    }
    return;
    if(*A8 == 715279084) {
        goto L004319e0;
    }
    esp = ebp - 4;
    return;
    ecx = *(A8 + 0x18);
    if(ecx == 0) {
        goto L004319f7;
    }
    L00430A70(A8, ecx);
    *(A8 + 0x18) = 0;
    eax = L0042E3E0(A8 + 0x14);
    esp = ebp - 4;
}

/*	Procedure: 0x00431A10 - 0x00431C15
 *	Argument size: 20
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00401730()
 *		L00401A50()
 *		L00401B20()
 *		L004020C0()
 *		L00402170()
 *		L004021D0()
 *		L004021F8()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L00403A90()
 *		L00403D00()
 *		L00404010()
 *		L004051B0()
 *		L00405E70()
 *		L00406950()
 *		L00408140()
 *		L00409AF0()
 *		L00409B60()
 *		L00409E60()
 *		L0040AA30()
 *		L0040AD20()
 *		L0040B3A0()
 *		L0040B7E0()
 *		L0040DB20()
 *		L0040DF50()
 *		L0040E5B0()
 *		L0040E700()
 *		L0040EE00()
 *		L0040F110()
 *		L0040F6E0()
 *		L0040F7B0()
 *		L0040FAE0()
 *		L00410250()
 *		L004105F0()
 *		L00410960()
 *		L00410EB0()
 *		L004110F0()
 *		L00412E50()
 *		L00412EE0()
 *		L004157B0()
 *		L00415B9D()
 *		L00416000()
 *		L00416790()
 *		L00416F00()
 *		L00417EC0()
 *		L00418850()
 *		L00418DBB()
 *		L00431C20()
 */

L00431A10(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = Ac;
    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    if(ebx == 0) {
        L00429610(65538);
    }
    if(!( *(A8 + 0x94) & 0x10)) {
        L00429610(65539);
    }
    *(ebp - 0x10) = A18;
    *(ebp - 0x10) = *(ebp - 0x10) + 0xf;
    *(ebp - 0x10) = *(ebp - 0x10) & -16;
    *(ebp - 0x10) = *(ebp - 0x10) + 0x10;
    *(ebp - 0x18) = L0042E310( *(ebp - 0x10));
    if(A10 != 0) {
        eax = 1;
    } else {
        A10 = *(A8 + 0x1c);
        if(!(A10 = A10 + 1)) {
            A10 = 1;
        }
        *(A8 + 0x1c) = A10;
        eax = 0;
    }
    ecx = ebx;
    *( *(ebp - 0x18)) = A10 << 8 & 16711680 | A10 >> 0x18 | A10 >> 8 & 65280 | A10 << 0x18;
    ecx = ecx << 8 & 16711680;
    ecx = ecx | ebx >> 0x18;
    ecx = ecx | ebx >> 8 & 65280;
    ecx = ecx | ebx << 0x18;
    *( *(ebp - 0x18) + 4) = ecx;
    edx = *(ebp - 0x18);
    esi = eax << 0x10;
    ecx = eax << 0x18 & 16711680;
    ecx = ecx | esi >> 0x18;
    *(edx + 8) = ecx | esi >> 8 & 65280;
    edx = *(ebp - 0x18);
    *(edx + 0xc) = A18 << 8 & 16711680 | A18 >> 0x18 | A18 >> 8 & 65280 | A18 << 0x18;
    *(A8 + 8)( *(ebp - 0x18), 1);
    *(ebp - 0x14) = A8;
    *(ebp - 0x14) = *(ebp - 0x14) + 0x4d4;
    L004406B0( *(ebp - 0x14), *(ebp - 0x18), *(ebp - 0x18));
    ebx = *(ebp - 0x18);
    ebx = ebx + 0x10;
    esi = A14;
    if(!(edi = (A18 >> 4) - 1)) {
        do {
            L004406B0( *(ebp - 0x14), esi, ebx);
            esi = esi + 0x10;
            ebx = ebx + 0x10;
        } while(edi = edi - 1);
    }
    if(!(eax = A18 & 0xf)) {
        ecx = A10 * 1103515245 + 12345;
        *ebx = ecx;
        *(ebx + 4) = ecx;
        *(ebx + 8) = ecx;
        *(ebx + 0xc) = *(ebx + 8);
        L004342A0(ebx, esi, eax);
        L004406B0( *(ebp - 0x14), ebx, ebx);
    }
    edx = ebp - 0x18;
    L00433030( *(A8 + 0xc), edx, *(ebp - 0x10), 0);
    return A10;
}

/*	Procedure: 0x00431C16 - 0x00431C1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00431C16()
{



}

/*	Procedure: 0x00431C20 - 0x00431CAD
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00402D10()
 *		L00404640()
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L00405D00()
 *		L00405DF0()
 *		L00406020()
 *		L00408060()
 *		L0040AFD0()
 *		L0040B130()
 *		L0040B590()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E830()
 *		L0040F570()
 *		L0040F8A0()
 *		L004102F0()
 *		L004104E0()
 *		L004107E0()
 *		L00418850()
 */

L00431C20(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 8;
    eax = A14;
    if(A8 == 0) {
        return;
    }
    esi = A10 << 8 & 16711680;
    esi = esi | A10 >> 0x18;
    esi = esi | A10 >> 8 & 65280;
    ebx = eax << 8 & 16711680;
    esi = esi | A10 << 0x18;
    ebx = ebx | eax >> 0x18;
    ebx = ebx | eax >> 8 & 65280;
    ebx = ebx | eax << 0x18;
    edx = ebp - 0x14;
    *(ebp - 0x14) = esi;
    *(ebp - 0x10) = ebx;
    eax = L00431A10(A8, 1, Ac, edx, 8);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00431CAE - 0x00431CAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00431CAE()
{



}

/*	Procedure: 0x00431CB0 - 0x00431E36
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00406950()
 */

L00431CB0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x14;
    edi = A10;
    esi = A18;
    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    if(!( *(A8 + 0x94) & 0x10)) {
        L00429610(65539);
    }
    if(edi != 0) {
        *(ebp - 0x10) = 1;
    } else {
        if(!(edi = *(A8 + 0x1c) + 1)) {
            edi = 1;
        }
        *(A8 + 0x1c) = edi;
        *(ebp - 0x10) = 0;
    }
    if(!(esi & -65536)) {
        L00429610(262261);
    }
    *(A8 + 0x9b) = ~A14 & 0xf;
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    edx = edx | edi >> 8 & 65280;
    *(ebp - 0x20) = edx | edi << 0x18;
    *(ebp - 0x1c) = Ac << 8 & 16711680 | Ac >> 0x18 | Ac >> 8 & 65280 | Ac << 0x18;
    edx = *(ebp - 0x10) << 0x10 | esi;
    esi = edx << 8 & 16711680;
    esi = esi | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    *(ebp - 0x18) = esi | ecx >> 8 & 65280 | edx;
    *(ebp - 0x14) = A14 << 8 & 16711680 | A14 >> 0x18 | A14 >> 8 & 65280 | A14 << 0x18;
    *(A8 + 8)(ebp - 0x20, 1);
    esi = ebp - 0x20;
    ecx = esi;
    L004406B0(A8 + 0x4d4, ecx, esi);
    L00433130( *(A8 + 0xc), ebp - 0x20, 0x10, 0);
    esp = ebp - 0xc;
    return edi;
}

/*	Procedure: 0x00431E37 - 0x00431E3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00431E37()
{



}

/*	Procedure: 0x00431F23 - 0x00431F2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00431F23()
{



}

/*	Procedure: 0x00431F8B - 0x0043216B
 *	Argument size: 20
 *	Local size: 28
 *	Save regs size: 12
 */

L00431F8B(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V6;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffffc;



    esp = esp & -8;
    esi = Ac;
    ebx = A14;
    if(A8 == 0 || *A8 != 715279084) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x18) != 0) {
        eax = L00429610(65539);
    }
    if(*(A8 + 0x98) == 6 && *(A8 + 0xb0) >= 0x10) {
        L004309C0(A8, 0, & Vfffffffc, 0x10);
        *(A8 + 8)( & Vfffffffc, 0);
        ecx = V8;
        eax = V6 & 65535;
        edx = eax;
        eax = eax >> 8;
        edx = edx << 8 | eax;
        eax = dx & 65535;
        V10 = eax;
        edx = ecx << 8 & 16711680;
        edx = edx | ecx >> 0x18;
        edx = edx | ecx >> 8 & 65280;
        edx = edx | ecx << 0x18;
        Vc = 0;
        edx = edx | Vc;
        eax = V10;
        if(esi != 0) {
            *esi = edx;
            *(esi + 4) = eax;
        }
        *(A8 + 0x20) = edx;
        *(A8 + 0x24) = eax;
        esi = *esp;
        edx = esi << 8 & 16711680;
        eax = esi;
        ecx = esi;
        edx = edx | eax >> 0x18;
        edx = edx | ecx >> 8 & 65280;
        if(edx = edx | esi << 0x18) {
            goto L00432150;
        }
        if(ebx != 0) {
            *ebx = edx;
        }
        eax = V0;
        ebx = eax << 8 & 16711680;
        ecx = eax;
        edx = eax;
        ebx = ebx | ecx >> 0x18;
        ebx = ebx | edx >> 8 & 65280;
        if(ebx = ebx | eax << 0x18) {
            goto L00432150;
        }
        if(A10 != 0) {
            *A10 = ebx;
        }
        esi = V4 & 65535;
        edx = esi << 8;
        esi = esi >> 8;
        edx = edx | esi;
        if(A18 != 0) {
            ebx = dx & 65535;
            cl = 0;
            *A18 = cl;
        }
        eax = L00430A70(A8, 0x10);
        return 1;
    }
    if(esi != 0) {
        *esi = 0;
        *(esi + 4) = 0;
    }
    if(A10 != 0) {
        eax = A10;
        *eax = 0;
    }
    if(ebx != 0) {
        *ebx = 0;
    }
    if(A18 != 0) {
        eax = A18;
        *eax = 0;
    }
    esp = ebp - 0xc;
    return 0;
L00432150:
    L00430730(A8);
    eax = L00429610(262260);
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0043216C - 0x0043224F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L0043216C(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0xc;
    ebx = A10;
    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    if(!(edi = *(A8 + 0xb0) & -16)) {
        *(ebp - 0x14) = *(A8 + 0x20);
        eax = *(A8 + 0x24);
        *(ebp - 0x18) = eax;
        edx = edi;
        if(0 > eax) {
            goto L004321e0;
        }
        != ? 0x4321c0 : ;
        if(edx >= *(ebp - 0x14)) {
            goto L004321e0;
        }
        if(edi >= Ac && !(edi = edi & -4096)) {
            *ebx = edi;
            edx = 0;
            *(ebp - 0x14) = *(ebp - 0x14) - edi;
            asm("sbb [ebp-0x18],edx");
            goto L004321fd;
L004321e0:
            edi = *(ebp - 0x14);
            if(edi != 0) {
                *(ebp - 0x14) = 0;
                *(ebp - 0x18) = 0;
                *ebx = edi;
                edi = edi + 0xf & -16;
L004321fd:
                ebx = L0042E310(edi + 0xfff & -4096);
                L004309C0(A8, 0, ebx, edi);
                L00430A70(A8, edi);
                *(A8 + 0x20) = *(ebp - 0x14);
                *(A8 + 0x24) = *(ebp - 0x18);
                esp = ebp - 0xc;
                return ebx;
            }
        }
    }
    *ebx = 0;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00432250 - 0x0043232F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L00432250(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0xc;
    ebx = A10;
    if(A8 == 0 || *A8 != 715279084) {
        L00429610(65561);
    }
    if(!(edi = *(A8 + 0xb0) & -16)) {
        *(ebp - 0x14) = *(A8 + 0x20);
        eax = *(A8 + 0x24);
        *(ebp - 0x18) = eax;
        edx = edi;
        if(0 > eax) {
            goto L004322c0;
        }
        != ? 0x4322a0 : ;
        if(edx >= *(ebp - 0x14)) {
            goto L004322c0;
        }
        if(edi >= Ac && !(edi = edi & -4096)) {
            *ebx = edi;
            edx = 0;
            *(ebp - 0x14) = *(ebp - 0x14) - edi;
            asm("sbb [ebp-0x18],edx");
            goto L004322dd;
L004322c0:
            edi = *(ebp - 0x14);
            if(edi != 0) {
                *(ebp - 0x14) = 0;
                *(ebp - 0x18) = 0;
                *ebx = edi;
                edi = edi + 0xf & -16;
L004322dd:
                ebx = L0042E310(edi + 0xfff & -4096);
                L00430850(A8, 0, ebx, edi);
                L00430A70(A8, edi);
                *(A8 + 0x20) = *(ebp - 0x14);
                *(A8 + 0x24) = *(ebp - 0x18);
                esp = ebp - 0xc;
                return ebx;
            }
        }
    }
    *ebx = 0;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00432330 - 0x0043234E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L00432330(A4)
/* unknown */ void  A4;
{



    eax = M0048127c;
    if(eax != 0) {
        do {
            if(*(eax + 0x10) == A4) {
                goto L00432345;
            }
            eax = *eax;
        } while(eax != 0);
        goto L0043234c;
L00432345:
        return;
    }
L0043234c:
    return 0;
}

/*	Procedure: 0x0043234F - 0x0043234F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043234F()
{



}

/*	Procedure: 0x00432350 - 0x004323D5
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004328E0()
 *		L00432C80()
 *		L00433580()
 */

L00432350()
{



    (save)ebp;
    ebp = esp;
    (save)esi;
    (save)edi;
    esp = esp - 0xb0;
    esi = L0045CBFC();
    eax = 0;
    edi = ebp + -184;
    ecx = 0x16;
    asm("rep stosd");
    *(ebp + -184) = L0042F780(esi);
    *(ebp + -168) = esi;
    eax = 0;
    do {
        *(ebp + eax - 0x60) = *(ebp + eax + -184);
        *(ebp + eax - 0x5c) = *(ebp + eax + -180);
        *(ebp + eax - 0x58) = *(ebp + eax + -176);
        *(ebp + eax - 0x54) = *(ebp + eax + -172);
        eax = eax + 0x10;
    } while(eax < 0x50);
    *(ebp - 0x10) = *(ebp - 0x68);
    ecx = *(ebp - M00000064);
    *(ebp - 0xc) = ecx;
    (save)0;
    (save)ebp - 0x60;
    (save)"!SError!!";
    L004234F0();
}

/*	Procedure: 0x0043243B - 0x0043244B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043243B()
{



    return L0045CC02();
}

/*	Procedure: 0x0043244C - 0x0043244F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043244C()
{



}

/*	Procedure: 0x00432450 - 0x00432590
 *	Argument size: -448
 *	Local size: 448
 *	Save regs size: 0
 *	Called by:
 *		L00409830()
 */

L00432450()
{
	WNDCLASSEXA Vfffffe40;
	/* unknown */ void  Vfffffe70;



    if(M00481278 != 0) {
        return;
    }
    L0045A060();
    if(M0048127a == 0) {
        Vfffffe40.hInstance = M004811e8;
        Vfffffe40.cbSize = 0x30;
        Vfffffe40.style = 0;
        Vfffffe40.lpfnWndProc = 0x433b30;
        Vfffffe40.cbClsExtra = 0;
        Vfffffe40.cbWndExtra = 0;
        Vfffffe40.hIcon = 0;
        Vfffffe40.hCursor = 0;
        Vfffffe40.hbrBackground = 0;
        Vfffffe40.lpszMenuName = 0;
        Vfffffe40.lpszClassName = "%%stdwinsockclass%%";
        Vfffffe40.hIconSm = 0;
        RegisterClassExA( & (Vfffffe40.cbSize));
        M0048127a = ax;
        if(M0048127a == 0) {
            L00429610(65563);
        }
    }
    (save) & Vfffffe70;
    (save)0x101;
    eax = L0045CC08();
    if(eax != 0) {
        L0042F970(eax);
    }
    eax = L0042E310(24576);
    ecx = 0x7fe;
    M0048128c = eax;
    < ? L0043255d : ;
    do {
        edx = eax + 0xc;
        *eax = edx;
        eax = edx;
    } while(ecx = ecx - 1);
    *eax = 0;
    esp = ebp;
    M00481290 = eax;
    M00481298 = 0x800;
    M0048126c = 0x432440;
    M00481270 = 0x4323e0;
    M00481278 = 1;
}

/*	Procedure: 0x00432591 - 0x0043259F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432591()
{



}

/*	Procedure: 0x004325A0 - 0x0043260C
 *	Argument size: 4
 *	Local size: 4
 *	Save regs size: 4
 *	Called by:
 *		L00432610()
 *		L00432D40()
 */

L004325A0(A8)
/* unknown */ void  A8;
{



    eax = ebp - 8;
    *(ebp - 8) = 131072;
    (save)4;
    (save)eax;
    (save)0x1001;
    (save)65535;
    (save)A8;
    L0045CC0E();
    (save)4;
    (save)ebp - 8;
    (save)0x1002;
    (save)65535;
    (save)A8;
    L0045CC0E();
    ecx = ebp - 8;
    *(ebp - 8) = 1;
    (save)4;
    (save)ecx;
    (save)1;
    (save)6;
    (save)A8;
    L0045CC0E();
    return L0045CC0E(A8, 65535, 8, ebp - 8, 4);
}

/*	Procedure: 0x0043260D - 0x0043260F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043260D()
{



}

/*	Procedure: 0x00432610 - 0x00432757
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00408F30()
 *		L00409390()
 *		L00412B90()
 */

L00432610(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{
	struct HWND__ * ebx;
	/* unknown */ void  esi;



    esi = A8;
    esp = esp - 4;
    if(esi == 0) {
        L00429610(65538);
    }
    if(M00481278 == 0) {
        L00429610(65564);
    }
    eax = L0042E3A0(0x58);
    *(ebp - 0xc) = eax;
    *(eax + 0x14) = esi;
    eax = *(ebp - 0xc);
    *(eax + 0x18) = Ac;
    ebx = CreateWindowExA(0, M0048127a & 65535, M00476580, 13565952, 0, 0, M00000064, 0x20, 0, 0, M004811e8, 0);
    if(ebx == 0) {
        L0042E3E0(ebp - 0xc);
        L0042F970(GetLastError());
    }
    *( *(ebp - 0xc) + 0xc) = ebx;
    M004812b0 = M004812b0 + 1;
    esi = M004812b0;
    *( *(ebp - 0xc) + 0x10) = esi;
    SetWindowLongW(ebx, -21, *( *(ebp - 0xc) + 0x10));
    ecx = 1;
    if(A14 == 2) {
        ecx = 2;
        *( *(ebp - 0xc) + 0x52) = 1;
    }
    (save)0;
    (save)ecx;
    (save)2;
    esi = L0045CC14();
    if(esi != -1) {
        *( *(ebp - 0xc) + 8) = esi;
        (save)0x3f;
        (save)0x464;
        (save)ebx;
        (save)esi;
        if(L0045CC1A() == 0) {
            L004325A0(esi);
            L0042A0D0(0x48127c, *(ebp - 0xc));
            *( *(ebp - 0xc) + 4) = 1115168421;
            return *(ebp - 0xc);
        }
    }
    esi = L0045CBFC();
    DestroyWindow(ebx);
    L0042E3E0(ebp - 0xc);
    L0042F970(esi);
    esp = ebp - 8;
    return 0;
}

/*	Procedure: 0x00432758 - 0x0043275F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432758()
{



}

/*	Procedure: 0x00432760 - 0x00432880
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00401310()
 *		L00412B90()
 *		L00414FA0()
 *		L00415120()
 */

L00432760(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    eax = A8;
    (save)esi;
    (save)edi;
    ebx = *eax;
    if(ebx == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    (save)ebx;
    L0042A150(0x48127c);
    (restore)ecx;
    if(al == 0) {
        eax = A8;
        *eax = 0;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    (save)2;
    (save) *(ebx + 8);
    L0045CC20();
    (save) *(ebx + 8);
    L0045CC26();
    if(*(ebx + 0x1c) != 0) {
        (save)eax;
        L0045CC2C();
    }
    L0042E3E0(ebx + 0x20);
    if(*(ebx + 0x28) != 0) {
        for(esi = ebx + 0x28; 1; L0042A0A0(0x48128c, edi)) {
            edi = L0042A110(esi);
            if(edi == 0) {
                break;
            }
            L0042E3E0(edi + 4);
        }
    }
    if(*(ebx + 0x38) != 0) {
        for(esi = ebx + 0x38; 1; L0042A0A0(0x48129c, edi)) {
            edi = L0042A110(esi);
            if(edi == 0) {
                break;
            }
            if(*(edi + 4) != 0) {
                (save)eax;
                L0045CC2C();
            }
            L0042E3E0(edi + 8);
            L0042E3E0(edi + 0xc);
            L00434150(edi, 0x18);
        }
    }
    DestroyWindow( *(ebx + 0xc));
    *(ebx + 4) = 0;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return L0042E3E0(A8);
}

/*	Procedure: 0x00432881 - 0x0043288F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432881()
{



}

/*	Procedure: 0x00432890 - 0x004328DB
 *	Argument size: 12
 *	Local size: 8
 *	Save regs size: 4
 *	Called by:
 *		L00432D40()
 */

L00432890(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffff9;



    ecx = *(A8 + 4) & 0xff;
    *(ebp - 0xc) = cl;
    eax = *(A8 + 5) & 0xff;
    *(ebp - 0xb) = al;
    edx = *(A8 + 6) & 0xff;
    *(ebp - 0xa) = dl;
    *(ebp - 9) = *(A8 + 7) & 0xff;
    Vfffffff8 = *(A8 + 2) & 0xff;
    edx = *(A8 + 3) & 0xff;
    Vfffffff9 = dl;
    return L00438300(ebp - 0xc, Ac, A10);
}

/*	Procedure: 0x004328DC - 0x004328DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004328DC()
{



}

/*	Procedure: 0x004328E0 - 0x00432A5E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408B5A()
 *		L00408F30()
 */

L004328E0(Ac, A10, A14)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    edx = ebp + -276;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x10c;
    esi = A10;
    (save)0xff;
    (save)edx;
    if(L0045CC32() != 0) {
        L00432350();
    }
    if(*(ebp + -276) == 0) {
        L00429610(262247);
    }
    (save)ebp + -276;
    edi = L0045CC38();
    if(edi == 0) {
        L00432350();
    }
    if(*(edi + 0xa) < 4) {
        L00429610(262247);
    }
    if(*(edi + 0xc) == 0) {
        L00429610(262247);
    }
    ebx = Ac;
    *(ebp + -280) = ebx;
    *(ebp + -280) = *(ebp + -280) + esi;
    if(esi < 0x100) {
        L00429610(65562);
    }
    *(ebp - 0x10) = 0;
    for(edi = *(edi + 0xc); 1; *( *(ebp - 0x14)) = cl) {
        esi = *edi;
        edi = edi + 4;
        if(esi == 0) {
            break;
        }
        *(ebp - 0x10) = *(ebp - 0x10) + 1;
        if(*(ebp + -280) - ebx < 0x14) {
            L00429610(65562);
        }
        *(ebp - 0x14) = ebx;
        ebx = ebx + 1;
        ebx = ebx + L00426870( *esi & 0xff, ebx, 3, 0x800);
        *ebx = 0x2e;
        ebx = ebx + 1;
        ebx = ebx + L00426870( *(esi + 1) & 0xff, ebx, 3, 0x800);
        *ebx = 0x2e;
        ebx = ebx + 1;
        ebx = ebx + L00426870( *(esi + 2) & 0xff, ebx, 3, 0x800);
        *ebx = 0x2e;
        ebx = ebx + 1;
        ebx = ebx + L00426870( *(esi + 3) & 0xff, ebx, 3, 0x800);
        al = *(ebp - 0x14) + 1;
        cl = bl - al;
    }
    *ebx = 0;
    if(A14 != 0) {
        *A14 = *(ebp - 0x10);
    }
    eax = ebx + 1 - Ac;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00432A5F - 0x00432A5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432A5F()
{



}

/*	Procedure: 0x00432A60 - 0x00432A88
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0040853A()
 */

L00432A60(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *(A8 + 4) != 1115168421) {
        L00429610(65561);
    }
    return *(A8 + 0x4e) & 0xff;
}

/*	Procedure: 0x00432A89 - 0x00432A8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432A89()
{



}

/*	Procedure: 0x00432A90 - 0x00432B84
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00433580()
 */

L00432A90(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = Ac;
    esp = esp - 8;
    ebx = A14;
    if(esi > 0xff) {
        esi = 0xff;
    }
    L004381F0(A8, esi, ebp - 0x14);
    if(al == 0) {
        *ebx = 1;
        esi = L004381A0(1, A8, esi, A10, 0xff);
        ebx = L004348B0(0x3a, A10, esi);
        if(ebx != 0) {
            edx = ebx + 1;
            ecx = edx;
            L00427940(ecx, esi + A10 - edx, 0x800);
            esi = ebx - A10;
            *A18 = ax;
        } else {
            *A18 = 0;
        }
        *(esi + A10) = 0;
        esp = ebp - 0xc;
        return esi;
    }
    *ebx = 0;
    *A18 = 0;
    L00434150(A10, 0x10);
    esi = A10 + 4;
    eax = A10 + 2;
    *A10 = 2;
    edx = *(ebp - 0x10) & 0xff;
    *eax = dl;
    ecx = *(ebp - 0xf) & 0xff;
    *(eax + 1) = cl;
    *esi = *(ebp - 0x14) & 0xff;
    *(esi + 1) = *(ebp - 0x13) & 0xff;
    *(esi + 2) = *(ebp - 0x12) & 0xff;
    *(esi + 3) = *(ebp - 0x11) & 0xff;
    esp = ebp - 0xc;
    return 0x10;
}

/*	Procedure: 0x00432B85 - 0x00432B8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432B85()
{



}

/*	Procedure: 0x00432B90 - 0x00432BFE
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00402D10()
 *		L00418850()
 *		L00430730()
 */

L00432B90(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        return;
    }
    if(*(A8 + 4) != 1115168421) {
        esp = ebp - 4;
        return;
    }
    if(*(A8 + 0x4e) == 0x1c) {
        esp = ebp - 4;
        return;
    }
    (save)2;
    (save) *(A8 + 8);
    L0045CC20();
    edx = *(A8 + 0x1c);
    if(edx != 0) {
        (save)edx;
        L0045CC2C();
        *(A8 + 0x1c) = 0;
    }
    eax = L0042E3E0(A8 + 0x20);
    *(A8 + 0x4e) = 0x1c;
    if(*(A8 + 0x24) == 0) {
        *(A8 + 0x24) = 262254;
    }
    esp = ebp - 4;
}

/*	Procedure: 0x00432BFF - 0x00432BFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432BFF()
{



}

/*	Procedure: 0x00432C00 - 0x00432C70
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00402D10()
 *		L0043105A()
 */

L00432C00(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        return;
    }
    if(*(A8 + 4) != 1115168421) {
        esp = ebp - 4;
        return;
    }
    if(*(A8 + 0x4e) == 0x1c) {
        esp = ebp - 4;
        return;
    }
    if(*(A8 + 0x52) != 0) {
        esp = ebp - 4;
        return;
    }
    if(*(A8 + 0x28) != 0) {
        *(A8 + 0x50) = 1;
    } else {
        eax = L0045CC20( *(A8 + 8), 2);
        *(A8 + 0x4e) = 0x1c;
        if(*(A8 + 0x24) == 0) {
            *(A8 + 0x24) = 262254;
        }
    }
    esp = ebp - 4;
}

/*	Procedure: 0x00432C71 - 0x00432C7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432C71()
{



}

/*	Procedure: 0x00432C80 - 0x00432D3A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00408F30()
 *		L00412B90()
 */

L00432C80(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp - 0x10;
    if(A8 == 0 || *(A8 + 4) != 1115168421) {
        L00429610(65561);
    }
    if(*(A8 + 0x4e) != 0) {
        L00429610(262246);
    }
    if(M004812ac == 0 && *(A8 + 0x52) == 0) {
        M004812ac = L004389E0();
    }
    edx = ebp - 0x16;
    eax = ebp - 0x10;
    *(ebp - 0x18) = 2;
    *edx = Ac >> 8;
    *(edx + 1) = bl;
    *(ebp - 0x14) = 0;
    *eax = 0;
    *(eax + 4) = 0;
    (save)0x10;
    (save)ebp - 0x18;
    (save) *(A8 + 8);
    eax = L0045CC4A();
    if(eax != 0) {
        eax = L00432350();
    }
    if(*(A8 + 0x52) == 0) {
        (save)0x80;
        (save) *(A8 + 8);
        eax = L0045CC50();
        if(eax != 0) {
            L00432350();
        }
    }
    *(A8 + 0x4e) = 4;
}

/*	Procedure: 0x00432D3B - 0x00432D3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432D3B()
{



}

/*	Procedure: 0x00432D40 - 0x00432F10
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 */

L00432D40(A8, Ac, A10, A14, A18, A1c)
struct HWND__ * A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	struct HWND__ * edi;



    ecx = A1c;
    esp = esp - 0x48;
    edi = A8;
    if(ecx != 0) {
        *ecx = 0;
    }
    *(ebp - 0x28) = 0;
    if(A18 != 0) {
        *(ebp - 0x28) = *A18;
        *A18 = 0;
    }
    if(edi == 0 || *(edi + 4) != 1115168421) {
        L00429610(65561);
    }
    eax = ebp - 0x50;
    *(ebp - 0x50) = 0x20;
    eax = L0045CC56( *(edi + 8), ebp - 0x4c, eax);
    *(ebp - 0x54) = eax;
    if(eax == -1) {
        return 0;
    }
    L00438A50(M004812ac, *(ebp - 0x48), *(edi + 0x54) & 65535, *(edi + 0x56) & 65535);
    if(al != 0) {
        L0045CC20();
        L0045CC26( *(ebp - 0x54), *(ebp - 0x54), 2);
        esp = ebp - 0xc;
        return 0;
    }
    edi = 0;
    *(ebp - 0x10) = esp;
    edi = CreateWindowExA(0, M0048127a & 65535, M00476580, 13565952, 0, 0, M00000064, 0x20, 0, 0, M004811e8, 0);
    if(edi == 0) {
        L0042F970(GetLastError());
    }
    M004812b0 = M004812b0 + 1;
    eax = M004812b0;
    *(ebp - 0x2c) = eax;
    SetWindowLongW(edi, -21, *(ebp - 0x2c));
    (save)0x3f;
    (save)0x464;
    (save)edi;
    (save) *(ebp - 0x54);
    if(L0045CC1A() != 0) {
        L0042F970(L0045CBFC());
    }
    L004325A0( *(ebp - 0x54));
    ebx = L0042E3A0(0x58);
    *(ebx + 0x10) = *(ebp - 0x2c);
    goto L00432ec6;
    (save)2;
    (save) *(ebp - 0x54);
    L0045CC20();
    (save) *(ebp - 0x54);
    L0045CC26();
    if(edi != 0) {
        DestroyWindow(edi);
    }
    L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        (save)-1;
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)();
    }
    esp = *(ebp - 0x10);
L00432ec6:
    *(ebx + 0x14) = Ac;
    *(ebx + 0x18) = A10;
    *(ebx + 8) = *(ebp - 0x54);
    *(ebx + 0xc) = edi;
    if(A18 != 0) {
        *A18 = L00432890(ebp - 0x4c, A14, *(ebp - 0x28));
    }
    L0042A0D0(0x48127c, ebx);
    *(ebx + 4) = 1115168421;
    esp = ebp - 0xc;
    return ebx;
}

/*	Procedure: 0x00432F11 - 0x00432F1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00432F11()
{



}

/*	Procedure: 0x00432F20 - 0x00432F50
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432F60()
 *		L00433030()
 *		L00433130()
 */

L00432F20()
{



    eax = L0045CBFC();
    ecx = eax + -10035;
    if(ecx > 0x17) {
        goto L00432f40;
    }
    switch(ecx) {
        case 0:
L00432f3a:
            return;
        case 1:
L00432f40:
            eax = L00459F70("Winsock send error! (%i)", eax);
            esp = ebp;
            return;
        case 2:
            goto L00432f40;
        case 3:
            goto L00432f40;
        case 4:
            goto L00432f40;
        case 5:
            goto L00432f40;
        case 6:
            goto L00432f40;
        case 7:
            goto L00432f40;
        case 8:
            goto L00432f40;
        case 9:
            goto L00432f40;
        case 0xa:
            goto L00432f40;
        case 0xb:
            goto L00432f40;
        case 0xc:
            goto L00432f40;
        case 0xd:
            goto L00432f40;
        case 0xe:
            goto L00432f40;
        case 0xf:
            goto L00432f3a;
        case 0x10:
            goto L00432f40;
        case 0x11:
            goto L00432f3a;
        case 0x12:
            goto L00432f3a;
        case 0x13:
            goto L00432f3a;
        case 0x14:
            goto L00432f40;
        case 0x15:
            goto L00432f40;
        case 0x16:
            goto L00432f3a;
        case 0x17:
            goto L00432f3a;
    }
    goto L00432f3a;
}

/*	Procedure: 0x00432F60 - 0x00433022
 *	Argument size: 4
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00433030()
 *		L00433130()
 */

L00432F60(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    *(ebp - 0x10) = A8;
    for(*(ebp - 0x10) = *(ebp - 0x10) + 0x28; 1; *(A8 + 0x48) = *(ebp - 0x18) + eax) {
        edi = *(A8 + 0x28);
        if(edi == 0) {
            break;
        }
        eax = *(A8 + 0x48);
        *(ebp - 0x18) = eax;
        edx = *(edi + 4);
        esi = *(edi + 8) - eax;
        *(ebp - 0x14) = edx;
        (save)0;
        (save)esi;
        (save)eax + edx;
        (save) *(A8 + 8);
        eax = L0045CC5C();
        if(eax <= 0) {
            goto L00432fcb;
        }
L00432fe0:
        if(eax >= esi) {
            L0042E3E0(ebp - 0x14);
            *(edi + 4) = 0;
            L0042A110( *(ebp - 0x10));
            eax = L0042A0A0(0x48128c, edi);
            *(A8 + 0x48) = 0;
            continue;
        }
    }
    if(*(A8 + 0x50) != 0) {
        *(A8 + 0x50) = 0;
        eax = L0045CC20( *(A8 + 8), 2);
        *(A8 + 0x4e) = 0x1c;
        if(*(A8 + 0x24) == 0) {
            *(A8 + 0x24) = 262254;
        }
    }
    return;
L00432fcb:
    if(eax < 0) {
        eax = L00432F20();
    }
    esp = ebp - 0xc;
    return;
    goto L00432fe0;
}

/*	Procedure: 0x00433030 - 0x00433127
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00430D50()
 *		L00431A10()
 */

L00433030(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    (save)edi;
    edi = *Ac;
    if(A8 == 0 || edi == 0 || A10 == 0) {
        L0042E3E0(Ac);
        L00429610(65538);
    }
    if(*(A8 + 4) != 1115168421) {
        L0042E3E0(Ac);
        L00429610(65561);
    }
    if(*(A8 + 0x4e) == 0x1c) {
        L0042E3E0(Ac);
        L00429610(262246);
    }
    eax = A8;
    if(*(eax + 0x28) == 0) {
        (save)0;
        (save)A10;
        (save)edi;
        (save) *(eax + 8);
        eax = L0045CC5C();
        if(eax < 0) {
            L00432F20();
            eax = 0;
        }
        if(eax >= A10) {
            eax = L0042E3E0(Ac);
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            return;
        }
        *(A8 + 0x48) = eax;
    }
    esi = L0042A110(0x48128c);
    if(esi == 0) {
        L0042E3E0(Ac);
        L00429610(262248);
    }
    *(esi + 4) = edi;
    *(esi + 8) = A10;
    L0042A0D0(A8 + 0x28, esi);
    *Ac = 0;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return L00432F60(A8);
}

/*	Procedure: 0x00433128 - 0x0043312F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00433128()
{



}

/*	Procedure: 0x00433130 - 0x004331F1
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00430F40()
 *		L00431CB0()
 */

L00433130(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 4;
    edi = Ac;
    ebx = A10;
    if(A8 == 0 || *(A8 + 4) != 1115168421) {
        eax = L00429610(65561);
    }
    if(ebx == 0) {
        return;
    }
    if(*(A8 + 0x28) == 0) {
        (save)0;
        (save)ebx;
        (save)edi;
        (save) *(A8 + 8);
        eax = L0045CC5C();
        if(eax < 0) {
            L00432F20();
            eax = 0;
        }
        ecx = eax;
        if(ecx >= ebx) {
            esp = ebp - 0xc;
            return;
        }
        edi = edi + ecx;
        *(A8 + 0x48) = 0;
        ebx = ebx - eax;
    }
    *(ebp - 0x10) = L0042E350(edi, ebx);
    edi = L0042A110(0x48128c);
    if(edi == 0) {
        L0042E3E0(ebp - 0x10);
        L00429610(262248);
    }
    *(edi + 4) = *(ebp - 0x10);
    *(edi + 8) = ebx;
    L0042A0D0(A8 + 0x28, edi);
    eax = L00432F60(A8);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004331F2 - 0x004331FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004331F2()
{



}

/*	Procedure: 0x00433200 - 0x0043337F
 *	Argument size: 12
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00430760()
 */

L00433200(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	long  edi;



    if(A10 != 0) {
        *A10 = 0;
    }
    if(A8 == 0 || *(A8 + 4) != 1115168421) {
        L00429610(65561);
    }
    eax = *(A8 + 8);
    *(ebp - 0x10) = eax;
    edx = ebp - 0x18;
    *(ebp - 0x18) = 0;
    (save)edx;
    (save)1074030207;
    (save)eax;
    if(L0045CC62() != 0) {
        *(ebp - 0x18) = 0;
    }
    if(*(ebp - 0x18) == 0) {
        (save)0;
        (save)0;
        (save)0;
        (save) *(ebp - 0x10);
        L0045CC68();
        if(L0045CC62( *(ebp - 0x10), 1074030207, ebp - 0x18) != 0) {
            *(ebp - 0x18) = 0;
        }
        if(*(ebp - 0x18) == 0) {
            *Ac = 0;
            return 0;
        }
    }
    eax = L0042E310( *(ebp - 0x18));
    *(ebp - 0x14) = eax;
    (save)0;
    (save) *(ebp - 0x18);
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x10);
    if(L0045CC68() < 0) {
        edx = ebp - 0x14;
        edi = L0045CBFC();
        L0042E3E0(edx);
        eax = edi + -10050;
        if(eax > 0xf) {
            goto L00433321;
        }
        switch(eax) {
            case 0:
                goto L004332e3;
            case 1:
                goto L004332e3;
            case 2:
                goto L004332e3;
            case 3:
                goto L004332e3;
            case 4:
                goto L004332e3;
            case 5:
L00433321:
                L0042F970(edi);
                goto L00433328;
            case 6:
                goto L00433321;
            case 7:
                goto L00433321;
            case 8:
                goto L00433321;
            case 9:
                goto L00433321;
            case 0xa:
                goto L004332e3;
            case 0xb:
                goto L004332e3;
            case 0xc:
                goto L00433321;
            case 0xd:
                goto L00433321;
            case 0xe:
                goto L004332e3;
            case 0xf:
                goto L004332e3;
        }
L004332e3:
        if(*(A8 + 0x24) != 0) {
            goto L00433311;
        }
        *(A8 + 0x24) = L0042F780(edi);
        edi = (di & 65535 & 65535) << 0x10 | 0x20;
        PostMessageA( *(A8 + 0xc), 0x464, *(A8 + 8), edi);
        *Ac = 0;
        esp = ebp - 0xc;
        return 0;
    }
L00433328:
    if(edi > 0) {
        goto L00433338;
    }
    ecx = ebp - 0x14;
    edi = 0;
    L0042E3E0(ecx);
    edx = ebp - 0x18;
    *Ac = edi;
    *(ebp - 0x18) = 0;
    L0045CC62( *(ebp - 0x10), 1074030207, edx);
    if(eax == 0) {
        goto L0043335d;
    }
    *(ebp - 0x18) = 0;
    if(A10 == 0) {
        goto L0043336f;
    }
    cl = 0;
    *A10 = cl;
    eax = *(ebp - 0x14);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00433380 - 0x004333E3
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004024A0()
 *		L00403190()
 *		L00418850()
 */

L00433380(A8)
/* unknown */ void  A8;
{



    if(A8 == 0) {
        goto L00433394;
    }
    if(*(A8 + 4) == 1115168421) {
        goto L0043339f;
    }
    L00429610(65561);
    if(*(A8 + 0x52) == 0) {
        goto L004333c0;
    }
    edx = *(A8 + 0x38);
    eax = 0;
    if(edx == 0) {
        goto L004333b9;
    }
L004333b0:
    eax = *(edx + 0x10);
    if(*edx != 0) {
        goto L004333b0;
    }
    return;
    ecx = *(A8 + 0x28);
    if(ecx != 0) {
        goto L004333d0;
    }
    esp = ebp - 4;
    return 0;
    eax = *(ecx + 8);
    if(*ecx != 0) {
        goto L004333d2;
    }
    eax = eax - *(A8 + 0x48);
    esp = ebp - 4;
}

/*	Procedure: 0x004333F0 - 0x00433465
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004071C0()
 *		L00408140()
 */

L004333F0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *(A8 + 4) != 1115168421) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x4e) == 0x1c) {
        return;
    }
    if(*(A8 + 0x4f) != 0) {
        esp = ebp - 4;
        return;
    }
    *(A8 + 0x4f) = 1;
    ecx = *(A8 + 0x52) != 0 ? *(A8 + 0x38) : *(A8 + 0x28);
    if(ecx == 0 || *ecx == 0) {
        PostMessageA( *(A8 + 0xc), 0x464, *(A8 + 8), 2);
    }
    esp = ebp - 4;
}

/*	Procedure: 0x00433466 - 0x0043346F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00433466()
{



}

/*	Procedure: 0x00433470 - 0x004334EA
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004071C0()
 */

L00433470()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    esi = *(ebp + 8);
    ebx = *(ebp + 0xc);
    if(esi == 0 || *(esi + 4) != 1115168421) {
        eax = L00429610(65561);
    }
    if(*(esi + 0x4e) == 0x1c) {
        if(ebx != 0) {
            *ebx = 0;
        }
        esp = ebp - 8;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    eax = *(esi + 0x52) != 0 ? *(esi + 0x38) : *(esi + 0x28);
    if(eax == 0) {
        if(ebx != 0) {
            *ebx = 1;
        }
        esp = ebp - 8;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 1;
    }
    if(ebx != 0) {
        *ebx = 0;
    }
    *eax :: 0;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x004334EB - 0x004334EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004334EB()
{



}

/*	Procedure: 0x004334F0 - 0x0043357F
 *	Argument size: -24
 *	Local size: 24
 *	Save regs size: 0
 *	Called by:
 *		L00433580()
 */

L004334F0()
{
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffffc;



    eax = L0042A110(0x48129c);
    if(eax != 0) {
        return;
    }
    Vfffffffc = esp;
    eax = L0042E3A0(0x600);
    goto L00433540;
    if(Vfffffff0 != 0) {
        ecx = Vffffffe8;
        Vfffffff0(-1);
    }
    esp = *(ebp - 4);
    return 0;
L00433540:
    edx = 0x3e;
    M0048129c = eax;
    < ? L0043355c : ;
    do {
        ecx = eax + 0x18;
        *eax = ecx;
        eax = ecx;
    } while(edx = edx - 1);
    *eax = 0;
    M004812a0 = eax;
    M004812a8 = 0x40;
    esp = ebp;
    return L0042A110(0x48129c);
}

/*	Procedure: 0x00433580 - 0x00433728
 *	Argument size: 20
 *	Local size: 296
 *	Save regs size: 12
 *	Called by:
 *		L004148A0()
 */

L00433580(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    eax = *A14;
    esi = A10;
    Vffffffd8 = eax;
    if(A8 == 0 || Ac == 0 || esi == 0 || eax == 0 || A18 == 0) {
        L0042E3E0(A14);
        L00429610(65538);
    }
    if(*(A8 + 4) != 1115168421) {
        L0042E3E0(A14);
        L00429610(65561);
    }
    ecx = ebp + -308;
    edx = ebp + -305;
    esi = L00432A90(Ac, esi, ebp + -300, edx, ecx);
    if(esi == 0) {
        L0042E3E0(A14);
        L00429610(262247);
    }
    if(*(ebp + -305) == 0) {
        (save)esi;
        (save)ebp + -300;
        (save)0;
        (save)A18;
        (save)Vffffffd8;
        (save) *(A8 + 8);
        L0045CC6E();
        return L0042E3E0(A14);
    }
    esi = 0;
    Vfffffff0 = esp;
    *(ebp + -304) = 0;
    esi = L004334F0();
    if(esi == 0) {
        L00429610(131173);
    }
    eax = L0042E3A0(0x400);
    *(ebp + -304) = eax;
    (save)0x400;
    (save) *(ebp + -304);
    (save)ebp + -300;
    (save)0x466;
    (save) *(A8 + 0xc);
    eax = L0045CC3E();
    Vffffffd4 = eax;
    if(eax == 0) {
        L00432350();
        goto L004336ea;
        if(esi != 0) {
            L0042A0A0(0x48129c, esi);
        }
        L0042E3E0(ebp + -304);
        L0042E3E0(A14);
        L004234F0(0, 0, 0);
        if(Vffffffe4 != 0) {
            (save)-1;
            ecx = Vffffffdc;
            Vffffffe4();
        }
        esp = *(ebp - 0x10);
    }
L004336ea:
    *(esi + 4) = Vffffffd4;
    *(esi + 8) = *(ebp + -304);
    *(esi + 0xc) = Vffffffd8;
    *(esi + 0x10) = A18;
    edx = *(ebp + -308);
    *(esi + 0x14) = dx;
    eax = L0042A0D0(A8 + 0x38, esi);
    *A14 = 0;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00433729 - 0x00433758
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00433729(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    if(A8 != 0) {
        eax = *(A4 + 0x38);
        if(eax == 0) {
            goto L00433756;
        }
        do {
            if(*(eax + 4) == A8) {
                goto L00433748;
            }
L00433750:
            eax = *eax;
        } while(eax != 0);
        goto L00433756;
L00433748:
        return;
        goto L00433750;
    }
L00433756:
    return 0;
}

/*	Procedure: 0x00433759 - 0x004337A8
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 4
 */

L00433759(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff8;



    ecx = A8;
    ebx = *(ecx + 0x14);
    if(ebx == 0) {
        return;
    }
    Vfffffff8 = esp;
    eax = *ebx( *(ecx + 0x18), ecx, Ac);
    goto L004337a3;
    eax = L00429560(Vfffffff0);
    if(Vffffffec != 0) {
        ecx = *(ebp - 0x1c);
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L004337a3:
    esp = ebp - 4;
}

/*	Procedure: 0x004337A9 - 0x004337AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004337A9()
{



}

/*	Procedure: 0x004337B0 - 0x00433AF6
 *	Argument size: 16
 *	Local size: 40
 *	Save regs size: 12
 */

L004337B0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe6;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    edi = A8;
    edx = Ac;
    ecx = A10;
    esi = A14;
    if(M004a1080 != 0) {
        return L0042F750("5**CODE 86** Winsock reentry bug!! Please report this!");
    }
    M004a1080 = 1;
    if(edx == 0x464) {
        if(*(edi + 8) != ecx) {
            goto L00433ae8;
        }
        ecx = si & 65535 & 65535;
        edx = esi >> 0x10;
        ecx = ecx - 1;
        ecx :: 0x1f;
        if(edx = dx & 65535) {
            goto L00433ae8;
        }
        switch(ecx) {
            case 0:
L0043381e:
                (save)0x32;
                goto L00433ae0;
            case 1:
                goto L00433825;
            case 2:
L00433ae8:
                esp = ebp - 0xc;
                M004a1080 = 0;
                return;
            case 3:
                goto L0043381e;
            case 4:
                goto L00433ae8;
            case 5:
                goto L00433ae8;
            case 6:
                goto L00433ae8;
            case 7:
                (save)0x35;
                goto L00433ae0;
            case 8:
                goto L00433ae8;
            case 9:
                goto L00433ae8;
            case 0xa:
                goto L00433ae8;
            case 0xb:
                goto L00433ae8;
            case 0xc:
                goto L00433ae8;
            case 0xd:
                goto L00433ae8;
            case 0xe:
                goto L00433ae8;
            case 0xf:
                goto L00433858;
            case 0x10:
                goto L00433ae8;
            case 0x11:
                goto L00433ae8;
            case 0x12:
                goto L00433ae8;
            case 0x13:
                goto L00433ae8;
            case 0x14:
                goto L00433ae8;
            case 0x15:
                goto L00433ae8;
            case 0x16:
                goto L00433ae8;
            case 0x17:
                goto L00433ae8;
            case 0x18:
                goto L00433ae8;
            case 0x19:
                goto L00433ae8;
            case 0x1a:
                goto L00433ae8;
            case 0x1b:
                goto L00433ae8;
            case 0x1c:
                goto L00433ae8;
            case 0x1d:
                goto L00433ae8;
            case 0x1e:
                goto L00433ae8;
            case 0x1f:
                goto L004338a5;
        }
        goto L0043381e;
L00433825:
        L00432F60(edi);
        if(*(edi + 0x4f) == 0) {
            goto L00433ae8;
        }
        edx = *(edi + 0x28);
        if(edx != 0 && *edx != 0) {
            goto L00433ae8;
        }
        *(edi + 0x4f) = 0;
        (save)0x33;
        goto L00433ae0;
L00433858:
        if(edx == 0) {
            goto L00433890;
        }
        if(*(edi + 0x24) != 0) {
            goto L0043386c;
        }
        *(edi + 0x24) = L0042F780(edx);
        if(*(edi + 0x51) != 0) {
            goto L00433ae8;
        }
        *(edi + 0x51) = 1;
        *(edi + 0x4e) = 0x1c;
        (save)0x37;
        (save)edi;
        L00433760();
        goto L00433ae6;
        if(*(edi + 0x4e) != 8) {
            goto L00433ae8;
        }
        *(edi + 0x4e) = 0x10;
        (save)0x36;
        goto L00433ae0;
L004338a5:
        if(*(edi + 0x24) != 0) {
            goto L004338c0;
        }
        if(edx == 0) {
            goto L004338b8;
        }
        L0042F780(edx);
        goto L004338bd;
        *(edi + 0x24) = 262250;
        if(*(edi + 0x51) != 0) {
            goto L00433ae8;
        }
        *(edi + 0x51) = 1;
        *(edi + 0x4e) = 0x1c;
        (save)0x34;
        goto L00433ae0;
    }
    if(edx != 0x465) {
        goto L004339f0;
    }
    if(*(edi + 0x1c) != ecx) {
        goto L00433ae8;
    }
    *(edi + 0x1c) = 0;
    ebx = *(edi + 0x20);
    esi = esi >> 0x10;
    *(ebp - 0x30) = ebx;
    *(edi + 0x20) = 0;
    if((si & 65535) == 0) {
        eax = *(ebp - 0x30);
        if(*(eax + 0xa) >= 4) {
            ebx = *(eax + 0xc);
            if(ebx != 0) {
                ecx = *ebx;
                if(ecx != 0) {
                    edx = & Vffffffd8;
                    esi = ebp - 0x2a;
                    *(ebp - 0x2c) = 2;
                    ebx = ( *(edi + 0x4c) & 65535) >> 8;
                    *esi = bl;
                    eax = *(edi + 0x4c) & 0xff;
                    *(esi + 1) = al;
                    ebx = *ecx & 0xff;
                    *edx = bl;
                    eax = *(ecx + 1) & 0xff;
                    *(edx + 1) = al;
                    *(edx + 2) = *(ecx + 2) & 0xff;
                    *(edx + 3) = *(ecx + 3) & 0xff;
                    esi = & Vffffffdc;
                    *esi = 0;
                    *(esi + 4) = 0;
                    L0042E3E0(ebp - 0x30);
                    (save)0x10;
                    (save)ebp - 0x2c;
                    (save) *(edi + 8);
                    if(L0045cc44() == 0) {
                        goto L00433ae8;
                    }
                    esi = L0045CBFC();
                    if(esi == 10035) {
                        goto L00433ae8;
                    }
                }
            }
        }
    }
    if(esi != 0) {
        goto L004339b6;
    }
    esi = 11001;
    L0042E3E0(ebp - 0x30);
    if(*(edi + 0x24) != 0) {
        goto L004339d0;
    }
    *(edi + 0x24) = L0042F780(esi);
    if(*(edi + 0x51) != 0) {
        goto L00433ae8;
    }
    *(edi + 0x51) = 1;
    *(edi + 0x4e) = 0x1c;
    (save)0x37;
    goto L00433ae0;
    if(edx != 0x466) {
        goto L00433ad7;
    }
    (save)ecx;
    ebx = L00433730(edi);
    (restore)ecx;
    if(ebx == 0) {
        goto L00433ae8;
    }
    if((esi >> 0x10 & 65535) != 0) {
        goto L00433aa0;
    }
    eax = *(ebx + 8);
    if(*(eax + 0xa) < 4) {
        goto L00433aa0;
    }
    ecx = *(eax + 0xc);
    if(ecx == 0) {
        goto L00433aa0;
    }
    eax = *ecx;
    *(ebp - 0x34) = eax;
    if(eax == 0) {
        goto L00433aa0;
    }
    ecx = & Vffffffe8;
    esi = & Vffffffe6;
    Vffffffe4 = 2;
    edx = ( *(ebx + 0x14) & 65535) >> 8;
    *esi = dl;
    eax = *(ebx + 0x14) & 0xff;
    *(esi + 1) = al;
    edx = *( *(ebp - 0x34)) & 0xff;
    *ecx = dl;
    eax = *( *(ebp - 0x34) + 1) & 0xff;
    *(ecx + 1) = al;
    *(ecx + 2) = *( *(ebp - 0x34) + 2) & 0xff;
    eax = *( *(ebp - 0x34) + 3) & 0xff;
    edx = & Vffffffec;
    *(ecx + 3) = al;
    *edx = 0;
    *(edx + 4) = 0;
    esi = & Vffffffe4;
    (save)0x10;
    (save)esi;
    (save)0;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0xc);
    (save) *(edi + 8);
    L0045CC6E();
    L0042A150(edi + 0x38, ebx);
    L0042E3E0(ebx + 8);
    edi = ebx + 0xc;
    L0042E3E0(edi);
    L00434150(ebx, 0x18);
    L0042A0A0(0x48129c, ebx);
    goto L00433ae6;
    if(edx != 0x467) {
        goto L00433ae8;
    }
    eax = L00433760(edi, esi);
    goto L00433ae8;
}

/*	Procedure: 0x00433B2A - 0x00433B8B
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 */

L00433B2A(A8, Ac, A10, A14)
struct HWND__ * A8;
unsigned int Ac;
unsigned int A10;
long  A14;
{



    if(Ac < 0x464 || Ac > 0x467) {
        return DefWindowProcW(A8, Ac, A10, A14);
    }
    L0045A0A0(0x433b00, GetWindowLongW(A8, -21), Ac, A10, A14);
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00433B8C - 0x00433B8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00433B8C()
{



}

/*	Procedure: 0x00433B90 - 0x00433D4D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004450B8()
 */

L00433B90(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = Ac;
    esp = esp - 0xc18;
    ebx = A8;
    if(edi > 0x3ff) {
        L00429610(65550);
    }
    esi = 0;
    if(L00434880(0x3a, ebx, edi) == 0) {
        esi = edi;
        edx = esi < 4 ? esi : 4;
        L00425E40("ftp.", 4, ebx, edx, 1);
        if(al != 0) {
            esi = 0x4765ec;
        } else {
            if(esi >= 4) {
                esi = 4;
            }
            L00425E40("kdx.", 4, ebx, esi, 1);
            esi = al != 0 ? 0x4765fc : L00434880(0x40, ebx, edi) != 0 ? 0x476604 : 0x47660c;
        }
    }
    esi = L00428EA0(esi, ebp + -1036, 0x400);
    edx = 0x3ff - esi;
    if(edi >= edx) {
        edi = edx;
    }
    esi = esi + L004342A0(ebp + esi + -1036, ebx, edi);
    edx = ebp + -3107;
    L004387B0(ebp + -1036, esi, edx);
    if(al != 0) {
        L00429610(262247);
    }
    if(*(ebp + -3107) == 0) {
        L00429610(262247);
    }
    ebx = ebp + -3096;
    eax = L004286E0(ebp + -1036, esi, ebx, 0x7fe);
    eax = eax >> 1;
    *(ebp + -1048) = M004812b4;
    *(ebp + -1044) = M004812b8;
    ebx = ebp + -3106;
    *(ebp + eax * 2 + -3096) = 0;
    *(ebp + -1040) = M004812bc;
    *(ebp + -3104) = M004812be;
    eax = ebx;
    edx = ebp + -3096;
    ecx = ebp + -1048;
    *(ebp + -3100) = M004812c2;
    *ebx = 0;
    ShellExecuteW(0, ecx, edx, eax, ebp + -3104, 1);
    return L0045A140();
}

/*	Procedure: 0x00433D4E - 0x00433E48
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 */

L00433D4E(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A10;
    ebx = A8;
    edx = Ac;
    if(edi == 0) {
        return;
    }
    ecx = ~edx;
    ebx = ebx + (edx >> 3);
    ecx = ecx & 7;
    if(A14 != 0) {
        if(ecx != 0) {
            edx = 0xff >> cl << cl;
            if(ecx > edi) {
                ecx = ecx - edi;
                esi = 0xff >> cl << cl;
                edx = !edx & esi;
                *ebx = *ebx | dl;
                esp = ebp - 0xc;
                return;
            }
            al = !dl;
            edi = edi - ecx;
            *ebx = *ebx | al;
            ebx = ebx + 1;
        }
        esi = edi >> 3;
        eax = L00433E50(ebx, esi, 0xff);
        if(!(ecx = ~edi & 7)) {
            *(esi + ebx) = *(esi + ebx) | 0xff >> cl << cl;
        }
    } else {
        if(ecx != 0) {
            edx = 0xff >> cl << cl;
            if(ecx > edi) {
                ecx = ecx - edi;
                eax = 0xff >> cl << cl;
                dl = !( !edx & eax);
                *ebx = *ebx & dl;
                esp = ebp - 0xc;
                return;
            }
            edi = edi - ecx;
            *ebx = *ebx & dl;
            ebx = ebx + 1;
        }
        esi = edi >> 3;
        eax = L00433E50(ebx, esi, 0);
        if(!(ecx = ~edi & 7)) {
            *(esi + ebx) = *(esi + ebx) & !(0xff >> cl << cl);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00433E49 - 0x00433E4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00433E49()
{



}

/*	Procedure: 0x00433E50 - 0x00433F79
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00429960()
 *		L00433D4E()
 */

L00433E50()
{
	/* unknown */ void  Vffffffec;



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    esp = esp - 0xc;
    edx = *(ebp + 0x10) & 0xff;
    esp = esp & -8;
    ecx = *(ebp + 8);
    eax = *(ebp + 0xc);
    (fsave)0;
    if(edx != 0) {
        esi = edx;
        ebx = edx << 0x18;
        esi = esi << 0x10 | ebx;
        edx = edx | esi | edx << 8;
    }
    Vffffffec = edx;
    *esp = edx;
    for(st1 = *esp; 1; eax = eax - 0x10) {
        if(!(ecx & 0x1f)) {
            esi = eax >> 6;
            eax = eax & 0x3f;
            if(!(esi = esi - 1)) {
                do {
                    asm("fst qword [ecx]");
                    asm("fst qword [ecx+0x8]");
                    ecx = ecx + 0x10;
                    asm("fst qword [ecx]");
                    asm("fst qword [ecx+0x8]");
                    ecx = ecx + 0x10;
                    asm("fst qword [ecx]");
                    asm("fst qword [ecx+0x8]");
                    ecx = ecx + 0x10;
                    asm("fst qword [ecx]");
                    asm("fst qword [ecx+0x8]");
                    ecx = ecx + 0x10;
                } while(esi = esi - 1);
            }
            if(eax > 0x1f) {
                asm("fst qword [ecx]");
                asm("fst qword [ecx+0x8]");
                ecx = ecx + 0x10;
                asm("fst qword [ecx]");
                asm("fst qword [ecx+0x8]");
                ecx = ecx + 0x10;
                eax = eax - 0x20;
            }
        }
        esi = ecx;
        if(esi & 0xf || eax <= 0xf) {
L00433f00:
            if(esi & 7 || eax <= 7) {
                if(esi & 3 || eax <= 3) {
                    if(esi & 1 || eax <= 1) {
                        if(eax == 0) {
                            goto L00433f71;
                        }
                        *ecx = dl;
                        ecx = ecx + 1;
                        eax = eax - 1;
                        continue;
                    }
                    *ecx = dx;
                    ecx = ecx + 2;
                    eax = eax - 2;
                    continue;
                }
                *ecx = edx;
                ecx = ecx + 4;
                eax = eax - 4;
                continue;
            }
            asm("fst qword [ecx]");
            ecx = ecx + 8;
            eax = eax - 8;
            continue;
        }
        asm("fst qword [ecx]");
        asm("fst qword [ecx+0x8]");
        ecx = ecx + 0x10;
    }
    goto L00433f00;
L00433f71:
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    st0 = ((frestore));
}

/*	Procedure: 0x00433F7A - 0x00433F7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00433F7A()
{



}

/*	Procedure: 0x00433F80 - 0x0043407A
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0045CD30()
 */

L00433F80()
{
	/* unknown */ void  Vffffffec;



    (save)ebp;
    ebp = esp;
    eax = *(ebp + 0x10) & 65535;
    (save)ebx;
    (save)esi;
    edx = eax;
    esp = esp - 0xc;
    esp = esp & -8;
    eax = eax | edx << 0x10;
    Vffffffec = eax;
    *esp = eax;
    esi = *(ebp + 8);
    ebx = *(ebp + 0xc);
    for((fsave) *esp; 1; ebx = ebx - 8) {
        if(!(esi & 0x1f)) {
            edx = ebx >> 5;
            ebx = ebx & 0x1f;
            if(!(edx = edx - 1)) {
                do {
                    asm("fst qword [esi]");
                    asm("fst qword [esi+0x8]");
                    esi = esi + 0x10;
                    asm("fst qword [esi]");
                    asm("fst qword [esi+0x8]");
                    esi = esi + 0x10;
                    asm("fst qword [esi]");
                    asm("fst qword [esi+0x8]");
                    esi = esi + 0x10;
                    asm("fst qword [esi]");
                    asm("fst qword [esi+0x8]");
                    esi = esi + 0x10;
                } while(edx = edx - 1);
            }
            if(ebx > 0xf) {
                asm("fst qword [esi]");
                asm("fst qword [esi+0x8]");
                esi = esi + 0x10;
                asm("fst qword [esi]");
                asm("fst qword [esi+0x8]");
                esi = esi + 0x10;
                ebx = ebx - 0x10;
            }
        }
        edx = esi;
        if(edx & 0xf || ebx <= 7) {
L00434020:
            if(edx & 7 || ebx <= 3) {
                if(edx & 3 || ebx <= 1) {
                    if(ebx == 0) {
                        goto L00434072;
                    }
                    *esi = ax;
                    esi = esi + 2;
                    ebx = ebx - 1;
                    continue;
                }
                *esi = eax;
                esi = esi + 4;
                ebx = ebx - 2;
                continue;
            }
            asm("fst qword [esi]");
            esi = esi + 8;
            ebx = ebx - 4;
            continue;
        }
        asm("fst qword [esi]");
        asm("fst qword [esi+0x8]");
        esi = esi + 0x10;
    }
    goto L00434020;
L00434072:
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    st0 = ((frestore));
}

/*	Procedure: 0x0043407B - 0x0043407F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043407B()
{



}

/*	Procedure: 0x00434080 - 0x00434148
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040F2D0()
 *		L004497A0()
 *		L00449E70()
 *		L00466E30()
 */

L00434080()
{
	/* unknown */ void  Vfffffff0;



    (save)ebp;
    (save)ebx;
    ecx = *(esp + 0x10);
    esp = esp - 0xc;
    esp = esp & -8;
    Vfffffff0 = ecx;
    *esp = ecx;
    ebx = *(ebp + 8);
    edx = *(ebp + 0xc);
    for((fsave) *esp; 1; edx = edx - 4) {
        if(!(ebx & 0x1f)) {
            eax = edx >> 4;
            edx = edx & 0xf;
            if(!(eax = eax - 1)) {
                do {
                    asm("fst qword [ebx]");
                    asm("fst qword [ebx+0x8]");
                    ebx = ebx + 0x10;
                    asm("fst qword [ebx]");
                    asm("fst qword [ebx+0x8]");
                    ebx = ebx + 0x10;
                    asm("fst qword [ebx]");
                    asm("fst qword [ebx+0x8]");
                    ebx = ebx + 0x10;
                    asm("fst qword [ebx]");
                    asm("fst qword [ebx+0x8]");
                    ebx = ebx + 0x10;
                } while(eax = eax - 1);
            }
            if(edx > 7) {
                asm("fst qword [ebx]");
                asm("fst qword [ebx+0x8]");
                ebx = ebx + 0x10;
                asm("fst qword [ebx]");
                asm("fst qword [ebx+0x8]");
                ebx = ebx + 0x10;
                edx = edx - 8;
            }
        }
        eax = ebx;
        if(eax & 0xf || edx <= 3) {
L00434110:
            if(eax & 7 || edx <= 1) {
                if(edx == 0) {
                    goto L00434141;
                }
                *ebx = ecx;
                ebx = ebx + 4;
                edx = edx - 1;
                continue;
            }
            asm("fst qword [ebx]");
            ebx = ebx + 8;
            edx = edx - 2;
            continue;
        }
        asm("fst qword [ebx]");
        asm("fst qword [ebx+0x8]");
        ebx = ebx + 0x10;
    }
    goto L00434110;
L00434141:
    esp = ebp - 4;
    (restore)ebx;
    (restore)ebp;
    st0 = ((frestore));
}

/*	Procedure: 0x00434149 - 0x0043414F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434149()
{



}

/*	Procedure: 0x00434150 - 0x00434257
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004018F0()
 *		L00401B20()
 *		L00401D10()
 *		L004021F8()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L004051B0()
 *		L00405E70()
 *		L00408F30()
 *		L00409390()
 *		L00409B60()
 *		L00409E60()
 *		L0040AA30()
 *		L0040B3A0()
 *		L0040B7E0()
 *		L0040B9B0()
 *		L0040C970()
 *		L0040CB60()
 *		L0040D880()
 *		L0040DC10()
 *		L0040E200()
 *		L0040E700()
 *		L0040E830()
 *		L0040F2D0()
 *		L004105F0()
 *		L004112D0()
 *		L00412280()
 *		L004148A0()
 *		L00414FA0()
 *		L00415120()
 *		L004157B0()
 *		L00416000()
 *		L00416790()
 *		L00418470()
 *		L00418FB8()
 *		L0041DB20()
 *		L0041DD99()
 *		L0041F14C()
 *		L0041FE30()
 *		L00423670()
 *		L00423760()
 *		L0042471D()
 *		L00424930()
 *		L00425870()
 *		L004258E0()
 *		L00429440()
 *		L00429B10()
 *		L0042A580()
 *		L0042BF80()
 *		L0042CFC0()
 *		L0042D720()
 *		L0042DAB0()
 *		L0042E490()
 *		L0042E830()
 *		L0042EBC0()
 *		L0042EC50()
 *		L0042FAA0()
 *		L0042FE40()
 *		L0042FF90()
 *		L00430F40()
 *		L00432760()
 *		L00432A90()
 *		L00434270()
 *		L00438A50()
 *		L00439CA0()
 *		L0043AFA8()
 *		L00445430()
 *		L00446AB0()
 *		L00447780()
 *		L00447FF0()
 *		L00448160()
 *		L004483B0()
 *		L00449380()
 *		L00454600()
 *		L00455AC0()
 *		L00455B1A()
 *		L00456B0E()
 *		L00458970()
 *		L0045D100()
 *		L0045FC70()
 *		L0046CB00()
 */

L00434150()
{
	/* unknown */ void  Vfffffff4;



    (save)ebp;
    ebp = esp;
    esp = esp - 0xc;
    esp = esp & -8;
    Vfffffff4 = 0;
    *esp = Vfffffff4;
    edx = *(ebp + 8);
    ecx = *(ebp + 0xc);
    for((fsave) *esp; 1; ecx = ecx - 0x10) {
        if(!(edx & 0x1f)) {
            eax = ecx >> 6;
            ecx = ecx & 0x3f;
            if(!(eax = eax - 1)) {
                do {
                    asm("fst qword [edx]");
                    asm("fst qword [edx+0x8]");
                    edx = edx + 0x10;
                    asm("fst qword [edx]");
                    asm("fst qword [edx+0x8]");
                    edx = edx + 0x10;
                    asm("fst qword [edx]");
                    asm("fst qword [edx+0x8]");
                    edx = edx + 0x10;
                    asm("fst qword [edx]");
                    asm("fst qword [edx+0x8]");
                    edx = edx + 0x10;
                } while(eax = eax - 1);
            }
            if(ecx > 0x1f) {
                asm("fst qword [edx]");
                asm("fst qword [edx+0x8]");
                edx = edx + 0x10;
                asm("fst qword [edx]");
                asm("fst qword [edx+0x8]");
                edx = edx + 0x10;
                ecx = ecx - 0x20;
            }
        }
        eax = edx;
        if(eax & 0xf || ecx <= 0xf) {
L004341e0:
            if(eax & 7 || ecx <= 7) {
                if(eax & 3 || ecx <= 3) {
                    if(eax & 1 || ecx <= 1) {
                        if(ecx == 0) {
                            goto L00434252;
                        }
                        *edx = 0;
                        edx = edx + 1;
                        ecx = ecx - 1;
                        continue;
                    }
                    *edx = 0;
                    edx = edx + 2;
                    ecx = ecx - 2;
                    continue;
                }
                *edx = 0;
                edx = edx + 4;
                ecx = ecx - 4;
                continue;
            }
            asm("fst qword [edx]");
            edx = edx + 8;
            ecx = ecx - 8;
            continue;
        }
        asm("fst qword [edx]");
        asm("fst qword [edx+0x8]");
        edx = edx + 0x10;
    }
    goto L004341e0;
L00434252:
    esp = ebp;
    (restore)ebp;
    st0 = ((frestore));
}

/*	Procedure: 0x00434258 - 0x0043425F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434258()
{



}

/*	Procedure: 0x00434260 - 0x00434260
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00434270()
 */

L00434260()
{



}

/*	Procedure: 0x00434261 - 0x0043426F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434261()
{



}

/*	Procedure: 0x00434270 - 0x00434293
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00430240()
 *		L00436020()
 *		L00446A10()
 *		L0045C9A0()
 */

L00434270(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    L00434150(A8, Ac);
    return L00434260(A8, Ac);
}

/*	Procedure: 0x00434294 - 0x0043429F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434294()
{



}

/*	Procedure: 0x004342A0 - 0x00434321
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004018F0()
 *		L00401B20()
 *		L00401D10()
 *		L004024A0()
 *		L00402D10()
 *		L00403190()
 *		L00403980()
 *		L00403B70()
 *		L00409390()
 *		L0040AA30()
 *		L0040CB60()
 *		L0040D600()
 *		L0040DC10()
 *		L0040DF50()
 *		L0040E200()
 *		L0040E830()
 *		L0040EE00()
 *		L0040F110()
 *		L0040FAE0()
 *		L00410C20()
 *		L00410DC0()
 *		L004112D0()
 *		L00412F60()
 *		L00413C00()
 *		L00414FA0()
 *		L00416000()
 *		L004166E0()
 *		L00416790()
 *		L00416F00()
 *		L00418470()
 *		L0041DCE0()
 *		L00425160()
 *		L00427DA0()
 *		L00429190()
 *		L00429790()
 *		L004297E0()
 *		L00429870()
 *		L004298D0()
 *		L00429960()
 *		L00429A90()
 *		L00429B10()
 *		L00429BC0()
 *		L00429C40()
 *		L00429CD0()
 *		L0042A740()
 *		L0042AD50()
 *		L0042AF10()
 *		L0042BAE0()
 *		L0042BDB0()
 *		L0042BF80()
 *		L0042C050()
 *		L0042C440()
 *		L0042CBE0()
 *		L0042CFC0()
 *		L0042E350()
 *		L00430540()
 *		L00430630()
 *		L00430850()
 *		L004308F0()
 *		L00430A70()
 *		L00430D50()
 *		L00430F40()
 *		L00431A10()
 *		L00433B90()
 *		L004353E0()
 *		L00435B10()
 *		L00435CD0()
 *		L00435E50()
 *		L00436100()
 *		L004362E0()
 *		L004366B0()
 *		L00437390()
 *		L00437460()
 *		L00437E20()
 *		L004381A0()
 *		L00438300()
 *		L004395A0()
 *		L0043A428()
 *		L0043A718()
 *		L0043A7BC()
 *		L0043AD1B()
 *		L00443550()
 *		L0044602B()
 *		L00446B20()
 *		L00447240()
 *		L00448EC0()
 *		L00449060()
 *		L00449150()
 *		L00456D00()
 *		L00457AE0()
 *		L0045CEF0()
 *		L00462060()
 */

L004342A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    (save)edi;
    eax = A10;
    esi = Ac;
    edi = A8;
    ecx = 0;
    if(edi <= esi) {
        if(eax >= 0x10) {
            if(!(ecx = 0 - edi & 3)) {
                eax = eax - ecx;
                asm("rep movsb");
            }
            ecx = eax;
            eax = eax & 3;
            ecx = ecx >> 2;
            asm("rep movsd");
            if(eax == 0) {
                goto L00434319;
            }
        }
        ecx = eax;
        asm("rep movsb");
    } else {
        asm("std");
        esi = esi + eax - 1;
        edi = edi + eax - 1;
        if(eax >= 0x10) {
            if(!(ecx = edi - 3 & 3)) {
                eax = eax - ecx;
                asm("rep movsb");
            }
            esi = esi - 3;
            edi = edi - 3;
            ecx = eax;
            eax = eax & 3;
            ecx = ecx >> 2;
            asm("rep movsd");
            if(eax == 0) {
                goto L00434318;
            }
            esi = esi + 3;
            edi = edi + 3;
        }
        ecx = eax;
        asm("rep movsb");
L00434318:
        asm("cld");
    }
L00434319:
    esp = ebp - 8;
    (restore)edi;
    return A10;
}

/*	Procedure: 0x00434322 - 0x0043432F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434322()
{



}

/*	Procedure: 0x00434364 - 0x0043436F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434364()
{



}

/*	Procedure: 0x00434370 - 0x0043437F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401D10()
 *		L0040D600()
 *		L004148A0()
 *		L00449150()
 */

L00434370()
{



    eax = eax + 3 & -4;
    goto L00434330;
}

/*	Procedure: 0x00434380 - 0x00434510
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L0040CB60()
 *		L0040CFF0()
 *		L0040E830()
 *		L0040F8A0()
 *		L004101C0()
 *		L00411640()
 *		L00414DD0()
 *		L004154F0()
 *		L0041CA10()
 *		L00425E40()
 *		L00430540()
 *		L004345E0()
 *		L004377B8()
 *		L00438970()
 *		L0043A718()
 *		L00442140()
 *		L0045D100()
 *		L0045D260()
 */

L00434380(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A1c;
    esp = esp - 4;
    edx = A14;
    ecx = A18;
    if(edi == 0 || edx == ecx) {
        esp = esp + 4;
        return 1;
    }
    if(edx == 0 || ecx == 0) {
        esp = esp + 4;
        return 0;
    }
    ebp = ~edx;
    eax = ~ecx;
    ebp = ebp & 3;
    eax = eax & 3;
    if(ebp == eax) {
        if(ebp > edi) {
            ebp = edi;
        }
        if(ebp != 0) {
            ebx = *edx & 0xff;
            eax = *ecx & 0xff;
            if(bl != al) {
                esp = esp + 4;
                return 0;
            }
            if(ebp > 1) {
                ebx = *(edx + 1) & 0xff;
                eax = *(ecx + 1) & 0xff;
                if(bl != al) {
                    esp = esp + 4;
                    return 0;
                }
                if(ebp > 2) {
                    ebx = *(edx + 2) & 0xff;
                    if(bl != ( *(ecx + 2) & 0xff)) {
                        esp = esp + 4;
                        return 0;
                    }
                }
            }
            edx = edx + ebp;
            ecx = ecx + ebp;
            edi = edi - ebp;
        }
        ebp = edi;
        esi = 0;
        ebp = ebp >> 2;
        if(ebp > 0) {
            do {
                ebx = *(edx + esi * 4);
                eax = *(ecx + esi * 4);
                if(ebx != eax) {
                    goto L0043444d;
                }
                esi = esi + 1;
            } while(esi < ebp);
            goto L0043445c;
L0043444d:
            esp = esp + 4;
            return 0;
        }
L0043445c:
        if(!(eax = edi & 3)) {
            esi = edi & -4;
            edx = edx + esi;
            ecx = ecx + esi;
            if(eax != 3) {
                goto L004344a0;
            }
            ebx = *edx & 65535;
            eax = *ecx & 65535;
            if(bx != ax) {
                esp = esp + 4;
                return 0;
            }
            edx = *(edx + 2) & 0xff;
            ecx = *(ecx + 2) & 0xff;
            if(dl != cl) {
                esp = esp + 4;
                return 0;
L004344a0:
                if(eax != 2) {
                    goto L004344c0;
                }
                ebx = *edx & 65535;
                if(bx != ( *ecx & 65535)) {
                    esp = esp + 4;
                    return 0;
L004344c0:
                    edx = *edx & 0xff;
                    if(dl != ( *ecx & 0xff)) {
                        esp = esp + 4;
                        return 0;
                    }
                }
            }
        }
        esp = esp + 4;
        return 1;
    }
    esi = 0;
    if(edi > 0) {
        do {
            ebx = *(esi + edx) & 0xff;
            eax = *(esi + ecx) & 0xff;
            if(bl != al) {
                goto L004344f4;
            }
L00434500:
            esi = esi + 1;
        } while(esi < edi);
        goto L00434507;
L004344f4:
        esp = esp + 4;
        return 0;
        goto L00434500;
    }
L00434507:
    esp = esp + 4;
    return 1;
}

/*	Procedure: 0x00434511 - 0x0043451F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434511()
{



}

/*	Procedure: 0x00434520 - 0x0043456C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00434570()
 */

L00434520(Ac, A10, A14)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;



    (save)Ac;
    esi = 0;
    if(A14 > 0) {
        do {
            ecx = *(esi + Ac) & 0xff;
            eax = *(esi + A10) & 0xff;
            if(ecx != eax) {
                goto L00434541;
            }
L00434560:
            esi = esi + 1;
        } while(esi < A14);
        goto L00434567;
L00434541:
        eax = ecx < eax ? eax | -1 : 1;
        (restore)Ac;
        return;
        goto L00434560;
    }
L00434567:
    (restore)Ac;
    return 0;
}

/*	Procedure: 0x0043456D - 0x0043456F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043456D()
{



}

/*	Procedure: 0x00434570 - 0x004345D0
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00437630()
 */

L00434570(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = Ac;
    (save)A8;
    if(eax < A14) {
        eax = L00434520(A8, A10, eax);
        if(eax == 0) {
            eax = eax | -1;
        }
        esp = ebp - 4;
        (restore)A8;
        return;
    }
    if(eax > A14) {
        eax = L00434520(A8, A10, A14);
        if(eax == 0) {
            eax = 1;
        }
        esp = ebp - 4;
        (restore)A8;
        return;
    }
    eax = L00434520(A8, A10, eax);
    esp = ebp - 4;
    (restore)A8;
}

/*	Procedure: 0x004345D1 - 0x004345DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004345D1()
{



}

/*	Procedure: 0x004345E0 - 0x00434879
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00425F10()
 *		L00426440()
 */

L004345E0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = Ac;
    esp = esp - 0x408;
    esi = A8;
    if(A14 < ebx || A14 == 0 || ebx == 0) {
        return 0;
    }
    if(ebx == 1) {
        eax = L00434880( *esi & 0xff, A10, A14);
        esp = ebp - 0xc;
        return;
    }
    if(ebx == 2) {
        ecx = ( *esi & 0xff) << 8;
        edx = *(esi + 1) & 0xff;
        ecx = ecx | edx;
        A14 :: 1;
        esi = 1;
        if(!(ebx = *A10 & 0xff)) {
            do {
                ebx = ebx << 8;
                ebx = bx & 65535;
                ebx = ebx | *(esi + A10) & 0xff;
                if(ebx == ecx) {
                    goto L00434668;
                }
                esi = esi + 1;
            } while(esi < A14);
            goto L0043467d;
L00434668:
            esp = ebp - 0xc;
            return A10 + esi - 1;
        }
L0043467d:
        esp = ebp - 0xc;
        return 0;
    }
    edx = 0;
    do {
        edi = ebx + 1;
        eax = edi;
        *(ebp + edx * 4 + -1036) = edi;
        ecx = eax;
        *(ebp + edx * 4 + -1028) = ecx;
        *(ebp + edx * 4 + -1024) = eax;
        ecx = eax;
        *(ebp + edx * 4 + -1032) = eax;
        *(ebp + edx * 4 + -1020) = eax;
        *(ebp + edx * 4 + -1016) = ecx;
        *(ebp + edx * 4 + -1012) = eax;
        *(ebp + edx * 4 + -1008) = eax;
        edx = edx + 8;
    } while(edx < 0x100);
    ecx = 0;
    if(ebx > 0) {
        *(ebp + -1040) = ebx;
        *(ebp + -1040) = *(ebp + -1040) - 8;
        if(ebx > 8) {
            do {
                edx = *(ecx + esi) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - ecx;
                edx = ecx + 1;
                eax = *(esi + ecx + 1) & 0xff;
                *(ebp + eax * 4 + -1036) = ebx - edx;
                eax = ecx + 2;
                edx = *(esi + ecx + 2) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - eax;
                edx = ecx + 3;
                eax = *(esi + ecx + 3) & 0xff;
                *(ebp + eax * 4 + -1036) = ebx - edx;
                eax = ecx + 4;
                edx = *(esi + ecx + 4) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - eax;
                edx = ecx + 5;
                eax = *(esi + ecx + 5) & 0xff;
                *(ebp + eax * 4 + -1036) = ebx - edx;
                eax = ecx + 6;
                edx = *(esi + ecx + 6) & 0xff;
                *(ebp + edx * 4 + -1036) = ebx - eax;
                edi = ecx + 7;
                eax = *(esi + ecx + 7) & 0xff;
                edx = ebx - edi;
                ecx = ecx + 8;
                *(ebp + eax * 4 + -1036) = edx;
            } while(ecx < *(ebp + -1040));
        }
        edi = ecx;
        do {
            edx = *(ecx + esi) & 0xff;
            ecx = ecx + 1;
            eax = ebx - edi;
            edi = ecx;
            *(ebp + edx * 4 + -1036) = eax;
        } while(edi < ebx);
    }
    *(ebp + -1040) = A14;
    *(ebp + -1040) = *(ebp + -1040) - ebx;
    *(ebp + -1044) = 0;
    if(*(ebp + -1040) > 0) {
        do {
            edi = A10 + *(ebp + -1044);
            L00434380(esi, edi, ebx);
            if(al != 0) {
                goto L00434808;
            }
            ecx = ebx + A10;
            *(ebp + -1044) = *(ebp + -1044) + *(ebp + ( *(ecx + *(ebp + -1044)) & 0xff) * 4 + -1036);
        } while(*(ebp + -1044) < *(ebp + -1040));
        goto L0043483d;
L00434808:
        esp = ebp - 0xc;
        return edi;
    }
L0043483d:
    if(*(ebp + -1044) == *(ebp + -1040)) {
        edi = A10 + *(ebp + -1044);
        L00434380(esi, edi, ebx);
        if(al != 0) {
            esp = ebp - 0xc;
            return edi;
        }
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0043487A - 0x0043487F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043487A()
{



}

/*	Procedure: 0x00434880 - 0x004348A8
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040FE40()
 *		L00425F10()
 *		L00433B90()
 *		L004345E0()
 */

L00434880(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    ebx = A8;
    if(!(ecx = Ac - 1)) {
        do {
            eax = ebx;
            ebx = ebx + 1;
            if(*eax == A4) {
                goto L0043489b;
            }
        } while(ecx = ecx - 1);
        goto L004348a5;
L0043489b:
        eax = ebx - 1;
        (restore)ebx;
        return;
    }
L004348a5:
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x004348A9 - 0x004348AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004348A9()
{



}

/*	Procedure: 0x004348B0 - 0x004348D7
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040FDA0()
 *		L00414DD0()
 *		L00429440()
 *		L00432A90()
 *		L00438970()
 */

L004348B0(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = Ac;
    eax = A8 + ecx;
    if(!(ecx = ecx - 1)) {
        do {
            eax = eax - 1;
            if(*eax == A4) {
                goto L004348ca;
            }
L004348d0:
        } while(ecx = ecx - 1);
        goto L004348d5;
L004348ca:
        return;
        goto L004348d0;
    }
L004348d5:
    return 0;
}

/*	Procedure: 0x004348D8 - 0x00434983
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 */

L004348D8(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = A1c;
    esp = esp - 4;
    if(eax != 0) {
        *eax = 0;
    }
    eax = A14;
    edx = *(eax + 4);
    edi = *(eax + 8);
    esi = eax + 0x10;
    eax = edx;
    if(edx >= edi) {
        if(A18 != 0) {
            *A18 = 0;
        }
        esp = esp + 4;
        return 0;
    }
    do {
        ebx = *edx & 0xff;
        ecx = ebx & 7;
        ebx = ebx >> 3;
        ebp = 1 << cl;
        ebx = *(esi + ebx) & 0xff;
        edx = edx + 1;
        if(!(ebp & ebx)) {
            goto L0043493d;
        }
    } while(edx < edi);
    goto L00434964;
L0043493d:
    if(A18 != 0) {
        ebx = edx - eax - 1;
        *A18 = ebx;
    }
    *(A14 + 4) = edx;
    esp = esp + 4;
    return;
L00434964:
    if(A18 != 0) {
        edx = edi - eax;
        *A18 = edx;
    }
    *(A14 + 4) = edi;
    esp = esp + 4;
}

/*	Procedure: 0x00434984 - 0x0043498F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434984()
{



}

/*	Procedure: 0x00434A25 - 0x00434A2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434A25()
{



}

/*	Procedure: 0x00434AF1 - 0x00434AFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434AF1()
{



}

/*	Procedure: 0x00434B00 - 0x00434B18
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00448630()
 */

L00434B00(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return *A8(A8, Ac, A10);
}

/*	Procedure: 0x00434B19 - 0x00434B1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434B19()
{



}

/*	Procedure: 0x00434B20 - 0x00434CF0
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00448630()
 */

L00434B20(A4, A8, Ac, A10, A14)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    eax = A4;
    (save)ebx;
    (save)esi;
    (save)A10;
    ebx = A8;
    (save)ebp;
    esp = esp - 0xc;
    *esp = eax;
    *( *esp + 4) = ebx;
    eax = *esp;
    *(eax + 8) = ebx + Ac;
    eax = *esp;
    *(eax + 0xc) = A14;
    *( *esp + 0x10) = 0;
    *( *esp + 0x14) = 0;
    *( *esp + 0x18) = 0;
    *( *esp + 0x1c) = 0;
    *( *esp + 0x20) = 0;
    *( *esp + 0x24) = 0;
    *( *esp + 0x28) = 0;
    *( *esp + 0x2c) = 0;
    esi = *esp + 0x10;
    Vffffffec = A10 != 0 ? *A10 & 0xff : 0;
    ebp = 1;
    if(Vffffffec >= 1) {
        eax = Vffffffec;
        Vffffffe8 = eax;
        Vffffffe8 = Vffffffe8 - 8;
        if(eax > 8) {
            do {
                cl = *(A10 + ebp) & 0xff & 7;
                edx = edx >> 3;
                bl = 1 << cl;
                *(esi + edx) = *(esi + edx) | bl;
                cl = *(A10 + ebp + 1) & 0xff & 7;
                ebx = ebx >> 3;
                dl = 1 << cl;
                *(esi + ebx) = *(esi + ebx) | dl;
                cl = *(A10 + ebp + 2) & 0xff & 7;
                edx = edx >> 3;
                bl = 1 << cl;
                *(esi + edx) = *(esi + edx) | bl;
                cl = *(A10 + ebp + 3) & 0xff & 7;
                ebx = ebx >> 3;
                dl = 1 << cl;
                *(esi + ebx) = *(esi + ebx) | dl;
                cl = *(A10 + ebp + 4) & 0xff & 7;
                edx = edx >> 3;
                bl = 1 << cl;
                *(esi + edx) = *(esi + edx) | bl;
                cl = *(A10 + ebp + 5) & 0xff & 7;
                ebx = ebx >> 3;
                dl = 1 << cl;
                *(esi + ebx) = *(esi + ebx) | dl;
                cl = *(A10 + ebp + 6) & 0xff & 7;
                edx = edx >> 3;
                bl = 1 << cl;
                *(esi + edx) = *(esi + edx) | bl;
                cl = *(A10 + ebp + 7) & 0xff & 7;
                ebx = ebx >> 3;
                dl = 1 << cl;
                ebp = ebp + 8;
                *(esi + ebx) = *(esi + ebx) | dl;
            } while(ebp <= Vffffffe8);
        }
        do {
            edx = *(A10 + ebp) & 0xff;
            cl = dl & 7;
            edx = edx >> 3;
            bl = 1 << cl;
            ebp = ebp + 1;
            *(esi + edx) = *(esi + edx) | bl;
        } while(ebp <= Vffffffec);
    }
    if(!(A14 & 1)) {
        if(!(A14 & 2)) {
            eax = *esp;
            *eax = 0x4348e0;
        } else {
            eax = *esp;
            *eax = 0x434990;
        }
    } else {
        eax = *esp;
        *eax = 0x434a30;
    }
    esp = esp + 0xc;
    (restore)ebp;
    (restore)A10;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00434CF1 - 0x00434CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434CF1()
{



}

/*	Procedure: 0x00434D00 - 0x00434DC5
 *	Argument size: 24
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0043C150()
 */

L00434D00(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A10;
    if(A8 == 0 || Ac == 0 || ebx == 0 || A14 == 0 || A18 == 0) {
        return 0;
    }
    eax = A18(A1c, A8, Ac);
    if(eax == 0) {
        esp = ebp - 0xc;
        return Ac;
    }
    if(eax < 0) {
        esp = ebp - 0xc;
        return 0;
    }
    edi = ebx - 1;
    *(ebp - 0x10) = 1;
    if(edi >= 1) {
        do {
            esi = *(ebp - 0x10) + edi >> 1;
            ebx = esi;
            ebx = A14 * A14 + Ac;
            eax = A18(A1c, A8, ebx);
            if(eax == 0) {
                goto L00434d91;
            }
L00434da0:
            if(eax >= 0) {
                *(ebp - 0x10) = esi;
                *(ebp - 0x10) = *(ebp - 0x10) + 1;
            } else {
                edi = esi - 1;
            }
        } while(*(ebp - 0x10) <= edi);
        goto L00434dbc;
L00434d91:
        esp = ebp - 0xc;
        return ebx;
        goto L00434da0;
    }
L00434dbc:
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00434DC6 - 0x00434DCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434DC6()
{



}

/*	Procedure: 0x00434DD0 - 0x00434E9A
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004291F0()
 */

L00434DD0(Ac, A10, A14, A18)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;



    (save)edi;
    (save)Ac;
    ebx = A14;
    if(A10 == 0 || ebx == 0) {
        if(A18 != 0) {
            *A18 = 0;
        }
        (restore)Ac;
        (restore)edi;
        return 0;
    }
    edx = *A10;
    if(Ac == edx) {
        if(A18 != 0) {
            *A18 = 0;
        }
        (restore)Ac;
        (restore)edi;
        return 1;
    }
    if(Ac < edx) {
        if(A18 != 0) {
            *A18 = 0;
        }
        (restore)Ac;
        (restore)edi;
        return 0;
    }
    edi = ebx - 1;
    ebx = 0;
    ecx = 1;
    if(edi < 1) {
        if(A18 != 0) {
            *A18 = 1;
        }
        (restore)Ac;
        (restore)edi;
        return 0;
L00434e5c:
        if(A18 != 0) {
            *A18 = ebx;
        }
        (restore)Ac;
        (restore)edi;
        return 1;
        goto L00434e70;
    }
    while(ecx <= edi) {
        ebx = edi + ecx >> 1;
        edx = *(A10 + ebx * 4);
        if(Ac == edx) {
            goto L00434e5c;
        }
L00434e70:
        if(Ac >= edx) {
            ecx = ebx + 1;
            continue;
        }
        edi = ebx - 1;
    }
    if(Ac > edx) {
        ebx = ebx + 1;
    }
    if(A18 != 0) {
        *A18 = ebx;
    }
    (restore)Ac;
    (restore)edi;
    return 0;
}

/*	Procedure: 0x00434E9B - 0x00434E9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434E9B()
{



}

/*	Procedure: 0x00434EA0 - 0x00434FF8
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004148A0()
 *		L004353E0()
 */

L00434EA0(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    edx = A4;
    ecx = ~edx;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = A8;
    ecx = ecx & 3;
    (save)ebp;
    eax = Ac;
    if(ecx >= edi) {
        ecx = edi;
    }
    if(ecx != 0) {
        ebp = eax;
        ebx = *edx & 0xff;
        ebp = ebp >> 0x18 ^ ebx;
        eax = eax << 8 ^ *(ebp * 4 + 0x4812c8);
        edx = edx + 1;
        if(ecx > 1) {
            esi = eax;
            ebx = *edx & 0xff;
            esi = esi >> 0x18 ^ ebx;
            eax = eax << 8 ^ *(esi * 4 + 0x4812c8);
            edx = edx + 1;
            if(ecx > 2) {
                edi = eax;
                ebx = *edx & 0xff;
                edi = edi >> 0x18 ^ ebx;
                eax = eax << 8 ^ *(edi * 4 + 0x4812c8);
                edx = edx + 1;
            }
        }
        A8 = A8 - ecx;
    }
    ebp = A8 >> 2;
    ebx = 0;
    if(ebp > 0) {
        do {
            esi = *(edx + ebx * 4);
            edi = esi & 0xff;
            ecx = eax >> 0x18 ^ edi;
            eax = eax << 8 ^ *(ecx * 4 + 0x4812c8);
            edi = esi >> 8 & 0xff;
            edi = edi ^ eax >> 0x18;
            eax = eax << 8 ^ *(edi * 4 + 0x4812c8);
            edi = esi >> 0x10 & 0xff;
            edi = edi ^ eax >> 0x18;
            eax = eax << 8 ^ *(edi * 4 + 0x4812c8);
            esi = esi >> 0x18 & 0xff;
            esi = esi ^ eax >> 0x18;
            eax = eax << 8;
            ebx = ebx + 1;
            eax = eax ^ *(esi * 4 + 0x4812c8);
        } while(ebx < ebp);
    }
    if(!(ecx = A8 & 3)) {
        ebp = eax >> 0x18;
        eax = eax << 8;
        edx = (A8 & -4) + edx;
        eax = eax ^ *((ebp ^ *edx & 0xff) * 4 + 0x4812c8);
        if(ecx > 1) {
            ebp = eax;
            ebx = *(edx + 1) & 0xff;
            ebp = ebp >> 0x18 ^ ebx;
            eax = eax << 8 ^ *(ebp * 4 + 0x4812c8);
            edx = edx + 2;
            if(ecx > 2) {
                ebp = eax >> 0x18;
                ebp = ebp ^ *edx & 0xff;
                eax = eax << 8 ^ *(ebp * 4 + 0x4812c8);
            }
        }
    }
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00434FF9 - 0x00434FFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00434FF9()
{



}

/*	Procedure: 0x00435000 - 0x00435375
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00401D10()
 *		L00435380()
 *		L004353E0()
 *		L00442070()
 *		L0045CEF0()
 *		L0045D100()
 *		L0045D260()
 */

L00435000(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = A4;
    edx = ~ecx;
    (save)ebx;
    (save)esi;
    esi = A8;
    edx = edx & 3;
    (save)edi;
    (save)ebp;
    eax = Ac;
    if(edx >= esi) {
        edx = esi;
    }
    if(edx != 0) {
        eax = eax * 16777619;
        ebx = *ecx & 0xff;
        ecx = ecx + 1;
        eax = eax ^ ebx;
        if(edx > 1) {
            eax = eax * 16777619;
            ebx = *ecx & 0xff;
            ecx = ecx + 1;
            eax = eax ^ ebx;
            if(edx > 2) {
                eax = eax * 16777619;
                eax = eax ^ *ecx & 0xff;
                ecx = ecx + 1;
            }
        }
        A8 = A8 - edx;
    }
    ebp = A8 >> 2;
    ebx = 0;
    if(ebp > 0) {
        ebp :: 8;
        if(!(edx = ebp - 8)) {
            do {
                edi = *(ecx + ebx * 4);
                eax = eax * 16777619;
                eax = (eax ^ edi & 0xff) * 16777619;
                eax = (eax ^ edi >> 8 & 0xff) * 16777619;
                eax = eax ^ edi >> 0x10 & 0xff;
                esi = *(ecx + ebx * 4 + 4);
                eax = eax * 16777619;
                eax = (eax ^ edi >> 0x18 & 0xff) * 16777619;
                eax = (eax ^ esi & 0xff) * 16777619;
                eax = (eax ^ esi >> 8 & 0xff) * 16777619;
                eax = eax ^ esi >> 0x10 & 0xff;
                edi = *(ecx + ebx * 4 + 8);
                eax = eax * 16777619;
                eax = (eax ^ esi >> 0x18 & 0xff) * 16777619;
                eax = (eax ^ edi & 0xff) * 16777619;
                eax = (eax ^ edi >> 8 & 0xff) * 16777619;
                eax = eax ^ edi >> 0x10 & 0xff;
                esi = *(ecx + ebx * 4 + 0xc);
                eax = eax * 16777619;
                eax = (eax ^ edi >> 0x18 & 0xff) * 16777619;
                eax = (eax ^ esi & 0xff) * 16777619;
                eax = (eax ^ esi >> 8 & 0xff) * 16777619;
                eax = eax ^ esi >> 0x10 & 0xff;
                edi = *(ecx + ebx * 4 + 0x10);
                eax = eax * 16777619;
                eax = (eax ^ esi >> 0x18 & 0xff) * 16777619;
                eax = (eax ^ edi & 0xff) * 16777619;
                eax = (eax ^ edi >> 8 & 0xff) * 16777619;
                eax = eax ^ edi >> 0x10 & 0xff;
                esi = *(ecx + ebx * 4 + 0x14);
                eax = eax * 16777619;
                eax = (eax ^ edi >> 0x18 & 0xff) * 16777619;
                eax = (eax ^ esi & 0xff) * 16777619;
                eax = (eax ^ esi >> 8 & 0xff) * 16777619;
                eax = eax ^ esi >> 0x10 & 0xff;
                edi = *(ecx + ebx * 4 + 0x18);
                eax = eax * 16777619;
                eax = (eax ^ esi >> 0x18 & 0xff) * 16777619;
                eax = (eax ^ edi & 0xff) * 16777619;
                eax = (eax ^ edi >> 8 & 0xff) * 16777619;
                eax = eax ^ edi >> 0x10 & 0xff;
                esi = *(ecx + ebx * 4 + 0x1c);
                eax = eax * 16777619;
                edi = edi >> 0x18 & 0xff;
                ebx = ebx + 8;
                eax = (eax ^ edi) * 16777619;
                eax = (eax ^ esi & 0xff) * 16777619;
                eax = (eax ^ esi >> 8 & 0xff) * 16777619;
                eax = (eax ^ esi >> 0x10 & 0xff) * 16777619;
                eax = eax ^ esi >> 0x18 & 0xff;
            } while(ebx < edx);
        }
        do {
            edx = *(ecx + ebx * 4);
            eax = eax * 16777619;
            esi = edx & 0xff;
            ebx = ebx + 1;
            eax = (eax ^ esi) * 16777619;
            eax = (eax ^ edx >> 8 & 0xff) * 16777619;
            eax = (eax ^ edx >> 0x10 & 0xff) * 16777619;
            edx = edx >> 0x18;
            eax = eax ^ dl & 0xff;
        } while(ebx < ebp);
    }
    if(!(edx = A8 & 3)) {
        eax = eax * 16777619;
        ecx = (A8 & -4) + ecx;
        eax = eax ^ *ecx & 0xff;
        if(edx > 1) {
            eax = eax * 16777619;
            ebx = *(ecx + 1) & 0xff;
            ecx = ecx + 2;
            eax = eax ^ ebx;
            if(edx > 2) {
                eax = eax * 16777619;
                eax = eax ^ *ecx & 0xff;
            }
        }
    }
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00435376 - 0x0043537F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435376()
{



}

/*	Procedure: 0x00435380 - 0x004353DE
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004021F8()
 *		L00409390()
 *		L00409860()
 *		L00409B60()
 *		L0040B130()
 *		L0040D0F0()
 *		L00430D50()
 */

L00435380()
{
	/* unknown */ void  ebx;



    ebx = L0042F760();
    eax = L00435000(0x481098, 0x100, ebx);
    edx = M00481198;
    if(edx == 0) {
        edx = ebx;
    }
    ecx = edx * 1103515245 + 12345;
    eax = eax ^ ecx;
    M00481198 = ecx;
    *((M0048119c & 0xff) * 4 + 0x481098) = *((M0048119c & 0xff) * 4 + 0x481098) ^ eax;
    M0048119c = al & 0x3f;
}

/*	Procedure: 0x004353DF - 0x004353DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004353DF()
{



}

/*	Procedure: 0x004353E0 - 0x004357B4
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004300F0()
 */

L004353E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *((M0048119c & 0xff) * 4 + 0x481098) = *((M0048119c & 0xff) * 4 + 0x481098) ^ A8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x30;
    M0048119c = A8 & 0x3f;
    esi = 0x481098;
    if(Ac != 0) {
        *(ebp - 0x1c) = 0x481098;
        *(ebp - 0x1c) = *(ebp - 0x1c) + 1;
        *(ebp - 0x14) = 0x481098;
        *(ebp - 0x14) = *(ebp - 0x14) + 0xfe;
        *(ebp - 0x10) = 0x481098;
        *(ebp - 0x10) = *(ebp - 0x10) + 2;
        L0045C850(0x481098, 0x100, ebp - 0x3c);
        *(ebp - 0x28) = L00434EA0(esi, 0x100, !( *esi));
        *(ebp - 0x24) = L00435000(esi, 0x100, !( *(esi + 4)));
        edi = !( *(esi + 8));
        eax = 0;
L00435476:
        edi = edi ^ *(esi + eax * 4) ^ *(esi + eax * 4 + 4) ^ *(esi + eax * 4 + 8) ^ *(esi + eax * 4 + 0xc) ^ *(esi + eax * 4 + 0x10) ^ *(esi + eax * 4 + 0x14) ^ *(esi + eax * 4 + 0x18) ^ *(esi + eax * 4 + 0x1c);
        eax = eax + 8;
        if(eax < 0x40) {
            goto L00435476;
        }
        *(ebp - 0x20) = edi;
        ebx = 0x20;
        if(Ac < 0x20) {
            ebx = Ac;
        }
        *(ebp - 0x18) = ebx;
        L004342A0(A8, ebp - 0x3c, ebx);
        A8 = A8 + ebx;
        eax = A8;
        Ac = Ac - *(ebp - 0x18);
        if(!(edi & 1)) {
            ebx = *(esi + 0xff) & 0xff;
            L004342A0( *(ebp - 0x1c), esi, 0xff);
            *esi = bl;
        } else {
            edi = *( *(ebp - 0x14)) & 65535;
            L004342A0( *(ebp - 0x10), esi, 0xfe);
            *esi = di;
        }
        eax = L0042F760() & 3;
        if(eax <= 2) {
            goto ( *(eax * 4 + "#UC"));
            edi = *(esi + 4);
            eax = eax >> 4;
            *(esi + 4) = edi << 0x1c | eax;
            edx = *(esi + 0xc);
            ecx = ecx >> 3;
            *(esi + 0xc) = (edx << 0x1d | ecx) + 1;
            edi = *(esi + 0x28);
            ebx = ebx >> 1;
            *(esi + 0x28) = edi << 0x1f | ebx;
            edx = *(esi + 0x60);
            eax = eax * 4;
            *(esi + 0x60) = edx >> 0x1e | eax;
            edi = *(esi + 0xb4);
            ecx = ecx * 8;
            *(esi + 0xb4) = edi >> 0x1d | ecx;
            edx = *(esi + 0xc0) << 0x1f;
            *(esi + 0xc0) = edx | ebx >> 1;
            edi = *(esi + 0xd8);
            eax = eax + eax;
            *(esi + 0xd8) = edi >> 0x1f | eax;
            edx = *(esi + 0xdc) << 0x17;
            *(esi + 0xdc) = edx | ecx >> 9;
            goto L004357a3;
            edi = *(esi + 0x18);
            ebx = ebx >> 1;
            *(esi + 0x18) = edi << 0x1f | ebx;
            edx = *(esi + 0x38);
            eax = eax * 8;
            *(esi + 0x38) = edx >> 0x1d | eax;
            edi = *(esi + 0x50);
            ecx = ecx + ecx;
            *(esi + 0x50) = edi >> 0x1f | ecx;
            edx = *(esi + 0x5c);
            ebx = ebx << 5;
            *(esi + 0x5c) = edx >> 0x1b | ebx;
            edi = *(esi + 0x8c);
            eax = eax << 0xe;
            *(esi + 0x8c) = (edi >> 0x12 | eax) + 1;
            edx = *(esi + 0x9c) << 0x1f;
            *(esi + 0x9c) = edx | ecx >> 1;
            edi = *(esi + 0xd0) << 0x1f;
            *(esi + 0xd0) = edi | ebx >> 1;
            edx = *(esi + 0xd4);
            eax = eax << 7;
            *(esi + 0xd4) = edx >> 0x19 | eax;
            goto L004357a3;
            edi = *esi;
            ecx = ecx >> 1;
            *esi = edi << 0x1f | ecx;
            edx = *(esi + 0x1c);
            ebx = ebx << 6;
            *(esi + 0x1c) = edx >> 0x1a | ebx;
            edi = *(esi + 0x48);
            eax = eax >> 1;
            *(esi + 0x48) = edi << 0x1f | eax;
            edx = *(esi + 0x80);
            ecx = ecx * 4;
            *(esi + 0x80) = edx >> 0x1e | ecx;
            edi = *(esi + 0x8c);
            ebx = ebx >> 1;
            *(esi + 0x8c) = edi << 0x1f | ebx;
            edx = *(esi + 0xa0);
            eax = eax + eax;
            *(esi + 0xa0) = edx >> 0x1f | eax;
            edi = *(esi + 0xe4) << 0x1f;
            *(esi + 0xe4) = edi | ecx >> 1;
            edx = *(esi + 0xfc) >> 0x1d;
            *(esi + 0xfc) = (edx | ebx * 8) + 1;
            goto L004357a3;
        }
        eax = *(esi + 8);
        edi = eax;
        eax = eax + eax;
        *(esi + 8) = edi >> 0x1f | eax;
        ecx = *(esi + 0x24);
        edx = ecx;
        ecx = ecx + ecx;
        *(esi + 0x24) = edx >> 0x1f | ecx;
        ebx = *(esi + 0x54);
        edi = ebx;
        ebx = ebx + ebx;
        *(esi + 0x54) = edi >> 0x1f | ebx;
        eax = *(esi + 0x78);
        edx = eax;
        eax = eax >> 1;
        *(esi + 0x78) = (edx << 0x1f | eax) + 1;
        ecx = *(esi + 0xb4);
        edi = ecx;
        ecx = ecx + ecx;
        *(esi + 0xb4) = edi >> 0x1f | ecx;
        ebx = *(esi + 0xc4);
        edx = ebx;
        ebx = ebx + ebx;
        *(esi + 0xc4) = edx >> 0x1f | ebx;
        eax = *(esi + 0xd4);
        edi = eax << 0x1f;
        eax = eax >> 1;
        *(esi + 0xd4) = edi | eax;
        ecx = *(esi + 0xe0);
        edx = ecx;
        ecx = ecx + ecx;
        *(esi + 0xe0) = edx >> 0x1f | ecx;
        if(Ac != 0) {
            goto L00435430;
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x004357C0 - 0x0043582E
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004024A0()
 *		L00403190()
 *		L004157B0()
 *		L00426DC0()
 *		L0042E830()
 *		L0042EE50()
 *		L0042EF00()
 *		L0042EF30()
 *		L0042EF50()
 *		L0042EF90()
 *		L00436CF0()
 */

L004357C0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    ecx = A14;
    ebx = A10;
    edx = Ac;
    eax = A8;
    if(ecx == 0) {
        if(edx < ebx) {
            ebx = ebx / ebx;
            edx = ebx % ebx;
            edx = ecx;
            return;
        }
        ecx = eax;
        eax = edx;
        edx = 0;
        ebx = ebx / ebx;
        edx = ebx % ebx;
        asm("xchg eax,ecx");
        ebx = ebx / ebx;
        edx = ebx % ebx;
        edx = ecx;
        return;
    }
    (save)edi;
    edi = ecx;
    edx = edx >> 1;
    asm("rcr eax,1");
    asm("ror edi,1");
    asm("rcr ebx,1");
    asm("bsr ecx,ecx");
    asm("shrd ebx,edi,cl");
    asm("shrd eax,edx,cl");
    edx = edx >> cl;
    asm("rol edi,1");
    edx = ebx / ebx % ebx / ebx;
    ebx = A8;
    ecx = eax;
    edi = eax * eax;
    asm("mul dword [esp+0x14]");
    edx = edx + edi;
    ebx = ebx - eax;
    eax = ecx;
    ecx = Ac;
    asm("sbb ecx,edx");
    asm("sbb eax,+0x0");
    edx = 0;
    (restore)edi;
}

/*	Procedure: 0x0043582F - 0x0043582F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043582F()
{



}

/*	Procedure: 0x00435830 - 0x004358AC
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00426DC0()
 */

L00435830(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    ecx = A14;
    ebx = A10;
    edx = Ac;
    eax = A8;
    if(ecx == 0) {
        if(edx < ebx) {
            ebx = ebx / ebx;
            eax = ebx % ebx;
            edx = ecx;
            return;
        }
        ecx = eax;
        eax = edx;
        edx = 0;
        ebx = ebx / ebx;
        edx = ebx % ebx;
        eax = ecx;
        ebx = ebx / ebx;
        eax = ebx % ebx;
        edx = 0;
        return;
    }
    (save)edi;
    edi = ecx;
    edx = edx >> 1;
    asm("rcr eax,1");
    asm("ror edi,1");
    asm("rcr ebx,1");
    asm("bsr ecx,ecx");
    asm("shrd ebx,edi,cl");
    asm("shrd eax,edx,cl");
    edx = edx >> cl;
    asm("rol edi,1");
    edx = ebx / ebx % ebx / ebx;
    ebx = A8;
    ecx = eax;
    edi = eax * eax;
    asm("mul dword [esp+0x14]");
    edx = edx + edi;
    ebx = ebx - eax;
    ecx = Ac;
    eax = A10;
    asm("sbb ecx,edx");
    asm("sbb edx,edx");
    eax = eax & edx;
    edx = edx & A14;
    eax = eax + ebx;
    asm("adc edx,ecx");
    (restore)edi;
}

/*	Procedure: 0x004358AD - 0x004358AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004358AD()
{



}

/*	Procedure: 0x004358B0 - 0x00435968
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00435B10()
 *		L00435CD0()
 *		L00435E50()
 *		L00436100()
 */

L004358B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    (save)A8;
    if(ebx != 0) {
        ebx = ebx <= 0x10 ? 0x10 : ebx <= 0x20 ? 0x20 : ebx <= 0x40 ? 0x40 : ebx <= 0x80 ? 0x80 : ebx <= 0x100 ? 0x100 : ebx <= 0x200 ? 0x200 : ebx <= 0x400 ? 0x400 : ebx <= 0x800 ? 0x800 : ebx + 0xfff & -4096;
    }
    if(ebx != *(A8 + 0x18)) {
        eax = L0042E410( *(A8 + 4), ebx);
        *(A8 + 4) = eax;
        *(A8 + 0x18) = ebx;
    }
    esp = ebp - 8;
    (restore)A8;
}

/*	Procedure: 0x00435969 - 0x0043596F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435969()
{



}

/*	Procedure: 0x00435970 - 0x00435A28
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00435B10()
 *		L00435CD0()
 *		L00435E50()
 */

L00435970(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    (save)A8;
    if(ebx != 0) {
        ebx = ebx <= 0x10 ? 0x10 : ebx <= 0x20 ? 0x20 : ebx <= 0x40 ? 0x40 : ebx <= 0x80 ? 0x80 : ebx <= 0x100 ? 0x100 : ebx <= 0x200 ? 0x200 : ebx <= 0x400 ? 0x400 : ebx <= 0x800 ? 0x800 : ebx + 0xfff & -4096;
    }
    if(ebx != *(A8 + 0x10)) {
        eax = L0042E410( *(A8 + 8), ebx);
        *(A8 + 8) = eax;
        *(A8 + 0x10) = ebx;
    }
    esp = ebp - 8;
    (restore)A8;
}

/*	Procedure: 0x00435A29 - 0x00435A2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435A29()
{



}

/*	Procedure: 0x00435A30 - 0x00435A44
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 *		L004102F0()
 *		L00411920()
 *		L00436960()
 */

L00435A30()
{



    eax = L0042E3A0(0x20);
    *eax = 892850389;
}

/*	Procedure: 0x00435A45 - 0x00435A4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435A45()
{



}

/*	Procedure: 0x00435A50 - 0x00435AA7
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0040C640()
 *		L004104E0()
 *		L00411920()
 *		L00436960()
 */

L00435A50(A8)
/* unknown */ void  A8;
{



    (save)esi;
    esi = *A8;
    if(esi == 0) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    if(*esi != 892850389) {
        *A8 = 0;
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    *esi = 0;
    L0042E3E0(esi + 4);
    L0042E3E0(esi + 8);
    eax = L0042E3E0(A8);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00435AA8 - 0x00435AAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435AA8()
{



}

/*	Procedure: 0x00435AB0 - 0x00435AD6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00409390()
 *		L0040D7E0()
 *		L0040DF50()
 *		L0040EE00()
 *		L0040F2D0()
 *		L0040FAE0()
 *		L004105F0()
 *		L00410960()
 *		L00410EB0()
 *		L004110F0()
 *		L004112D0()
 *		L00411640()
 *		L00412280()
 *		L00412880()
 */

L00435AB0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    return *(A8 + 0xc);
}

/*	Procedure: 0x00435AD7 - 0x00435ADF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435AD7()
{



}

/*	Procedure: 0x00435AE0 - 0x00435B0E
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004024A0()
 *		L00403190()
 *		L00403B70()
 *		L0040D0F0()
 *		L0040D9B0()
 *		L0040E200()
 *		L0040E830()
 *		L0040EE00()
 *		L00415DE0()
 */

L00435AE0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != 892850389) {
        L00429610(65561);
    }
    eax = *(ebx + 0xc);
    ecx = *(ebp + 0xc);
    esp = ebp - 4;
    ecx :: eax;
    (restore)ebx;
    (restore)ebp;
    asm("setc al");
}

/*	Procedure: 0x00435B0F - 0x00435B0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435B0F()
{



}

/*	Procedure: 0x00435B10 - 0x00435CC0
 *	Argument size: 20
 *	Local size: 16
 *	Save regs size: 12
 *	Called by:
 *		L00409390()
 *		L0040CB60()
 *		L0040D600()
 *		L0040D880()
 *		L0040E200()
 *		L0040E830()
 *		L0040F2D0()
 *		L0040F570()
 *		L0040F8A0()
 *		L004112D0()
 */

L00435B10(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffff0;



    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    ecx = *(A8 + 0xc);
    eax = ecx;
    *(ebp - 0x1c) = ecx;
    if(Ac > eax) {
        Ac = eax;
    }
    edx = ( *(ebp - 0x1c) + 2) * 4;
    eax = A8;
    if(edx > *(eax + 0x10)) {
        (save)edx;
        L00435970(eax);
        (restore)ecx;
        if(*(ebp - 0x1c) == 0) {
            *( *(A8 + 8)) = 0;
        }
    }
    esi = *(A8 + 8);
    ebx = *(esi + Ac * 4);
    if(A14 != 0) {
        ecx = *(A8 + 0x14);
        Vfffffff0 = ecx;
        *(ebp - 0x14) = ecx;
        *(ebp - 0x14) = *(ebp - 0x14) + A14;
        eax = A8;
        if(*(ebp - 0x14) > *(eax + 0x18)) {
            L004358B0(eax, *(ebp - 0x14));
        }
        *(ebp - 0x18) = *(A8 + 4);
        *(ebp - 0x18) = *(ebp - 0x18) + ebx;
        L004342A0( *(ebp - 0x18) + A14, *(ebp - 0x18), Vfffffff0 - ebx);
        if(A10 != 0) {
            L004342A0( *(ebp - 0x18), A10, A14);
        }
        *(A8 + 0x14) = *(ebp - 0x14);
    }
    if(A18 != 0) {
        ecx = *(A8 + 4) + ebx;
        *A18 = ecx;
    }
    edx = *(ebp - 0x1c) + 1;
    *(A8 + 0xc) = edx;
    ecx = Ac + 1;
    edx = ecx;
    if(ecx <= *(ebp - 0x1c) + 1) {
        eax = *(ebp - 0x1c);
        Vfffffff0 = eax;
        Vfffffff0 = Vfffffff0 - 7;
        if(Vfffffff0 + 1 - ecx + 1 > 8) {
            do {
                ecx = *(esi + edx * 4);
                *(esi + edx * 4) = ebx + A14;
                ecx = ecx + A14;
                ebx = *(esi + edx * 4 + 4);
                *(esi + edx * 4 + 4) = ecx;
                eax = *(esi + edx * 4 + 8);
                *(esi + edx * 4 + 8) = ebx + A14;
                eax = eax + A14;
                ecx = *(esi + edx * 4 + 0xc);
                *(esi + edx * 4 + 0xc) = eax;
                ebx = *(esi + edx * 4 + 0x10);
                *(esi + edx * 4 + 0x10) = ecx + A14;
                ebx = ebx + A14;
                eax = *(esi + edx * 4 + 0x14);
                *(esi + edx * 4 + 0x14) = ebx;
                ecx = *(esi + edx * 4 + 0x18);
                *(esi + edx * 4 + 0x18) = eax + A14;
                ecx = ecx + A14;
                ebx = *(esi + edx * 4 + 0x1c);
                *(esi + edx * 4 + 0x1c) = ecx;
                edx = edx + 8;
            } while(edx <= Vfffffff0);
        }
        if(edx <= *(ebp - 0x1c) + 1) {
            do {
                eax = A14 + ebx;
                ebx = *(esi + edx * 4);
                *(esi + edx * 4) = eax;
                eax = *(ebp - 0x1c);
                edx = edx + 1;
            } while(edx <= eax + 1);
        }
    }
    return Ac;
}

/*	Procedure: 0x00435CC1 - 0x00435CCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435CC1()
{



}

/*	Procedure: 0x00435CD0 - 0x00435E4C
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0040D600()
 *		L0040E5B0()
 *		L0040E830()
 *		L0040F6E0()
 *		L0040F8A0()
 *		L00411640()
 */

L00435CD0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x40;
    esi = Ac;
    if(A8 == 0) {
        return 0;
    }
    if(*A8 != 892850389) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = *(A8 + 0xc);
    *(ebp - 0x4c) = eax;
    if(esi >= eax) {
        esp = ebp - 0xc;
        return 0;
    }
    ebx = *(A8 + 8);
    *(ebp - 0x44) = *(ebx + esi * 4);
    *(ebp - 0x10) = *(ebx + esi * 4 + 4);
    eax = *(ebp - 0x44);
    *(ebp - 0x10) = *(ebp - 0x10) - eax;
    ecx = eax + *(ebp - 0x10);
    eax = *(A8 + 0x14);
    *(ebp - 0x48) = eax;
    edx = *(A8 + 4);
    L004342A0(edx + *(ebp - 0x44), ecx + edx, eax - ecx);
    ecx = esi + 1;
    eax = ecx;
    if(ecx < *(ebp - 0x4c)) {
        esi = *(ebp - 0x4c);
        edx = *(ebp - 0x4c);
        esi = esi - ecx;
        edx = edx - 8;
        if(esi > 8) {
            ecx = *(ebp - 0x10);
            do {
                *(ebx + eax * 4) = *(ebx + eax * 4 + 4) - ecx;
                *(ebx + eax * 4 + 4) = *(ebx + eax * 4 + 8) - ecx;
                *(ebx + eax * 4 + 8) = *(ebx + eax * 4 + 0xc) - ecx;
                *(ebx + eax * 4 + 0xc) = *(ebx + eax * 4 + 0x10) - ecx;
                *(ebx + eax * 4 + 0x10) = *(ebx + eax * 4 + 0x14) - ecx;
                *(ebx + eax * 4 + 0x14) = *(ebx + eax * 4 + 0x18) - ecx;
                *(ebx + eax * 4 + 0x18) = *(ebx + eax * 4 + 0x1c) - ecx;
                esi = *(ebx + eax * 4 + 0x20) - ecx;
                *(ebx + eax * 4 + 0x1c) = esi;
                eax = eax + 8;
            } while(eax < edx);
        }
        if(eax < *(ebp - 0x4c)) {
            esi = *(ebp - 0x10);
            do {
                *(ebx + eax * 4) = *(ebx + eax * 4 + 4) - esi;
                eax = eax + 1;
            } while(eax < *(ebp - 0x4c));
        }
    }
    *(A8 + 0xc) = *(ebp - 0x4c) - 1;
    *(ebp - 0x48) = *(ebp - 0x48) - *(ebp - 0x10);
    *(A8 + 0x14) = *(ebp - 0x48);
    *(ebp - 0x2c) = esp;
    L004358B0(A8, *(ebp - 0x48));
    goto L00435e17;
    if(*(ebp - 0x38) != 0) {
        (save)-1;
        ecx = *(ebp - 0x40);
        *(ebp - 0x38)();
    }
    esp = *(ebp - 0x2c);
L00435e17:
    *(ebp - 0x14) = esp;
    eax = L00435970(A8, *(ebp - 0x4c) * 4);
    goto L00435e43;
    if(*(ebp - 0x20) != 0) {
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)(-1);
    }
    esp = *(ebp - 0x14);
L00435e43:
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00435E4D - 0x00435E4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00435E4D()
{



}

/*	Procedure: 0x00435E50 - 0x0043601C
 *	Argument size: 12
 *	Local size: 64
 *	Save regs size: 12
 *	Called by:
 *		L00412880()
 */

L00435E50(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = Ac;
    esi = A10;
    if(A8 == 0) {
        return 0;
    }
    eax = A8;
    if(*eax != 892850389) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = A8;
    edx = *(eax + 0xc);
    *(ebp - 0x4c) = edx;
    if(edi >= edx) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = esi + edi;
    if(eax > edx || eax < edi) {
        esi = *(ebp - 0x4c) - edi;
    }
    if(esi == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    ebx = *(A8 + 8);
    Vffffffec = *(ebx + edi * 4);
    Vfffffff0 = *(ebx + (esi + edi) * 4);
    eax = A8;
    edx = *(eax + 0x14);
    *(ebp - 0x48) = edx;
    ecx = *(eax + 4);
    L004342A0(ecx + Vffffffec, ecx + Vfffffff0, edx - Vfffffff0);
    0;
    Vfffffff0 = Vfffffff0 - Vffffffec;
    ecx = edi + 1;
    0;
    *(ebp - 0x4c) = *(ebp - 0x4c) - esi;
    edi = ecx;
    if(ecx <= *(ebp - 0x4c)) {
        eax = *(ebp - 0x4c);
        Vffffffec = eax;
        Vffffffec = Vffffffec - 8;
        if(Vffffffec - ecx + 1 > 8) {
            edx = Vfffffff0;
            do {
                ecx = esi + edi;
                *(ebx + edi * 4) = *(ebx + ecx * 4) - edx;
                *(ebx + edi * 4 + 4) = *(ebx + ecx * 4 + 4) - edx;
                *(ebx + edi * 4 + 8) = *(ebx + ecx * 4 + 8) - edx;
                *(ebx + edi * 4 + 0xc) = *(ebx + ecx * 4 + 0xc) - edx;
                *(ebx + edi * 4 + 0x10) = *(ebx + ecx * 4 + 0x10) - edx;
                *(ebx + edi * 4 + 0x14) = *(ebx + ecx * 4 + 0x14) - edx;
                *(ebx + edi * 4 + 0x18) = *(ebx + ecx * 4 + 0x18) - edx;
                *(ebx + edi * 4 + 0x1c) = *(ebx + ecx * 4 + 0x1c) - edx;
                edi = edi + 8;
            } while(edi <= Vffffffec);
        }
        if(edi <= *(ebp - 0x4c)) {
            edx = Vfffffff0;
            do {
                *(ebx + edi * 4) = *(ebx + (esi + edi) * 4) - edx;
                edi = edi + 1;
            } while(edi <= *(ebp - 0x4c));
        }
    }
    *(A8 + 0xc) = *(ebp - 0x4c);
    *(ebp - 0x48) = *(ebp - 0x48) - Vfffffff0;
    *(A8 + 0x14) = *(ebp - 0x48);
    Vffffffe8 = esp;
    L004358B0(A8, *(ebp - 0x48));
    goto L00435fe3;
    if(Vffffffdc != 0) {
        (save)-1;
        ecx = Vffffffd4;
        Vffffffdc();
    }
    esp = *(ebp - 0x18);
L00435fe3:
    Vffffffd0 = esp;
    eax = L00435970(A8, ( *(ebp - 0x4c) + 1) * 4);
    goto L00436013;
    if(Vffffffc4 != 0) {
        ecx = *(ebp - 0x44);
        Vffffffc4(-1);
    }
    esp = *(ebp - 0x30);
L00436013:
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0043601D - 0x0043601F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043601D()
{



}

/*	Procedure: 0x00436020 - 0x004360A5
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0040CB60()
 *		L0040FF60()
 *		L00436370()
 */

L00436020(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        return;
    }
    if(*A8 != 892850389) {
        esp = ebp - 4;
        return;
    }
    if(*(A8 + 0xc) == 0) {
        esp = ebp - 4;
        return;
    }
    if(Ac != 0) {
        L00434270( *(A8 + 4), *(A8 + 0x18));
        L00434270( *(A8 + 8), *(A8 + 0x10));
    }
    L0042E3E0(A8 + 4);
    eax = L0042E3E0(A8 + 8);
    *(A8 + 0xc) = 0;
    *(A8 + 0x10) = 0;
    *(A8 + 0x14) = 0;
    *(A8 + 0x18) = 0;
    esp = ebp - 4;
}

/*	Procedure: 0x004360A6 - 0x004360AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004360A6()
{



}

/*	Procedure: 0x004360B0 - 0x004360F2
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00412880()
 */

L004360B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    if(Ac >= *(A8 + 0xc)) {
        L00429610(65548);
    }
    ecx = *(A8 + 8);
    return *(ecx + Ac * 4 + 4) - *(ecx + Ac * 4);
}

/*	Procedure: 0x004360F3 - 0x004360FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004360F3()
{



}

/*	Procedure: 0x00436100 - 0x004362DA
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0040DC10()
 *		L0040E830()
 *		L004362E0()
 */

L00436100(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x14;
    edi = A10;
    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    eax = *(A8 + 0xc);
    *(ebp - 0x20) = eax;
    if(Ac >= *(ebp - 0x20)) {
        L00429610(65548);
    }
    eax = Ac;
    ebx = *(A8 + 8);
    *(ebp - 0x1c) = *(ebx + eax * 4);
    *(ebp - 0x14) = *(ebx + eax * 4 + 4);
    *(ebp - 0x14) = *(ebp - 0x14) - *(ebp - 0x1c);
    ecx = *(ebp - 0x14);
    if(ecx == edi) {
        return *(A8 + 4) + *(ebp - 0x1c);
    }
    if(edi > ecx) {
        eax = *(A8 + 0x14);
        edi = edi - ecx;
        *(ebp - 0x18) = eax;
        *(ebp - 0x10) = eax;
        *(ebp - 0x10) = *(ebp - 0x10) + edi;
        if(*(ebp - 0x10) > *(A8 + 0x18)) {
            L004358B0(A8, *(ebp - 0x10));
        }
        eax = *(A8 + 4);
        edx = *(ebp - 0x1c) + *(ebp - 0x14);
        *(ebp - 0x14) = eax;
        eax = eax + edx;
        L004342A0(eax + edi, eax, *(ebp - 0x18) - edx);
        *(ebp - 0x18) = Ac;
        *(ebp - 0x18) = *(ebp - 0x18) + 1;
        ecx = *(ebp - 0x18);
        eax = *(ebp - 0x20);
        if(ecx <= eax) {
            edx = *(ebp - 0x20) - ecx + 1;
            eax = eax - 8;
            if(edx > 8) {
                edx = edi;
                do {
                    *(ebx + ecx * 4) = *(ebx + ecx * 4) + edx;
                    *(ebx + ecx * 4 + 4) = *(ebx + ecx * 4 + 4) + edx;
                    *(ebx + ecx * 4 + 8) = *(ebx + ecx * 4 + 8) + edx;
                    *(ebx + ecx * 4 + 0xc) = *(ebx + ecx * 4 + 0xc) + edx;
                    *(ebx + ecx * 4 + 0x10) = *(ebx + ecx * 4 + 0x10) + edx;
                    *(ebx + ecx * 4 + 0x14) = *(ebx + ecx * 4 + 0x14) + edx;
                    *(ebx + ecx * 4 + 0x18) = *(ebx + ecx * 4 + 0x18) + edx;
                    *(ebx + ecx * 4 + 0x1c) = *(ebx + ecx * 4 + 0x1c) + edx;
                    ecx = ecx + 8;
                } while(ecx <= eax);
            }
            do {
                *(ebx + ecx * 4) = *(ebx + ecx * 4) + edi;
                ecx = ecx + 1;
            } while(ecx <= *(ebp - 0x20));
        }
        *(A8 + 0x14) = *(ebp - 0x10);
        eax = *(ebp - 0x14) + *(ebp - 0x1c);
        esp = ebp - 0xc;
        return;
    }
    edx = *(ebp - 0x1c) + *(ebp - 0x14);
    *(ebp - 0x10) = ecx;
    *(ebp - 0x10) = *(ebp - 0x10) - edi;
    edi = *(A8 + 4);
    eax = *(A8 + 0x14);
    edi = edi + edx;
    *(ebp - 0x14) = eax;
    L004342A0(edi - *(ebp - 0x10), edi, eax - edx);
    edi = Ac + 1;
    edx = edi;
    if(edi <= *(ebp - 0x20)) {
        eax = *(ebp - 0x20) - edi;
        ecx = *(ebp - 0x20);
        eax = eax + 1;
        ecx = ecx - 8;
        if(eax > 8) {
            edi = *(ebp - 0x10);
            do {
                *(ebx + edx * 4) = *(ebx + edx * 4) - edi;
                *(ebx + edx * 4 + 4) = *(ebx + edx * 4 + 4) - edi;
                *(ebx + edx * 4 + 8) = *(ebx + edx * 4 + 8) - edi;
                *(ebx + edx * 4 + 0xc) = *(ebx + edx * 4 + 0xc) - edi;
                *(ebx + edx * 4 + 0x10) = *(ebx + edx * 4 + 0x10) - edi;
                *(ebx + edx * 4 + 0x14) = *(ebx + edx * 4 + 0x14) - edi;
                *(ebx + edx * 4 + 0x18) = *(ebx + edx * 4 + 0x18) - edi;
                *(ebx + edx * 4 + 0x1c) = *(ebx + edx * 4 + 0x1c) - edi;
                edx = edx + 8;
            } while(edx <= ecx);
        }
        if(edx <= *(ebp - 0x20)) {
            eax = *(ebp - 0x10);
            do {
                *(ebx + edx * 4) = *(ebx + edx * 4) - eax;
                edx = edx + 1;
            } while(edx <= *(ebp - 0x20));
        }
    }
    edi = *(ebp - 0x14) - *(ebp - 0x10);
    *(A8 + 0x14) = edi;
    L004358B0(A8, *(A8 + 0x14));
    eax = *(A8 + 4) + *(ebp - 0x1c);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004362DB - 0x004362DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004362DB()
{



}

/*	Procedure: 0x004362E0 - 0x0043630F
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0040F8A0()
 */

L004362E0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L00436100(A8, Ac, A14);
    if(A10 != 0) {
        eax = L004342A0(eax, A10, A14);
    }
}

/*	Procedure: 0x00436310 - 0x00436364
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004024A0()
 *		L00403190()
 *		L00403B70()
 *		L0040D0F0()
 *		L0040D600()
 *		L0040D7E0()
 *		L0040D9B0()
 *		L0040DB20()
 *		L0040DC10()
 *		L0040DF50()
 *		L0040E5B0()
 *		L0040E700()
 *		L0040E830()
 *		L0040EE00()
 *		L0040F110()
 *		L0040F7B0()
 *		L0040FAE0()
 *		L0040FE40()
 *		L0040FF60()
 *		L004110F0()
 *		L00411640()
 *		L004125B0()
 *		L00415DE0()
 */

L00436310(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)Ac;
    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    if(Ac >= *(A8 + 0xc)) {
        L00429610(65548);
    }
    edx = *(A8 + 8);
    ecx = *(edx + Ac * 4);
    if(A10 != 0) {
        *A10 = *(edx + Ac * 4 + 4) - ecx;
    }
    eax = *(A8 + 4);
    esp = ebp - 0xc;
    (restore)Ac;
    return eax + ecx;
}

/*	Procedure: 0x00436365 - 0x0043636F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436365()
{



}

/*	Procedure: 0x00436370 - 0x00436491
 *	Argument size: 20
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0040C340()
 *		L00411920()
 *		L00436960()
 */

L00436370(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    *(ebp - 0x10) = A18;
    *(ebp - 0x10) = *(ebp - 0x10) >> 2;
    if(*(ebp - 0x10) != 0) {
        *(ebp - 0x10) = *(ebp - 0x10) - 1;
    }
    if(*(ebp - 0x10) == 0) {
        L0042E3E0( & Ac);
        L0042E3E0( & A14);
        return L00436020(A8, 0);
    }
    if(A14 == 0) {
        L00429610(65538);
    }
    ecx = 0;
    edi = 0;
    do {
        esi = *(A14 + edi * 4);
        if(esi < ecx) {
            L00429610(65546);
        }
        edi = edi + 1;
        ecx = esi;
    } while(edi <= *(ebp - 0x10));
    if(esi != A10) {
        L00429610(65546);
    }
    if(Ac == 0 && A10 != 0) {
        L00429610(65538);
    }
    L0042E3E0(A8 + 4);
    L0042E3E0(A8 + 8);
    *(A8 + 4) = Ac;
    *(A8 + 8) = A14;
    *(A8 + 0xc) = *(ebp - 0x10);
    ecx = *(ebp - 0x10);
    *(A8 + 0x10) = (ecx + 1) * 4;
    *(A8 + 0x14) = A10;
    *(A8 + 0x18) = A10;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00436492 - 0x0043649F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436492()
{



}

/*	Procedure: 0x004364A0 - 0x004364E2
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00410EB0()
 *		L00412880()
 */

L004364A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0x14);
    }
    if(A10 != 0) {
        *A10 = *(A8 + 8);
    }
    return *(A8 + 4);
}

/*	Procedure: 0x004364E3 - 0x004364EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004364E3()
{



}

/*	Procedure: 0x004364F0 - 0x00436666
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00403190()
 *		L0040CB60()
 *		L0040D0F0()
 *		L0040D600()
 *		L0040D880()
 *		L0040E200()
 *		L0040E5B0()
 *		L0040E700()
 *		L0040E830()
 *		L0040F110()
 *		L0040F570()
 *		L0040F6E0()
 *		L0040F7B0()
 *		L0040F8A0()
 *		L0040FE40()
 *		L0040FF60()
 */

L004364F0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 8;
    if(ebx == 0 || *ebx != 892850389) {
        eax = L00429610(65561);
    }
    if(A18 == 0) {
        eax = L00429610(65538);
    }
    esi = *(ebx + 0xc);
    if(esi == 0) {
        if(A14 != 0) {
            eax = A14;
            *eax = 0;
        }
        return 0;
    }
    *(ebp - 0x10) = *(ebx + 4);
    edi = *(ebx + 8);
    eax = *edi;
    eax = A18(A1c, Ac, A10, *(ebp - 0x10) + eax, *(edi + 4) - eax);
    if(eax == 0) {
        if(A14 != 0) {
            eax = A14;
            *eax = 0;
        }
        esp = ebp - 0xc;
        return 1;
    }
    if(eax < 0) {
        if(A14 != 0) {
            eax = A14;
            *eax = 0;
        }
        esp = ebp - 0xc;
        return 0;
    }
    esi = esi - 1;
    ebx = 0;
    *(ebp - 0x14) = 1;
    if(esi < 1) {
        if(A14 != 0) {
            eax = A14;
            *eax = 1;
        }
        esp = ebp - 0xc;
        return 0;
        goto L004365d0;
L004365fa:
        if(A14 != 0) {
            eax = A14;
            *eax = ebx;
        }
        esp = ebp - 0xc;
        return 1;
        goto L00436610;
    }
    while(*(ebp - 0x14) <= esi) {
L004365d0:
        ebx = *(ebp - 0x14) + esi >> 1;
        edx = *(edi + ebx * 4);
        eax = A18(A1c, Ac, A10, *(ebp - 0x10) + edx, *(edi + ebx * 4 + 4) - edx);
        if(eax == 0) {
            goto L004365fa;
        }
L00436610:
        if(eax >= 0) {
            *(ebp - 0x14) = ebx;
            *(ebp - 0x14) = *(ebp - 0x14) + 1;
            continue;
        }
        esi = ebx - 1;
    }
    eax = *(edi + ebx * 4);
    eax = A18(A1c, Ac, A10, *(ebp - 0x10) + eax, *(edi + ebx * 4 + 4) - eax);
    if(eax > 0) {
        ebx = ebx + 1;
    }
    if(A14 != 0) {
        eax = A14;
        *eax = ebx;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00436667 - 0x0043666F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436667()
{



}

/*	Procedure: 0x00436670 - 0x004366A9
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0040C970()
 *		L00412280()
 */

L00436670(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    eax = ( *(A8 + 0xc) + 1) * 4 + 8 + *(A8 + 0x14);
    esp = ebp - 4;
    return eax + 3 & -4;
}

/*	Procedure: 0x004366AA - 0x004366AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004366AA()
{



}

/*	Procedure: 0x004366B0 - 0x00436950
 *	Argument size: 12
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L0040C970()
 *		L00412280()
 */

L004366B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(A8 == 0 || *A8 != 892850389) {
        L00429610(65561);
    }
    eax = A8;
    *(ebp - 0x24) = *(eax + 0xc);
    ecx = *(eax + 0x14);
    *(ebp - 0x20) = ecx;
    Vffffffe8 = *(ebp - 0x24);
    Vffffffe8 = Vffffffe8 + 1;
    Vffffffe8 = Vffffffe8 << 2;
    Vfffffff0 = Vffffffe8;
    Vfffffff0 = Vfffffff0 + 8;
    Vfffffff0 = Vfffffff0 + ecx;
    Vfffffff0 = Vfffffff0 + 3;
    Vfffffff0 = Vfffffff0 & -4;
    if(A10 < Vfffffff0) {
        L00429610(65562);
    }
    eax = Ac;
    Vffffffec = eax;
    *Vffffffec = 31194439;
    eax = *(ebp - 0x24);
    ecx = eax << 8 & 16711680;
    edi = eax;
    esi = eax;
    eax = eax << 0x18;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | esi >> 8 & 65280 | eax;
    *(Vffffffec + 4) = ecx;
    ebx = Vffffffec + 8;
    if(*(ebp - 0x24) != 0) {
        edx = *(A8 + 8);
        eax = *(ebp - 0x24);
        edi = eax + 1;
        ecx = 0;
        *(ebp - 0x1c) = eax;
        *(ebp - 0x1c) = *(ebp - 0x1c) - 8;
        if(edi > 8) {
            do {
                esi = *(edx + ecx * 4);
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *ebx = eax | edi >> 8 & 65280 | esi;
                edi = *(edx + ecx * 4 + 4);
                eax = edi << 8 & 16711680;
                eax = eax | edi >> 0x18;
                esi = edi;
                edi = edi << 0x18;
                *(ebx + 4) = eax | esi >> 8 & 65280 | edi;
                esi = *(edx + ecx * 4 + 8);
                ebx = ebx + 8;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *ebx = eax | edi >> 8 & 65280 | esi;
                edi = *(edx + ecx * 4 + 0xc);
                eax = edi << 8 & 16711680;
                eax = eax | edi >> 0x18;
                esi = edi;
                edi = edi << 0x18;
                *(ebx + 4) = eax | esi >> 8 & 65280 | edi;
                esi = *(edx + ecx * 4 + 0x10);
                ebx = ebx + 8;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *ebx = eax | edi >> 8 & 65280 | esi;
                edi = *(edx + ecx * 4 + 0x14);
                eax = edi << 8 & 16711680;
                eax = eax | edi >> 0x18;
                esi = edi;
                edi = edi << 0x18;
                *(ebx + 4) = eax | esi >> 8 & 65280 | edi;
                esi = *(edx + ecx * 4 + 0x18);
                ebx = ebx + 8;
                eax = esi << 8 & 16711680;
                eax = eax | esi >> 0x18;
                edi = esi;
                esi = esi << 0x18;
                *ebx = eax | edi >> 8 & 65280 | esi;
                edi = *(edx + ecx * 4 + 0x1c);
                eax = edi << 8 & 16711680;
                eax = eax | edi >> 0x18;
                eax = eax | edi >> 8 & 65280;
                *(ebx + 4) = eax | edi << 0x18;
                ecx = ecx + 8;
                ebx = ebx + 8;
            } while(ecx <= *(ebp - 0x1c));
        }
        do {
            esi = *(edx + ecx * 4);
            eax = esi << 8 & 16711680;
            eax = eax | esi >> 0x18;
            eax = eax | esi >> 8 & 65280;
            *ebx = eax | esi << 0x18;
            ecx = ecx + 1;
            ebx = ebx + 4;
        } while(ecx <= *(ebp - 0x24));
    } else {
        *ebx = 0;
    }
    L004342A0(Vffffffec + Vffffffe8 + 8, *(A8 + 4), *(ebp - 0x20));
    return Vfffffff0;
}

/*	Procedure: 0x00436951 - 0x0043695F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436951()
{



}

/*	Procedure: 0x00436960 - 0x00436CDD
 *	Argument size: 8
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L0040C640()
 *		L00411DF0()
 */

L00436960(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(Ac < 8) {
L0043696f:
        L00429610(65546);
    }
    edi = A8;
    edx = *edi;
    ecx = edx << 8 & 16711680;
    esi = edx;
    ebx = edx;
    ecx = ecx | esi >> 0x18;
    ecx = ecx | ebx >> 8 & 65280;
    if((ecx | edx << 0x18) != 1207819009) {
        L00429610(65545);
    }
    eax = *(edi + 4);
    ecx = eax;
    *(ebp - 0x40) = eax;
    esi = eax;
    ecx = ecx >> 8 & 65280;
    eax = eax << 0x18;
    *(ebp - 0x40) = *(ebp - 0x40) << 8;
    *(ebp - 0x40) = *(ebp - 0x40) & 16711680;
    *(ebp - 0x40) = *(ebp - 0x40) | esi >> 0x18;
    *(ebp - 0x40) = *(ebp - 0x40) | ecx;
    *(ebp - 0x40) = *(ebp - 0x40) | eax;
    if(*(ebp - 0x40) > 805306367) {
        goto L0043696f;
    }
    Vffffffec = *(ebp - 0x40);
    Vffffffec = Vffffffec + 1;
    Vffffffec = Vffffffec << 2;
    Vffffffcc = Vffffffec;
    Vffffffcc = Vffffffcc + 8;
    if(Ac < Vffffffcc) {
        goto L0043696f;
    }
    eax = *(ebp - 0x40);
    ebx = edi + 8;
    edx = *(ebx + eax * 4);
    esi = edx << 8 & 16711680;
    esi = esi | edx >> 0x18;
    esi = esi | edx >> 8 & 65280;
    esi = esi | edx << 0x18;
    *(ebp - 0x38) = esi;
    ecx = Vffffffcc;
    eax = esi + ecx;
    if(eax > Ac || eax < ecx) {
        goto L0043696f;
    }
    eax = L00435A30();
    Vffffffe8 = eax;
    if(*(ebp - 0x40) == 0) {
        return;
    }
    *(ebp - 0x3c) = 0;
    Vfffffff0 = 0;
    Vffffffe4 = esp;
    eax = esi != 0 ? L0042E350(edi + Vffffffcc, *(ebp - 0x38)) : 0;
    *(ebp - 0x3c) = eax;
    esi = *(ebp - 0x40);
    ecx = *(ebp - 0x40);
    esi = esi + 1;
    edx = 0;
    ecx = ecx - 8;
    Vfffffff0 = L0042E310(Vffffffec);
    if(esi > 8) {
        do {
            edi = *ebx;
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            esi = edi;
            edi = edi << 0x18;
            eax = eax | esi >> 8 & 65280 | edi;
            *(Vfffffff0 + edx * 4) = eax;
            edi = *(ebx + 4);
            ebx = ebx + 8;
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            esi = edi;
            edi = edi << 0x18;
            eax = eax | esi >> 8 & 65280 | edi;
            *(Vfffffff0 + edx * 4 + 4) = eax;
            edi = *ebx;
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            esi = edi;
            edi = edi << 0x18;
            eax = eax | esi >> 8 & 65280 | edi;
            *(Vfffffff0 + edx * 4 + 8) = eax;
            edi = *(ebx + 4);
            ebx = ebx + 8;
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            esi = edi;
            edi = edi << 0x18;
            eax = eax | esi >> 8 & 65280 | edi;
            *(Vfffffff0 + edx * 4 + 0xc) = eax;
            edi = *ebx;
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            esi = edi;
            edi = edi << 0x18;
            eax = eax | esi >> 8 & 65280 | edi;
            *(Vfffffff0 + edx * 4 + 0x10) = eax;
            edi = *(ebx + 4);
            ebx = ebx + 8;
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            esi = edi;
            edi = edi << 0x18;
            eax = eax | esi >> 8 & 65280 | edi;
            *(Vfffffff0 + edx * 4 + 0x14) = eax;
            edi = *ebx;
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            esi = edi;
            edi = edi << 0x18;
            eax = eax | esi >> 8 & 65280 | edi;
            *(Vfffffff0 + edx * 4 + 0x18) = eax;
            edi = *(ebx + 4);
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            eax = eax | edi >> 8 & 65280;
            eax = eax | edi << 0x18;
            *(Vfffffff0 + edx * 4 + 0x1c) = eax;
            edx = edx + 8;
            ebx = ebx + 8;
        } while(edx <= ecx);
    }
    do {
        edi = *ebx;
        eax = edi << 8 & 16711680;
        eax = eax | edi >> 0x18;
        eax = eax | edi >> 8 & 65280;
        eax = eax | edi << 0x18;
        *(Vfffffff0 + edx * 4) = eax;
        edx = edx + 1;
        ebx = ebx + 4;
    } while(edx <= *(ebp - 0x40));
    L00436370(Vffffffe8, *(ebp - 0x3c), *(ebp - 0x38), Vfffffff0, Vffffffec);
    goto L00436cd3;
    L0042E3E0(ebp - 0x3c);
    L0042E3E0( & Vfffffff0);
    L00435A50( & Vffffffe8);
    L004234F0(0, 0, 0);
    if(Vffffffd8 != 0) {
        ecx = Vffffffd0;
        Vffffffd8(-1);
    }
    esp = *(ebp - 0x1c);
L00436cd3:
    esp = ebp - 0xc;
    return Vffffffe8;
}

/*	Procedure: 0x00436CDE - 0x00436CDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436CDE()
{



}

/*	Procedure: 0x00436CE0 - 0x00436CEE
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004024A0()
 *		L00403190()
 */

L00436CE0(A8)
/* unknown */ void  A8;
{



    return L0042EF30() - A8;
}

/*	Procedure: 0x00436CEF - 0x00436CEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436CEF()
{



}

/*	Procedure: 0x00436CF0 - 0x00436F8A
 *	Argument size: 16
 *	Local size: 32
 *	Save regs size: 12
 *	Called by:
 *		L00436F90()
 *		L004372D0()
 */

L00436CF0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;



    edi = Ac;
    if(A14 == 0) {
        L00429610(65538);
    }
    *A14 = 0;
    *(A14 + 2) = 0;
    if(!(A10 & 0x100)) {
        ebx = L0042EFD0();
        edx = ebx;
        esi = edx;
        A14 = -2004318071;
        asm("imul edx");
        ebx = ebx * 0x3e8;
        edx = edx + esi >> 5;
        ebx :: 0;
        if(!( *(A14 + 2) = (esi >> 0x1f) + edx)) {
            edx = ebx;
            ebx = 0;
            A8 = A8 - ~edx;
            asm("sbb edi,ebx");
        } else {
            ecx = 0;
            A8 = A8 + ebx;
            asm("adc edi,ecx");
        }
    }
    esi = 0x4816c8;
    if(edi >= M004816cc) {
        != ? 0x436d83 : ;
        if(A8 > M004816c8) {
            A8 = *esi;
            edi = *(esi + 4);
        }
    }
    for(esi = esi + 0x10; 1; esi = esi + 0x10) {
        edx = *(esi + 4);
        A14 = *esi;
        Vffffffe4 = A14;
        ebx = edx;
        if(edi > edx) {
            break;
        }
        != ? 0x436da5 : ;
        if(A8 >= A14) {
            break;
        }
    }
    L004357C0(Vffffffe4, ebx, 0x3e8, 0);
    Vffffffe4 = A14;
    ebx = edx;
    L004357C0(A8, edi, 0x3e8, 0);
    Vffffffec = A14;
    Vffffffe0 = edx;
    *(ebp - 0x28) = *(esi + 8) & 65535;
    for(*(ebp - 0x24) = 0; 1; *(ebp - 0x24) = *(ebp - 0x24) + edx) {
        cl = 0;
        *(ebp - 0x29) = 1;
        if(!( *(ebp - 0x28) & 3)) {
            edi = *(ebp - 0x28);
            A14 = 1374389535;
            asm("mul edi");
            edx = (edx >> 5) * M00000064;
            if(!(edi = edi - edx)) {
                cl = 1;
            }
        }
        if(cl == 0) {
            edi = *(ebp - 0x28);
            A14 = 1374389535;
            asm("mul edi");
            edx = (edx >> 7) * 0x190;
            if(!(edi = edi - edx)) {
                *(ebp - 0x29) = 0;
            }
        }
        A14 = *(ebp - 0x29) == 0 ? Vffffffe4 + 31536000 : Vffffffe4 + 31622400;
        asm("adc ebx,+0x0");
        if(ebx > Vffffffe0) {
            goto L00436e80;
        }
        != ? 0x436e5b : ;
        if(A14 > Vffffffec) {
            goto L00436e80;
        }
        *(ebp - 0x28) = *(ebp - 0x28) + 1;
        Vffffffe4 = A14;
        if(*(ebp - 0x29) == 0) {
L00436e70:
            edx = 0x16d;
        } else {
            edx = 0x16e;
        }
    }
    goto L00436e70;
L00436e80:
    cx = *(ebp - 0x28);
    *(A14 + 4) = cx;
    ecx = Vffffffec - Vffffffe4;
    edi = ecx;
    A14 = -1037155065;
    asm("mul edi");
    edx = edx >> 0x10;
    *(ebp - 0x24) = *(ebp - 0x24) + edx;
    edi = *(ebp - 0x29) != 0 ? 0x48174c : 0x481718;
    ebx = 0;
    for(edx = 0; 1; edx = A14) {
        A14 = *(edi + ebx * 4);
        if(A14 > ecx || ebx >= 0xc) {
            break;
        }
        ebx = ebx + 1;
    }
    ecx = ecx - edx;
    *(A14 + 6) = bx;
    edi = ecx;
    A14 = -1037155065;
    asm("mul edi");
    edx = (edx >> 0x10) + 1;
    *(A14 + 8) = dx;
    A14 = -1037155065;
    asm("mul ecx");
    A14 = -1851608123;
    edx = (edx >> 0x10) * 86400;
    ecx = ecx - edx;
    ebx = ecx;
    asm("mul ebx");
    edx = edx >> 0xb;
    *(A14 + 0xa) = dx;
    A14 = -1851608123;
    asm("mul ecx");
    A14 = -2004318071;
    edx = (edx >> 0xb) * 0xe10;
    ecx = ecx - edx;
    edi = ecx;
    asm("mul edi");
    *(A14 + 0xc) = edx >> 5;
    A14 = -2004318071;
    asm("mul ecx");
    edx = (edx >> 5) * 0x3c;
    ecx = ecx - edx;
    *(A14 + 0xe) = cx;
    ebx = ( *(esi + 0xa) & 65535) + *(ebp - 0x24);
    A14 = 1227133513;
    asm("mul ebx");
    A14 = A14 + 1227133513;
    asm("adc edx,+0x0");
    if(!(ebx = ebx - (edx >> 1) * 7)) {
        ebx = 7;
    }
    *(A14 + 0x10) = bx;
}

/*	Procedure: 0x00436F8B - 0x00436F8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436F8B()
{



}

/*	Procedure: 0x00436F90 - 0x00436FAB
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00412880()
 */

L00436F90(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00436CF0(L0042EF50(), edx, A8, Ac);
}

/*	Procedure: 0x00436FAC - 0x00436FAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00436FAC()
{



}

/*	Procedure: 0x00436FB0 - 0x004372C1
 *	Argument size: 16
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L004372D0()
 */

L00436FB0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = Ac;
    if(A14 == 0) {
        A14 = 0x20;
    }
    if(A8 == 0) {
        return 0;
    }
    ebx = 0;
    if(!(A14 & 0x7f0)) {
        eax = *(A8 + 0x10);
        *(ebp - 0x10) = eax;
        if(eax < 1) {
            *(ebp - 0x10) = 1;
        }
        if(*(ebp - 0x10) > 7) {
            *(ebp - 0x10) = 7;
        }
        ebx = *(A8 + 6);
        if(ebx < 1) {
            ebx = 1;
        }
        if(ebx > 0xc) {
            ebx = 0xc;
        }
        eax = *(A8 + 8);
        *(ebp - 0x14) = eax;
        if(eax < 1) {
            *(ebp - 0x14) = 1;
        }
        if(*(ebp - 0x14) > 0x1f) {
            *(ebp - 0x14) = 0x1f;
        }
        edi = *(A8 + 4);
        if(!(A14 & 0x3c0)) {
            edx = edi;
            ecx = edx >> 0x1f;
            eax = 1374389535;
            asm("imul edx");
            edi = edi - (ecx + (edx >> 5)) * M00000064;
            if(!(A14 & 0x100)) {
                eax = *(ebp - 0x14);
            } else {
                if(!(A14 & 0x200)) {
                    eax = ebx;
                    ebx = *(ebp - 0x14);
                } else {
                    eax = edi;
                    edi = *(ebp - 0x14);
                }
            }
            eax = !(A14 & 0x400) ? L00459EC0(esi, A10, "%s %2.2i/%2.2i/%2.2i", *(( *(ebp - 0x10) - 1) * 4 + 0x4817ac), eax, ebx, edi) : L00459EC0(esi, A10, "%2.2i/%2.2i/%2.2i", eax, ebx, edi);
        } else {
            eax = !(A14 & 0x20) ? !(A14 & 0x400) ? L00459EC0(esi, A10, "%s, %2.2i %s %i", *(( *(ebp - 0x10) - 1) * 4 + 0x4817ac), *(ebp - 0x14), *(ebx * 4 + 0x4817f4), edi) : L00459EC0(esi, A10, "%2.2i %s %i", *(ebp - 0x14), *(ebx * 4 + 0x4817f4), edi) : !(A14 & 0x10) ? !(A14 & 0x400) ? L00459EC0(esi, A10, "%s, %i %s %i", *(( *(ebp - 0x10) - 1) * 4 + 0x481790), *(ebp - 0x14), *(ebx * 4 + 0x4817c4), edi) : L00459EC0(esi, A10, "%i %s %i", *(ebp - 0x14), *(ebx * 4 + 0x4817c4), edi) : L00459EC0(esi, A10, "%s", *(( *(ebp - 0x10) - 1) * 4 + 0x4817ac));
        }
        ebx = eax;
    }
    if(!(A14 & 0x1800)) {
        esi = esi + ebx;
        A10 = A10 - ebx;
        if(A10 >= 6) {
            if(ebx != 0) {
                if(!(A14 & 0x3c0)) {
                    *esi = 0x20;
                    esi = esi + 1;
                    A10 = A10 - 1;
                    ebx = ebx + 1;
                } else {
                    *esi = 0x2c;
                    *(esi + 1) = 0x20;
                    esi = esi + 2;
                    A10 = A10 - 2;
                    ebx = ebx + 2;
                }
            }
            edx = *(A8 + 0xa);
            ecx = *(A8 + 0xc);
            edi = *(A8 + 0xe);
            if(!(A14 & 32768)) {
                if(A14 & 0x1000) {
                    goto L01961968;
                }
                (save)edi;
                (save)ecx;
                (save)edx;
                (save)"%2.2i:%2.2i:%2.2i";
                goto L004372aa;
                eax = L00459EC0(esi, A10, "%2.2i:%2.2i", edx, ecx);
            } else {
                if(edx < 0xc) {
                    eax = "AM";
                } else {
                    eax = "PM";
                    edx = edx - 0xc;
                }
                if(edx == 0) {
                    edx = 0xc;
                }
                if(A14 & 0x1000) {
                    goto L019619a8;
                }
                eax = L00459EC0(esi, A10, "%2.2i:%2.2i:%2.2i %s", edx, ecx, edi, eax);
                goto L004372b6;
                (save)eax;
                (save)ecx;
                (save)edx;
                (save)"%2.2i:%2.2i %s";
L004372aa:
                (save)A10;
                (save)esi;
                eax = L00459EC0();
                esp = esp + 0x18;
            }
L004372b6:
            ebx = ebx + eax;
        }
    }
    esp = ebp - 0xc;
    return ebx;
}

/*	Procedure: 0x004372C2 - 0x004372CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004372C2()
{



}

/*	Procedure: 0x004372D0 - 0x0043736D
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004125B0()
 *		L00416790()
 *		L00437370()
 */

L004372D0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  edi;



    edi = A8;
    ecx = edi;
    esp = esp - 0x14;
    if(!(ecx = ecx | Ac)) {
        if(A14 == 0) {
            return 0;
        }
        *A10 = 0x2d;
        esp = ebp - 0xc;
        return 1;
    }
    if(!(A18 & 7152)) {
        if(!(A18 & 8192)) {
            eax = L0042EFD0() * 0x3e8;
            if(eax < 0) {
                edx = 0;
                edi = edi - ~eax;
                asm("sbb esi,edx");
            } else {
                ecx = 0;
                edi = edi + eax;
                asm("adc esi,ecx");
            }
        }
        L00436CF0(edi, Ac, 0, ebp - 0x20);
        eax = L00436FB0(ebp - 0x20, A10, A14, A18);
        esp = ebp - 0xc;
        return;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0043736E - 0x0043736F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043736E()
{



}

/*	Procedure: 0x00437370 - 0x0043738E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408CB0()
 *		L00449150()
 *		L00456D00()
 */

L00437370(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L004372D0(L0042EF50(), edx, A8, Ac, A10);
}

/*	Procedure: 0x0043738F - 0x0043738F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043738F()
{



}

/*	Procedure: 0x00437390 - 0x0043745F
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404640()
 *		L00416790()
 */

L00437390(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;



    esi = A8;
    A14 = Ac;
    if(A18 != 0) {
        *A18 = 0;
    }
    if(esi == 0 || A14 < 6) {
        return 0;
    }
    ecx = ( *esi & 0xff) << 8;
    ecx = (ecx | *(esi + 1) & 0xff) & 65535;
    edx = A14 + esi;
    esi = esi + 2;
    if(ecx == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    if(!(ecx = ecx - 2)) {
        do {
            esi = esi + 2;
            if(esi >= edx) {
                goto L004373ef;
            }
L00437400:
            esi = esi + ( *esi & 0xff) + 1;
        } while(ecx = ecx - 1);
        goto L0043740d;
L004373ef:
        esp = ebp - 0xc;
        return 0;
        goto L00437400;
    }
L0043740d:
    if(esi + 2 >= edx) {
        esp = ebp - 0xc;
        return 0;
    }
    A14 = *(esi + 2) & 0xff;
    esi = esi + 3;
    if(A14 + esi > edx) {
        esp = ebp - 0xc;
        return 0;
    }
    if(A14 > A14) {
    }
    L004342A0(A10, esi, A14);
    if(A18 != 0) {
        *A18 = esi - 1;
    }
    esp = ebp - 0xc;
    return A14;
}

/*	Procedure: 0x00437460 - 0x0043758F
 *	Argument size: 24
 *	Local size: 4
 *	Save regs size: 12
 */

L00437460(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A10;
    if(Ac < 6) {
        Ac = 0;
    }
    if(A14 < 6) {
        A14 = 0;
    }
    if(Ac != 0) {
        A8 = A8 + 2;
        ebx = ( *A8 & 0xff) << 8 | *(A8 + 1) & 0xff;
        eax = A8;
        edi = Ac;
        Ac = Ac - 2;
        ebx = bx & 65535;
    } else {
        ebx = 0;
        edi = 2;
    }
    if(A14 != 0) {
        edx = *esi & 0xff;
        ecx = *(esi + 1) & 0xff;
        ebx = ebx + ((edx << 8 | ecx) & 65535);
        esi = esi + 2;
        A14 = A14 - 2;
        edi = edi + A14;
    }
    if(A18 != 0) {
        ecx = *A18 & 0xff;
        if(cl != 0) {
            edi = edi + (cl & 0xff) + 3;
            ebx = ebx + 1;
        } else {
            A18 = 0;
        }
    }
    if(ebx == 0) {
        if(A1c != 0) {
            *A1c = 0;
        }
        return 0;
    }
    if(A1c != 0) {
        *A1c = edi;
    }
    eax = L0042E310(edi);
    edi = eax;
    ecx = bx & 65535;
    edx = ecx << 8;
    *(ebp - 0x10) = eax;
    *edi = edx | ecx >> 8;
    edi = edi + 2;
    L004342A0(edi, A8, Ac);
    edi = edi + Ac;
    L004342A0(edi, esi, A14);
    edi = edi + A14;
    if(A18 != 0) {
        *edi = 0;
        L004288C0(edi + 2, A18);
    }
    eax = *(ebp - 0x10);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00437590 - 0x00437623
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00404990()
 *		L00404D80()
 *		L00404F40()
 *		L0042AB80()
 */

L00437590(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    (save)ebp;
    edx = Ac;
    if(A10 != 0) {
        *A10 = 0;
    }
    if(edx < 6) {
        (restore)ebp;
        (restore)esi;
        return 0;
    }
    esi = A8;
    ecx = ( *esi & 0xff) << 8;
    ebp = edx + A8;
    ecx = (ecx | *(esi + 1) & 0xff) & 65535;
    esi = esi + 2;
    if(ecx == 0 || ecx > 0x400) {
        (restore)ebp;
        (restore)esi;
        return 0;
        goto L004375e0;
L004375e9:
        (restore)ebp;
        (restore)esi;
        return 0;
        goto L004375f0;
L004375f9:
        (restore)ebp;
        (restore)esi;
        return 0;
        goto L00437600;
    }
    while(ecx = ecx - 1) {
L004375e0:
        esi = esi + 2;
        if(esi >= ebp) {
            goto L004375e9;
        }
L004375f0:
        edx = *esi & 0xff;
        if(edx == 0) {
            goto L004375f9;
        }
L00437600:
        esi = esi + edx + 1;
    }
    if(esi > ebp) {
        (restore)ebp;
        (restore)esi;
        return 0;
    }
    if(A10 != 0) {
        *A10 = esi - A8;
    }
    (restore)ebp;
    (restore)esi;
    return 1;
}

/*	Procedure: 0x00437624 - 0x0043762F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437624()
{



}

/*	Procedure: 0x00437630 - 0x004376F6
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00437700()
 *		L00437790()
 *		L004377B8()
 */

L00437630(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    (save)esi;
    (save)edi;
    esp = esp - 0xc;
    ebx = (M00482518 & 0xff) * 0x3c + 0x481870;
    *(ebp - 0x10) = 0x482518;
    *(ebp - 0x14) = 0x481870;
    edx = *ebx & 0xff;
    eax = L00434570(A8, Ac, ebx + 1, edx);
    if(eax == 0) {
        esp = ebp - 0xc;
        eax = ebx;
        (restore)edi;
        (restore)esi;
        return;
    }
    if(eax < 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 0;
    }
    *(ebp - 0x18) = 1;
    edi = 0x35;
    do {
        eax = *(ebp - 0x10);
        esi = *(ebp - 0x18) + edi >> 1;
        ebx = ( *(eax + esi) & 0xff) * 0x3c + *(ebp - 0x14);
        edx = *ebx & 0xff;
        eax = L00434570(A8, Ac, ebx + 1, edx);
        if(eax == 0) {
            goto L004376ce;
        }
        if(eax >= 0) {
            *(ebp - 0x18) = esi;
            *(ebp - 0x18) = *(ebp - 0x18) + 1;
        } else {
            edi = esi - 1;
        }
    } while(*(ebp - 0x18) <= edi);
    goto L004376ed;
L004376ce:
    esp = ebp - 0xc;
    eax = ebx;
    (restore)edi;
    (restore)esi;
    return;
L004376ed:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return 0;
}

/*	Procedure: 0x004376F7 - 0x004376FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004376F7()
{



}

/*	Procedure: 0x00437700 - 0x00437727
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00404010()
 *		L00416000()
 *		L00447240()
 */

L00437700(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)Ac;
    eax = L00437630(A8);
    (restore)ecx;
    if(eax == 0) {
        esp = ebp;
        return 0;
    }
    eax = *(eax + 0x28) & 65535;
    esp = ebp;
}

/*	Procedure: 0x00437728 - 0x0043772F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437728()
{



}

/*	Procedure: 0x00437730 - 0x00437784
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00447DF0()
 *		L00448690()
 */

L00437730(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    edx = A8;
    if(edx >= 0x66) {
        edx = 0;
    }
    eax = *(edx + 0x48254e) & 0xff;
    if(eax >= 0x36) {
        if(A14 != 0) {
            *A14 = 0x11;
        }
        esp = ebp;
        return 0;
    }
    eax = eax * 0x3c + 0x481870;
    if(A14 != 0) {
        *A14 = *(eax + 0x2a) & 65535;
    }
    eax = L00428EA0(eax, Ac, A10);
    esp = ebp;
}

/*	Procedure: 0x00437785 - 0x0043778F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437785()
{



}

/*	Procedure: 0x00437790 - 0x004377B7
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004634B0()
 */

L00437790(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)Ac;
    eax = L00437630(A8);
    (restore)ecx;
    if(eax == 0) {
        esp = ebp;
        return 0x11;
    }
    eax = *(eax + 0x2a) & 65535;
    esp = ebp;
}

/*	Procedure: 0x004377B8 - 0x00437884
 *	Argument size: 16
 *	Local size: 4
 *	Save regs size: 12
 */

L004377B8(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(A14 < 4) {
        return 0;
    }
    if(Ac >= 0xb) {
        L00434380(A8, "exttype/", 8);
        if(al != 0) {
            *A10 = *(A8 + 8) & 0xff;
            *(A10 + 1) = *(A8 + 9) & 0xff;
            *(A10 + 2) = *(A8 + 0xa) & 0xff;
            esp = ebp - 0xc;
            return 3;
        }
    }
    (save)Ac;
    eax = L00437630(A8);
    (restore)ecx;
    if(eax == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    ecx = *(eax + 0x34);
    *(ebp - 0x10) = ecx;
    eax = 4;
    if((cl & 0xff) == 0x20) {
        eax = 3;
    }
    if(( *(ebp - 0x10) >> 8 & 0xff) == 0x20) {
        eax = eax - 1;
    }
    edx = *(ebp - 0x10) >> 0x18;
    *A10 = dl;
    *(A10 + 1) = *(ebp - 0x10) >> 0x10;
    *(A10 + 2) = cl;
    *(A10 + 3) = *(ebp - 0x10);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00437885 - 0x0043788F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437885()
{



}

/*	Procedure: 0x00437890 - 0x00437DE3
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042CB70()
 *		L0042CFC0()
 */

L00437890(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;



    edx = A10;
    esp = esp - 8;
    esi = Ac;
    if(!(edx & 0x20)) {
        return L00428EA0(0x476e28, A14, A18);
    }
    if(!(edx & 0x40)) {
        eax = L00428EA0(0x476e3c, A14, A18);
        esp = ebp - 0xc;
        return;
    }
    if(!(edx & 2)) {
        eax = L00428EA0(0x476e4c, A14, A18);
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x14) = esi >= 1 ? *(A8 + esi - 1) & 0xff : 0x20;
    *(ebp - 0x10) = esi >= 2 ? *(A8 + esi - 2) & 0xff : 0x20;
    ecx = esi >= 3 ? *(A8 + esi - 3) & 0xff : 0x20;
    eax = esi >= 4 ? *(A8 + esi - 4) & 0xff : 0x20;
    edx = *(ebp - 0x14) & 0xff;
    if(edx >= 0x41 && edx <= 0x5a) {
        *(ebp - 0x14) = *(ebp - 0x14) + 0x20;
    }
    edx = *(ebp - 0x10) & 0xff;
    if(edx >= 0x41 && edx <= 0x5a) {
        *(ebp - 0x10) = *(ebp - 0x10) + 0x20;
    }
    edx = cl & 0xff;
    if(edx >= 0x41 && edx <= 0x5a) {
        cl = cl + 0x20;
    }
    edx = al & 0xff;
    if(edx >= 0x41 && edx <= 0x5a) {
        al = al + 0x20;
    }
    edx = *(ebp - 0x10) & 0xff;
    if(edx == 0x2e) {
        eax = ( *(ebp - 0x14) & 0xff) << 0x18 | 2105376;
    } else {
        ecx = cl & 0xff;
        if(ecx == 0x2e) {
            edx = edx << 0x18;
            eax = ( *(ebp - 0x14) & 0xff) << 0x10 | edx | 8224;
        } else {
            if((al & 0xff) == 0x2e) {
                eax = edx << 0x10;
                eax = eax | ecx << 0x18;
                eax = eax | ( *(ebp - 0x14) & 0xff) << 8 | 0x20;
            } else {
                eax = 0;
            }
        }
    }
    if(!(edx = eax - 1634297376)) {
        if(edx = edx - 852736) {
            goto L00437d00;
        }
        if(!(edx = edx - 16189184)) {
            if((edx = edx - 11710464) || (edx = edx - 5263360)) {
                goto L00437c40;
            }
            if(edx = edx - 15795200) {
                goto L00437d47;
            }
            if(edx = edx - 718848) {
                goto L00437d30;
            }
            if(edx = edx - 194304) {
                goto L00437d17;
            }
            if(edx = edx - 17367552) {
                goto L00437d27;
            }
            if(edx = edx - 16125696) {
                goto L00437d40;
            }
            if(!(edx = edx - 16445952)) {
                if(edx = edx - 1096192) {
                    goto L00437c60;
                }
                if(edx = edx - 10878976) {
                    goto L00437c40;
                }
                if(edx = edx - 0x415000) {
                    goto L00437d60;
                }
                if(edx = edx - 983040) {
                    goto L00437c40;
                }
                if((edx = edx - 261376) || (edx = edx - 0x4c)) {
                    goto L00437c30;
                }
                if(!(edx = edx - 33290676)) {
                    if(edx = edx - 33424384) {
                        goto L00437d57;
                    }
                    if(edx = edx - 12973568) {
                        goto L00437cb0;
                    }
                    if(edx = edx - 3872000) {
                        goto L00437ce0;
                    }
                    if(edx = edx - 48384) {
                        goto L00437ca0;
                    }
                    if(edx = edx - 0x100) {
                        goto L00437cf7;
                    }
                    if(edx = edx - 13056) {
                        goto L00437cf0;
                    }
                    if(edx = edx - 49544960) {
                        goto L00437d07;
                    }
                    if(edx = edx - 655616) {
                        goto L00437be0;
                    }
                    if(edx = edx - 134400) {
                        goto L00437d20;
                    }
                    if(edx = edx - 131072) {
                        goto L00437d50;
                    }
                    if(edx = edx - 61440) {
                        goto L00437c10;
                    }
                    if(edx = edx - 32378368) {
                        goto L00437c90;
                    }
                    if((edx = edx - 17302016) || (edx = edx - 0x58)) {
                        goto L00437c50;
                    }
                    if(edx = edx - 16252328) {
                        goto L00437c70;
                    }
                    if(edx = edx - 521216) {
                        goto L00437bf0;
                    }
                    if(edx = edx - 720896) {
                        goto L00437d37;
                    }
                    if(edx = edx - 265728) {
                        goto L00437c20;
                    }
                    if(edx = edx - 48824832) {
                        goto L00437cd0;
                    }
                    if(edx = edx - 17497344) {
                        goto L00437d10;
                    }
                    if(edx = edx - 33357056) {
                        goto L00437c80;
                    }
                    goto L00437d67;
                }
                esi = "\nimage/jpeg";
            } else {
                esi = "\timage/gif";
                goto L00437d75;
L00437be0:
                esi = "\timage/png";
                goto L00437d75;
L00437bf0:
                esi = "\nimage/tiff";
            }
        } else {
            esi = "\timage/bmp";
            goto L00437d75;
L00437c10:
            esi = "image/photoshop\rimage/macpict";
            goto L00437d75;
L00437c20:
            esi = "\ntext/plain";
            goto L00437d75;
L00437c30:
            esi = "\ttext/html";
            goto L00437d75;
L00437c40:
            esi = "text/source\ttext/html";
            goto L00437d75;
L00437c50:
            esi = 0x476cb4;
            goto L00437d75;
L00437c60:
            esi = "archive/gzip";
            goto L00437d75;
L00437c70:
            esi = 0x476ce8;
            goto L00437d75;
L00437c80:
            esi = 0x476cf4;
            goto L00437d75;
L00437c90:
            esi = "archive/rar\naudio/mpeg";
            goto L00437d75;
L00437ca0:
            esi = "\naudio/mpeg";
            goto L00437d75;
L00437cb0:
            esi = "audio/mpeg4\naudio/aiff";
        }
    } else {
        esi = "\naudio/aiff";
        goto L00437d75;
L00437cd0:
        esi = "\taudio/wav";
        goto L00437d75;
L00437ce0:
        esi = "video/quicktime\nvideo/mpeg";
        goto L00437d75;
L00437cf0:
        esi = "\nvideo/mpeg";
        goto L00437d75;
L00437cf7:
        esi = "video/mpeg4\tvideo/avi";
        goto L00437d75;
L00437d00:
        esi = "\tvideo/avi";
        goto L00437d75;
L00437d07:
        esi = 0x476d70;
        goto L00437d75;
L00437d10:
        esi = "app/msexcel\napp/msword";
        goto L00437d75;
L00437d17:
        esi = "\napp/msword";
        goto L00437d75;
L00437d20:
        esi = "app/mspowerpoint";
        goto L00437d75;
L00437d27:
        esi = "executable/program";
        goto L00437d75;
L00437d30:
        esi = 0x476e54;
        goto L00437d75;
L00437d37:
        esi = 0x476dc8;
        goto L00437d75;
L00437d40:
        esi = "\rfont/standard";
        goto L00437d75;
L00437d47:
        esi = 0x476de4;
        goto L00437d75;
L00437d50:
        esi = 0x476e00;
        goto L00437d75;
L00437d57:
        esi = 0x476e68;
        goto L00437d75;
L00437d60:
        esi = 0x476dec;
        goto L00437d75;
L00437d67:
        esi = eax != 0 ? 0 : 0x476de4;
    }
L00437d75:
    if(esi != 0) {
        eax = L00428EA0(esi, A14, A18);
        esp = ebp - 0xc;
        return;
    }
    if(A18 < 0xb) {
        esp = ebp - 0xc;
        return 0;
    }
    *A14 = 0x65;
    *(A14 + 1) = 0x78;
    *(A14 + 2) = 0x74;
    *(A14 + 3) = 0x74;
    *(A14 + 4) = 0x79;
    *(A14 + 5) = 0x70;
    *(A14 + 6) = 0x65;
    *(A14 + 7) = 0x2f;
    edx = eax >> 0x18;
    *(A14 + 8) = dl;
    ecx = eax;
    edx = eax;
    *(A14 + 9) = ecx >> 0x10;
    *(A14 + 0xa) = edx >> 8;
    esp = ebp - 0xc;
    return 0xb;
}

/*	Procedure: 0x00437DE4 - 0x00437DEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437DE4()
{



}

/*	Procedure: 0x00437E1B - 0x00437E1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437E1B()
{



}

/*	Procedure: 0x00437E20 - 0x00437F65
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042CFC0()
 */

L00437E20(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 0x24;
    if(ebx == 0) {
        L00429610(65538);
    }
    eax = *(ebx + 4);
    *(ebp - 0x30) = eax;
    eax = *(ebp - 0x30) * 4;
    *(ebp - 0x24) = ebx;
    *(ebp - 0x24) = *(ebp - 0x24) + 8;
    esi = *(ebp - 0x24);
    ebx = L0042E310(eax);
    edx = 0;
    *(ebp - 0x2c) = ebx;
    if(*(ebp - 0x30) > 0) {
        ecx = *(ebp - 0x30) - 8;
        if(*(ebp - 0x30) > 8) {
            do {
                *(ebx + edx * 4) = esi;
                eax = esi + 0x40;
                esi = esi - -128;
                *(ebx + edx * 4 + 4) = eax;
                *(ebx + edx * 4 + 8) = esi;
                eax = esi + 0x40;
                esi = esi - -128;
                *(ebx + edx * 4 + 0xc) = eax;
                *(ebx + edx * 4 + 0x10) = esi;
                eax = esi + 0x40;
                esi = esi - -128;
                *(ebx + edx * 4 + 0x14) = eax;
                *(ebx + edx * 4 + 0x18) = esi;
                *(ebx + edx * 4 + 0x1c) = esi + 0x40;
                edx = edx + 8;
                esi = esi - -128;
            } while(edx < ecx);
        }
        do {
            *(ebx + edx * 4) = esi;
            edx = edx + 1;
            esi = esi + 0x40;
        } while(edx < *(ebp - 0x30));
    }
    eax = ebp - 0x18;
    *eax = 0;
    *(eax + 4) = 0;
    *(eax + 8) = 0;
    *(ebp - 0x18) = ebx;
    esi = *(ebp - 0x30);
    *(ebp - 0x14) = esi;
    *(ebp - 0x10) = esi;
    L00429E20(eax, 0x437df0, 0);
    *(ebp - 0x1c) = *(ebp - 0x30);
    *(ebp - 0x1c) = *(ebp - 0x1c) << 6;
    eax = L0042E310( *(ebp - 0x1c));
    esi = 0;
    *(ebp - 0x20) = eax;
    *(ebp - 0x28) = eax;
    edi = eax;
    if(*(ebp - 0x30) > 0) {
        do {
            L004342A0(edi, *(ebx + esi * 4), 0x40);
            esi = esi + 1;
            edi = edi + 0x40;
        } while(esi < *(ebp - 0x30));
    }
    L004342A0( *(ebp - 0x24), *(ebp - 0x20), *(ebp - 0x1c));
    L0042E3E0(ebp - 0x28);
    return L0042E3E0(ebp - 0x2c);
}

/*	Procedure: 0x00437F66 - 0x00437F6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437F66()
{



}

/*	Procedure: 0x00437F70 - 0x00437F92
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00404990()
 */

L00437F70(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    *Ac = L0042C260(A8, Ac + 1, 0xff);
    return *Ac;
}

/*	Procedure: 0x00437F93 - 0x00437F9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437F93()
{



}

/*	Procedure: 0x00437FA0 - 0x00437FDD
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00437FE0()
 *		L00438030()
 *		L00438060()
 */

L00437FA0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    (save)ebx;
    (save)ebp;
    ebp = A4 + A8;
    edx = ebp - 9;
    ebx = ebp;
    if(edx < A4) {
        edx = A4;
        goto L00437fd5;
L00437fcf:
        eax = ebp - ebx - 1;
        (restore)ebp;
        (restore)ebx;
        return;
    }
L00437fd5:
    do {
        if(ebx <= edx) {
            goto L00437fdb;
        }
        ebx = ebx - 1;
    } while(( *ebx & 0xff) != 0x2e);
    goto L00437fcf;
L00437fdb:
    (restore)ebp;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00437FDE - 0x00437FDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00437FDE()
{



}

/*	Procedure: 0x00437FE0 - 0x0043802E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404640()
 */

L00437FE0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)Ac;
    eax = L00437FA0(A8);
    (restore)ecx;
    ecx = A10 != 0 ? *A10 & 0xff : 0;
    if(eax != ecx) {
        return 0;
    }
    eax = L00425E40(Ac + A8 - eax, eax, A10 + 1, ecx, 1);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0043802F - 0x0043802F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043802F()
{



}

/*	Procedure: 0x00438030 - 0x0043805F
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00438100()
 */

L00438030(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L00437FA0(A8, Ac);
    return L00427C80(Ac + A8 - eax, eax, A10, A14);
}

/*	Procedure: 0x00438060 - 0x004380FD
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L00438060(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 4;
    if(A8 == 0) {
        L00429610(65538);
    }
    esi = A8 + 1;
    ebx = *A8 & 0xff;
    (save)ebx;
    eax = L00437FA0(esi);
    (restore)ecx;
    if(!(ebx = ebx - eax) && ( *(ebx + esi - 1) & 0xff) == 0x2e) {
        ebx = ebx - 1;
    }
    if(Ac != 0) {
        eax = Ac;
        ecx = *eax & 0xff;
    } else {
        ecx = 0;
    }
    if(ecx == 0) {
        *A8 = bl;
        return;
    }
    eax = ecx + 1;
    if(eax + ebx > 0xff) {
        edx = 0xff;
        ebx = 0xff - eax;
    }
    esi = esi + ebx;
    *A8 = dl;
    *esi = 0x2e;
    eax = L00427C80(Ac + 1, ecx, esi + 1, ecx);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004380FE - 0x004380FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004380FE()
{



}

/*	Procedure: 0x00438100 - 0x0043819E
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00404990()
 */

L00438100(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    esp = esp - 0x40;
    if(A8 == 0) {
        L00429610(65538);
    }
    eax = ebp - 0x4b;
    ecx = A8 + 1;
    L00438030(ecx, *A8 & 0xff, eax, 0x3f);
    *(ebp - 0x4c) = al;
    ebx = ( *(ebp - 0x4c) & 0xff) + 1;
    if(ebx == 1) {
        return L00428A30(A8, Ac);
    }
    *A8 = *A8 - bl;
    (save)Ac;
    L00428A30(A8);
    (restore)ecx;
    if(( *A8 & 0xff) + ebx > 0xff) {
        L00427CA0(A8 + 1, 0xff - ebx);
        *A8 = al;
    }
    *A8 = *A8 + 1;
    edx = *A8 & 0xff;
    *(A8 + edx) = 0x2e;
    eax = L00428A30(A8, ebp - 0x4c);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0043819F - 0x0043819F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043819F()
{



}

/*	Procedure: 0x004381A0 - 0x004381E6
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432A90()
 */

L004381A0(Ac, A10, A14, A18)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    (save)A18;
    (save)A14;
    (save) & A10;
    L00427F40( & Ac);
    (restore)ecx;
    if(A10 > A18) {
        A10 = A18;
    }
    if(A14 == Ac) {
        esp = ebp - 8;
        (restore)A14;
        (restore)A18;
        return A10;
    }
    eax = L004342A0(A14, Ac, A10);
    esp = ebp - 8;
    (restore)A14;
    (restore)A18;
}

/*	Procedure: 0x004381E7 - 0x004381EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004381E7()
{



}

/*	Procedure: 0x004381F0 - 0x004382F3
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00432A90()
 */

L004381F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    (save)edi;
    esp = esp - 4;
    (save) & Ac;
    eax = L00427F40( & A8);
    (restore)ecx;
    if(Ac == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    ecx = A8;
    *(ebp - 0x10) = ecx;
    *(ebp - 0x10) = *(ebp - 0x10) + Ac;
    *A10 = 0;
    *(A10 + 1) = 0;
    *(A10 + 2) = 0;
    *(A10 + 3) = 0;
    *(A10 + 4) = 0;
    *(A10 + 5) = 0;
    esi = 0;
    eax = 0;
    edi = A10;
    if(ecx < *(ebp - 0x10)) {
        do {
            edx = *ecx & 0xff;
            ecx = ecx + 1;
            if(edx == 0x3a) {
                break;
            }
            if(edx != 0x2e) {
                if(edx < 0x30 || edx > 0x39) {
                    goto L0043827a;
                }
                eax = eax + eax * 4 + eax + eax * 4;
                eax = eax + edx - 0x30;
            } else {
                if(esi < 4) {
                    *(edi + esi) = al;
                    esi = esi + 1;
                }
                eax = 0;
            }
        } while(ecx < *(ebp - 0x10));
        goto L00438293;
L0043827a:
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
L00438293:
    if(esi < 4) {
        *(A10 + esi) = al;
        esi = esi + 1;
    }
    if(esi == 1 && *A10 == 0) {
        *A10 = 0x7f;
        *(A10 + 1) = 0;
        *(A10 + 2) = 0;
        *(A10 + 3) = 1;
    }
    edx = 0;
    do {
        eax = *ecx & 0xff;
        ecx = ecx + 1;
        if(eax < 0x30 || eax > 0x39) {
            break;
        }
        edx = edx + edx * 4 + edx + edx * 4;
        edx = edx + eax - 0x30;
    } while(ecx < *(ebp - 0x10));
    *(A10 + 4) = edx >> 8;
    *(A10 + 5) = dl;
    esp = ebp - 0xc;
    (restore)edi;
    return 1;
}

/*	Procedure: 0x004382F4 - 0x004382FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004382F4()
{



}

/*	Procedure: 0x00438300 - 0x00438454
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00432890()
 *		L00438A50()
 */

L00438300(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x44;
    esi = A8;
    edi = A10 < 0x3f ? ebp - 0x4c : Ac;
    *(ebp - 0x50) = 0;
    do {
        ecx = *( *(ebp - 0x50) + esi) & 0xff;
        if(ecx < M00000064) {
            if(ecx < 0xa) {
                A10 = ecx;
                eax = -858993459;
                asm("mul ebx");
                edx = (edx >> 3) * 0xa;
                bl = A10 - edx + 0x30;
                *edi = bl;
                *(edi + 1) = 0x2e;
                edi = edi + 2;
            } else {
                edx = 0;
                eax = ecx;
                edx = 0xa / 0xa % 0xa / 0xa;
                al = al + 0x30;
                *edi = al;
                bl = edx + 0x30;
                *(edi + 1) = bl;
                *(edi + 2) = 0x2e;
                edi = edi + 3;
            }
        } else {
            A10 = ecx;
            eax = 1374389535;
            asm("mul ebx");
            eax = ecx;
            dl = (edx >> 5) + 0x30;
            *edi = dl;
            edx = 0;
            edx = 0xa / 0xa % 0xa / 0xa;
            A10 = eax;
            cl = edx + 0x30;
            eax = -858993459;
            asm("mul ebx");
            edx = (edx >> 3) * 0xa;
            bl = A10 - edx + 0x30;
            *(edi + 1) = bl;
            *(edi + 2) = cl;
            *(edi + 3) = 0x2e;
            edi = edi + 4;
        }
        *(ebp - 0x50) = *(ebp - 0x50) + 1;
    } while(*(ebp - 0x50) < 4);
    ecx = *(esi + 4) & 0xff;
    eax = *(esi + 5) & 0xff;
    ecx = ecx << 8 | eax;
    *(edi - 1) = 0x3a;
    esi = ecx;
    A10 = 0;
    do {
        eax = -858993459;
        asm("mul esi");
        A10 = A10 + 1;
        edx = edx >> 3;
        esi = edx;
    } while(esi != 0);
    esi = edi + A10;
    do {
        A10 = ecx;
        esi = esi - 1;
        eax = -858993459;
        asm("mul ebx");
        eax = -858993459;
        edx = (edx >> 3) * 0xa;
        A10 = A10 - edx;
        asm("mul ecx");
        bl = bl + 0x30;
        *esi = bl;
        edx = edx >> 3;
        ecx = edx;
    } while(ecx != 0);
    if(A10 < 0x3f) {
        edx = ebp - 0x4c;
        A10 = edi - edx;
        if(A10 > A10) {
        }
        L004342A0(Ac, ebp - 0x4c, A10);
        esp = ebp - 0xc;
        return A10;
    }
    eax = edi - Ac;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00438455 - 0x0043845F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00438455()
{



}

/*	Procedure: 0x00438690 - 0x004387AF
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444BB0()
 *		L00444E38()
 */

L00438690(A10, A14, A18, A1c, A20, A28, A2c)
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A28;
/* unknown */ void  A2c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    (save)ebp;
    ecx = A10;
    if(A18 != 0) {
        goto L004386d0;
    }
L004386a7:
    if(A1c == 0) {
        goto L004386b8;
    }
    *A1c = 0;
    if(A20 == 0) {
        goto L004386c2;
    }
    *A20 = 0;
    (restore)ebp;
    return 0;
    if(ecx < A28) {
        goto L004386dd;
    }
    A28 - 1 :: 0;
    if((esi = A28 - 1) || ( *(esi - 1) & 0xff) - 9 <= 1 || (ebx = ebx - 4) || (ebx = ebx - 0x13) || (ebx = ebx - 2) || (ebx = ebx - 6) || (ebx = ebx - 0x14) || (ebx = ebx - 0x1f) || (ebx = ebx - 0x38) || (ebx = ebx - 0xd)) {
        goto L00438721;
    }
    if(esi - 1 > 0) {
        goto L004386e6;
    }
    edi = ebp;
    if(ebp >= A28 || ( *edi & 0xff) - 9 <= 1 || (ecx = ecx - 4) || (ecx = ecx - 0x13) || (ecx = ecx - 2) || (ecx = ecx - 7) || (ecx = ecx - 0x15) || (ecx = ecx - 0x1f) || (ecx = ecx - 0x37) || (ecx = ecx - 0xc)) {
        goto L0043876a;
    }
    if(edi + 1 < ebx) {
        goto L00438730;
    }
    ebx = edi - esi;
    ebp = 0;
    if(ebx <= 0) {
        goto L004386a7;
    }
    if(( *esi & 0xff) == 0x2e) {
        goto L00438790;
    }
    if(1 < ebx) {
        goto L00438778;
    }
    goto L004386a7;
    if(A2c == 0) {
        goto L004387a1;
    }
    ecx = esi - A14;
    *A2c = ecx;
    if(A20 == 0) {
        goto L004387a7;
    }
    *A20 = ebx;
    (restore)ebp;
    return 1;
}

/*	Procedure: 0x004387B0 - 0x004388EF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00433B90()
 */

L004387B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    esp = esp - 0x38;
    eax = ebp - 0x3c;
    ebx = A10;
    L004384a0(A8, Ac, 0, eax);
    if(ebx == 0) {
        goto L004387d4;
    }
    *ebx = al;
    if(al == 0) {
        goto L004388e0;
    }
    eax = *(ebp - 0x2c);
    if(*(ebp - 0x28) < 4) {
        goto L004387ec;
    }
    L00425E40(0x476f88, 4, eax, 4, 1);
    if(al == 0) {
        edx = *(ebp - 0x2c);
        if(*(ebp - 0x28) < 4) {
            goto L00438832;
        }
        L00425E40(0x476f90, 4, ebx + edx - 4, 4, 1);
        if(al == 0) {
            ebx = *(ebp - 0x2c);
            if(*(ebp - 0x28) < 4) {
                goto L00438859;
            }
            L00425E40(0x476f98, 4, edx + ebx - 4, 4, 1);
            if(al == 0) {
                eax = *(ebp - 0x2c);
                if(*(ebp - 0x28) < 4) {
                    goto L00438880;
                }
                L00425E40(0x476fa0, 4, ebx + eax - 4, 4, 1);
                if(al == 0) {
                    L00426440(0x476fa8, 5, *(ebp - 0x2c), *(ebp - 0x28), 1);
                    if(eax == 0) {
                        L00426440(0x476fb0, 5, *(ebp - 0x2c), *(ebp - 0x28), 1);
                        if(eax == 0) {
                            L00426440(0x476fb8, 5, *(ebp - 0x2c), *(ebp - 0x28), 1);
                            if(eax == 0) {
                                goto L004388e0;
                            }
                        }
                    }
                }
            }
        }
    }
    esp = ebp - 4;
    return 1;
    esp = ebp - 4;
    return 0;
}

/*	Procedure: 0x004388F0 - 0x00438965
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0040B7E0()
 */

L004388F0(Ac, A10, A14, A18, A1c)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A10;
    eax = L004348B0(0x3a, edi, A14);
    if(eax == 0) {
        goto L00438913;
    }
    esi = eax - edi;
    edx = A1c;
    if(esi < edx) {
        goto L0043891c;
    }
    esi = edx;
    if(edi == A18) {
        goto L0043892b;
    }
    L004342A0(A18, edi, esi);
    edx = A1c - esi;
    Ac :: 0;
    if((edi = esi + A18) || edx == 0) {
        goto L0043895a;
    }
    *edi = 0x3a;
    edi = edi + 1;
    edi = edi + L00426870(Ac, edi, edx - 1, 0x800);
    esp = ebp - 0xc;
    return edi - A18;
}

/*	Procedure: 0x00438970 - 0x004389D2
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 */

L00438970(Ac, A10, A14, A18, A1c)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = A10;
    esi = A18;
    if(A1c != 0) {
        eax = L004348B0(0x3a, Ac, ebx);
        if(eax != 0) {
            ebx = eax - Ac;
        }
        eax = L004348B0(0x3a, A14, esi);
        if(eax != 0) {
            esi = eax;
        }
    }
    bl = 0;
    if(!(eax = eax - A14)) {
        bl = 0;
    }
    esp = ebp - 0xc;
    return bl;
}

/*	Procedure: 0x004389D3 - 0x004389DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004389D3()
{



}

/*	Procedure: 0x004389E0 - 0x00438A4A
 *	Argument size: -28
 *	Local size: 28
 *	Save regs size: 0
 *	Called by:
 *		L00432C80()
 */

L004389E0()
{
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    Vfffffffc = L0045CD30(4, 8, 0x80);
    Vfffffff8 = esp;
    L0045D360(Vfffffffc, L0045CD30(4, 4, 0x80));
    return Vfffffffc;
    L0045CEB0( & Vfffffffc);
    L004234F0(0, 0, 0);
    if(Vffffffec != 0) {
        ecx = Vffffffe4;
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
    return Vfffffffc;
}

/*	Procedure: 0x00438A4B - 0x00438A4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00438A4B()
{



}

/*	Procedure: 0x00438A50 - 0x00438BDD
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00432D40()
 */

L00438A50(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0x78;
    ebx = A10;
    if(edi == 0) {
        return 1;
    }
    *(ebp - 0x70) = L0045D390(edi);
    esi = L0042EF30();
    L0045D260( *(ebp - 0x70), & Ac, ebp - 0x7c, 0);
    if(*(ebp - 0x7c) != 0) {
        edx = *(ebp - 0x7c);
        eax = esi - *edx;
        if(eax < 0xe10) {
            esp = ebp - 0xc;
            return 1;
        }
        L0045D100( *(ebp - 0x70), & Ac);
    }
    edx = ebp + -132;
    L0045D260(edi, & Ac, edx, 0);
    if(*(ebp + -132) == 0) {
        *(ebp - 0x74) = esi;
        ecx = ebp - 0x78;
        esi = & Ac;
        *(ebp - 0x78) = 1;
        eax = L0045CEF0(edi, esi, ecx, 0);
        esp = ebp - 0xc;
        return 0;
    }
    if(ebx == 0) {
        ebx = 0x1e;
        A14 = 0x12c;
    }
    edx = *(ebp + -132);
    eax = esi - *(edx + 4);
    if(eax > A14) {
        ebx = edx;
        *ebx = 0;
        edi = *(ebp + -132);
        *(edi + 4) = esi;
        esp = ebp - 0xc;
        return 0;
    }
    *( *(ebp + -132)) = *( *(ebp + -132)) + 1;
    if(*( *(ebp + -132)) > ebx) {
        eax = ebp - 0x80;
        *(ebp - 0x80) = esi;
        L0045CEF0( *(ebp - 0x70), & Ac, eax, 0);
        L0045D100(edi, & Ac);
        L00434150(ebp - M00000064, 0x58);
        ecx = ebp - 0x6c;
        edx = ecx;
        *(ebp - M00000064) = 262263;
        *ecx = 0;
        *(ecx + 4) = 0;
        *(ebp - 0x6c) = Ac;
        *(ebp - 0x67) = 1;
        L00438300(edx, ebp - 0x4b, 0x3f);
        *(ebp - 0x4c) = al;
        *(ebp - 0x4c) = *(ebp - 0x4c) - 2;
        eax = L00429560(ebp - M00000064);
        esp = ebp - 0xc;
        return 1;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00438BDE - 0x00438BDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00438BDE()
{



}

/*	Procedure: 0x00438BE0 - 0x00438BE7
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408B5A()
 *		L00408E70()
 *		L00438BF0()
 */

L00438BE0()
{



    M00480ff4 = 1;
}

/*	Procedure: 0x00438BE8 - 0x00438BEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00438BE8()
{



}

/*	Procedure: 0x00438BF0 - 0x00438C45
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00408B5A()
 *		L00414F70()
 *		L0042E5B0()
 */

L00438BF0()
{
	/* unknown */ void  ebx;



    M00480ff5 = 1;
    ebx = M00480fec;
    esp = esp - 0x18;
    if(ebx != 0) {
        *(ebp - 8) = esp;
        eax = *ebx(M00480ff0, 0, 0);
        goto L00438c40;
        eax = L00429560( *(ebp - 0x10));
        if(*(ebp - 0x14) != 0) {
            (save)-1;
            ecx = *(ebp - 0x1c);
            eax = *(ebp - 0x14)();
        }
        esp = *(ebp - 8);
    } else {
        L00438BE0();
    }
L00438c40:
}

/*	Procedure: 0x00438C46 - 0x00438C4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00438C46()
{



}

/*	Procedure: 0x00438C50 - 0x00438C63
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00408F30()
 */

L00438C50(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    M00480fec = A4;
    M00480ff0 = A8;
    return M00480ff0;
}

/*	Procedure: 0x00438C64 - 0x00438C6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00438C64()
{



}

/*	Procedure: 0x00438C70 - 0x00438CBF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041A6A9()
 *		L0041B02A()
 *		L0041F14C()
 *		L0041FDA0()
 */

L00438C70(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    ecx = A8;
    esp = esp - 0x18;
    ebx = M00480fdc;
    if(ecx == 0 || ebx == 0) {
        return;
    }
    *(ebp - 8) = esp;
    eax = *ebx(M00480fe0, ecx);
    goto L00438cba;
    eax = L00429560( *(ebp - 0x10));
    if(*(ebp - 0x14) != 0) {
        ecx = *(ebp - 0x1c);
        eax = *(ebp - 0x14)(-1);
    }
    esp = *(ebp - 8);
L00438cba:
    esp = ebp - 4;
}

/*	Procedure: 0x00438CC0 - 0x00438CD3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 *		L0042FAA0()
 */

L00438CC0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    M00480fdc = A4;
    M00480fe0 = A8;
    return M00480fe0;
}

/*	Procedure: 0x00438CD4 - 0x00438CDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00438CD4()
{



}

/*	Procedure: 0x00438EAB - 0x00438F9D
 *	Argument size: 8
 *	Local size: 16
 *	Save regs size: 4
 */

L00438EAB(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;



    cl = 0;
    if(Ac == 2) {
        if(*(A8 + 0x84) & 2) {
            goto L00438f1a;
        }
        *(A8 + 0x84) = *(A8 + 0x84) | 2;
        *(A8 + 0x98) = *(A8 + 0x98) | 2;
        *(A8 + 0xac) = *(A8 + 0xac) | 2;
        *(A8 + 0xc0) = *(A8 + 0xc0) | 2;
        goto L00438f18;
    }
    if(!( *(A8 + 0x84) & 2)) {
        *(A8 + 0x84) = *(A8 + 0x84) & -3;
        *(A8 + 0x98) = *(A8 + 0x98) & -3;
        *(A8 + 0xac) = *(A8 + 0xac) & -3;
        *(A8 + 0xc0) = *(A8 + 0xc0) & -3;
L00438f18:
        cl = 1;
    }
L00438f1a:
    if(cl != 0) {
        *(ebp - 0x14) = *(A8 + 0x2c);
        Vfffffff0 = *(A8 + 0x30);
        Vfffffff4 = *(A8 + 0x34);
        Vfffffff8 = *(A8 + 0x38);
        if(*(A8 + 0xa4) != 0) {
            eax = ebp - 0x14;
            ecx = A8 + 0x3c;
            L0044B770(eax, eax, ecx);
        }
        if(*(A8 + 0xb8) != 0) {
            eax = ebp - 0x14;
            ecx = A8 + 0x4c;
            L0044B770(eax, eax, ecx);
        }
        if(*(A8 + 0xcc) != 0) {
            eax = ebp - 0x14;
            ecx = A8 + 0x5c;
            L0044B770(eax, eax, ecx);
        }
        eax = L0041D2F0( *(A8 + 0x7c), ebp - 0x14);
    }
}

/*	Procedure: 0x00438F9E - 0x00439593
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L00438F9E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    dl = Ac;
    (save)ebx;
    (save)esi;
    (save)edi;
    ecx = (dl & 0xff) - 1;
    esp = esp - 0x2c;
    esi = A8;
    if(ecx <= 3) {
        switch(ecx) {
            case 0:
L00438fc1:
                ebx = *(esi + 0xd4);
                goto L00438fe3;
            case 1:
                ebx = *(esi + 0xd8);
                goto L00438fe3;
            case 2:
                ebx = *(esi + 0xdc);
                goto L00438fe3;
            case 3:
                ebx = *(esi + 0xe0);
                goto L00438fe3;
        }
        goto L00438fc1;
    }
    if(0 != 0) {
        goto L00438ff0;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    eax = 0;
    edi = ebp - 0x38;
    ecx = 0xb;
    asm("rep stosd");
    *(ebp - 0x38) = *(esi + 8);
    *(ebp - 0x34) = esi;
    *(ebp - 0x2c) = ebx;
    *(ebp - 0x24) = dl & 0xff;
    *(ebp - 0x20) = A10;
    edi = *(esi + 4);
    if(edi == 0) {
        goto L00439027;
    }
    (save)ebp - 0x38;
    *edi( *(esi + 8));
    goto L00439030;
    eax = L00438C70(ebp - 0x38);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = A8;
    eax = ebp - 0x10;
    edx = ebp + -144;
    (save)esi;
    (save)edi;
    esp = esp - 0x88;
    *(ebp + -148) = L0041D3C0( *(ebx + 0x7c), edx, 8, eax, 0);
    (save) *(ebp - 0x10);
    L00438eb0(ebx);
    edi = 0;
    (restore)ecx;
    if(*(ebp + -148) > 0) {
        esi = ebp + -144;
        (save)esi;
        eax = L00438ce0(ebx);
        edi = edi + 1;
        esi = esi + 0x10;
        (restore)ecx;
        if(edi < *(ebp + -148)) {
            goto L00439090;
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    ebx = Ac;
    esi = A8;
    if(*(ebx + 8) != 5) {
        goto L00439223;
    }
    L00450C40(ebx, 0x63, 0x20);
    if(al == 0) {
        goto L004390e8;
    }
    (save)0;
    L0042F3B0( *(esi + 0x70), *(esi + 0x74));
    goto L00439220;
    if(*(esi + 0xf4) & 65535 & 2) {
        goto L00439120;
    }
    if(*(ebx + 0x10) == 0xa) {
        goto L00439106;
    }
    if(( *(ebx + 0x14) & 65535) != 0x20) {
        goto L00439120;
    }
    L00438fa0(esi, 1, *(ebx + 0xc));
    goto L00439223;
    L00450C40(ebx, *(esi + 0xe4) & 65535, *(esi + 0xe6) & 65535);
    if(al == 0) {
        goto L00439150;
    }
    (save) *(ebx + 0xc);
    (save)1;
    (save)esi;
    L00438fa0();
    goto L00439220;
    L00450C40(ebx, *(esi + 0xe8) & 65535, *(esi + 0xea) & 65535);
    if(al == 0) {
        goto L00439180;
    }
    (save) *(ebx + 0xc);
    (save)2;
    (save)esi;
    L00438fa0();
    goto L00439220;
    L00450C40(ebx, *(esi + 0xec) & 65535, *(esi + 0xee) & 65535);
    if(al == 0) {
        goto L004391b0;
    }
    (save) *(ebx + 0xc);
    (save)3;
    (save)esi;
    L00438fa0();
    goto L00439220;
    L00450C40(ebx, *(esi + 0xf0) & 65535, *(esi + 0xf2) & 65535);
    if(al == 0) {
        goto L004391e0;
    }
    (save) *(ebx + 0xc);
    (save)4;
    (save)esi;
    L00438fa0();
    goto L00439220;
    if(( *(ebx + 0x14) & 65535) != 0x90 || *(esi + 0xf4) & 65535 & 2 || *(esi + 0xa4) != 0 || *(esi + 0xb8) != 0 || *(esi + 0xcc) != 0) {
        goto L00439223;
    }
    eax = L00438fa0(esi, 1, *(ebx + 0xc));
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    ebx = Ac;
    eax = *(ebx + 8) - 9;
    esi = A8;
    if(eax > 4) {
        goto L00439576;
    }
    goto ( *(eax * 4 + 0x477170));
    *(ebp - 0x13) = 0;
    *(ebp - 0x10) = 0;
    edi = *(ebx + 0x10);
    cl = 0;
    if(edi >= *(esi + 0x2c)) {
        edx = *(ebx + 0x14);
        if(edx >= *(esi + 0x30)) {
        }
    }
    if(1 == 0 || edi >= *(esi + 0x34)) {
        goto L00439280;
    }
    *(ebp - 0x10) = 1;
    if(*(ebp - 0x10) == 0) {
        goto L00439294;
    }
    edx = *(ebx + 0x14);
    if(edx >= *(esi + 0x38)) {
        goto L00439294;
    }
    *(ebp - 0x13) = 1;
    if(*(ebp - 0x13) == 0) {
        goto L004392d0;
    }
    if(*(esi + 0x84) & 3) {
        goto L00439576;
    }
    *(esi + 0x84) = *(esi + 0x84) | 1;
    edi = esi + 0x2c;
    L0041D2F0( *(esi + 0x7c), edi);
    *(esi + 0xf6) = 1;
    goto L00439576;
    if(edi < *(esi + 0x3c)) {
        goto L00439320;
    }
    edx = *(ebx + 0x14);
    if(edx < *(esi + 0x40) || edi >= *(esi + 0x44)) {
        goto L00439320;
    }
    ecx = *(ebx + 0x14);
    if(ecx >= *(esi + 0x48)) {
        goto L00439320;
    }
    if(*(esi + 0x98) & 3) {
        goto L00439576;
    }
    *(esi + 0x98) = *(esi + 0x98) | 1;
    ebx = esi + 0x3c;
    L0041D2F0( *(esi + 0x7c), ebx);
    *(esi + 0xf6) = 2;
    goto L00439576;
    if(edi < *(esi + 0x4c)) {
        goto L00439370;
    }
    eax = *(ebx + 0x14);
    if(eax < *(esi + 0x50) || edi >= *(esi + 0x54)) {
        goto L00439370;
    }
    edx = *(ebx + 0x14);
    if(edx >= *(esi + 0x58)) {
        goto L00439370;
    }
    if(*(esi + 0xac) & 3) {
        goto L00439576;
    }
    *(esi + 0xac) = *(esi + 0xac) | 1;
    edi = esi + 0x4c;
    L0041D2F0( *(esi + 0x7c), edi);
    *(esi + 0xf6) = 3;
    goto L00439576;
    if(edi < *(esi + 0x5c)) {
        goto L00439576;
    }
    ecx = *(ebx + 0x14);
    if(ecx < *(esi + 0x60) || edi >= *(esi + M00000064)) {
        goto L00439576;
    }
    eax = *(ebx + 0x14);
    if(eax >= *(esi + 0x68) || *(esi + 0xc0) & 3) {
        goto L00439576;
    }
    *(esi + 0xc0) = *(esi + 0xc0) | 1;
    ebx = esi + 0x5c;
    L0041D2F0( *(esi + 0x7c), ebx);
    *(esi + 0xf6) = 4;
    goto L00439576;
    *(esi + 0xf6) = 0;
    if(*(esi + 0x84) & 1) {
        goto L00439410;
    }
    *(esi + 0x84) = *(esi + 0x84) & -2;
    L0041D2F0( *(esi + 0x7c), esi + 0x2c);
    L00438fa0(esi, 1, *(ebx + 0xc));
    goto L00439576;
    if(*(esi + 0x98) & 1) {
        goto L00439444;
    }
    *(esi + 0x98) = *(esi + 0x98) & -2;
    L0041D2F0( *(esi + 0x7c), esi + 0x3c);
    L00438fa0(esi, 2, *(ebx + 0xc));
    goto L00439576;
    if(*(esi + 0xac) & 1) {
        goto L00439478;
    }
    *(esi + 0xac) = *(esi + 0xac) & -2;
    L0041D2F0( *(esi + 0x7c), esi + 0x4c);
    L00438fa0(esi, 3, *(ebx + 0xc));
    goto L00439576;
    if(*(esi + 0xc0) & 1) {
        goto L00439576;
    }
    *(esi + 0xc0) = *(esi + 0xc0) & -2;
    edi = esi + 0x5c;
    L0041D2F0( *(esi + 0x7c), edi);
    L00438fa0(esi, 4, *(ebx + 0xc));
    goto L00439576;
    eax = ( *(esi + 0xf6) & 0xff) - 1;
    edx = 0;
    if(eax > 3) {
        goto L004394f2;
    }
    goto ( *(eax * 4 + 0x477160));
    edx = esi + 0x84;
    ecx = esi + 0x2c;
    goto L004394f2;
    edx = esi + 0x98;
    ecx = esi + 0x3c;
    goto L004394f2;
    edx = esi + 0xac;
    ecx = esi + 0x4c;
    goto L004394f2;
    edx = esi + 0xc0;
    ecx = esi + 0x5c;
    if(edx == 0) {
        goto L00439576;
    }
    if(edi == 0xc) {
        goto L00439560;
    }
    *(ebp - 0x13) = 0;
    *(ebp - 0x11) = 0;
    *(ebp - 0x12) = 0;
    *(ebp - 0x10) = *(ebx + 0x10);
    if(*(ebp - 0x10) < *ecx) {
        goto L00439526;
    }
    edi = *(ebx + 0x14);
    if(edi < *(ecx + 4)) {
        goto L00439526;
    }
    *(ebp - 0x12) = 1;
    if(*(ebp - 0x12) == 0 || *(ebp - 0x10) >= *(ecx + 8)) {
        goto L00439538;
    }
    *(ebp - 0x11) = 1;
    if(*(ebp - 0x11) == 0) {
        goto L0043954c;
    }
    edi = *(ebx + 0x14);
    if(edi >= *(ecx + 0xc)) {
        goto L0043954c;
    }
    *(ebp - 0x13) = 1;
    if(*(ebp - 0x13) == 0) {
        goto L00439560;
    }
    if(*edx & 1) {
        goto L00439576;
    }
    *edx = *edx | 1;
    goto L0043956b;
    if(*edx & 1) {
        goto L00439576;
    }
    *edx = *edx & -2;
    eax = L0041D2F0( *(esi + 0x7c), ecx);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    esp = ebp;
    return L00438eb0(A8, Ac);
}

/*	Procedure: 0x004395A0 - 0x00439BE6
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00429440()
 *		L0042FAA0()
 *		L00439CA0()
 */

L004395A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x54;
    if(A10 == 0) {
        L00429610(65538);
    }
    eax = *(A10 + 0x48);
    *(ebp - 0x14) = eax;
    ebx = eax != 0 ? *eax & 0xff : 0;
    *(ebp - 0x20) = ebx;
    if(ebx == 0) {
        *(ebp - 0x14) = 0x477188;
        *(ebp - 0x20) = 2;
    }
    ecx = *(A10 + 0x4c);
    *(ebp - 0x28) = ecx != 0 ? *ecx & 0xff : 0;
    edi = *(A10 + 0x50);
    *(ebp - 0x24) = edi != 0 ? *edi & 0xff : 0;
    edx = *(A10 + 0x54);
    *(ebp - 0x18) = edx != 0 ? *edx & 0xff : 0;
    eax = *(A10 + 0x58);
    ecx = eax != 0 ? *eax & 0xff : 0;
    *(ebp - 0x10) = ecx;
    *(ebp - 0x10) = *(ebp - 0x10) + 1;
    edi = *(A10 + 0x5c);
    if(edi != 0) {
        *(ebp - 0x1c) = edi;
        *(ebp - 0x1c) = *(ebp - 0x1c) + 1;
        ebx = *edi & 0xff;
    } else {
        *(ebp - 0x1c) = *(A10 + 0x60);
        ebx = *(A10 + M00000064);
        if(ebx > 0x400) {
            ebx = 0x400;
        }
    }
    eax = L0042E3A0( *(ebp - 0x20) + 0xf8 + *(ebp - 0x28) + *(ebp - 0x24) + *(ebp - 0x18) + *(ebp - 0x10) + ebx);
    *(ebp - 0x60) = eax;
    *(eax + 4) = A8;
    edi = *(ebp - 0x60);
    *(edi + 8) = Ac;
    eax = *(ebp - 0x60);
    *(eax + 0x80) = *(A10 + 0x10);
    edi = *(ebp - 0x60);
    *(edi + 0x78) = *(A10 + 4);
    eax = *(ebp - 0x60);
    ecx = *A10 & 65535;
    *(eax + 0xf4) = cx;
    edi = *(ebp - 0x60);
    *(edi + 0xd4) = *(A10 + 0x28);
    eax = *(ebp - 0x60);
    *(eax + 0xd8) = *(A10 + 0x2c);
    edi = *(ebp - 0x60);
    *(edi + 0xdc) = *(A10 + 0x30);
    eax = *(ebp - 0x60);
    *(eax + 0xe0) = *(A10 + 0x34);
    edi = *(ebp - 0x60);
    edx = *(A10 + 0x38) & 65535;
    *(edi + 0xe4) = dx;
    eax = *(ebp - 0x60);
    ecx = *(A10 + 0x3a) & 65535;
    *(eax + 0xe6) = cx;
    edi = *(ebp - 0x60);
    edx = *(A10 + 0x3c) & 65535;
    *(edi + 0xe8) = dx;
    eax = *(ebp - 0x60);
    ecx = *(A10 + 0x3e) & 65535;
    *(eax + 0xea) = cx;
    edi = *(ebp - 0x60);
    edx = *(A10 + 0x40) & 65535;
    *(edi + 0xec) = dx;
    eax = *(ebp - 0x60);
    ecx = *(A10 + 0x42) & 65535;
    *(eax + 0xee) = cx;
    edi = *(ebp - 0x60);
    *(edi + 0xf0) = *(A10 + 0x44) & 65535;
    eax = *(ebp - 0x60);
    *(eax + 0xf2) = *(A10 + 0x46) & 65535;
    edi = *(ebp - 0x60) + 0xf8;
    L00428EA0( *(ebp - 0x14), edi, 0xff);
    *( *(ebp - 0x60) + 0x84) = 0x20;
    *( *(ebp - 0x60) + 0x8c) = edi;
    eax = *(ebp - 0x20);
    *(ebp - 0x5c) = eax;
    *( *(ebp - 0x60) + 0x90) = eax;
    edi = edi + *(ebp - 0x20);
    L00428EA0( *(A10 + 0x4c), edi, 0xff);
    *( *(ebp - 0x60) + 0xa0) = edi;
    eax = *(ebp - 0x28);
    *(ebp - 0x20) = eax;
    *( *(ebp - 0x60) + 0xa4) = eax;
    edi = edi + *(ebp - 0x28);
    L00428EA0( *(A10 + 0x50), edi, 0xff);
    *( *(ebp - 0x60) + 0xb4) = edi;
    eax = *(ebp - 0x24);
    *(ebp - 0x54) = eax;
    *( *(ebp - 0x60) + 0xb8) = eax;
    edi = edi + *(ebp - 0x24);
    L00428EA0( *(A10 + 0x54), edi, 0xff);
    *( *(ebp - 0x60) + 0xc8) = edi;
    eax = *(ebp - 0x18);
    *(ebp - 0x58) = eax;
    *( *(ebp - 0x60) + 0xcc) = eax;
    edi = edi + *(ebp - 0x18);
    *( *(ebp - 0x60) + 0x6c) = edi;
    L004288C0(edi, *(A10 + 0x58));
    edi = edi + *(ebp - 0x10);
    *( *(ebp - 0x60) + 0x74) = ebx;
    *( *(ebp - 0x60) + 0x70) = edi;
    L004342A0(edi, *(ebp - 0x1c), ebx);
    *(ebp - 0x3c) = esp;
    if(*(A10 + 8) == 0 && *(A10 + 4) == 0) {
        goto L00439897;
    }
    *(ebp - 0x14) = 1;
    if(*(A10 + 4) != 0) {
        ecx = *(ebp - 0x60) + 0xc;
        *ecx = 0xa;
        *(ecx + 4) = 0xa;
        *(ecx + 8) = 0x2a;
        *(ecx + 0xc) = 0x2a;
    } else {
L00439897:
        *(ebp - 0x14) = 0;
    }
    edx = *(ebp - 0x14) != 0 ? *( *(ebp - 0x60) + 0x14) + 0x12 : 0xa;
    *( *(ebp - 0x60) + 0x1c) = edx;
    *( *(ebp - 0x60) + 0x20) = 0xa;
    if(*(A10 + 0xc) == 0) {
        edx = *(ebp - 0x60);
        eax = *(edx + 0x1c) + 0x140;
        *(edx + 0x24) = eax;
        *( *(ebp - 0x60) + 0x28) = 10000;
        edx = *(ebp - 0x60);
        eax = L0044A850(0, edx + 0x1c, *(edx + 0x70), ebx, 1);
        edi = *(ebp - 0x60);
        eax = eax + *(edi + 0x20) + 6;
        *(edi + 0x28) = eax;
    }
    ebx = *(ebp - 0x60) + 0x1c;
    edi = *(ebx + 0xc) - *(ebx + 4) < 0x32 ? 0x46 : *( *(ebp - 0x60) + 0x28) + 0xa;
    *(ebp - 0x10) = edi;
    *(ebp - 0x10) = *(ebp - 0x10) + 0x14;
    ebx = *( *(ebp - 0x60) + 0x24);
    edx = *(ebp - 0x18) != 0 ? 0xc : 0x10;
    *(ebp - 0x1c) = dx & 65535;
    eax = L0044BCD0(0, *( *(ebp - 0x60) + 0x8c), *(ebp - 0x5c)) + 0x14;
    if(eax < 0x46) {
        eax = 0x46;
    }
    eax = eax + 6;
    edx = edi - 3;
    *( *(ebp - 0x60) + 0x30) = edx;
    edx = *(ebp - 0x10) + 3;
    *( *(ebp - 0x60) + 0x38) = edx;
    *( *(ebp - 0x60) + 0x34) = ebx;
    ebx = ebx - eax;
    *( *(ebp - 0x60) + 0x2c) = ebx;
    ebx = ebx - *(ebp - 0x1c);
    if(*(ebp - 0x14) == 0 && *(ebp - 0x28) == 0 && *(ebp - 0x24) == 0 && *(ebp - 0x18) == 0) {
        L0044B8C0( *(ebp - 0x60) + 0x2c, *(ebp - 0x60) + 0x1c);
    }
    if(*(ebp - 0x28) != 0) {
        eax = L0044BCD0(0, *( *(ebp - 0x60) + 0xa0), *(ebp - 0x20)) + 0x14;
        if(eax < 0x46) {
            eax = 0x46;
        }
        *( *(ebp - 0x60) + 0x40) = edi;
        edx = *(ebp - 0x60);
        *(edx + 0x48) = *(ebp - 0x10);
        *( *(ebp - 0x60) + 0x44) = ebx;
        ebx = ebx - eax;
        *( *(ebp - 0x60) + 0x3c) = ebx;
        ebx = ebx - *(ebp - 0x1c);
    }
    if(*(ebp - 0x24) != 0) {
        eax = L0044BCD0(0, *( *(ebp - 0x60) + 0xb4), *(ebp - 0x54)) + 0x14;
        if(eax < 0x46) {
            eax = 0x46;
        }
        *( *(ebp - 0x60) + 0x50) = edi;
        edx = *(ebp - 0x60);
        *(edx + 0x58) = *(ebp - 0x10);
        if(!( *A10 & 4)) {
            if(*(ebp - 0x18) != 0) {
                goto L00439a72;
            }
            edx = *(ebp - 0x60);
            ecx = edx;
            *(ecx + 0x4c) = *(edx + 0x1c);
            ecx = *(ebp - 0x60);
            edx = *(ecx + 0x1c) + eax;
            *(ecx + 0x54) = edx;
        } else {
L00439a72:
            *( *(ebp - 0x60) + 0x54) = ebx;
            ebx = ebx - eax;
            *( *(ebp - 0x60) + 0x4c) = ebx;
            ebx = ebx - *(ebp - 0x1c);
        }
    }
    if(*(ebp - 0x18) != 0) {
        eax = L0044BCD0(0, *( *(ebp - 0x60) + 0xc8), *(ebp - 0x58)) + 0x14;
        if(eax < 0x46) {
            eax = 0x46;
        }
        *( *(ebp - 0x60) + 0x60) = edi;
        edx = *(ebp - 0x60);
        *(edx + 0x68) = *(ebp - 0x10);
        if(!( *A10 & 4)) {
            edx = *(ebp - 0x60);
            ebx = edx;
            *(ebx + 0x5c) = *(edx + 0x1c);
            edi = *(ebp - 0x60);
            edx = *(edi + 0x1c) + eax;
            *(edi + M00000064) = edx;
        } else {
            *( *(ebp - 0x60) + M00000064) = ebx;
            ebx = ebx - eax;
            *( *(ebp - 0x60) + 0x5c) = ebx;
        }
    }
    if(!( *( *(ebp - 0x60) + 0xf4) & 65535 & 1)) {
        edx = *(ebp - 0x60);
        *(ebp - 0x38) = 0;
        *(ebp - 0x34) = 0;
        *(ebp - 0x30) = *(edx + 0x24) + 0xa;
        *(ebp - 0x2c) = *(ebp - 0x10) + 0xa;
        ecx = 671088656;
        if(!( *(edx + 0xf4) & 65535 & 0x100)) {
            ecx = 671088912;
        }
        ebx = *( *(ebp - 0x60) + 0x78);
        if(ebx == 1 || ebx == 3) {
            ecx = ecx | 29360128;
        }
        edx = *(ebp - 0x60);
        eax = L0041C5A0(edx, ebp - 0x38, ecx, 0, *(edx + 0x6c));
        *( *(ebp - 0x60) + 0x7c) = eax;
        (save)0x4825b8;
        L0041B560( *( *(ebp - 0x60) + 0x7c));
        (restore)ecx;
        if(*( *(ebp - 0x60) + 0x80) == 1) {
            L00447040();
            goto L00439bd3;
            L0041C860( *(ebp - 0x60) + 0x7c);
            L0042E3E0(ebp - 0x60);
            L004234F0(0, 0, 0);
            if(*(ebp - 0x48) != 0) {
                ecx = *(ebp - 0x50);
                *(ebp - 0x48)(-1);
            }
            esp = *(ebp - 0x3c);
        }
    }
L00439bd3:
    *( *(ebp - 0x60)) = 1130635835;
    return *(ebp - 0x60);
}

/*	Procedure: 0x00439BE7 - 0x00439BEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439BE7()
{



}

/*	Procedure: 0x00439BF0 - 0x00439C33
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042941C()
 */

L00439BF0(A8)
/* unknown */ void  A8;
{



    ecx = *A8;
    if(ecx == 0) {
        return;
    }
    if(*ecx != 1130635835) {
        *A8 = 0;
        esp = ebp - 4;
        return;
    }
    *ecx = 0;
    L0041C860(ecx + 0x7c);
    eax = L0042E3E0(A8);
    esp = ebp - 4;
}

/*	Procedure: 0x00439C34 - 0x00439C3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439C34()
{



}

/*	Procedure: 0x00439C93 - 0x00439C9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439C93()
{



}

/*	Procedure: 0x00439CA0 - 0x00439D0A
 *	Argument size: 20
 *	Local size: 104
 *	Save regs size: 8
 *	Called by:
 *		L00408B5A()
 *		L00408F30()
 *		L0040CFF0()
 *		L004154F0()
 *		L0043BEF0()
 *		L00459F00()
 */

L00439CA0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    ecx = ebp - 0x70;
    ebx = A18;
    (save)0x68;
    L00434150(ecx);
    (restore)ecx;
    if(Ac != 0 && Ac < 0x100) {
        *(ebp - 0x6c) = Ac;
    } else {
        Vffffff98 = Ac;
    }
    Vffffffa0 = A8;
    if(ebx == 0) {
        ebx = ebx | -1;
    }
    Vffffffe8 = A10;
    Vffffffec = A14;
    Vffffffb8 = ebx;
    (save)0;
    return L004395A0(0x439c40, 0, ebp - 0x70);
}

/*	Procedure: 0x00439D0B - 0x00439D62
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L00439D0B(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    if(*(A8 + 0x2c) == Ac) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    if(A10 != 0) {
        (save)Ac;
        eax = L0044BC40();
    } else {
        L0044BBF0(Ac);
    }
    edx = A8 + 0x2c;
    esi = eax;
    L0044BB30(edx);
    *(A8 + 0x2c) = esi;
    eax = L00419F00(A8, A8 + 0xc);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00439D63 - 0x00439D6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439D63()
{



}

/*	Procedure: 0x00439D78 - 0x00439DB6
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 */

L00439D78(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    edx = A8 + 0x28;
    esi = L00429000(Ac, A10);
    L0042E3E0(edx);
    *(A8 + 0x28) = esi;
    return L00419F00(A8, A8 + 0xc);
}

/*	Procedure: 0x00439DB7 - 0x00439DBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439DB7()
{



}

/*	Procedure: 0x00439DDB - 0x00439DDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439DDB()
{



}

/*	Procedure: 0x00439DE0 - 0x00439F57
 *	Argument size: 24
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 *		L0044602B()
 */

L00439DE0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    eax = L0042E3A0(0x30);
    *(ebp - 0x40) = eax;
    *( *(ebp - 0x40)) = 1448466561;
    ecx = *(ebp - 0x40) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    edx = !(A10 & 0x200) ? 0 : 0x10;
    eax = !(A10 & 0x100) ? 8 : 0;
    ecx = eax | 1 | edx;
    *( *(ebp - 0x40) + 0x24) = cx;
    if(!(A10 & 0x400)) {
        *( *(ebp - 0x40) + 0x26) = 0x20;
    }
    *( *(ebp - 0x40) + 0x27) = bl;
    if(A8 != 0) {
        Vffffffd8 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x40));
        goto L00439ed5;
        L0042E3E0(ebp - 0x40);
        L004234F0(0, 0, 0);
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = *(ebp - 0x3c);
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
L00439ed5:
        *( *(ebp - 0x40) + 8) = A8;
    }
    if(( *( *(ebp - 0x40) + 0x24) & 65535 & 0x12) != 0x12) {
        *( *(ebp - 0x40) + 0x26) = *( *(ebp - 0x40) + 0x26) | 2;
    }
    *( *(ebp - 0x40) + 0x20) = A14;
    *( *(ebp - 0x40) + 0x2c) = A1c;
    Vfffffff0 = esp;
    *( *(ebp - 0x40) + 0x28) = L004290D0(A18);
    goto L00439f43;
    L00419A70(ebp - 0x40);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        ecx = Vffffffdc;
        Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L00439f43:
    *( *(ebp - 0x40) + 4) = 0x4825f0;
    return *(ebp - 0x40);
}

/*	Procedure: 0x00439F58 - 0x00439FB4
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L00439F58(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A10;
    (save)Ac;
    if(eax < 0xc) {
        esp = ebp - 8;
        (restore)Ac;
        return;
    }
    ecx = *(Ac + 0xb) & 0xff;
    if(eax < ecx + 0xc) {
        esp = ebp - 8;
        (restore)Ac;
        return;
    }
    if(!( *(Ac + 0xa) & 0xff & 1)) {
        *(A8 + 0x26) = *(A8 + 0x26) | 0x20;
    }
    eax = L00429000(Ac + 0xc, ecx);
    *(A8 + 0x28) = eax;
    esp = ebp - 8;
    (restore)Ac;
}

/*	Procedure: 0x00439FB5 - 0x00439FBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439FB5()
{



}

/*	Procedure: 0x00439FE1 - 0x00439FEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00439FE1()
{



}

/*	Procedure: 0x0043A045 - 0x0043A04F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A045()
{



}

/*	Procedure: 0x0043A1AD - 0x0043A1E3
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A1AD(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x24) = *(A8 + 0x24) & 65023;
    if(!( *(A8 + 0x26) & 0xff & 1)) {
        *(A8 + 0x26) = *(A8 + 0x26) & 0xfe;
        L00419F00(A8, A8 + 0xc);
        eax = L0044E600(4);
    }
}

/*	Procedure: 0x0043A1E4 - 0x0043A1EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A1E4()
{



}

/*	Procedure: 0x0043A231 - 0x0043A23F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A231()
{



}

/*	Procedure: 0x0043A240 - 0x0043A378
 *	Argument size: 20
 *	Local size: 28
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 *		L0044602B()
 *		L0046279D()
 */

L0043A240(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    eax = L0042E3A0(0x38);
    *(ebp - 0x28) = eax;
    *( *(ebp - 0x28)) = 1448466561;
    ecx = *(ebp - 0x28) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    eax = !(A10 & 0x200) ? 0 : 0x10;
    edx = !(A10 & 0x100) ? 8 : 0;
    ecx = edx | 1 | eax;
    *( *(ebp - 0x28) + 0x24) = cx;
    if(!(A10 & 0x400)) {
        *( *(ebp - 0x28) + 0x26) = 0x20;
    }
    edx = *(ebp - 0x28);
    *(edx + 0x27) = A10;
    if(A8 != 0) {
        Vfffffff0 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x28));
        goto L0043a33a;
        L0042E3E0(ebp - 0x28);
        L004234F0(0, 0, 0);
        if(Vffffffe4 != 0) {
            ecx = *(ebp - 0x24);
            Vffffffe4(-1);
        }
        esp = *(ebp - 0x10);
L0043a33a:
        *( *(ebp - 0x28) + 8) = A8;
    }
    if(A14 != 0 && *A14 != 0) {
        eax = A14 + 1;
        *( *(ebp - 0x28) + 0x28) = eax;
        edx = *A14 & 0xff;
        *( *(ebp - 0x28) + 0x2c) = edx;
    }
    esi = *(ebp - 0x28);
    *(esi + 0x34) = A18;
    *( *(ebp - 0x28) + 4) = 0x4826b4;
    return *(ebp - 0x28);
}

/*	Procedure: 0x0043A379 - 0x0043A3D2
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L0043A379(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    if(*(A8 + 0x34) == Ac) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    if(A10 != 0) {
        (save)Ac;
        eax = L0044BC40();
    } else {
        L0044BBF0(Ac);
    }
    edx = A8 + 0x34;
    esi = eax;
    L0044BB30(edx);
    *(A8 + 0x34) = esi;
    eax = L00419F00(A8, A8 + 0xc);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0043A3D3 - 0x0043A3DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A3D3()
{



}

/*	Procedure: 0x0043A3E8 - 0x0043A427
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L0043A3E8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(*(A8 + 0x28) == Ac && *(A8 + 0x2c) == A10) {
        return;
    }
    *(A8 + 0x28) = Ac;
    *(A8 + 0x2c) = A10;
    eax = L00419F00(A8, A8 + 0xc);
    esp = ebp - 4;
}

/*	Procedure: 0x0043A428 - 0x0043A454
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A428(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = *(A8 + 0x2c);
    if(ecx >= A10) {
        ecx = A10;
    }
    return L004342A0(Ac, *(A8 + 0x28), ecx);
}

/*	Procedure: 0x0043A455 - 0x0043A45F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A455()
{



}

/*	Procedure: 0x0043A4B5 - 0x0043A4BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A4B5()
{



}

/*	Procedure: 0x0043A4D4 - 0x0043A4DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A4D4()
{



}

/*	Procedure: 0x0043A52D - 0x0043A52F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A52D()
{



}

/*	Procedure: 0x0043A530 - 0x0043A6A4
 *	Argument size: 20
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L0046279D()
 */

L0043A530(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    eax = L0042E3A0(0x3c);
    *(ebp - 0x40) = eax;
    *( *(ebp - 0x40)) = 1448466561;
    ecx = *(ebp - 0x40) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    eax = !(A10 & 0x200) ? 0 : 0x10;
    edx = !(A10 & 0x100) ? 8 : 0;
    ecx = edx | 1 | eax;
    *( *(ebp - 0x40) + 0x24) = cx;
    if(!(A10 & 0x400)) {
        *( *(ebp - 0x40) + 0x26) = 0x20;
    }
    edx = *(ebp - 0x40);
    *(edx + 0x27) = A10;
    if(A8 != 0) {
        Vffffffd8 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x40));
        goto L0043a62a;
        L0042E3E0(ebp - 0x40);
        L004234F0(0, 0, 0);
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = *(ebp - 0x3c);
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
L0043a62a:
        *( *(ebp - 0x40) + 8) = A8;
    }
    if(A14 != 0) {
        ecx = *A14 & 0xff;
        if(cl != 0) {
            eax = cl & 0xff;
            *( *(ebp - 0x40) + 0x2c) = eax;
            Vfffffff0 = esp;
            (save) *A14 & 0xff;
            eax = L0042E350(A14 + 1);
            edx = *(ebp - 0x40);
            (restore)ecx;
            *(edx + 0x28) = eax;
            goto L0043a687;
            L00419A70(ebp - 0x40);
            L004234F0(0, 0, 0);
            if(Vffffffe4 != 0) {
                ecx = Vffffffdc;
                Vffffffe4(-1);
            }
            esp = *(ebp - 0x10);
        }
    }
L0043a687:
    esi = *(ebp - 0x40);
    *(esi + 0x34) = A18;
    *( *(ebp - 0x40) + 4) = 0x482778;
    return *(ebp - 0x40);
}

/*	Procedure: 0x0043A6A5 - 0x0043A6AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A6A5()
{



}

/*	Procedure: 0x0043A703 - 0x0043A70F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A703()
{



}

/*	Procedure: 0x0043A718 - 0x0043A7BB
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L0043A718(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  edi;



    esp = esp - 4;
    edi = Ac;
    if(A10 != 0) {
        ecx = *(A8 + 0x28);
        *(ebp - 0x10) = ecx;
        if(*(A8 + 0x2c) == A10) {
            if(L00434380(ecx, edi, A10) != 0) {
                return;
            }
            L004342A0( *(ebp - 0x10), edi, A10);
            (save)A8 + 0xc;
        } else {
            eax = L0042E350(edi, A10);
            ecx = ebp - 0x10;
            edi = eax;
            L0042E3E0(ecx);
            *(A8 + 0x28) = edi;
            *(A8 + 0x2c) = A10;
            (save)A8 + 0xc;
        }
    } else {
        if(*(A8 + 0x2c) == 0) {
            goto L0043a7b4;
        }
        L0042E3E0(A8 + 0x28);
        *(A8 + 0x2c) = 0;
        (save)A8 + 0xc;
    }
    (save)A8;
    eax = L00419F00();
    (restore)ecx;
L0043a7b4:
    esp = ebp - 0xc;
}

/*	Procedure: 0x0043A7BC - 0x0043A7E4
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A7BC(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = *(A8 + 0x2c);
    if(ecx >= A10) {
        ecx = A10;
    }
    return L004342A0(Ac, *(A8 + 0x28), ecx);
}

/*	Procedure: 0x0043A7E5 - 0x0043A7EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043A7E5()
{



}

/*	Procedure: 0x0043A869 - 0x0043A89A
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0043A869(A8)
/* unknown */ void  A8;
{



    L0042E3E0(A8 + 0x28);
    L0044BB30(A8 + 0x34);
    return L00423980(A8 + 0x38);
}

/*	Procedure: 0x0043A89B - 0x0043A8EC
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L0043A89B(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    (save)A8;
    L004496D0(Ac, 5);
    ebx = *(A8 + 0x34);
    (save)ebx;
    L00449710(Ac);
    eax = *(A8 + 0x30);
    (restore)ecx;
    if(eax == 0) {
        eax = L0044BC80(ebx);
    }
    eax = L0044A8D0(Ac, ebx, A8 + 0xc, *(A8 + 0x28), *(A8 + 0x2c), eax);
    esp = ebp - 0xc;
    (restore)A8;
}

/*	Procedure: 0x0043A8ED - 0x0043AA76
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L0043A8ED(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffff4;



    ebx = A8;
    edx = ebx + 0x38;
    (save)esi;
    esi = Ac;
    eax = L00423980(edx);
    if(*(esi + 0x10) == 0xa) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    ecx = *(esi + 0xc) - 1;
    if(ecx <= 1) {
        switch(ecx) {
            case 0:
L0043a924:
                (save)0;
                L0042F3B0( *(ebx + 0x28), *(ebx + 0x2c));
                goto L0043a948;
            case 1:
                eax = L00446990( *(ebx + 0x28), *(ebx + 0x2c), 0, 0);
                goto L0043a948;
        }
        goto L0043a924;
    }
L0043a948:
    esp = ebp - 8;
    (restore)esi;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x48;
    esp = esp & -8;
    esi = Ac;
    ebx = & Vfffffff4;
    edi = A8;
    if(*(esi + 0xc) & 1) {
        goto L0043a979;
    }
    if(*(esi + 0x18) != 2) {
        goto L0043aa6f;
    }
    eax = L00423980(edi + 0x38);
    if(*(edi + 0x2c) != 0) {
        goto L0043a991;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return;
    eax = L00423850(0x43a8f0, edi, 0);
    *(ebx - 0x44) = eax;
    *(ebx - 0x24) = esp;
    L00424EF0( *(ebx - 0x44), 1, 0x477370, 0, 0, 0);
    L00424EF0( *(ebx - 0x44), 2, 0x477388, 0, 0, 0);
    ecx = ebx - 0x40;
    L0041A130(edi, ebx - 0x3c, ecx);
    *(ebx - 0x20) = *esi;
    *(ebx - 0x1c) = *(esi + 4);
    *(ebx - 0x18) = *(esi + 8);
    *(ebx - 0x14) = *(esi + 0xc);
    *(ebx - 0x10) = *(esi + 0x10);
    *(ebx - 0xc) = *(esi + 0x14);
    *(ebx - 8) = *(esi + 0x18) & 0xff;
    *(ebx - 7) = *(esi + 0x19) & 0xff;
    *(ebx - 6) = *(esi + 0x1a) & 65535;
    *(ebx - 0x10) = *(ebx - 0x10) + *(ebx - 0x3c);
    ecx = *(ebx - 0x40);
    *(ebx - 0xc) = *(ebx - 0xc) + ecx;
    L00424930( *(ebx - 0x44), ebx - 0x20, 0, 0);
    goto L0043aa69;
    L00423980(ebx - 0x44);
    L004234F0(0, 0, 0);
    if(*(ebx - 0x30) == 0) {
        goto L0043aa66;
    }
    ecx = *(ebx - 0x38);
    eax = *(ebx - 0x30)(-1);
    esp = *(ebx - 0x24);
    *(edi + 0x38) = *(ebx - 0x44);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0043AA80 - 0x0043AA91
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 */

L0043AA80()
{



    return L00419B10(0x48283c);
}

/*	Procedure: 0x0043AA92 - 0x0043AA9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043AA92()
{



}

/*	Procedure: 0x0043AAA0 - 0x0043ABFF
 *	Argument size: 24
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 *		L0042198B()
 */

L0043AAA0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    ebx = A10;
    eax = L0042E3A0(0x34);
    *(ebp - 0x40) = eax;
    *( *(ebp - 0x40)) = 1448466561;
    ecx = *(ebp - 0x40) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    eax = !(ebx & 0x200) ? 0 : 0x10;
    edx = !(ebx & 0x100) ? 8 : 0;
    ecx = edx | 1 | eax;
    *( *(ebp - 0x40) + 0x24) = cx;
    if(!(ebx & 0x400)) {
        *( *(ebp - 0x40) + 0x26) = 0x20;
    }
    *( *(ebp - 0x40) + 0x27) = bl;
    if(A8 != 0) {
        Vffffffd8 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x40));
        goto L0043ab95;
        L0042E3E0(ebp - 0x40);
        L004234F0(0, 0, 0);
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = *(ebp - 0x3c);
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
L0043ab95:
        *( *(ebp - 0x40) + 8) = A8;
    }
    Vfffffff0 = esp;
    *( *(ebp - 0x40) + 0x28) = L004290D0(A18);
    goto L0043abd8;
    L00419A70(ebp - 0x40);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        ecx = Vffffffdc;
        Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L0043abd8:
    ebx = *(ebp - 0x40);
    *(ebx + 0x2c) = A1c;
    esi = *(ebp - 0x40);
    *(esi + 0x30) = A14 & 0xff;
    *( *(ebp - 0x40) + 4) = 0x48283c;
    return *(ebp - 0x40);
}

/*	Procedure: 0x0043AC00 - 0x0043AC4C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L0043AC00(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = A10;
    (save)Ac;
    if(eax < 0xc) {
        esp = ebp - 8;
        (restore)Ac;
        return;
    }
    ecx = *(Ac + 0xb) & 0xff;
    if(eax < ecx + 0xc) {
        esp = ebp - 8;
        (restore)Ac;
        return;
    }
    eax = *(Ac + 0xa) & 0xff;
    *(A8 + 0x30) = al;
    eax = L00429000(Ac + 0xc, ecx);
    *(A8 + 0x28) = eax;
    esp = ebp - 8;
    (restore)Ac;
}

/*	Procedure: 0x0043AC4D - 0x0043AC70
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0043AC4D(A8)
/* unknown */ void  A8;
{



    L0042E3E0(A8 + 0x28);
    return L0044BB30(A8 + 0x2c);
}

/*	Procedure: 0x0043AC71 - 0x0043AC7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043AC71()
{



}

/*	Procedure: 0x0043ACD4 - 0x0043ACDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043ACD4()
{



}

/*	Procedure: 0x0043ACFB - 0x0043AD1A
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0043ACFB(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00425600( *(A8 + 0x28), Ac, A10);
}

/*	Procedure: 0x0043AD1B - 0x0043AD85
 *	Argument size: 8
 *	Local size: 44
 *	Save regs size: 8
 */

L0043AD1B(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;



    eax = L0043B410(A8);
    if(*(Ac + 0x14) == -1) {
        return;
    }
    *(A8 + 0x24) = *(A8 + 0x24) | 0x1000;
    L004342A0(ebp - 0x34, Ac, 0x2c);
    *(ebp - 0x34) = 0;
    *(ebp - 0x30) = A8;
    Vffffffd4 = *(A8 + 0x1c);
    if(Vffffffd8 == 0) {
        Vffffffd8 = *(A8 + 0x20);
    }
    eax = L0041A080(A8, ebp - 0x34);
    esp = ebp - 8;
}

/*	Procedure: 0x0043AD86 - 0x0043AD8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043AD86()
{



}

/*	Procedure: 0x0043ADA6 - 0x0043ADAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043ADA6()
{



}

/*	Procedure: 0x0043ADB0 - 0x0043AF37
 *	Argument size: 20
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L0046279D()
 */

L0043ADB0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    eax = L0042E3A0(0x30);
    *(ebp - 0x40) = eax;
    *( *(ebp - 0x40)) = 1448466561;
    ecx = *(ebp - 0x40) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    edx = !(A10 & 0x200) ? 0 : 0x10;
    eax = !(A10 & 0x100) ? 8 : 0;
    ecx = eax | 1 | edx;
    *( *(ebp - 0x40) + 0x24) = cx;
    if(!(A10 & 0x400)) {
        *( *(ebp - 0x40) + 0x26) = 0x20;
    }
    *( *(ebp - 0x40) + 0x27) = bl;
    if(A8 != 0) {
        Vffffffd8 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x40));
        goto L0043aea5;
        L0042E3E0(ebp - 0x40);
        L004234F0(0, 0, 0);
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = *(ebp - 0x3c);
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
L0043aea5:
        *( *(ebp - 0x40) + 8) = A8;
    }
    edx = *(ebp - 0x40);
    *(edx + 0x20) = A14;
    if(A18 == 0) {
        A18 = 2;
    }
    Vfffffff0 = esp;
    eax = L00423850(0x43ad20, *(ebp - 0x40), A18);
    *( *(ebp - 0x40) + 0x28) = eax;
    L00425760( *( *(ebp - 0x40) + 0x28), 0x43ad90, *(ebp - 0x40));
    goto L0043af23;
    L00419A70(ebp - 0x40);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        ecx = Vffffffdc;
        Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L0043af23:
    *( *(ebp - 0x40) + 4) = 0x482900;
    return *(ebp - 0x40);
}

/*	Procedure: 0x0043AF38 - 0x0043AF92
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L0043AF38(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    if(*(A8 + 0x2c) == Ac) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    if(A10 != 0) {
        (save)Ac;
        eax = L0044BC40();
    } else {
        L0044BBF0(Ac);
    }
    edx = A8 + 0x2c;
    esi = eax;
    L0044BB30(edx);
    *(A8 + 0x2c) = esi;
    eax = L00419F00(A8, A8 + 0xc);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x0043AF93 - 0x0043AF9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043AF93()
{



}

/*	Procedure: 0x0043AFA8 - 0x0043B0C1
 *	Argument size: 12
 *	Local size: 36
 *	Save regs size: 12
 */

L0043AFA8(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;



    if(A10 >= 0xc) {
        edi = Ac;
    } else {
        L00434150( & Vffffffe8, 0xc);
        edi = & Vffffffe8;
    }
    esi = *edi;
    eax = esi << 8 & 16711680;
    edx = esi;
    ecx = esi;
    eax = eax | edx >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    if(!(eax = eax | esi << 0x18)) {
        Vffffffe4 = esp;
        (save)eax;
        eax = L00425CC0(0x43ad20, A8);
        goto L0043b0a3;
        if(*Vffffffdc != 65553) {
            L004234F0(0, 0, 0);
        }
        esi = L00423850(0x43ad20, A8, 1);
        L00424EF0(esi, 0, 0x4773ac, 262144, 0, 0);
        if(*(ebp - 0x28) != 0) {
            (save)-1;
            ecx = *(ebp - 0x30);
            *(ebp - 0x28)();
        }
        esp = *(ebp - 0x1c);
    } else {
        ecx = *(edi + 4);
        esi = ecx << 8 & 16711680;
        eax = ecx;
        edx = ecx;
        esi = esi | eax >> 0x18;
        esi = esi | edx >> 8 & 65280;
        eax = L00423850(0x43ad20, A8, esi | ecx << 0x18);
L0043b0a3:
        esi = eax;
    }
    *(A8 + 0x28) = esi;
    return L00425760(esi, 0x43ad90, A8);
}

/*	Procedure: 0x0043B0C2 - 0x0043B0CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043B0C2()
{



}

/*	Procedure: 0x0043B0F1 - 0x0043B0FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043B0F1()
{



}

/*	Procedure: 0x0043B15F - 0x0043B1EC
 *	Argument size: 8
 *	Local size: 276
 *	Save regs size: 4
 */

L0043B15F(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vfffffeec;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffef4;
	/* unknown */ void  Vfffffef8;
	/* unknown */ void  Vfffffefc;



    eax = *(A8 + 0x28);
    if(eax != 0) {
        eax = L00425600(eax, & Vfffffefc, 0x100);
        Vfffffef4 = eax;
        Vfffffef0 = & Vfffffefc;
    } else {
        Vfffffef4 = 0;
        Vfffffef0 = 0;
    }
    *(ebp + -280) = *(A8 + 0x26) & 0xff;
    Vfffffeec = *(A8 + 0x2c);
    ecx = ebp + -280;
    Vfffffef8 = 0;
    return L0044D320(Ac, A8 + 0xc, ecx);
}

/*	Procedure: 0x0043B1ED - 0x0043B260
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L0043B1ED(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = ( *(Ac + 0x18) & 0xff) - 1;
    if(ecx <= 2) {
        switch(ecx) {
            case 0:
L0043b20d:
                *(A8 + 0x24) = *(A8 + 0x24) | 0x40;
                goto L0043b222;
            case 1:
                *(A8 + 0x24) = *(A8 + 0x24) | 0x80;
                goto L0043b222;
            case 2:
                *(A8 + 0x24) = *(A8 + 0x24) | 0x100;
                goto L0043b222;
        }
        goto L0043b20d;
    }
L0043b222:
    if(*(Ac + 0xc) & 524288) {
        goto L0043b25b;
    }
    ecx = *(A8 + 0x24) & 65535;
    if(ecx & 0x10 || ecx & 6) {
        goto L0043b25b;
    }
    if(*(A8 + 0x26) & 0xff & 1) {
        goto L0043b252;
    }
    (save)A8;
    L0043B410();
    goto L0043b25a;
    return L0043b320(A8, Ac);
}

/*	Procedure: 0x0043B312 - 0x0043B31F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043B312()
{



}

/*	Procedure: 0x0043B409 - 0x0043B40F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043B409()
{



}

/*	Procedure: 0x0043B410 - 0x0043B441
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0043AD1B()
 */

L0043B410(A8)
/* unknown */ void  A8;
{



    if(!( *(A8 + 0x26) & 0xff & 1)) {
        *(A8 + 0x26) = *(A8 + 0x26) & 0xfe;
        L00419F00(A8, A8 + 0xc);
    }
    return L00424B70( *(A8 + 0x28));
}

/*	Procedure: 0x0043B442 - 0x0043B44F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043B442()
{



}

/*	Procedure: 0x0043B450 - 0x0043B5CE
 *	Argument size: 28
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 */

L0043B450(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    eax = L0042E3A0(0x34);
    *(ebp - 0x40) = eax;
    *( *(ebp - 0x40)) = 1448466561;
    ecx = *(ebp - 0x40) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    edx = !(A10 & 0x200) ? 0 : 0x10;
    eax = !(A10 & 0x100) ? 8 : 0;
    ecx = eax | 1 | edx;
    *( *(ebp - 0x40) + 0x24) = cx;
    if(!(A10 & 0x400)) {
        *( *(ebp - 0x40) + 0x26) = 0x20;
    }
    *( *(ebp - 0x40) + 0x27) = bl;
    if(A8 != 0) {
        Vffffffd8 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x40));
        goto L0043b545;
        L0042E3E0(ebp - 0x40);
        L004234F0(0, 0, 0);
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = *(ebp - 0x3c);
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
L0043b545:
        *( *(ebp - 0x40) + 8) = A8;
    }
    ecx = *(ebp - 0x40);
    *(ecx + 0x20) = A14;
    esi = *(ebp - 0x40);
    *(esi + 0x2c) = A20;
    if(A1c == 2) {
        *( *(ebp - 0x40) + 0x26) = *( *(ebp - 0x40) + 0x26) | 0x10;
    } else {
        if(A1c != 0) {
            *( *(ebp - 0x40) + 0x26) = *( *(ebp - 0x40) + 0x26) | 8;
        }
    }
    Vfffffff0 = esp;
    *( *(ebp - 0x40) + 0x28) = L004290D0(A18);
    goto L0043b5ba;
    L00419A70(ebp - 0x40);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        ecx = Vffffffdc;
        Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L0043b5ba:
    *( *(ebp - 0x40) + 4) = 0x4829c4;
    return *(ebp - 0x40);
}

/*	Procedure: 0x0043B5CF - 0x0043B64D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L0043B5CF(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    edx = *(A8 + 0x26) & 0xff;
    ecx = dl & 0xff;
    edx = ecx & -25;
    if(Ac == 2) {
        edx = edx | 0x10;
    } else {
        if(Ac != 0) {
            edx = edx | 8;
        }
    }
    if(edx == ecx) {
        return 0;
    }
    *(A8 + 0x26) = dl;
    eax = ebp - 0x18;
    L0044E300(A8 + 0xc, 0, eax);
    eax = L00419F00(A8, ebp - 0x18);
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x0043B64E - 0x0043B6BF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L0043B64E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    edx = A10;
    (save)Ac;
    if(edx < 0x10) {
        esp = ebp - 8;
        (restore)Ac;
        return;
    }
    eax = *(Ac + 0xf) & 0xff;
    if(edx < eax + 0x10) {
        esp = ebp - 8;
        (restore)Ac;
        return;
    }
    edx = *(Ac + 0xe) & 0xff;
    ecx = 0;
    if(!(edx & 1)) {
        ecx = 0x20;
    }
    if(!(edx & 2)) {
        ecx = ecx | 8;
    }
    if(!(edx & 4)) {
        ecx = ecx | 0x10;
    }
    *(A8 + 0x26) = *(A8 + 0x26) | cl;
    eax = L00429000(Ac + 0x10, eax);
    *(A8 + 0x28) = eax;
    esp = ebp - 8;
    (restore)Ac;
}

/*	Procedure: 0x0043B6C0 - 0x0043B6E0
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0043B6C0(A8)
/* unknown */ void  A8;
{



    L0042E3E0(A8 + 0x28);
    return L0044BB30(A8 + 0x2c);
}

/*	Procedure: 0x0043B6E1 - 0x0043B6EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043B6E1()
{



}

/*	Procedure: 0x0043B745 - 0x0043B74F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043B745()
{



}

/*	Procedure: 0x0043BA80 - 0x0043BB98
 *	Argument size: 16
 *	Local size: 28
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 *		L0046279D()
 */

L0043BA80(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    eax = L0042E3A0(0x2c);
    *(ebp - 0x28) = eax;
    *( *(ebp - 0x28)) = 1448466561;
    ecx = *(ebp - 0x28) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    eax = !(A10 & 0x200) ? 0 : 0x10;
    edx = !(A10 & 0x100) ? 8 : 0;
    ecx = edx | 1 | eax;
    *( *(ebp - 0x28) + 0x24) = cx;
    if(!(A10 & 0x400)) {
        *( *(ebp - 0x28) + 0x26) = 0x20;
    }
    *( *(ebp - 0x28) + 0x27) = bl;
    if(A8 != 0) {
        Vfffffff0 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x28));
        goto L0043bb75;
        L0042E3E0(ebp - 0x28);
        L004234F0(0, 0, 0);
        if(Vffffffe4 != 0) {
            ecx = *(ebp - 0x24);
            Vffffffe4(-1);
        }
        esp = *(ebp - 0x10);
L0043bb75:
        *( *(ebp - 0x28) + 8) = A8;
    }
    esi = *(ebp - 0x28);
    *(esi + 0x28) = A14;
    *( *(ebp - 0x28) + 4) = 0x482a88;
    return *(ebp - 0x28);
}

/*	Procedure: 0x0043BB99 - 0x0043BBE2
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BB99(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    if(Ac < 4) {
        (restore)ebx;
        return;
    }
    ecx = *A8;
    ebx = ecx << 8 & 16711680;
    ebx = ebx | ecx >> 0x18;
    ebx = ebx | ecx >> 8 & 65280;
    ebx = ebx | ecx << 0x18;
    *(A4 + 0x28) = ebx;
    (restore)ebx;
}

/*	Procedure: 0x0043BBE3 - 0x0043BBEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BBE3()
{



}

/*	Procedure: 0x0043BBF1 - 0x0043BBFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BBF1()
{



}

/*	Procedure: 0x0043BC2F - 0x0043BC2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BC2F()
{



}

/*	Procedure: 0x0043BC30 - 0x0043BC41
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 */

L0043BC30()
{



    return L00419B10(0x482b4c);
}

/*	Procedure: 0x0043BC42 - 0x0043BC4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BC42()
{



}

/*	Procedure: 0x0043BC50 - 0x0043BDAE
 *	Argument size: 12
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 */

L0043BC50(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    ebx = A10;
    eax = L0042E3A0(0x2c);
    *(ebp - 0x40) = eax;
    *eax = 1448466561;
    ecx = *(ebp - 0x40) + 0xc;
    *ecx = *Ac;
    *(ecx + 4) = *(Ac + 4);
    *(ecx + 8) = *(Ac + 8);
    *(ecx + 0xc) = *(Ac + 0xc);
    ecx = !(ebx & 0x200) ? 0 : 0x10;
    edx = !(ebx & 0x100) ? 8 : 0;
    eax = edx | 1 | ecx;
    *( *(ebp - 0x40) + 0x24) = ax;
    if(!(ebx & 0x400)) {
        *( *(ebp - 0x40) + 0x26) = 0x20;
    }
    *( *(ebp - 0x40) + 0x27) = bl;
    if(A8 != 0) {
        Vffffffd8 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        ebx = *(A8 + 4);
        if(ebx == 0 || *(ebx + 0x88) == 0) {
            L00429610(65538);
        }
        *(ebx + 0x88)(A8, *(ebp - 0x40));
        goto L0043bd45;
        L0042E3E0(ebp - 0x40);
        L004234F0(0, 0, 0);
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = *(ebp - 0x3c);
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
L0043bd45:
        *( *(ebp - 0x40) + 8) = A8;
    }
    *( *(ebp - 0x40) + 0x24) = *( *(ebp - 0x40) + 0x24) | 0x20;
    Vfffffff0 = esp;
    eax = L004469B0(Ac, 0x43beb0, *(ebp - 0x40), 0);
    *( *(ebp - 0x40) + 0x28) = eax;
    goto L0043bd9a;
    L00419A70(ebp - 0x40);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        ecx = Vffffffdc;
        Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L0043bd9a:
    *( *(ebp - 0x40) + 4) = 0x482b4c;
    return *(ebp - 0x40);
}

/*	Procedure: 0x0043BDAF - 0x0043BDD8
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0043BDAF(A8)
/* unknown */ void  A8;
{



    *(A8 + 0x24) = *(A8 + 0x24) | 0x20;
    eax = L004469B0(A8 + 0xc, 0x43beb0, A8, 0);
    *(A8 + 0x28) = eax;
    return *(A8 + 0x28);
}

/*	Procedure: 0x0043BDD9 - 0x0043BDF3
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BDD9(A8)
/* unknown */ void  A8;
{



    return L00446A10(A8 + 0x28);
}

/*	Procedure: 0x0043BDF4 - 0x0043BDFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BDF4()
{



}

/*	Procedure: 0x0043BE30 - 0x0043BE46
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BE30(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    return L00446A60( *(A8 + 0x28), A10);
}

/*	Procedure: 0x0043BE47 - 0x0043BE4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BE47()
{



}

/*	Procedure: 0x0043BE8B - 0x0043BEAD
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BE8B(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    return L00446D20( *(A8 + 0x28), Ac, A10, A14);
}

/*	Procedure: 0x0043BEAE - 0x0043BEC3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BEAE(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    return L00419F00(A8, Ac);
}

/*	Procedure: 0x0043BEC4 - 0x0043BECF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BEC4()
{



}

/*	Procedure: 0x0043BED0 - 0x0043BEE4
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00409390()
 */

L0043BED0()
{



    eax = L0042E3A0(0x6c);
    *eax = -1430727461;
}

/*	Procedure: 0x0043BEE5 - 0x0043BEEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BEE5()
{



}

/*	Procedure: 0x0043BEF0 - 0x0043BFF3
 *	Argument size: 12
 *	Local size: 4
 *	Save regs size: 8
 *	Called by:
 *		L0043C000()
 */

L0043BEF0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    if(Ac < 0x88) {
        return 0;
    }
    ecx = A8;
    ebx = *(ecx + 8);
    esi = ebx << 8 & 16711680;
    edx = ebx;
    eax = ebx;
    esi = esi | edx >> 0x18;
    eax = eax >> 8 & 65280;
    esi = esi | eax;
    if(!(esi = esi | ebx << 0x18)) {
        esp = ebp - 8;
        return 0;
    }
    ecx = *ecx;
    edx = ecx << 8 & 16711680;
    eax = ecx;
    ebx = ecx;
    eax = eax >> 0x18;
    edx = edx | eax;
    edx = edx | ebx >> 8 & 65280;
    if((edx | ecx << 0x18) != 625492304) {
        esp = ebp - 8;
        return 0;
    }
    eax = L0042FF90(ebp - 0xc, 0);
    ecx = esi;
    bl = 0;
    if(!(ecx = ecx - 1296122712)) {
        if(ecx = ecx - 1180412) {
            goto L0043bfc0;
        }
    } else {
        bl = 0;
        == ? L0043bfca : ;
        eax :: 10000;
        asm("setc bl");
        goto L0043bfca;
L0043bfc0:
        bl = 0;
    }
L0043bfca:
    if(bl != 0 && A10 != 0) {
        (save)0;
        eax = L00439CA0(1, 1, 0, "EThis appearance file cannot be used on your current operating system.", 0);
    }
    esp = ebp - 8;
    return bl;
}

/*	Procedure: 0x0043BFF4 - 0x0043BFFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043BFF4()
{



}

/*	Procedure: 0x0043C000 - 0x0043C0DF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00409390()
 */

L0043C000(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    esp = esp - 0x24;
    if(A8 == 0 || *A8 != -1430727461) {
        L00429610(65561);
    }
    *(ebp - 0x18) = esp;
    eax = L0042B460(1, 0, 0, 0x4778a0, 1);
    ecx = ebp - 0x10;
    *(ebp - 0x14) = eax;
    *(ebp - 0x10) = 33554432;
    esi = L0042C600( *(ebp - 0x14), 0, 0, ecx, 0);
    *(ebp - 0xc) = esi;
    L0043BEF0(esi, *(ebp - 0x10), 0);
    if(al != 0) {
        L0042E3E0(ebp - 0xc);
        return L0042BD00(ebp - 0x14);
    }
    L0045D7E0(esi, *(ebp - 0x10));
    L0042E3E0(A8 + M00000064);
    ecx = *(ebp - 0xc);
    edx = ebp - 0xc;
    *(ebp - 0xc) = 0;
    *(A8 + M00000064) = ecx;
    L0042E3E0(edx);
    eax = L0042BD00(ebp - 0x14);
    goto L0043c0d9;
    if(*(ebp - 0x24) != 0) {
        ecx = *(ebp - 0x2c);
        eax = *(ebp - 0x24)(-1);
    }
    esp = *(ebp - 0x18);
L0043c0d9:
    esp = ebp - 8;
}

/*	Procedure: 0x0043C0E0 - 0x0043C145
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L0043C0E0(A10, A14, A18)
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;



    ecx = *A18;
    ebp = ecx << 8 & 16711680;
    ebx = ecx;
    edx = ecx;
    ebp = ebp | ebx >> 0x18;
    ebp = ebp | edx >> 8 & 65280;
    ebp = ebp | ecx << 0x18;
    if(!(eax = A10 - ebp)) {
        eax = *(A18 + 4);
        ebx = eax << 8 & 16711680;
        edx = eax;
        ecx = eax;
        eax = eax << 0x18;
        ebx = ebx | edx >> 0x18;
        ebx = ebx | ecx >> 8 & 65280 | eax;
        eax = A14 - ebx;
    }
}

/*	Procedure: 0x0043C146 - 0x0043C14F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C146()
{



}

/*	Procedure: 0x0043C150 - 0x0043C21E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00409390()
 *		L00419A30()
 *		L00425CC0()
 *		L0044CB90()
 *		L0044D7C0()
 */

L0043C150(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = 0x47eb6c;
    0;
    == ? L0043c171 : ;
    L0042F750(0x477928);
    edx = *(edi + 0x14);
    ecx = edx << 8 & 16711680;
    eax = edx;
    esi = edx;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    esi = L00434D00(Ac, edi + 0x18, ecx | edx << 0x18, 0x14, 0x43c0e0, A8);
    if(esi == 0) {
        L00429610(65553);
    }
    if(A10 != 0) {
        edx = *(esi + 0xc);
        eax = edx << 8 & 16711680;
        eax = eax | edx >> 0x18;
        eax = eax | edx >> 8 & 65280;
        *A10 = eax | edx << 0x18;
    }
    ecx = *(esi + 0x10);
    esp = ebp - 0xc;
    eax = ecx << 8 & 16711680;
    eax = eax | ecx >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    return (eax | ecx << 0x18) + edi;
}

/*	Procedure: 0x0043C21F - 0x0043C21F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C21F()
{



}

/*	Procedure: 0x0043C220 - 0x0043C341
 *	Argument size: 12
 *	Local size: 28
 *	Save regs size: 12
 *	Called by:
 *		L0040BCF0()
 *		L0044602B()
 *		L0046279D()
 */

L0043C220(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    eax = L0042E3A0(0x60);
    *(ebp - 0x28) = eax;
    *( *(ebp - 0x28)) = 1448466561;
    ecx = *(ebp - 0x28) + 0xc;
    *ecx = *esi;
    *(ecx + 4) = *(esi + 4);
    *(ecx + 8) = *(esi + 8);
    *(ecx + 0xc) = *(esi + 0xc);
    eax = !(A10 & 0x200) ? 0 : 0x10;
    edx = !(A10 & 0x100) ? 8 : 0;
    ecx = edx | 1 | eax;
    *( *(ebp - 0x28) + 0x24) = cx;
    if(!(A10 & 0x400)) {
        *( *(ebp - 0x28) + 0x26) = 0x20;
    }
    *( *(ebp - 0x28) + 0x27) = bl;
    if(A8 != 0) {
        Vfffffff0 = esp;
        if(*A8 != 1448466561) {
            L00429610(65561);
        }
        esi = *(A8 + 4);
        if(esi == 0 || *(esi + 0x88) == 0) {
            L00429610(65538);
        }
        *(esi + 0x88)(A8, *(ebp - 0x28));
        goto L0043c315;
        L0042E3E0(ebp - 0x28);
        L004234F0(0, 0, 0);
        if(Vffffffe4 != 0) {
            ecx = *(ebp - 0x24);
            Vffffffe4(-1);
        }
        esp = *(ebp - 0x10);
L0043c315:
        *( *(ebp - 0x28) + 8) = A8;
    }
    *( *(ebp - 0x28) + 0x54) = 3;
    *( *(ebp - 0x28) + 0x24) = *( *(ebp - 0x28) + 0x24) | 0x20;
    *( *(ebp - 0x28) + 4) = 0x4847e4;
    return *(ebp - 0x28);
}

/*	Procedure: 0x0043C342 - 0x0043C34F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C342()
{



}

/*	Procedure: 0x0043C350 - 0x0043C401
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0040BCF0()
 */

L0043C350(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)edi;
    if(A8 == 0 || *A8 != 1448466561) {
        eax = L00429610(65561);
    }
    edi = *(A8 + 0x34);
    if(edi == Ac) {
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    if(Ac != 0) {
        (save)Ac;
        (restore)ecx;
        if(L00429DE0(A8 + 0x28) == 0) {
            eax = L00429610(65538);
        }
    }
    if(Ac != 0 && !( *(Ac + 0x24) & 65535 & 0x20)) {
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    if(!( *(A8 + 0x24) & 65535 & 4)) {
        if(edi != 0) {
            eax = L00419D20(edi, 7, 2);
            *(A8 + 0x34) = 0;
        }
        if(Ac == 0) {
            goto L0043c3f8;
        }
        eax = L00419D20(Ac, 7, 6);
    }
    *(A8 + 0x34) = Ac;
L0043c3f8:
    esp = ebp - 0xc;
    (restore)edi;
    return 1;
}

/*	Procedure: 0x0043C402 - 0x0043C40F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C402()
{



}

/*	Procedure: 0x0043C410 - 0x0043C48F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0043C83B()
 */

L0043C410(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 4;
    if(A8 == 0 || *A8 != 1448466561) {
        L00429610(65561);
    }
    edx = *(A8 + 0x2c);
    *(ebp - 0x10) = edx;
    esi = *(A8 + 0x28);
    esi = esi + edx * 4;
    if(!( *(ebp - 0x10) = *(ebp - 0x10) - 1)) {
        do {
            esi = esi - 4;
            ebx = *esi;
            if(!( *(ebx + 0x24) & 65535 & 8)) {
                (save)Ac;
                *( *(ebx + 4) + 0x60)(ebx);
                (restore)ecx;
                if(al != 0) {
                    goto L0043c471;
                }
            }
L0043c480:
        } while(*(ebp - 0x10) = *(ebp - 0x10) - 1);
        goto L0043c486;
L0043c471:
        esp = ebp - 0xc;
        return ebx;
        goto L0043c480;
    }
L0043c486:
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0043C490 - 0x0043C515
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C490(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    (save)ebp;
    *(A4 + 0x24) = *(A4 + 0x24) | 0x20;
    if(Ac < 0xc) {
        (restore)ebp;
        (restore)esi;
        (restore)ebx;
        return;
    }
    eax = A8;
    ebx = *eax;
    esi = ebx << 8 & 16711680;
    esi = esi | ebx >> 0x18;
    ebp = ebx;
    ebx = ebx << 0x18;
    *(A4 + 0x4c) = esi | ebp >> 8 & 65280 | ebx;
    edx = *(eax + 4);
    ebp = edx << 8 & 16711680;
    ebp = ebp | edx >> 0x18;
    ebx = edx;
    edx = edx << 0x18;
    *(A4 + 0x50) = ebp | ebx >> 8 & 65280 | edx;
    edx = *(eax + 8) & 65535;
    eax = edx << 8;
    eax = (eax | edx >> 8) & 65535;
    *(A4 + 0x54) = eax;
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0043C516 - 0x0043C51F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C516()
{



}

/*	Procedure: 0x0043C569 - 0x0043C574
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C569(A4)
/* unknown */ void  A4;
{



    return A4;
}

/*	Procedure: 0x0043C575 - 0x0043C57F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C575()
{



}

/*	Procedure: 0x0043C687 - 0x0043C68F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C687()
{



}

/*	Procedure: 0x0043C812 - 0x0043C81F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C812()
{



}

/*	Procedure: 0x0043C83B - 0x0043CF81
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 0
 */

L0043C83B(A8, Ac, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A24;
{
	/* unknown */ void  Vffffff68;
	/* unknown */ void  Vffffff6c;
	/* unknown */ void  Vffffff70;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff88;
	/* unknown */ void  Vffffff8c;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffff99;
	/* unknown */ void  Vffffff9a;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffbd;
	/* unknown */ void  Vffffffbe;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc1;
	/* unknown */ void  Vffffffc2;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd6;
	/* unknown */ void  Vffffffd7;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffdd;
	/* unknown */ void  Vffffffde;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff8;



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x2c;
    esp = esp & -8;
    esi = A8;
    edx = *(esi + 0x24) & 65535;
    ebx = Ac;
    if(edx & 0x10 || !(edx & 2)) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    *esp = *ebx;
    Vffffffc8 = *(ebx + 4);
    Vffffffcc = *(ebx + 8);
    Vffffffd0 = *(ebx + 0xc);
    Vffffffd4 = *(ebx + 0x10);
    Vffffffd8 = *(ebx + 0x14);
    Vffffffdc = *(ebx + 0x18) & 0xff;
    Vffffffdd = *(ebx + 0x19) & 0xff;
    Vffffffde = *(ebx + 0x1a) & 65535;
    Vffffffd4 = Vffffffd4 - *(esi + 0xc);
    edi = *(esi + 0x10);
    Vffffffd8 = Vffffffd8 - edi;
    Vffffffe8 = L0043C410(esi, & Vffffffd4);
    eax = *(esi + 0x38);
    if(Vffffffe8 != eax) {
        if(eax != 0) {
            *(esi + 0x38) = 0;
            eax = *( *(eax + 4) + 0x30)(eax, esp);
        }
        if(Vffffffe8 != 0) {
            *( *(Vffffffe8 + 4) + 0x28)(Vffffffe8, esp);
            eax = Vffffffe8;
            *(esi + 0x38) = eax;
        }
    }
    if(Vffffffe8 != 0) {
        eax = Vffffffe8;
        if(!( *(eax + 0x24) & 65535 & 0x10)) {
            ecx = ( *(ebx + 0x18) & 0xff) - 1;
            if(ecx <= 2) {
                switch(ecx) {
                    case 0:
L0043c945:
                        *(esi + 0x24) = *(esi + 0x24) | 0x40;
                        *(esi + 0x40) = A24;
                        goto L0043c980;
                    case 1:
                        *(esi + 0x24) = *(esi + 0x24) | 0x80;
                        *(esi + 0x44) = A24;
                        goto L0043c980;
                    case 2:
                        *(esi + 0x24) = *(esi + 0x24) | 0x100;
                        eax = A24;
                        *(esi + 0x48) = eax;
                        goto L0043c980;
                }
                goto L0043c945;
            }
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return;
            if(*(esi + 0x24) & 65535 & 4 || *(Vfffffff8 + 0x24) & 65535 & 0x20) {
                goto L0043c9d3;
            }
            edi = *(esi + 0x34);
            if(edi == Vfffffff8) {
                goto L0043c9d3;
            }
            if(edi == 0) {
                goto L0043c9bc;
            }
            L00419D20(edi, 7, 2);
            *(esi + 0x34) = 0;
            L00419D20(Vfffffff8, 7, 6);
            *(esi + 0x34) = Vfffffff8;
            eax = *( *(Vfffffff8 + 4) + 0x20)(Vfffffff8, esp);
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    esp = esp - 0x24;
    esp = esp & -8;
    eax = Ac;
    ebx = ( *(eax + 0x18) & 0xff) - 1;
    ecx = A8;
    if(ebx > 2) {
        goto L0043ca48;
    }
    goto ( *(ebx * 4 + 0x477a38));
    *(ecx + 0x24) = *(ecx + 0x24) & -65;
    edx = *(ecx + 0x40);
    *(ecx + 0x40) = 0;
    goto L0043ca4a;
    *(ecx + 0x24) = *(ecx + 0x24) & 65407;
    edx = *(ecx + 0x44);
    *(ecx + 0x44) = 0;
    goto L0043ca4a;
    *(ecx + 0x24) = *(ecx + 0x24) & 65279;
    edx = *(ecx + 0x48);
    *(ecx + 0x48) = 0;
    goto L0043ca4a;
    edx = 0;
    if(0 == 0) {
        goto L0043caaa;
    }
    *esp = *eax;
    Vffffffac = *(eax + 4);
    Vffffffb0 = *(eax + 8);
    Vffffffb4 = *(eax + 0xc);
    Vffffffb8 = *(eax + 0x10);
    Vffffffbc = *(eax + 0x14);
    ebx = *(eax + 0x18) & 0xff;
    Vffffffc0 = bl;
    ebx = *(eax + 0x19) & 0xff;
    Vffffffc1 = bl;
    ebx = *(eax + 0x1a) & 65535;
    Vffffffc2 = bx;
    Vffffffb8 = Vffffffb8 - *(ecx + 0xc);
    Vffffffbc = Vffffffbc - *(ecx + 0x10);
    eax = *( *L00000004 + 0x24)(0, esp);
    esp = ebp - 4;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    ecx = A8;
    *(ecx + 0x24) = *(ecx + 0x24) | 0x200;
    eax = L0043cad0(ecx, Ac);
    esp = ebp;
    return;
    (save)ebp;
    ebp = esp;
    ecx = Ac;
    (save)ebx;
    ebx = A8;
    (save)esi;
    (save)edi;
    esp = esp - 0x34;
    esp = esp & -8;
    *esp = *ecx;
    Vffffffac = *(ecx + 4);
    Vffffffb0 = *(ecx + 8);
    Vffffffb4 = *(ecx + 0xc);
    Vffffffb8 = *(ecx + 0x10);
    Vffffffbc = *(ecx + 0x14);
    Vffffffc0 = *(ecx + 0x18) & 0xff;
    Vffffffc1 = *(ecx + 0x19) & 0xff;
    Vffffffc2 = *(ecx + 0x1a) & 65535;
    Vffffffb8 = Vffffffb8 - *(ebx + 0xc);
    Vffffffbc = Vffffffbc - *(ebx + 0x10);
    eax = *(ebx + 0x40);
    Vffffffd0 = eax;
    esi = *(ebx + 0x38);
    if(Vffffffd0 == 0) {
        goto L0043cc00;
    }
    Vffffffcc = Vffffffb8;
    eax = Vffffffd0;
    Vffffffd6 = 0;
    Vffffffd7 = 0;
    ecx = *(eax + 0xc);
    dl = 0;
    if(Vffffffcc >= ecx && Vffffffbc >= *(eax + 0x10)) {
    }
    if(1 == 0 || Vffffffcc >= *(Vffffffd0 + 0x14)) {
        goto L0043cb87;
    }
    Vffffffd7 = 1;
    if(Vffffffd7 == 0 || Vffffffbc >= *(Vffffffd0 + 0x18)) {
        goto L0043cba2;
    }
    Vffffffd6 = 1;
    if(Vffffffd6 == 0) {
        goto L0043cbb0;
    }
    edi = Vffffffd0;
    goto L0043cbb2;
    edi = 0;
    if(0 == esi) {
        goto L0043cbe2;
    }
    if(esi == 0) {
        goto L0043cbce;
    }
    *(ebx + 0x38) = 0;
    *( *(esi + 4) + 0x30)(esi, esp);
    if(edi == 0) {
        goto L0043cbe2;
    }
    *( *(edi + 4) + 0x28)(edi, esp);
    *(ebx + 0x38) = edi;
    eax = *( *(Vffffffd0 + 4) + 0x2c)(Vffffffd0, esp);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save) & Vffffffc8;
    edi = L0043C410(ebx);
    (restore)ecx;
    if(edi != esi) {
        goto L0043cc26;
    }
    if(edi == 0) {
        goto L0043cc52;
    }
    ebx = *(edi + 4);
    *(ebx + 0x2c)(edi, esp);
    goto L0043cc52;
    if(esi == 0) {
        goto L0043cc3e;
    }
    *(ebx + 0x38) = 0;
    *( *(esi + 4) + 0x30)(esi, esp);
    if(edi == 0) {
        goto L0043cc52;
    }
    eax = *( *(edi + 4) + 0x28)(edi, esp);
    *(ebx + 0x38) = edi;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    ecx = A8;
    (save)ebx;
    esp = esp - 0x24;
    esp = esp & -8;
    eax = Ac;
    *(ecx + 0x24) = *(ecx + 0x24) & 65023;
    edx = *(ecx + 0x38);
    if(edx != 0) {
        goto L0043cc83;
    }
    esp = ebp - 4;
    (restore)ebx;
    return;
    *(ecx + 0x38) = 0;
    *esp = *eax;
    Vffffffa8 = *(eax + 4);
    Vffffffac = *(eax + 8);
    Vffffffb0 = *(eax + 0xc);
    Vffffffb4 = *(eax + 0x10);
    Vffffffb8 = *(eax + 0x14);
    ebx = *(eax + 0x18) & 0xff;
    Vffffffbc = bl;
    Vffffffbd = *(eax + 0x19) & 0xff;
    Vffffffbe = *(eax + 0x1a) & 65535;
    Vffffffb4 = Vffffffb4 - *(ecx + 0xc);
    Vffffffb8 = Vffffffb8 - *(ecx + 0x10);
    eax = *( *(edx + 4) + 0x30)(edx, esp);
    esp = ebp - 4;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    ecx = Ac;
    (save)ebx;
    ebx = A8;
    esp = esp - 0x24;
    esp = esp & -8;
    *esp = *ecx;
    Vffffff84 = *(ecx + 4);
    Vffffff88 = *(ecx + 8);
    Vffffff8c = *(ecx + 0xc);
    Vffffff90 = *(ecx + 0x10);
    Vffffff94 = *(ecx + 0x14);
    Vffffff98 = *(ecx + 0x18) & 0xff;
    Vffffff99 = *(ecx + 0x19) & 0xff;
    Vffffff9a = *(ecx + 0x1a) & 65535;
    Vffffff90 = Vffffff90 - *(ebx + 0xc);
    eax = *(ebx + 0x10);
    Vffffff94 = Vffffff94 - eax;
    eax = L0043C410(ebx, & Vffffff90);
    ecx = eax;
    if(eax != 0) {
        goto L0043cd65;
    }
    ecx = *(ebx + 0x34);
    if(ecx == 0) {
        goto L0043cd76;
    }
    eax = *( *(ecx + 4) + 0x34)(ecx, esp);
    esp = ebp - 4;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    ecx = *(Ac + 0xc);
    edi = 0;
    *(ebp - 0x11) = 0;
    eax = *(A8 + 0x24) & 65535;
    if(!(eax & 0x10) && eax & 4) {
        goto L0043cdb8;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    eax = *(esi + 0x4c);
    *(ebp - 0x10) = eax;
    if(eax == 0) {
        goto L0043ce05;
    }
    edx = *(ebx + 0x14) & 65535;
    if(edx != 0x20 && ( *(esi + 0x54) & 1 || edx != 0x71)) {
        goto L0043ce05;
    }
    edx = ecx;
    if(ecx & 2) {
        goto L0043cde7;
    }
    cl = 2;
    goto L0043cde9;
    L00419FF0(esi, *(ebp - 0x10), 1, 0, edx, 0, 0);
    goto L0043cec1;
    eax = *(esi + 0x50);
    *(ebp - 0x10) = eax;
    if(eax == 0 || ( *(ebx + 0x14) & 65535) != 0x90 && ( *(ebx + 0x10) != 0x2e || ecx & 0x10)) {
        goto L0043ce52;
    }
    edx = ecx;
    if(ecx & 2) {
        goto L0043ce37;
    }
    al = 2;
    goto L0043ce39;
    L00419FF0(esi, *(ebp - 0x10), 1, 0, edx, 0, 0);
    goto L0043cec1;
    if(*(esi + 0x54) & 2 || *(ebx + 0x10) != 9) {
        goto L0043ceb8;
    }
    if(ecx & 8) {
        goto L0043ce71;
    }
    (save)esi;
    L0043d390();
    goto L0043ce77;
    *(ebp - 0x10) = L0043d2d0(esi);
    if(*(ebp - 0x10) == 0) {
        goto L0043cec1;
    }
    edx = *(esi + 0x34);
    if(*(ebp - 0x10) == edx) {
        goto L0043cec1;
    }
    if(edx == 0) {
        goto L0043cea1;
    }
    L00419D20(edx, 7, 2);
    *(esi + 0x34) = 0;
    L00419D20( *(ebp - 0x10), 7, 6);
    *(esi + 0x34) = *(ebp - 0x10);
    goto L0043cec1;
    eax = *(esi + 0x34);
    if(eax == 0) {
        goto L0043cec1;
    }
    edi = eax;
    if(edi == 0) {
        goto L0043cee2;
    }
    if(*(ebp - 0x11) == 0) {
        goto L0043ced5;
    }
    (save)ebx;
    (save)edi;
    ebx = *(edi + 4);
    *(ebx + 0x40)();
    goto L0043cee0;
    eax = *( *(edi + 4) + 0x38)(edi, ebx);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    edx = *(A8 + 0x34);
    if(edx == 0) {
        goto L0043cf0a;
    }
    eax = *( *(edx + 4) + 0x3c)(edx, Ac);
    esp = ebp - 4;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    ecx = Ac;
    esp = esp - 0x1c;
    esp = esp & -8;
    *esp = *ecx;
    Vffffff68 = *(ecx + 4);
    Vffffff6c = *(ecx + 8);
    Vffffff70 = *(ecx + 0xc);
    Vffffff74 = *(ecx + 0x10);
    Vffffff78 = *(ecx + 0x14);
    Vffffff70 = Vffffff70 | 32768;
    eax = L0043cd80(A8, esp);
    esp = ebp;
    return;
    (save)ebp;
    ebp = esp;
    edx = A8;
    *(edx + 0x24) = *(edx + 0x24) | 0x400;
    *(edx + 0x3c) = 0;
    eax = L0043cf90(edx, Ac);
    esp = ebp;
}

/*	Procedure: 0x0043D07E - 0x0043D112
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D07E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vffffffed;
	/* unknown */ void  Vffffffee;
	/* unknown */ void  Vfffffff0;



    (save)ebx;
    esp = esp - 0x24;
    esp = esp & -8;
    eax = Ac;
    *(A8 + 0x24) = *(A8 + 0x24) & 64511;
    edx = *(A8 + 0x3c);
    if(edx == 0) {
        esp = ebp - 4;
        (restore)ebx;
        return;
    }
    *(A8 + 0x3c) = 0;
    *esp = *eax;
    Vffffffd8 = *(eax + 4);
    Vffffffdc = *(eax + 8);
    Vffffffe0 = *(eax + 0xc);
    Vffffffe4 = *(eax + 0x10);
    Vffffffe8 = *(eax + 0x14);
    ebx = *(eax + 0x18) & 0xff;
    Vffffffec = bl;
    Vffffffed = *(eax + 0x19) & 0xff;
    Vffffffee = *(eax + 0x1a) & 65535;
    Vfffffff0 = *(eax + 0x1c);
    Vffffffe4 = Vffffffe4 - *(A8 + 0xc);
    Vffffffe8 = Vffffffe8 - *(A8 + 0x10);
    eax = *( *(edx + 4) + 0x50)(edx, esp);
    esp = ebp - 4;
    (restore)ebx;
}

/*	Procedure: 0x0043D113 - 0x0043D11F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D113()
{



}

/*	Procedure: 0x0043D158 - 0x0043D272
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L0043D158(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = Ac;
    edx = A10;
    ebx = edx;
    edi = esi;
    ebx = ebx & 7;
    edi = edi & 7;
    esp = esp - 8;
    ecx = A8;
    if(edi == ebx) {
        return;
    }
    if(!(edx & 4)) {
        if(edi == 2) {
            ecx = *(ecx + 0x34);
            if(ecx != 0) {
                eax = L00419D20(ecx, 7, 6);
            }
        } else {
            eax = *(ecx + 0x34);
            esi = *(ecx + 0x2c);
            ebx = *(ecx + 0x28);
            *(ebp - 0x14) = eax;
            if(eax != 0) {
                edi = 0;
                *(ebp - 0x10) = eax;
                if(esi > 0) {
                    do {
                        edx = *(ebx + edi * 4);
                        if(edx != *(ebp - 0x10)) {
                            L00419D20(edx, 7, 2);
                        }
                        edi = edi + 1;
                    } while(edi < esi);
                }
                eax = L00419D20( *(ebp - 0x14), 7, 6);
            } else {
                edi = 0;
                if(esi > 0) {
                    do {
                        eax = L00419D20( *(ebx + edi * 4), 7, 2);
                        edi = edi + 1;
                    } while(edi < esi);
                }
            }
        }
    } else {
        if(!(esi & 4)) {
            if(edx & 2) {
                goto L0043d246;
            }
            ecx = *(ecx + 0x34);
            if(ecx != 0) {
                eax = L00419D20(ecx, 7, 2);
            }
        } else {
L0043d246:
            eax = *(ecx + 0x2c);
            *(ebp - 0x14) = eax;
            edi = 0;
            esi = *(ecx + 0x28);
            if(eax > 0) {
                do {
                    eax = L00419D20( *(esi + edi * 4), 7, ebx);
                    edi = edi + 1;
                } while(edi < *(ebp - 0x14));
            }
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0043D273 - 0x0043D27F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D273()
{



}

/*	Procedure: 0x0043D2C1 - 0x0043D2CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D2C1()
{



}

/*	Procedure: 0x0043D382 - 0x0043D38F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D382()
{



}

/*	Procedure: 0x0043D461 - 0x0043D46F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D461()
{



}

/*	Procedure: 0x0043D4D5 - 0x0043D4DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D4D5()
{



}

/*	Procedure: 0x0043D59F - 0x0043D6C9
 *	Argument size: 16
 *	Local size: 56
 *	Save regs size: 12
 */

L0043D59F(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    eax = *(Ac + 0x24) & 65535;
    ebx = A10;
    ecx = A14;
    if(eax & 8 || !( *(A8 + 0x24) & 65535 & 8)) {
        return;
    }
    Vffffffe4 = *ebx;
    Vffffffec = *(ebx + 4);
    Vfffffff0 = *(ebx + 8);
    Vffffffe8 = *(ebx + 0xc);
    Vffffffe0 = *ecx;
    *(ebp - 0x44) = *(ecx + 4);
    esi = *(ecx + 8);
    edx = *(A8 + 0xc);
    ebx = *(ecx + 0xc);
    eax = *(A8 + 0x10);
    Vffffffe4 = Vffffffe4 + edx;
    Vffffffec = Vffffffec + eax;
    Vfffffff0 = Vfffffff0 + edx;
    Vffffffe8 = Vffffffe8 + eax;
    Vffffffe0 = Vffffffe0 + edx;
    esi = esi + edx;
    *(ebp - 0x44) = *(ebp - 0x44) + eax;
    ebx = ebx + eax;
    edx = Vfffffff0 < esi ? Vfffffff0 : esi;
    eax = Vffffffe4 > Vffffffe0 ? Vffffffe4 : Vffffffe0;
    if(eax < edx) {
        ecx = Vffffffe8 < ebx ? Vffffffe8 : ebx;
        edx = Vffffffec > *(ebp - 0x44) ? Vffffffec : *(ebp - 0x44);
        if(edx >= ecx) {
            goto L0043d680;
        }
        eax = Vffffffe4;
        if(Vffffffe0 > eax) {
            Vffffffe0 = eax;
        }
        eax = Vffffffec;
        if(*(ebp - 0x44) > eax) {
            *(ebp - 0x44) = eax;
        }
        if(esi < Vfffffff0) {
            esi = Vfffffff0;
        }
        if(ebx < Vffffffe8) {
            ebx = Vffffffe8;
        }
    } else {
L0043d680:
        *(ebp - 0x40) = Vffffffe4;
        *(ebp - 0x3c) = Vffffffec;
        Vffffffc8 = Vfffffff0;
        Vffffffcc = Vffffffe8;
        L00419F00(A8, ebp - 0x40);
    }
    Vffffffd0 = Vffffffe0;
    Vffffffd4 = *(ebp - 0x44);
    Vffffffd8 = esi;
    Vffffffdc = ebx;
    eax = L00419F00(A8, & Vffffffd0);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0043D6CA - 0x0043D715
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D6CA(A8, A10)
/* unknown */ void  A8;
/* unknown */ void  A10;
{



    eax = A10;
    (save)A8;
    (save)esi;
    esp = esp - 0x10;
    edx = *(A8 + 0xc);
    ecx = *(A8 + 0x10);
    *(ebp - 0x18) = *eax + edx;
    *(ebp - 0x14) = *(eax + 4) + ecx;
    *(ebp - 0x10) = *(eax + 8) + edx;
    *(ebp - 0xc) = *(eax + 0xc) + ecx;
    eax = L00419F00(A8, ebp - 0x18);
    esp = ebp - 8;
    (restore)esi;
    (restore)A8;
}

/*	Procedure: 0x0043D716 - 0x0043D71F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D716()
{



}

/*	Procedure: 0x0043D766 - 0x0043D76F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D766()
{



}

/*	Procedure: 0x0043D79D - 0x0043D7D3
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 */

L0043D79D(A8, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = L0041A130(A8, A10, A14);
    if(A10 != 0) {
        *A10 = *A10 + *(A8 + 0xc);
    }
    if(A14 != 0) {
        eax = *(A8 + 0x10);
        *A14 = *A14 + eax;
    }
}

/*	Procedure: 0x0043D7D4 - 0x0043D7DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D7D4()
{



}

/*	Procedure: 0x0043D806 - 0x0043D80F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D806()
{



}

/*	Procedure: 0x0043D811 - 0x0043D81F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D811()
{



}

/*	Procedure: 0x0043D845 - 0x0043D84F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D845()
{



}

/*	Procedure: 0x0043D8CA - 0x0043D8CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0043D8CA()
{



}

/*	Procedure: 0x0043D8D0 - 0x004406A5
 *	Argument size: 4
 *	Local size: 80
 *	Save regs size: 16
 *	Called by:
 *		L00430540()
 */

L0043D8D0(A68)
/* unknown */ void  A68;
{
	/* unknown */ void  V2;
	/* unknown */ void  V3;
	/* unknown */ void  V4;
	/* unknown */ void  V5;
	/* unknown */ void  V6;
	/* unknown */ void  V7;
	/* unknown */ void  V8;
	/* unknown */ void  V9;
	/* unknown */ void  Va;
	/* unknown */ void  Vb;
	/* unknown */ void  Vc;
	/* unknown */ void  Vd;
	/* unknown */ void  Ve;
	/* unknown */ void  ebx;
	/* unknown */ void  Vf;
	/* unknown */ void  V10;
	/* unknown */ void  ebp;
	/* unknown */ void  edi;
	/* unknown */ void  V14;
	/* unknown */ void  V18;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;
	/* unknown */ void  V24;
	/* unknown */ void  V28;
	/* unknown */ void  V2c;
	/* unknown */ void  V30;
	/* unknown */ void  V34;
	/* unknown */ void  V38;
	/* unknown */ void  V3c;
	/* unknown */ void  V40;
	/* unknown */ void  V44;
	/* unknown */ void  V48;
	/* unknown */ void  V4c;



    V34 = 0;
    V9 = 0;
    V8 = 0;
    V2 = 0;
    V6 = 0;
    V7 = 0;
    Vd = 0;
    Vf = 0;
    Va = 0;
    Vc = 0;
    Vb = 0;
    V3 = 0;
    Ve = 0;
    V5 = 0;
    V4 = 0;
    eax = *A68 & 0xff;
    cl = 0;
    edi = *(esp + M00000064);
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(ebx + 0x485ba7);
        edx = *(ebx + 0x485bd4) & 0xff;
        al = *(ebx + 0x485ba8);
        V9 = V9 ^ dl;
        V8 = V8 ^ al;
        V2 = V2 ^ dl;
    }
    ebx = *(A68 + 1) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(edx + 0x485bd4);
        V9 = V9 ^ *(edx + 0x485c4b);
        V8 = V8 ^ *(edx + 0x485beb);
        al = *(edx + 0x485c31);
        V2 = V2 ^ al;
    }
    eax = *(A68 + 2) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(edx + 0x485c31);
        V9 = V9 ^ *(edx + 0x485c7c);
        V8 = V8 ^ *(edx + 0x485c66);
        al = *(edx + 0x485c78);
        V2 = V2 ^ al;
    }
    eax = *(A68 + 3) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(ebx + 0x485c78);
        V9 = V9 ^ *(ebx + 0x485c26);
        V8 = V8 ^ *(ebx + 0x485be4);
        al = *(ebx + 0x485c40);
        V2 = V2 ^ al;
    }
    ebx = *(A68 + 4) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(edx + 0x485c40);
        V9 = V9 ^ *(edx + 0x485bed);
        V8 = V8 ^ *(edx + 0x485c0d);
        al = *(edx + 0x485c3d);
        V2 = V2 ^ al;
    }
    eax = *(A68 + 5) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(edx + 0x485c3d);
        V9 = V9 ^ *(edx + 0x485be3);
        V8 = V8 ^ *(edx + 0x485c02);
        al = *(edx + 0x485c94);
        V2 = V2 ^ al;
    }
    eax = *(A68 + 6) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(ebx + 0x485c94);
        V9 = V9 ^ *(ebx + 0x485bde);
        V8 = V8 ^ *(ebx + 0x485bf6);
        al = *(ebx + 0x485c87);
        V2 = V2 ^ al;
    }
    ebx = *(A68 + 7) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        V34 = V34 ^ *(edx + 0x485c87);
        V9 = V9 ^ *(edx + 0x485c77);
        V8 = V8 ^ *(edx + 0x485c33);
        al = *(edx + 0x485bbe);
        V2 = V2 ^ al;
    }
    eax = *(A68 + 8) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(ebx + 0x485ba7);
        edx = *(ebx + 0x485bd4) & 0xff;
        al = *(ebx + 0x485ba8);
        V7 = V7 ^ dl;
        Vd = Vd ^ al;
        Vf = Vf ^ dl;
    }
    eax = *(A68 + 9) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(ebx + 0x485bd4);
        V7 = V7 ^ *(ebx + 0x485c4b);
        Vd = Vd ^ *(ebx + 0x485beb);
        al = *(ebx + 0x485c31);
        Vf = Vf ^ al;
    }
    ebx = *(A68 + 0xa) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(edx + 0x485c31);
        V7 = V7 ^ *(edx + 0x485c7c);
        Vd = Vd ^ *(edx + 0x485c66);
        al = *(edx + 0x485c78);
        Vf = Vf ^ al;
    }
    eax = *(A68 + 0xb) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(edx + 0x485c78);
        V7 = V7 ^ *(edx + 0x485c26);
        Vd = Vd ^ *(edx + 0x485be4);
        al = *(edx + 0x485c40);
        Vf = Vf ^ al;
    }
    eax = *(A68 + 0xc) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(ebx + 0x485c40);
        V7 = V7 ^ *(ebx + 0x485bed);
        Vd = Vd ^ *(ebx + 0x485c0d);
        al = *(ebx + 0x485c3d);
        Vf = Vf ^ al;
    }
    ebx = *(A68 + 0xd) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(edx + 0x485c3d);
        V7 = V7 ^ *(edx + 0x485be3);
        Vd = Vd ^ *(edx + 0x485c02);
        al = *(edx + 0x485c94);
        Vf = Vf ^ al;
    }
    eax = *(A68 + 0xe) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(edx + 0x485c94);
        V7 = V7 ^ *(edx + 0x485bde);
        Vd = Vd ^ *(edx + 0x485bf6);
        al = *(edx + 0x485c87);
        Vf = Vf ^ al;
    }
    eax = *(A68 + 0xf) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        V6 = V6 ^ *(ebx + 0x485c87);
        V7 = V7 ^ *(ebx + 0x485c77);
        Vd = Vd ^ *(ebx + 0x485c33);
        al = *(ebx + 0x485bbe);
        Vf = Vf ^ al;
    }
    edx = *(A68 + 0x10) & 0xff;
    if(dl != 0) {
        ebx = *((dl & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(ebx + 0x485ba7);
        edx = *(ebx + 0x485bd4) & 0xff;
        al = *(ebx + 0x485ba8);
        Vc = Vc ^ dl;
        Vb = Vb ^ al;
        V3 = V3 ^ dl;
    }
    eax = *(A68 + 0x11) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(edx + 0x485bd4);
        Vc = Vc ^ *(edx + 0x485c4b);
        Vb = Vb ^ *(edx + 0x485beb);
        al = *(edx + 0x485c31);
        V3 = V3 ^ al;
    }
    eax = *(A68 + 0x12) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(ebx + 0x485c31);
        Vc = Vc ^ *(ebx + 0x485c7c);
        Vb = Vb ^ *(ebx + 0x485c66);
        al = *(ebx + 0x485c78);
        V3 = V3 ^ al;
    }
    ebx = *(A68 + 0x13) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(edx + 0x485c78);
        Vc = Vc ^ *(edx + 0x485c26);
        Vb = Vb ^ *(edx + 0x485be4);
        al = *(edx + 0x485c40);
        V3 = V3 ^ al;
    }
    eax = *(A68 + 0x14) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(edx + 0x485c40);
        Vc = Vc ^ *(edx + 0x485bed);
        Vb = Vb ^ *(edx + 0x485c0d);
        al = *(edx + 0x485c3d);
        V3 = V3 ^ al;
    }
    eax = *(A68 + 0x15) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(ebx + 0x485c3d);
        Vc = Vc ^ *(ebx + 0x485be3);
        Vb = Vb ^ *(ebx + 0x485c02);
        al = *(ebx + 0x485c94);
        V3 = V3 ^ al;
    }
    ebx = *(A68 + 0x16) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(edx + 0x485c94);
        Vc = Vc ^ *(edx + 0x485bde);
        Vb = Vb ^ *(edx + 0x485bf6);
        al = *(edx + 0x485c87);
        V3 = V3 ^ al;
    }
    eax = *(A68 + 0x17) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        Va = Va ^ *(edx + 0x485c87);
        Vc = Vc ^ *(edx + 0x485c77);
        Vb = Vb ^ *(edx + 0x485c33);
        al = *(edx + 0x485bbe);
        V3 = V3 ^ al;
    }
    eax = *(A68 + 0x18) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(ebx + 0x485ba7);
        edx = *(ebx + 0x485bd4) & 0xff;
        al = *(ebx + 0x485ba8);
        V5 = V5 ^ dl;
        V4 = V4 ^ al;
        cl = cl ^ dl;
    }
    ebx = *(A68 + 0x19) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(edx + 0x485bd4);
        V5 = V5 ^ *(edx + 0x485c4b);
        al = *(edx + 0x485beb);
        V4 = V4 ^ al;
        cl = cl ^ *(edx + 0x485c31);
    }
    eax = *(A68 + 0x1a) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(edx + 0x485c31);
        V5 = V5 ^ *(edx + 0x485c7c);
        al = *(edx + 0x485c66);
        V4 = V4 ^ al;
        cl = cl ^ *(edx + 0x485c78);
    }
    eax = *(A68 + 0x1b) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(ebx + 0x485c78);
        V5 = V5 ^ *(ebx + 0x485c26);
        al = *(ebx + 0x485be4);
        V4 = V4 ^ al;
        cl = cl ^ *(ebx + 0x485c40);
    }
    ebx = *(A68 + 0x1c) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(edx + 0x485c40);
        V5 = V5 ^ *(edx + 0x485bed);
        al = *(edx + 0x485c0d);
        V4 = V4 ^ al;
        cl = cl ^ *(edx + 0x485c3d);
    }
    eax = *(A68 + 0x1d) & 0xff;
    if(al != 0) {
        edx = *((al & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(edx + 0x485c3d);
        V5 = V5 ^ *(edx + 0x485be3);
        al = *(edx + 0x485c02);
        V4 = V4 ^ al;
        cl = cl ^ *(edx + 0x485c94);
    }
    eax = *(A68 + 0x1e) & 0xff;
    if(al != 0) {
        ebx = *((al & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(ebx + 0x485c94);
        V5 = V5 ^ *(ebx + 0x485bde);
        V4 = V4 ^ *(ebx + 0x485bf6);
        cl = cl ^ *(ebx + 0x485c87);
    }
    ebx = *(A68 + 0x1f) & 0xff;
    if(bl != 0) {
        edx = *((bl & 0xff) + 0x485aa7) & 0xff;
        Ve = Ve ^ *(edx + 0x485c87);
        V5 = V5 ^ *(edx + 0x485c77);
        V4 = V4 ^ *(edx + 0x485c33);
        cl = cl ^ *(edx + 0x485bbe);
    }
    ebx = 0;
    ebp = 0;
    edx = 1;
    if(0 < 0x100) {
        V34 = V34 & 0xff;
        V30 = V6 & 0xff;
        V44 = Va & 0xff;
        V2c = Ve & 0xff;
        V28 = V9 & 0xff;
        V4c = V7 & 0xff;
        V24 = Vc & 0xff;
        V20 = V5 & 0xff;
        V3c = V8 & 0xff;
        V1c = Vd & 0xff;
        V18 = Vb & 0xff;
        V38 = V4 & 0xff;
        V40 = V2 & 0xff;
        V48 = Vf & 0xff;
        V10 = V3 & 0xff;
        V14 = cl & 0xff;
        do {
            *(edi + ebp * 4) = *(( *(( *(( *(( *(edx + 0x485d93) & 0xff ^ V34) + 0x4849a8) & 0xff ^ V30) + 0x4848a8) & 0xff ^ V44) + 0x4848a8) & 0xff ^ V2c) * 4 + 0x484aa8);
            *(edi + ebp * 4 + 0x400) = *(( *(( *(( *(( *(ebx + 0x485d93) & 0xff ^ V28) + 0x4849a8) & 0xff ^ V4c) + 0x4849a8) & 0xff ^ V24) + 0x4848a8) & 0xff ^ V20) * 4 + 0x484ea8);
            *(edi + ebp * 4 + 0x800) = *(( *(( *(( *(( *(ebx + 0x485d93) & 0xff ^ V3c) + 0x4848a8) & 0xff ^ V1c) + 0x4848a8) & 0xff ^ V18) + 0x4849a8) & 0xff ^ V38) * 4 + 0x4852a8);
            *(edi + ebp * 4 + 0xc00) = *(( *(( *(( *(( *(edx + 0x485d93) & 0xff ^ V40) + 0x4848a8) & 0xff ^ V48) + 0x4849a8) & 0xff ^ V10) + 0x4849a8) & 0xff ^ V14) * 4 + 0x4856a8);
            ebp = ebp + 1;
            ebx = ebx + 2;
            edx = edx + 2;
        } while(ebp < 0x100);
    }
    eax = *(( *(A68 + 0x18) & 0xff ^ 0x75) + 0x4849a8) & 0xff;
    ecx = *(A68 + 0x10) & 0xff ^ eax;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *((ecx ^ 0xa9) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = *(A68 + 0x11) & 0xff ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8) ^ *(ebx * 4 + 0x484aa8);
    eax = *(( *(A68 + 0x1a) & 0xff ^ 0xa9) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = *(A68 + 0x12) & 0xff ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x75) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xf3) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 4) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x67) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0x67) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(A68 + 0x1f) & 0xff;
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0xf3) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1000) = ecx;
    ebp = ebp + *(edi + 0x1000);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1004) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xc6) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0xb3) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0xb3) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xc6) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xf4) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0xe8) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0xe8) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0xf4) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1008) = edx;
    ebp = ebp + *(edi + 0x1008);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x100c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0xdb) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 4) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 4) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xdb) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x7b) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0xfd) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0xfd) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0x7b) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1010) = ecx;
    ebp = ebp + *(edi + 0x1010);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1014) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xfb) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0xa3) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0xa3) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xfb) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xc8) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x76) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x76) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0xc8) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1018) = edx;
    ebp = ebp + *(edi + 0x1018);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x101c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0x4a) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0x9a) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0x9a) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x4a) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xd3) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x92) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0x92) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0xd3) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1020) = ecx;
    ebp = ebp + *(edi + 0x1020);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1024) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xe6) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0x80) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0x80) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xe6) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x6b) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x78) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x78) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0x6b) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1028) = edx;
    ebp = ebp + *(edi + 0x1028);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x102c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0x45) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0xe4) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0xe4) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x45) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x7d) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0xdd) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0xdd) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0x7d) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1030) = ecx;
    ebp = ebp + *(edi + 0x1030);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1034) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xe8) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0xd1) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0xd1) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xe8) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x4b) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x38) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x38) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0x4b) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1038) = edx;
    ebp = ebp + *(edi + 0x1038);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x103c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0xd6) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0xd) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0xd) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xd6) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x32) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0xc6) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0xc6) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0x32) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1040) = ecx;
    ebp = ebp + *(edi + 0x1040);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1044) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xd8) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0x35) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0x35) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xd8) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xfd) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x98) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x98) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0xfd) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1048) = edx;
    ebp = ebp + *(edi + 0x1048);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x104c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0x37) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0x18) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0x18) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x37) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x71) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0xf7) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0xf7) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0x71) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1050) = ecx;
    ebp = ebp + *(edi + 0x1050);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1054) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xf1) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0xec) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0xec) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xf1) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xe1) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x6c) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x6c) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0xe1) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1058) = edx;
    ebp = ebp + *(edi + 0x1058);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x105c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0x30) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0x43) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0x43) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x30) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xf) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x75) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0x75) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0xf) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1060) = ecx;
    ebp = ebp + *(edi + 0x1060);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1064) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xf8) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0x37) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0x37) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xf8) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x1b) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x26) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x26) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0x1b) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1068) = edx;
    ebp = ebp + *(edi + 0x1068);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x106c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0x87) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0xfa) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0xfa) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x87) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xfa) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x13) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0x13) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0xfa) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1070) = ecx;
    ebp = ebp + *(edi + 0x1070);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1074) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 6) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0x94) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0x94) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 6) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x3f) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x48) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x48) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0x3f) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1078) = edx;
    ebp = ebp + *(edi + 0x1078);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x107c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0x5e) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0xf2) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0xf2) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x5e) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0xba) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0xd0) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0xd0) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *((eax ^ 0xba) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1080) = ecx;
    ebp = ebp + *(edi + 0x1080);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1084) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xae) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0x8b) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0x8b) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xae) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x5b) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x30) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x30) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0x5b) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    *(edi + 0x1088) = edx;
    ebp = ebp + *(edi + 0x1088);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x108c) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    ecx = *(A68 + 0x10) & 0xff;
    ecx = ecx ^ *((ebx ^ 0x8a) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    edx = *(ecx + 0x4848a8) & 0xff;
    edx = edx ^ *(A68 + 8) & 0xff;
    ecx = *(A68 + 0x19) & 0xff;
    ebx = *(edx + 0x4848a8) & 0xff ^ eax;
    edx = *(A68 + 0x11) & 0xff;
    eax = *((ecx ^ 0x84) + 0x4849a8) & 0xff;
    ecx = *(A68 + 9) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 1) & 0xff;
    ecx = *(( *(( *(edx + 0x4849a8) & 0xff ^ ecx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    edx = *(A68 + 0x1a) & 0xff;
    ecx = ecx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((edx ^ 0x84) + 0x4848a8) & 0xff;
    edx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ edx;
    edx = *(A68 + 0x13) & 0xff;
    ecx = ecx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0x8a) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 3) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    ecx = ecx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    edx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    edx = edx ^ eax;
    eax = *(A68 + 4) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x54) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(edx * 4 + 0x484aa8);
    edx = *(A68 + 0x16) & 0xff;
    edx = edx ^ *((eax ^ 0x54) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    edx = *(edx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(edx * 4 + 0x4852a8);
    edx = *(A68 + 0x17) & 0xff;
    edx = edx ^ *(eax + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    edx = *(edx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(edx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    ecx = ecx + ebp;
    *(edi + 0x1090) = ecx;
    ebp = ebp + *(edi + 0x1090);
    ebx = ebp;
    ebp = ebp << 9;
    *(edi + 0x1094) = (ebx >> 0x17) + ebp;
    ebx = *(A68 + 0x18) & 0xff;
    edx = *(A68 + 0x10) & 0xff;
    edx = edx ^ *((ebx ^ 0xbc) + 0x4849a8) & 0xff;
    eax = *A68 & 0xff;
    ecx = *(edx + 0x4848a8) & 0xff;
    ecx = ecx ^ *(A68 + 8) & 0xff;
    edx = *(A68 + 0x19) & 0xff;
    ebx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ecx = *(A68 + 0x11) & 0xff;
    eax = *((edx ^ 0xdf) + 0x4849a8) & 0xff;
    edx = *(A68 + 9) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 1) & 0xff;
    edx = *(( *(( *(ecx + 0x4849a8) & 0xff ^ edx) + 0x4848a8) & 0xff ^ eax) * 4 + 0x484ea8);
    ecx = *(A68 + 0x1a) & 0xff;
    edx = edx ^ *(ebx * 4 + 0x484aa8);
    ebx = *(A68 + 0x12) & 0xff;
    eax = *((ecx ^ 0xdf) + 0x4848a8) & 0xff;
    ecx = *(A68 + 0xa) & 0xff;
    ebx = ebx ^ eax;
    eax = *(A68 + 2) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ ecx;
    ecx = *(A68 + 0x13) & 0xff;
    edx = edx ^ *(( *(ebx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4852a8);
    eax = *(( *(A68 + 0x1b) & 0xff ^ 0xbc) + 0x4848a8) & 0xff;
    ebx = *(A68 + 0xb) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 3) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ ebx;
    ebx = *(A68 + 0x14) & 0xff;
    edx = edx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebx = ebx ^ *(( *(A68 + 0x1c) & 0xff ^ 0x9d) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xc) & 0xff;
    ecx = *(ebx + 0x4848a8) & 0xff;
    ebx = *(A68 + 0x15) & 0xff;
    ecx = ecx ^ eax;
    eax = *(A68 + 4) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    ebx = ebx ^ *(( *(A68 + 0x1d) & 0xff ^ 0x23) + 0x4849a8) & 0xff;
    eax = *(A68 + 0xd) & 0xff;
    ebx = *(ebx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 5) & 0xff;
    ebx = *(ebx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 0x1e) & 0xff;
    ebx = *(ebx * 4 + 0x484ea8) ^ *(ecx * 4 + 0x484aa8);
    ecx = *(A68 + 0x16) & 0xff;
    ecx = ecx ^ *((eax ^ 0x23) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xe) & 0xff;
    ecx = *(ecx + 0x4848a8) & 0xff ^ eax;
    eax = *(A68 + 6) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 0x1f) & 0xff;
    ebx = ebx ^ *(ecx * 4 + 0x4852a8);
    ecx = *(A68 + 0x17) & 0xff;
    ecx = ecx ^ *((eax ^ 0x9d) + 0x4848a8) & 0xff;
    eax = *(A68 + 0xf) & 0xff;
    ecx = *(ecx + 0x4849a8) & 0xff ^ eax;
    eax = *(A68 + 7) & 0xff;
    ebx = ebx ^ *(( *(ecx + 0x4849a8) & 0xff ^ eax) * 4 + 0x4856a8);
    ebp = ebx;
    ebx = ebx << 8;
    ebp = (ebp >> 0x18) + ebx;
    edx = edx + ebp;
    ebp = ebp + edx;
    *(edi + 0x1098) = edx;
    ecx = ebp;
    ebp = ebp << 9;
    *(edi + 0x109c) = (ecx >> 0x17) + ebp;
}

/*	Procedure: 0x004406A6 - 0x004406AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004406A6()
{



}

/*	Procedure: 0x004406B0 - 0x00441397
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004304A0()
 *		L00431A10()
 *		L00431CB0()
 */

L004406B0(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    (save)ebx;
    (save)esi;
    esi = A8;
    (save)edi;
    (save)ebp;
    esp = esp - 0x18;
    *esp = A4;
    Vffffffdc = Ac;
    Vffffffe8 = ( *(esi + 2) & 0xff) << 0x10;
    eax = *esi & 0xff;
    Vffffffe8 = Vffffffe8 ^ ( *(esi + 1) & 0xff) << 8 ^ eax;
    Vffffffe8 = Vffffffe8 ^ ( *(esi + 3) & 0xff) << 0x18;
    Vffffffe8 = Vffffffe8 ^ *( *esp + 0x1000);
    Vffffffe4 = ( *(esi + 6) & 0xff) << 0x10;
    ebx = *(esi + 4) & 0xff;
    Vffffffe4 = Vffffffe4 ^ ( *(esi + 5) & 0xff) << 8 ^ ebx;
    Vffffffe4 = Vffffffe4 ^ ( *(esi + 7) & 0xff) << 0x18;
    Vffffffe4 = Vffffffe4 ^ *( *esp + 0x1004);
    ebx = *(esi + 8) & 0xff;
    ecx = *(esi + 9) & 0xff;
    edx = *(esi + 0xa) & 0xff;
    eax = *(esi + 0xb) & 0xff;
    eax = eax << 0x18;
    ecx = ecx << 8 ^ ebx;
    ebx = *(esi + 0xd) & 0xff;
    edx = edx << 0x10 ^ ecx;
    ecx = *(esi + 0xe) & 0xff;
    edx = edx ^ eax;
    edx = edx ^ *( *esp + 0x1008);
    eax = *(esi + 0xc) & 0xff;
    ebx = ebx << 8 ^ eax;
    eax = *(esi + 0xf) & 0xff;
    eax = eax << 0x18;
    ecx = ecx << 0x10 ^ ebx;
    ecx = ecx ^ eax;
    ecx = ecx ^ *( *esp + 0x100c);
    eax = *esp;
    ebx = Vffffffe8 >> 8;
    ebp = *(eax + (bl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe8 & 0xff) * 4);
    ebp = ebp ^ *(eax + (Vffffffe8 >> 0x10 & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe8 >> 0x18) * 4 + 0xc00);
    esi = *(eax + (Vffffffe4 & 0xff) * 4 + 0x400);
    esi = esi ^ *(eax + (Vffffffe4 >> 8 & 0xff) * 4 + 0x800);
    esi = esi ^ *(eax + (Vffffffe4 >> 0x10 & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffe4 >> 0x18) * 4);
    ebp = ebp + esi;
    edi = ebp;
    ebp = ebp + *(eax + 0x1020);
    edi = edi + *(eax + 0x1024);
    eax = *esp;
    esi = esi + edi;
    edx = edx ^ ebp;
    ebp = edx;
    edx = edx >> 1;
    ebp = (ebp << 0x1f) + edx;
    ebx = ecx;
    ecx = ecx + ecx;
    edx = ebp;
    ebx = (ebx >> 0x1f) + ecx ^ esi;
    ecx = ebp;
    edx = edx >> 8;
    esi = *(eax + (dl & 0xff) * 4 + 0x400);
    esi = esi ^ *(eax + (cl & 0xff) * 4);
    esi = esi ^ *(eax + (ebp >> 0x10 & 0xff) * 4 + 0x800);
    esi = esi ^ *(eax + (ebp >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edi = ebx;
    ecx = *(eax + (bl & 0xff) * 4 + 0x400);
    ecx = ecx ^ *(eax + (edi >> 8 & 0xff) * 4 + 0x800);
    ecx = ecx ^ *(eax + (ebx >> 0x10 & 0xff) * 4 + 0xc00);
    ecx = ecx ^ *(eax + (ebx >> 0x18) * 4);
    esi = esi + ecx;
    edi = esi + *(eax + 0x102c);
    Vffffffe8 = Vffffffe8 ^ esi + *(eax + 0x1028);
    esi = Vffffffe8;
    Vffffffe8 = Vffffffe8 >> 1;
    ecx = ecx + edi;
    esi = (esi << 0x1f) + Vffffffe8;
    Vffffffec = Vffffffe4;
    Vffffffec = Vffffffec >> 0x1f;
    Vffffffe4 = Vffffffe4 << 1;
    Vffffffec = Vffffffec + Vffffffe4;
    Vffffffec = Vffffffec ^ ecx;
    eax = *esp;
    edx = esi;
    ecx = esi;
    edx = edx >> 8;
    edi = *(eax + (dl & 0xff) * 4 + 0x400);
    edi = edi ^ *(eax + (cl & 0xff) * 4);
    eax = *esp;
    ecx = esi >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (esi >> 0x18) * 4 + 0xc00);
    eax = Vffffffec;
    Vffffffe0 = eax;
    Vffffffe0 = Vffffffe0 >> 0x18;
    ecx = eax;
    eax = *esp;
    edx = *(eax + (Vffffffec & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    edx = edx ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffec >> 0x10;
    edx = edx ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    edx = edx ^ *(eax + Vffffffe0 * 4);
    edi = edi + edx;
    ecx = edi;
    edi = edi + *(eax + 0x1030);
    ecx = ecx + *(eax + 0x1034);
    ebp = ebp ^ edi;
    edx = edx + ecx;
    Vffffffe8 = ebp;
    Vffffffe8 = Vffffffe8 << 0x1f;
    Vffffffe8 = Vffffffe8 + (ebp >> 1);
    eax = *esp;
    edi = ebx;
    ebx = ebx + ebx;
    edi = (edi >> 0x1f) + ebx ^ edx;
    edx = *(eax + (Vffffffe8 >> 8 & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe8 & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffe8 >> 0x10;
    edx = edx ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe8 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ebx = edi;
    ecx = edi >> 8;
    ecx = cl & 0xff;
    ebp = edi >> 0x18;
    ebx = *(eax + (bl & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4 + 0x800);
    eax = *esp;
    ecx = edi >> 0x10;
    ebx = ebx ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + ebp * 4);
    edx = edx + ebx;
    ecx = edx;
    edx = edx + *(eax + 0x1038);
    ecx = ecx + *(eax + 0x103c);
    esi = esi ^ edx;
    ebx = ebx + ecx;
    Vffffffe0 = esi;
    Vffffffe0 = Vffffffe0 << 0x1f;
    Vffffffe0 = Vffffffe0 + (esi >> 1);
    edx = Vffffffec;
    Vffffffec = Vffffffec << 1;
    eax = *esp;
    edx = (edx >> 0x1f) + Vffffffec ^ ebx;
    ecx = Vffffffe0 >> 8;
    ebx = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe0 & 0xff) * 4);
    ebx = ebx ^ *(eax + (Vffffffe0 >> 0x10 & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe0 >> 0x18) * 4 + 0xc00);
    esi = edx;
    ebp = edx;
    esi = *(eax + (esi & 0xff) * 4 + 0x400);
    esi = esi ^ *(eax + (ebp >> 8 & 0xff) * 4 + 0x800);
    esi = esi ^ *(eax + (edx >> 0x10 & 0xff) * 4 + 0xc00);
    esi = esi ^ *(eax + (edx >> 0x18) * 4);
    ebx = ebx + esi;
    ebp = ebx + *(eax + 0x1044);
    Vffffffe8 = Vffffffe8 ^ ebx + *(eax + 0x1040);
    ebx = Vffffffe8;
    Vffffffe8 = Vffffffe8 >> 1;
    esi = esi + ebp;
    ebx = (ebx << 0x1f) + Vffffffe8;
    Vffffffe4 = edi;
    Vffffffe4 = Vffffffe4 >> 0x1f;
    Vffffffe4 = Vffffffe4 + edi + edi;
    Vffffffe4 = Vffffffe4 ^ esi;
    ebp = ebx;
    esi = ebx & 0xff;
    edi = *(eax + (ebp >> 8 & 0xff) * 4 + 0x400) ^ *(eax + esi * 4);
    eax = *esp;
    ecx = ebx >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (ebx >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ebp = *(eax + (Vffffffe4 & 0xff) * 4 + 0x400);
    ecx = Vffffffe4 >> 8;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffe4 >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffe4 >> 0x18) * 4);
    edi = edi + ebp;
    ecx = edi + *(eax + 0x104c);
    Vffffffe0 = Vffffffe0 ^ edi + *(eax + 0x1048);
    ebp = ebp + ecx;
    Vffffffec = Vffffffe0;
    Vffffffec = Vffffffec << 0x1f;
    Vffffffe0 = Vffffffe0 >> 1;
    Vffffffec = Vffffffec + Vffffffe0;
    eax = *esp;
    edi = edx;
    edx = edx + edx;
    edi = (edi >> 0x1f) + edx ^ ebp;
    ecx = Vffffffec >> 8;
    edx = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffec & 0xff) * 4);
    edx = edx ^ *(eax + (Vffffffec >> 0x10 & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffec >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ecx = edi;
    esi = edi >> 8 & 0xff;
    ebp = edi >> 0x18;
    ecx = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + esi * 4 + 0x800);
    ecx = ecx ^ *(eax + (edi >> 0x10 & 0xff) * 4 + 0xc00) ^ *(eax + ebp * 4);
    edx = edx + ecx;
    ebp = Vffffffe4;
    esi = edx;
    edx = edx + *(eax + 0x1050);
    esi = esi + *(eax + 0x1054);
    Vffffffe4 = Vffffffe4 << 1;
    eax = *esp;
    ecx = ecx + esi;
    ebx = ebx ^ edx;
    edx = ebx;
    ebx = ebx >> 1;
    edx = (edx << 0x1f) + ebx;
    ebx = edx;
    ebp = (ebp >> 0x1f) + Vffffffe4 ^ ecx;
    ecx = dl & 0xff;
    ebx = ebx >> 8;
    esi = *(eax + (bl & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4);
    eax = *esp;
    ecx = edx >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    esi = esi ^ *(eax + (edx >> 0x18) * 4 + 0xc00);
    Vffffffe0 = ebp;
    Vffffffe0 = Vffffffe0 >> 0x18;
    eax = *esp;
    ebx = ebp;
    ecx = ebp >> 8;
    ecx = cl & 0xff;
    ebx = *(eax + (bl & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4 + 0x800);
    eax = *esp;
    ecx = ebp >> 0x10;
    ebx = ebx ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    ebx = ebx ^ *(eax + Vffffffe0 * 4);
    esi = esi + ebx;
    ecx = esi + *(eax + 0x105c);
    Vffffffec = Vffffffec ^ esi + *(eax + 0x1058);
    ebx = ebx + ecx;
    Vffffffe8 = Vffffffec;
    Vffffffe8 = Vffffffe8 << 0x1f;
    Vffffffec = Vffffffec >> 1;
    Vffffffe8 = Vffffffe8 + Vffffffec;
    Vffffffec = edi;
    Vffffffec = Vffffffec >> 0x1f;
    Vffffffec = Vffffffec + edi + edi;
    Vffffffec = Vffffffec ^ ebx;
    eax = *esp;
    ebx = *(eax + (Vffffffe8 >> 8 & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe8 & 0xff) * 4);
    ebx = ebx ^ *(eax + (Vffffffe8 >> 0x10 & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe8 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ecx = *(eax + (Vffffffec & 0xff) * 4 + 0x400);
    ecx = ecx ^ *(eax + (Vffffffec >> 8 & 0xff) * 4 + 0x800);
    ecx = ecx ^ *(eax + (Vffffffec >> 0x10 & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffec >> 0x18) * 4);
    ebx = ebx + ecx;
    edi = ebx;
    ebx = ebx + *(eax + 0x1060);
    edi = edi + *(eax + 0x1064);
    eax = *esp;
    ecx = ecx + edi;
    edx = edx ^ ebx;
    ebx = edx;
    edx = edx >> 1;
    ebx = (ebx << 0x1f) + edx;
    edx = ebp;
    ebp = ebp + ebp;
    edx = (edx >> 0x1f) + ebp ^ ecx;
    ecx = bl & 0xff;
    edi = *(eax + (ebx >> 8 & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4);
    edi = edi ^ *(eax + (ebx >> 0x10 & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (ebx >> 0x18) * 4 + 0xc00);
    eax = *esp;
    esi = edx;
    ecx = *(eax + (dl & 0xff) * 4 + 0x400);
    ecx = ecx ^ *(eax + (esi >> 8 & 0xff) * 4 + 0x800);
    ecx = ecx ^ *(eax + (edx >> 0x10 & 0xff) * 4 + 0xc00);
    ecx = ecx ^ *(eax + (edx >> 0x18) * 4);
    edi = edi + ecx;
    esi = edi + *(eax + 0x106c);
    Vffffffe8 = Vffffffe8 ^ edi + *(eax + 0x1068);
    edi = Vffffffe8;
    Vffffffe8 = Vffffffe8 >> 1;
    ecx = ecx + esi;
    edi = (edi << 0x1f) + Vffffffe8;
    Vffffffe8 = Vffffffec;
    Vffffffe8 = Vffffffe8 >> 0x1f;
    Vffffffec = Vffffffec << 1;
    Vffffffe8 = Vffffffe8 + Vffffffec;
    Vffffffe8 = Vffffffe8 ^ ecx;
    eax = *esp;
    ebp = edi;
    ecx = edi;
    esi = *(eax + (ebp >> 8 & 0xff) * 4 + 0x400);
    esi = esi ^ *(eax + (cl & 0xff) * 4);
    eax = *esp;
    ecx = edi >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    esi = esi ^ *(eax + (edi >> 0x18) * 4 + 0xc00);
    eax = Vffffffe8;
    Vffffffec = eax;
    Vffffffec = Vffffffec >> 0x18;
    ecx = eax;
    eax = *esp;
    ebp = *(eax + (Vffffffe8 & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffe8 >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    ebp = ebp ^ *(eax + Vffffffec * 4);
    esi = esi + ebp;
    ecx = esi;
    esi = esi + *(eax + 0x1070);
    ecx = ecx + *(eax + 0x1074);
    ebx = ebx ^ esi;
    ebp = ebp + ecx;
    Vffffffe4 = ebx;
    Vffffffe4 = Vffffffe4 << 0x1f;
    Vffffffe4 = Vffffffe4 + (ebx >> 1);
    eax = *esp;
    esi = edx;
    edx = edx + edx;
    esi = (esi >> 0x1f) + edx ^ ebp;
    edx = Vffffffe4 >> 8;
    ebx = *(eax + (dl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe4 & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffe4 >> 0x10;
    ebx = ebx ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe4 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ebp = esi;
    ecx = esi;
    ebp = *(eax + (ebp & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = esi >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    ebp = ebp ^ *(eax + (esi >> 0x18) * 4);
    ebx = ebx + ebp;
    ecx = ebx;
    ebx = ebx + *(eax + 0x1078);
    ecx = ecx + *(eax + 0x107c);
    edi = edi ^ ebx;
    ebp = ebp + ecx;
    Vffffffe0 = edi;
    Vffffffe0 = Vffffffe0 << 0x1f;
    Vffffffe0 = Vffffffe0 + (edi >> 1);
    ebx = Vffffffe8;
    Vffffffe8 = Vffffffe8 << 1;
    eax = *esp;
    ebx = (ebx >> 0x1f) + Vffffffe8 ^ ebp;
    ecx = Vffffffe0 >> 8;
    ebp = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe0 & 0xff) * 4);
    eax = *esp;
    edx = Vffffffe0 >> 0x10;
    ebp = ebp ^ *(eax + (dl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe0 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edi = ebx;
    edx = ebx;
    edi = *(eax + (edi & 0xff) * 4 + 0x400);
    edx = edx >> 8;
    edi = edi ^ *(eax + (dl & 0xff) * 4 + 0x800);
    eax = *esp;
    edx = ebx >> 0x10;
    edi = edi ^ *(eax + (dl & 0xff) * 4 + 0xc00);
    edi = edi ^ *(eax + (ebx >> 0x18) * 4);
    ebp = ebp + edi;
    edx = ebp + *(eax + 0x1084);
    Vffffffe4 = Vffffffe4 ^ ebp + *(eax + 0x1080);
    edi = edi + edx;
    Vffffffec = Vffffffe4;
    Vffffffec = Vffffffec << 0x1f;
    Vffffffe4 = Vffffffe4 >> 1;
    Vffffffec = Vffffffec + Vffffffe4;
    eax = *esp;
    ebp = esi;
    esi = esi + esi;
    ebp = (ebp >> 0x1f) + esi ^ edi;
    edx = Vffffffec >> 8;
    esi = *(eax + (dl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffec & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffec >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffec >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edx = ebp;
    ecx = ebp >> 8;
    ecx = cl & 0xff;
    edi = ebp >> 0x18;
    edx = *(eax + (dl & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4 + 0x800);
    eax = *esp;
    ecx = ebp >> 0x10;
    edx = edx ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + edi * 4);
    esi = esi + edx;
    ecx = esi + *(eax + 0x108c);
    Vffffffe0 = Vffffffe0 ^ esi + *(eax + 0x1088);
    edx = edx + ecx;
    Vffffffe4 = Vffffffe0;
    Vffffffe4 = Vffffffe4 << 0x1f;
    Vffffffe0 = Vffffffe0 >> 1;
    Vffffffe4 = Vffffffe4 + Vffffffe0;
    eax = *esp;
    esi = ebx;
    ebx = ebx + ebx;
    esi = (esi >> 0x1f) + ebx ^ edx;
    ecx = Vffffffe4 >> 8;
    ebx = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe4 & 0xff) * 4);
    ebx = ebx ^ *(eax + (Vffffffe4 >> 0x10 & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe4 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ecx = esi;
    edi = esi >> 8 & 0xff;
    edx = esi >> 0x18;
    ecx = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + edi * 4 + 0x800);
    ecx = ecx ^ *(eax + (esi >> 0x10 & 0xff) * 4 + 0xc00) ^ *(eax + edx * 4);
    ebx = ebx + ecx;
    edi = ebx + *(eax + 0x1094);
    Vffffffec = Vffffffec ^ ebx + *(eax + 0x1090);
    ebx = Vffffffec;
    Vffffffec = Vffffffec >> 1;
    eax = *esp;
    ecx = ecx + edi;
    ebx = (ebx << 0x1f) + Vffffffec;
    edx = ebp;
    ebp = ebp + ebp;
    edx = (edx >> 0x1f) + ebp ^ ecx;
    ecx = bl & 0xff;
    edi = *(eax + (ebx >> 8 & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4);
    eax = *esp;
    ecx = ebx >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (ebx >> 0x18) * 4 + 0xc00);
    Vffffffec = edx;
    Vffffffec = Vffffffec >> 0x18;
    eax = *esp;
    ebp = edx;
    ecx = edx;
    ebp = *(eax + (ebp & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = edx >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    ebp = ebp ^ *(eax + Vffffffec * 4);
    edi = edi + ebp;
    ecx = edi + *(eax + 0x109c);
    Vffffffe4 = Vffffffe4 ^ edi + *(eax + 0x1098);
    ebp = ebp + ecx;
    Vffffffec = Vffffffe4;
    Vffffffec = Vffffffec << 0x1f;
    Vffffffe4 = Vffffffe4 >> 1;
    Vffffffec = Vffffffec + Vffffffe4;
    Vffffffe8 = esi;
    Vffffffe8 = Vffffffe8 >> 0x1f;
    Vffffffe8 = Vffffffe8 + esi + esi;
    Vffffffe8 = Vffffffe8 ^ ebp;
    ebx = ebx ^ *( *esp + 0x1010);
    *Vffffffdc = bl;
    ecx = ebx >> 8;
    *(Vffffffdc + 1) = cl;
    ecx = ebx >> 0x10;
    *(Vffffffdc + 2) = cl;
    ebx = ebx >> 0x18;
    *(Vffffffdc + 3) = bl;
    edx = edx ^ *( *esp + 0x1014);
    *(Vffffffdc + 4) = dl;
    ebx = edx >> 8;
    *(Vffffffdc + 5) = bl;
    *(Vffffffdc + 6) = edx >> 0x10;
    *(Vffffffdc + 7) = edx >> 0x18;
    Vffffffec = Vffffffec ^ *( *esp + 0x1018);
    cl = Vffffffec;
    *(Vffffffdc + 8) = cl;
    ebx = Vffffffec >> 8;
    *(Vffffffdc + 9) = bl;
    *(Vffffffdc + 0xa) = Vffffffec >> 0x10;
    Vffffffec = Vffffffec >> 0x18;
    *(Vffffffdc + 0xb) = Vffffffec;
    Vffffffe8 = Vffffffe8 ^ *( *esp + 0x101c);
    cl = Vffffffe8;
    *(Vffffffdc + 0xc) = cl;
    *(Vffffffdc + 0xd) = Vffffffe8 >> 8;
    *(Vffffffdc + 0xe) = Vffffffe8 >> 0x10;
    Vffffffe8 = Vffffffe8 >> 0x18;
    eax = Vffffffdc;
    *(eax + 0xf) = Vffffffe8;
    esp = esp + 0x18;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00441398 - 0x0044139F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00441398()
{



}

/*	Procedure: 0x004413A0 - 0x0044206A
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004308F0()
 */

L004413A0(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    (save)ebx;
    (save)esi;
    esi = A8;
    (save)edi;
    (save)ebp;
    esp = esp - 0x1c;
    *esp = A4;
    Vffffffd8 = Ac;
    Vffffffec = ( *(esi + 2) & 0xff) << 0x10;
    eax = *esi & 0xff;
    Vffffffec = Vffffffec ^ ( *(esi + 1) & 0xff) << 8 ^ eax;
    Vffffffec = Vffffffec ^ ( *(esi + 3) & 0xff) << 0x18;
    Vffffffec = Vffffffec ^ *( *esp + 0x1010);
    Vffffffe8 = ( *(esi + 6) & 0xff) << 0x10;
    edx = *(esi + 4) & 0xff;
    Vffffffe8 = Vffffffe8 ^ ( *(esi + 5) & 0xff) << 8 ^ edx;
    Vffffffe8 = Vffffffe8 ^ ( *(esi + 7) & 0xff) << 0x18;
    Vffffffe8 = Vffffffe8 ^ *( *esp + 0x1014);
    edx = *(esi + 8) & 0xff;
    ebx = *(esi + 9) & 0xff;
    ecx = *(esi + 0xa) & 0xff;
    eax = *(esi + 0xb) & 0xff;
    eax = eax << 0x18;
    ebx = ebx << 8 ^ edx;
    edx = *(esi + 0xd) & 0xff;
    ecx = ecx << 0x10 ^ ebx;
    ebx = *(esi + 0xe) & 0xff;
    ecx = ecx ^ eax;
    ecx = ecx ^ *( *esp + 0x1018);
    eax = *(esi + 0xc) & 0xff;
    edx = edx << 8 ^ eax;
    eax = ( *(esi + 0xf) & 0xff) << 0x18;
    ebx = ebx << 0x10 ^ edx;
    ebx = ebx ^ eax;
    ebx = ebx ^ *( *esp + 0x101c);
    eax = *esp;
    esi = *(eax + (Vffffffec >> 8 & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffec & 0xff) * 4);
    esi = esi ^ *(eax + (Vffffffec >> 0x10 & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffec >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edx = *(eax + (Vffffffe8 & 0xff) * 4 + 0x400);
    edx = edx ^ *(eax + (Vffffffe8 >> 8 & 0xff) * 4 + 0x800);
    edx = edx ^ *(eax + (Vffffffe8 >> 0x10 & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffe8 >> 0x18) * 4);
    esi = esi + edx;
    ebx = ebx ^ edx + esi + *(eax + 0x109c);
    Vffffffe4 = ebx;
    Vffffffe4 = Vffffffe4 << 0x1f;
    Vffffffe4 = Vffffffe4 + (ebx >> 1);
    esi = esi + *(eax + 0x1098);
    edx = ecx;
    ecx = ecx + ecx;
    edx = (edx >> 0x1f) + ecx ^ esi;
    ebp = edx;
    esi = edx & 0xff;
    edi = *(eax + (ebp >> 8 & 0xff) * 4 + 0x400) ^ *(eax + esi * 4);
    eax = *esp;
    ebx = edx >> 0x10;
    edi = edi ^ *(eax + (bl & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (edx >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ecx = *(eax + (Vffffffe4 & 0xff) * 4 + 0x400);
    ecx = ecx ^ *(eax + (Vffffffe4 >> 8 & 0xff) * 4 + 0x800);
    ecx = ecx ^ *(eax + (Vffffffe4 >> 0x10 & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffe4 >> 0x18) * 4);
    edi = edi + ecx;
    Vffffffe8 = Vffffffe8 ^ ecx + edi + *(eax + 0x1094);
    ebx = Vffffffe8;
    Vffffffe8 = Vffffffe8 >> 1;
    ebp = Vffffffec;
    ebx = (ebx << 0x1f) + Vffffffe8;
    Vffffffec = Vffffffec << 1;
    edi = edi + *(eax + 0x1090);
    eax = *esp;
    ebp = (ebp >> 0x1f) + Vffffffec ^ edi;
    esi = ebp;
    ecx = ebp;
    edi = *(eax + (esi >> 8 & 0xff) * 4 + 0x400);
    edi = edi ^ *(eax + (cl & 0xff) * 4);
    eax = *esp;
    ecx = ebp >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (ebp >> 0x18) * 4 + 0xc00);
    Vffffffe0 = ebx;
    Vffffffe0 = Vffffffe0 >> 0x18;
    eax = *esp;
    esi = ebx;
    ecx = ebx;
    esi = *(eax + (esi & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = ebx >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    esi = esi ^ *(eax + Vffffffe0 * 4);
    edi = edi + esi;
    Vffffffe4 = Vffffffe4 ^ esi + edi + *(eax + 0x108c);
    Vffffffec = Vffffffe4;
    Vffffffec = Vffffffec << 0x1f;
    Vffffffe4 = Vffffffe4 >> 1;
    Vffffffec = Vffffffec + Vffffffe4;
    Vffffffe0 = edx;
    Vffffffe0 = Vffffffe0 >> 0x1f;
    Vffffffe0 = Vffffffe0 + edx + edx;
    Vffffffe0 = Vffffffe0 ^ edi + *( *esp + 0x1088);
    eax = *esp;
    edx = Vffffffe0 >> 8;
    esi = *(eax + (dl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe0 & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffe0 >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe0 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edi = *(eax + (Vffffffec & 0xff) * 4 + 0x400);
    ecx = Vffffffec >> 8;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffec >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffec >> 0x18) * 4);
    esi = esi + edi;
    edi = edi + esi + *(eax + 0x1084);
    esi = esi + *(eax + 0x1080);
    eax = *esp;
    ebx = ebx ^ edi;
    edx = ebp;
    ebp = ebp + ebp;
    edx = (edx >> 0x1f) + ebp ^ esi;
    edi = ebx;
    ebx = ebx >> 1;
    ecx = edx;
    edi = (edi << 0x1f) + ebx;
    ebp = edx & 0xff;
    ecx = ecx >> 8;
    esi = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + ebp * 4);
    eax = *esp;
    ebx = edx >> 0x10;
    esi = esi ^ *(eax + (bl & 0xff) * 4 + 0x800);
    esi = esi ^ *(eax + (edx >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ebp = edi;
    ebx = edi;
    ebp = *(eax + (ebp & 0xff) * 4 + 0x400);
    ebx = ebx >> 8;
    ebp = ebp ^ *(eax + (bl & 0xff) * 4 + 0x800);
    eax = *esp;
    ebx = edi >> 0x10;
    ebp = ebp ^ *(eax + (bl & 0xff) * 4 + 0xc00);
    ebp = ebp ^ *(eax + (edi >> 0x18) * 4);
    esi = esi + ebp;
    Vffffffec = Vffffffec ^ ebp + esi + *(eax + 0x107c);
    ebp = Vffffffec;
    Vffffffec = Vffffffec >> 1;
    ebp = (ebp << 0x1f) + Vffffffec;
    Vffffffe8 = Vffffffe0;
    Vffffffe8 = Vffffffe8 >> 0x1f;
    Vffffffe0 = Vffffffe0 << 1;
    Vffffffe8 = Vffffffe8 + Vffffffe0;
    Vffffffe8 = Vffffffe8 ^ esi + *( *esp + 0x1078);
    eax = *esp;
    ebx = Vffffffe8 >> 8;
    esi = *(eax + (bl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe8 & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffe8 >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe8 >> 0x18) * 4 + 0xc00);
    Vffffffdc = ebp;
    Vffffffdc = Vffffffdc >> 0x18;
    eax = *esp;
    ebx = ebp;
    ecx = ebp >> 8;
    ecx = cl & 0xff;
    ebx = *(eax + (bl & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4 + 0x800);
    eax = *esp;
    ecx = ebp >> 0x10;
    ebx = ebx ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    ebx = ebx ^ *(eax + Vffffffdc * 4);
    esi = esi + ebx;
    edi = edi ^ ebx + esi + *(eax + 0x1074);
    Vffffffe4 = edi;
    Vffffffe4 = Vffffffe4 << 0x1f;
    Vffffffe4 = Vffffffe4 + (edi >> 1);
    esi = esi + *(eax + 0x1070);
    eax = *esp;
    ebx = edx;
    edx = edx + edx;
    ebx = (ebx >> 0x1f) + edx ^ esi;
    edx = ebx;
    esi = ebx & 0xff;
    edx = edx >> 8;
    edi = *(eax + (dl & 0xff) * 4 + 0x400) ^ *(eax + esi * 4);
    eax = *esp;
    ecx = ebx >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (ebx >> 0x18) * 4 + 0xc00);
    eax = *esp;
    esi = *(eax + (Vffffffe4 & 0xff) * 4 + 0x400);
    ecx = Vffffffe4 >> 8;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffe4 >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffe4 >> 0x18) * 4);
    edx = Vffffffe8;
    edi = edi + esi;
    esi = esi + edi + *(eax + 0x106c);
    Vffffffe8 = Vffffffe8 << 1;
    edi = edi + *(eax + 0x1068);
    eax = *esp;
    ebp = ebp ^ esi;
    edx = (edx >> 0x1f) + Vffffffe8 ^ edi;
    ecx = dl & 0xff;
    esi = ebp;
    ebp = ebp >> 1;
    edi = edx;
    esi = (esi << 0x1f) + ebp;
    ebp = *(eax + (edi >> 8 & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4);
    eax = *esp;
    ecx = edx >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    ebp = ebp ^ *(eax + (edx >> 0x18) * 4 + 0xc00);
    Vffffffdc = esi;
    Vffffffdc = Vffffffdc >> 0x18;
    eax = *esp;
    edi = esi;
    ecx = esi;
    edi = *(eax + (edi & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = esi >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    edi = edi ^ *(eax + Vffffffdc * 4);
    ebp = ebp + edi;
    Vffffffe4 = Vffffffe4 ^ edi + ebp + *(eax + 0x1064);
    Vffffffec = Vffffffe4;
    Vffffffec = Vffffffec << 0x1f;
    Vffffffe4 = Vffffffe4 >> 1;
    Vffffffec = Vffffffec + Vffffffe4;
    Vffffffe8 = ebx;
    Vffffffe8 = Vffffffe8 >> 0x1f;
    Vffffffe8 = Vffffffe8 + ebx + ebx;
    Vffffffe8 = Vffffffe8 ^ ebp + *( *esp + 0x1060);
    eax = *esp;
    ebx = Vffffffe8 >> 8;
    edi = *(eax + (bl & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe8 & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffe8 >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe8 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    ebp = *(eax + (Vffffffec & 0xff) * 4 + 0x400);
    ecx = Vffffffec >> 8;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffec >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffec >> 0x18) * 4);
    edi = edi + ebp;
    ebp = ebp + edi + *(eax + 0x105c);
    edi = edi + *(eax + 0x1058);
    eax = *esp;
    esi = esi ^ ebp;
    ebx = edx;
    edx = edx + edx;
    ebx = (ebx >> 0x1f) + edx ^ edi;
    edx = bl & 0xff;
    ebp = esi;
    esi = esi >> 1;
    ecx = ebx;
    ebp = (ebp << 0x1f) + esi;
    ecx = ecx >> 8;
    edi = *(eax + (cl & 0xff) * 4 + 0x400) ^ *(eax + edx * 4);
    edi = edi ^ *(eax + (ebx >> 0x10 & 0xff) * 4 + 0x800);
    edi = edi ^ *(eax + (ebx >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edx = ebp;
    esi = ebp >> 8 & 0xff;
    ecx = ebp >> 0x18;
    edx = *(eax + (dl & 0xff) * 4 + 0x400) ^ *(eax + esi * 4 + 0x800);
    edx = edx ^ *(eax + (ebp >> 0x10 & 0xff) * 4 + 0xc00) ^ *(eax + ecx * 4);
    edi = edi + edx;
    Vffffffec = Vffffffec ^ edx + edi + *(eax + 0x1054);
    edx = Vffffffec;
    Vffffffec = Vffffffec >> 1;
    edx = (edx << 0x1f) + Vffffffec;
    Vffffffec = Vffffffe8;
    Vffffffec = Vffffffec >> 0x1f;
    Vffffffe8 = Vffffffe8 << 1;
    Vffffffec = Vffffffec + Vffffffe8;
    Vffffffec = Vffffffec ^ edi + *( *esp + 0x1050);
    eax = *esp;
    edi = *(eax + (Vffffffec >> 8 & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffec & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffec >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffec >> 0x18) * 4 + 0xc00);
    Vffffffdc = edx;
    Vffffffdc = Vffffffdc >> 0x18;
    eax = *esp;
    esi = edx;
    ecx = edx;
    esi = *(eax + (esi & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = edx >> 0x10;
    esi = esi ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    esi = esi ^ *(eax + Vffffffdc * 4);
    edi = edi + esi;
    ebp = ebp ^ esi + edi + *(eax + 0x104c);
    Vffffffe8 = ebp;
    Vffffffe8 = Vffffffe8 << 0x1f;
    Vffffffe8 = Vffffffe8 + (ebp >> 1);
    edi = edi + *(eax + 0x1048);
    eax = *esp;
    esi = ebx;
    ebx = ebx + ebx;
    esi = (esi >> 0x1f) + ebx ^ edi;
    ebx = esi;
    ecx = esi;
    ebx = ebx >> 8;
    ebp = *(eax + (bl & 0xff) * 4 + 0x400);
    ebp = ebp ^ *(eax + (cl & 0xff) * 4);
    eax = *esp;
    ecx = esi >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    ebp = ebp ^ *(eax + (esi >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edi = *(eax + (Vffffffe8 & 0xff) * 4 + 0x400);
    ecx = Vffffffe8 >> 8;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffe8 >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffe8 >> 0x18) * 4);
    ebx = Vffffffec;
    ebp = ebp + edi;
    edi = edi + ebp + *(eax + 0x1044);
    Vffffffec = Vffffffec << 1;
    ebp = ebp + *(eax + 0x1040);
    eax = *esp;
    edx = edx ^ edi;
    ebx = (ebx >> 0x1f) + Vffffffec ^ ebp;
    ecx = bl & 0xff;
    edi = edx;
    edx = edx >> 1;
    ebp = ebx;
    edi = (edi << 0x1f) + edx;
    edx = *(eax + (ebp >> 8 & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4);
    eax = *esp;
    ecx = ebx >> 0x10;
    edx = edx ^ *(eax + (cl & 0xff) * 4 + 0x800);
    edx = edx ^ *(eax + (ebx >> 0x18) * 4 + 0xc00);
    Vffffffe4 = edi;
    Vffffffe4 = Vffffffe4 >> 0x18;
    eax = *esp;
    ebp = edi;
    ecx = edi;
    ebp = *(eax + (ebp & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = edi >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    ebp = ebp ^ *(eax + Vffffffe4 * 4);
    edx = edx + ebp;
    Vffffffe8 = Vffffffe8 ^ ebp + edx + *(eax + 0x103c);
    Vffffffe0 = Vffffffe8;
    Vffffffe0 = Vffffffe0 << 0x1f;
    Vffffffe8 = Vffffffe8 >> 1;
    Vffffffe0 = Vffffffe0 + Vffffffe8;
    Vffffffe4 = esi;
    Vffffffe4 = Vffffffe4 >> 0x1f;
    Vffffffe4 = Vffffffe4 + esi + esi;
    Vffffffe4 = Vffffffe4 ^ edx + *( *esp + 0x1038);
    eax = *esp;
    ebp = *(eax + (Vffffffe4 >> 8 & 0xff) * 4 + 0x400) ^ *(eax + (Vffffffe4 & 0xff) * 4);
    eax = *esp;
    ecx = Vffffffe4 >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800) ^ *(eax + (Vffffffe4 >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edx = *(eax + (Vffffffe0 & 0xff) * 4 + 0x400);
    ecx = Vffffffe0 >> 8;
    edx = edx ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffe0 >> 0x10;
    edx = edx ^ *(eax + (cl & 0xff) * 4 + 0xc00) ^ *(eax + (Vffffffe0 >> 0x18) * 4);
    ebp = ebp + edx;
    edx = edx + ebp + *(eax + 0x1034);
    ebp = ebp + *(eax + 0x1030);
    eax = *esp;
    edi = edi ^ edx;
    esi = ebx;
    ebx = ebx + ebx;
    esi = (esi >> 0x1f) + ebx ^ ebp;
    edx = edi;
    edi = edi >> 1;
    ecx = esi;
    edx = (edx << 0x1f) + edi;
    ebx = esi;
    ecx = ecx >> 8;
    ebp = *(eax + (cl & 0xff) * 4 + 0x400);
    ebp = ebp ^ *(eax + (bl & 0xff) * 4);
    ebp = ebp ^ *(eax + (esi >> 0x10 & 0xff) * 4 + 0x800);
    ebp = ebp ^ *(eax + (esi >> 0x18) * 4 + 0xc00);
    eax = *esp;
    edi = edx;
    ebx = *(eax + (dl & 0xff) * 4 + 0x400);
    ebx = ebx ^ *(eax + (edi >> 8 & 0xff) * 4 + 0x800);
    ebx = ebx ^ *(eax + (edx >> 0x10 & 0xff) * 4 + 0xc00);
    ebx = ebx ^ *(eax + (edx >> 0x18) * 4);
    ebp = ebp + ebx;
    Vffffffe0 = Vffffffe0 ^ ebx + ebp + *(eax + 0x102c);
    Vffffffdc = Vffffffe0;
    Vffffffdc = Vffffffdc << 0x1f;
    Vffffffe0 = Vffffffe0 >> 1;
    Vffffffdc = Vffffffdc + Vffffffe0;
    ebx = Vffffffe4;
    Vffffffe4 = Vffffffe4 << 1;
    ebp = ebp + *( *esp + 0x1028);
    eax = *esp;
    ebx = (ebx >> 0x1f) + Vffffffe4 ^ ebp;
    ecx = bl & 0xff;
    ebp = *(eax + (ebx >> 8 & 0xff) * 4 + 0x400) ^ *(eax + ecx * 4);
    eax = *esp;
    ecx = ebx >> 0x10;
    ebp = ebp ^ *(eax + (cl & 0xff) * 4 + 0x800);
    ebp = ebp ^ *(eax + (ebx >> 0x18) * 4 + 0xc00);
    eax = Vffffffdc;
    Vffffffe0 = eax;
    Vffffffe0 = Vffffffe0 >> 0x18;
    ecx = eax;
    eax = *esp;
    edi = *(eax + (Vffffffdc & 0xff) * 4 + 0x400);
    ecx = ecx >> 8;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0x800);
    eax = *esp;
    ecx = Vffffffdc >> 0x10;
    edi = edi ^ *(eax + (cl & 0xff) * 4 + 0xc00);
    edi = edi ^ *(eax + Vffffffe0 * 4);
    ebp = ebp + edi;
    edx = edx ^ edi + ebp + *(eax + 0x1024);
    Vffffffec = edx;
    Vffffffec = Vffffffec << 0x1f;
    Vffffffec = Vffffffec + (edx >> 1);
    ebx = ebx ^ *(eax + 0x1000);
    ebp = ebp + *(eax + 0x1020);
    *Vffffffd8 = bl;
    ecx = ebx >> 8;
    *(Vffffffd8 + 1) = cl;
    *(Vffffffd8 + 2) = ebx >> 0x10;
    ebx = ebx >> 0x18;
    *(Vffffffd8 + 3) = bl;
    Vffffffdc = Vffffffdc ^ *( *esp + 0x1004);
    cl = Vffffffdc;
    *(Vffffffd8 + 4) = cl;
    ebx = Vffffffdc >> 8;
    *(Vffffffd8 + 5) = bl;
    *(Vffffffd8 + 6) = Vffffffdc >> 0x10;
    Vffffffdc = Vffffffdc >> 0x18;
    cl = Vffffffdc;
    *(Vffffffd8 + 7) = cl;
    eax = *esp;
    edx = esi;
    esi = esi + esi;
    edx = (edx >> 0x1f) + esi ^ ebp ^ *(eax + 0x1008);
    *(Vffffffd8 + 8) = dl;
    ebx = edx >> 8;
    *(Vffffffd8 + 9) = bl;
    *(Vffffffd8 + 0xa) = edx >> 0x10;
    *(Vffffffd8 + 0xb) = edx >> 0x18;
    Vffffffec = Vffffffec ^ *( *esp + 0x100c);
    cl = Vffffffec;
    *(Vffffffd8 + 0xc) = cl;
    *(Vffffffd8 + 0xd) = Vffffffec >> 8;
    *(Vffffffd8 + 0xe) = Vffffffec >> 0x10;
    Vffffffec = Vffffffec >> 0x18;
    eax = Vffffffd8;
    *(eax + 0xf) = Vffffffec;
    esp = esp + 0x1c;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0044206B - 0x0044206F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044206B()
{



}

/*	Procedure: 0x00442070 - 0x00442137
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0040CB60()
 *		L0040D600()
 *		L0040D880()
 *		L0040E830()
 *		L00442140()
 */

L00442070(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    esi = Ac;
    esp = esp - 0x80;
    if(esi == 0) {
        *A10 = -291292710;
        *(A10 + 4) = 1857990346;
        *(A10 + 8) = 223046494;
        *(A10 + 0xc) = -1171681606;
        *(A10 + 0x10) = -272673486;
        *(A10 + 0x14) = -994729448;
        *(A10 + 0x18) = -1877450603;
        *(A10 + 0x1c) = 151509167;
        return;
    }
    L0045C890(ebp + -140);
    L0045C8D0(ebp + -140, A8, esi);
    L0045C9A0(ebp + -140, A10);
    *(A10 + 0x14) = *A10;
    *(A10 + 0x18) = *(A10 + 4);
    eax = L00435000(A8, esi, 1);
    esi = eax << 8 & 16711680;
    edx = eax;
    ecx = eax;
    esi = esi | edx >> 0x18;
    esi = esi | ecx >> 8 & 65280;
    eax = eax << 0x18;
    *(A10 + 0x1c) = esi | eax;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00442138 - 0x0044213F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442138()
{



}

/*	Procedure: 0x00442140 - 0x0044216A
 *	Argument size: -28
 *	Local size: 32
 *	Save regs size: 0
 *	Called by:
 *		L0040E700()
 */

L00442140(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  Vffffffe0;



    L00442070(0, 0, & Vffffffe0);
    return L00434380( & Vffffffe0, A8, 0x20);
}

/*	Procedure: 0x0044216B - 0x0044216F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044216B()
{



}

/*	Procedure: 0x00442170 - 0x0044233B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00442340()
 *		L004424B0()
 *		L004425A0()
 *		L00443480()
 *		L00443B70()
 */

L00442170(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    (save)esi;
    (save)edi;
    esp = esp - 0x20;
    *(A8 + 0xc4) = 0;
    ebx = *(A8 + 0xb0);
    if(ebx == 0) {
        ebx = A8 + 0xb8;
        esi = L0042E3A0(0x10);
        L0042E3E0(ebx);
        *(A8 + 0xb8) = esi;
        *(A8 + 0xc0) = 4;
        *(A8 + 0xbc) = 2;
        eax = A8;
        *(eax + 0xc4) = 1;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    ecx = ebx;
    eax = 1374389535;
    asm("mul ecx");
    edx = edx >> 4;
    *(ebp - 0x2c) = edx;
    if(edx < 0x20) {
        *(ebp - 0x2c) = 0x20;
    }
    *(ebp - 0x14) = *(ebp - 0x2c);
    *(ebp - 0x14) = *(ebp - 0x14) << 2;
    edi = L0042E310( *(ebp - 0x14));
    *(ebp - 0x10) = edi;
    *(ebp - 0x20) = edi;
    *edi = 0;
    ecx = *(A8 + 0xac);
    eax = ecx;
    *(ebp - 0x1c) = ecx;
    *(ebp - 0x18) = eax;
    *(ebp - 0x18) = *(ebp - 0x18) + ebx;
    ebx = eax;
    eax = A8;
    edx = *(eax + 0xc) - *(eax + 4);
    esi = 1;
    *(ebp - 0x24) = edx;
    if(edx < 1) {
        *(ebp - 0x24) = 1;
    }
    *(ebp - 0x28) = *(A8 + 0x54);
    if(*(ebp - 0x1c) < *(ebp - 0x18)) {
        do {
            if(esi >= *(ebp - 0x2c)) {
                *(ebp - 0x14) = *(ebp - 0x14) + 0x400;
                *(ebp - 0x2c) = *(ebp - 0x2c) + 0x100;
                edi = L0042E410(edi, *(ebp - 0x14));
                *(ebp - 0x10) = edi;
                *(ebp - 0x20) = edi;
            }
            ebx = ebx + L0044BD30( *(ebp - 0x28), ebx, *(ebp - 0x18) - ebx, *(ebp - 0x24));
            ecx = ebx - *(ebp - 0x1c);
            *( *(ebp - 0x20) + esi * 4) = ecx;
            esi = esi + 1;
        } while(ebx < *(ebp - 0x18));
    }
    if(*(ebp - 0x2c) - esi > 0x20) {
        *(ebp - 0x2c) = esi;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 4;
        *(ebp - 0x2c) = *(ebp - 0x2c) + 3;
        *(ebp - 0x2c) = *(ebp - 0x2c) & -4;
        *(ebp - 0x10) = L0042E410(edi, *(ebp - 0x2c) * 4);
    }
    *(A8 + 0xc4) = esi - 1;
    L0042E3E0(A8 + 0xb8);
    edi = *(ebp - 0x10);
    *(ebp - 0x10) = 0;
    *(A8 + 0xb8) = edi;
    *(A8 + 0xbc) = esi;
    *(A8 + 0xc0) = *(ebp - 0x2c);
    eax = L0042E3E0(ebp - 0x10);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0044233C - 0x0044233F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044233C()
{



}

/*	Procedure: 0x00442340 - 0x00442426
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004206D0()
 */

L00442340(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    esp = esp - 0x1c;
    ebx = Ac;
    if(A8 == 0) {
        L00429610(65538);
    }
    *(ebp - 0x24) = L0042E3A0(0xf4);
    if(!(ebx & 2)) {
        ebx = ebx | 1;
    }
    *( *(ebp - 0x24) + 0xd2) = bl;
    ecx = *(ebp - 0x24) + 4;
    *ecx = *A8;
    *(ecx + 4) = *(A8 + 4);
    *(ecx + 8) = *(A8 + 8);
    *(ecx + 0xc) = *(A8 + 0xc);
    *( *(ebp - 0x24) + 0xcc) = !(ebx & 1) ? 5 : 0x25;
    *( *(ebp - 0x24) + 0xd3) = 0xb;
    *(ebp - 0xc) = esp;
    L0044BE30( *( *(ebp - 0x24) + 0x54));
    *( *(ebp - 0x24) + 0xce) = ax;
    L00442170( *(ebp - 0x24));
    goto L00442414;
    L0042E3E0(ebp - 0x24);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x18) != 0) {
        ecx = *(ebp - 0x20);
        *(ebp - 0x18)(-1);
    }
    esp = *(ebp - 0xc);
L00442414:
    *( *(ebp - 0x24)) = -2085654638;
    return *(ebp - 0x24);
}

/*	Procedure: 0x00442427 - 0x0044242F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442427()
{



}

/*	Procedure: 0x00442430 - 0x004424AE
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004206D0()
 *		L004208E9()
 */

L00442430(A8)
/* unknown */ void  A8;
{



    (save)esi;
    esi = *A8;
    if(esi == 0) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    if(*esi != -2085654638) {
        *A8 = 0;
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    *esi = 0;
    L00423980(esi + 0x88);
    L0044BB30(esi + 0x54);
    L00462100(esi + 0x78);
    L0042E3E0(esi + 0xb8);
    L0042E3E0(esi + 0xac);
    eax = L0042E3E0(A8);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x004424AF - 0x004424AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004424AF()
{



}

/*	Procedure: 0x004424B0 - 0x0044253E
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004205CB()
 */

L004424B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 8;
    ebx = Ac;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    if(ebx == 0) {
        L00429610(65538);
    }
    *(ebp - 0x14) = *(A8 + 4);
    *(ebp - 0x10) = *(A8 + 8);
    ecx = *ebx;
    edx = *(A8 + 0xc) - *(ebp - 0x14);
    *(A8 + 4) = ecx;
    eax = *(ebx + 4);
    *(A8 + 8) = eax;
    edi = *(ebx + 8);
    *(A8 + 0xc) = edi;
    ebx = *(ebx + 0xc);
    *(A8 + 0x10) = ebx;
    if(edx != edi - ecx) {
        *(A8 + 0xcc) = *(A8 + 0xcc) & -4;
        eax = L00442170(A8);
    } else {
        if(*(ebp - 0x14) != ecx) {
            goto L0044252f;
        }
        if(*(ebp - 0x10) != eax) {
L0044252f:
            *(A8 + 0xcc) = *(A8 + 0xcc) & -4;
        }
    }
}

/*	Procedure: 0x0044253F - 0x0044253F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044253F()
{



}

/*	Procedure: 0x00442540 - 0x0044259B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004205CB()
 */

L00442540(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    esi = *(A8 + 0xc4);
    if(esi == 0) {
        esi = 1;
    }
    edx = *(A8 + 0xb0);
    if(edx != 0 && ( *(edx + *(A8 + 0xac) - 1) & 0xff) == 0xa) {
        esi = esi + 1;
    }
    eax = *(A8 + 0xce) & 65535;
    esp = ebp - 8;
    eax = esi * esi;
    (restore)esi;
}

/*	Procedure: 0x0044259C - 0x0044259F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044259C()
{



}

/*	Procedure: 0x004425A0 - 0x00442653
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00442660()
 */

L004425A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = Ac;
    (save)A8;
    (save)esi;
    esp = esp - 0x2c;
    *(ebp - 0x1c) = *(A8 + 0x54);
    esi = *(A8 + 0xce) & 65535;
    *(ebp - 0x20) = esp;
    *(A8 + 0xcc) = *(A8 + 0xcc) & -4;
    *(A8 + 0x54) = ecx;
    L0044BE30( *(A8 + 0x54));
    *(A8 + 0xce) = ax;
    L00442170(A8);
    if(*(A8 + 0x8c) != 0) {
        *(ebp - 0x18) = *(A8 + 4);
        *(ebp - 0x14) = *(A8 + 8);
        *(ebp - 0x10) = *(A8 + 0xc);
        ecx = *(A8 + 0x10);
        *(ebp - 0xc) = ecx;
        *(A8 + 0x8c)( *(A8 + 0x90), ebp - 0x18);
        goto L00442643;
        *(A8 + 0x54) = *(ebp - 0x1c);
        *(A8 + 0xce) = si;
        L004234F0(0, 0, 0);
        if(*(ebp - 0x2c) != 0) {
            (save)-1;
            ecx = *(ebp - 0x34);
            *(ebp - 0x2c)();
        }
        esp = *(ebp - 0x20);
    }
L00442643:
    eax = L0044BB30(ebp - 0x1c);
    esp = ebp - 8;
    (restore)esi;
    (restore)A8;
}

/*	Procedure: 0x00442654 - 0x0044265F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442654()
{



}

/*	Procedure: 0x00442660 - 0x00442702
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 */

L00442660(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    esp = esp - 0x1c;
    ebx = Ac;
    if(A8 == 0 || *A8 != -2085654638) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x54) == ebx) {
        return;
    }
    if(A10 != 0) {
        (save)ebx;
        eax = L0044BC40();
    } else {
        eax = L0044BBF0(ebx);
    }
    *(ebp - 0xc) = eax;
    *(ebp - 0x10) = esp;
    eax = L004425A0(A8, eax);
    goto L004426e3;
    L0044BB30(ebp - 0xc);
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        (save)-1;
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)();
    }
    esp = *(ebp - 0x10);
L004426e3:
    ebx = *(A8 + 0x9c);
    if(ebx != 0) {
        eax = *ebx( *(A8 + 0xa0), 0, 0);
    }
    esp = ebp - 8;
}

/*	Procedure: 0x00442703 - 0x0044270F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442703()
{



}

/*	Procedure: 0x00442710 - 0x00442736
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042102D()
 */

L00442710(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    return *(A8 + 0x54);
}

/*	Procedure: 0x00442737 - 0x0044273F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442737()
{



}

/*	Procedure: 0x00442740 - 0x004427BB
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00442820()
 */

L00442740(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;



    (save)edi;
    esi = A8;
    eax = A10;
    if(!(edx = A18 - 4)) {
        if(edx = edx - 0xc) {
            goto L00442781;
        }
    } else {
        eax = L0044BCD0( *(esi + 0x54), Ac, L00427FE0(Ac, eax));
        esi = *(A14 + 8) - eax;
        goto L004427b2;
L00442781:
        eax = L00427FE0(Ac, eax);
        edi = *(A14 + 8) - *A14;
        eax = L0044BCD0( *(esi + 0x54), Ac, eax);
        esi = (edi - eax >> 1) + *A14;
        goto L004427b2;
    }
    esi = *A14;
L004427b2:
    esp = ebp - 0xc;
    eax = esi;
    (restore)edi;
}

/*	Procedure: 0x004427BC - 0x004427BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004427BC()
{



}

/*	Procedure: 0x004427C0 - 0x0044281D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00442820()
 *		L004435A0()
 *		L004438D0()
 *		L00444A10()
 *		L00445720()
 */

L004427C0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    edx = A4;
    (save)ebx;
    (save)ebp;
    if(A8 >= *(edx + 0xb0)) {
        eax = *(edx + 0xc4);
        eax = eax != 0 ? eax - 1 : 0;
        (restore)ebp;
        (restore)ebx;
        return;
    }
    ebx = *(edx + 0xc4);
    eax = 0;
    ebp = 0;
    edx = *(edx + 0xb8);
    if(ebx > 0) {
        do {
            eax = ebx + ebp >> 1;
            if(A8 < *(edx + eax * 4)) {
                ebx = eax;
            } else {
                if(A8 < *(edx + eax * 4 + 4)) {
                    break;
                }
                ebp = eax + 1;
            }
        } while(ebp < ebx);
    }
    (restore)ebp;
    (restore)ebx;
}

/*	Procedure: 0x0044281E - 0x0044281F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044281E()
{



}

/*	Procedure: 0x00442820 - 0x0044290B
 *	Argument size: 12
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L00442910()
 *		L00442AA0()
 *		L00442B70()
 *		L00445720()
 */

L00442820(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    edi = *(ebx + 0xc4);
    if(edi != 0) {
        edx = *(ebx + 0xb0);
        if(edx != 0) {
            goto L00442860;
        }
    }
    edi = *(ebx + 4);
    *A10 = edi;
    ebx = *(ebx + 8);
    eax = A10;
    *(eax + 4) = ebx;
    return;
L00442860:
    *(ebp - 0x10) = *(ebx + 0xac);
    esi = *(ebx + 0xb8);
    if(Ac < edx) {
        edi = L004427C0(ebx, Ac);
    } else {
        Ac = edx;
        if(( *(edx + *(ebp - 0x10) - 1) & 0xff) != 0xa) {
            edi = edi - 1;
        }
    }
    *(ebp - 0x18) = *(esi + edi * 4);
    *(ebp - 0x14) = *(ebp - 0x10);
    eax = *(ebp - 0x18);
    *(ebp - 0x14) = *(ebp - 0x14) + eax;
    esi = *(esi + edi * 4 + 4) - eax;
    eax = L0044BC80( *(ebx + 0x54));
    *(ebp - 0x10) = eax;
    eax = L0044BCD0( *(ebx + 0x54), *(ebp - 0x14), Ac - *(ebp - 0x18));
    *(ebp - 0x18) = eax;
    *(ebp - 0x18) = *(ebp - 0x18) + L00442740(ebx, *(ebp - 0x14), esi, ebx + 4, *(ebp - 0x10));
    *A10 = *(ebp - 0x18);
    ecx = *(ebx + 0xce) & 65535;
    eax = A10;
    *(eax + 4) = edi * edi + *(ebx + 8);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044290C - 0x0044290F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044290C()
{



}

/*	Procedure: 0x00442910 - 0x00442A9C
 *	Argument size: 4
 *	Local size: 16
 *	Save regs size: 12
 *	Called by:
 *		L00442F70()
 *		L00443030()
 *		L00443120()
 *		L004441C0()
 *		L00445050()
 */

L00442910(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    edi = *(A8 + 0xcc) & 65535;
    if(!(edi & 1)) {
        return;
    }
    *(A8 + 0xcc) = edi | 1;
    edx = *(A8 + 0x58);
    esi = *(A8 + 0x5c);
    if(edx == esi) {
        *(A8 + 0x30) = 0;
        *(A8 + 0x2c) = *(A8 + 0x30);
        *(A8 + 0x28) = *(A8 + 0x2c);
        *(A8 + 0x24) = *(A8 + 0x28);
        *(A8 + 0x40) = 0;
        *(A8 + 0x3c) = *(A8 + 0x40);
        *(A8 + 0x38) = *(A8 + 0x3c);
        *(A8 + 0x34) = *(A8 + 0x38);
        *(A8 + 0x50) = 0;
        edx = *(A8 + 0x50);
        *(A8 + 0x4c) = edx;
        eax = *(A8 + 0x4c);
        *(A8 + 0x48) = eax;
        esi = *(A8 + 0x48);
        *(A8 + 0x44) = esi;
        esp = ebp - 0xc;
        return;
    }
    if(edx > esi) {
        edi = esi;
        esi = edx;
        edx = edi;
    }
    eax = *(A8 + 0xb0);
    if(esi > eax) {
        esi = eax;
    }
    L00442820(A8, edx, ebp - 0x14);
    L00442820(A8, esi, ebp - 0x1c);
    edx = *(ebp - 0x18);
    esi = Vfffffff0;
    esi :: edx;
    if(!(eax = *(A8 + 0xce) & 65535)) {
        edx = edx + eax;
        edi = *(ebp - 0x1c);
        *(A8 + 0x24) = *(ebp - 0x14);
        *(A8 + 0x28) = esi;
        *(A8 + 0x2c) = edi;
        *(A8 + 0x30) = edx;
        *(A8 + 0x40) = 0;
        *(A8 + 0x3c) = *(A8 + 0x40);
        *(A8 + 0x38) = *(A8 + 0x3c);
        *(A8 + 0x34) = *(A8 + 0x38);
        *(A8 + 0x50) = 0;
        *(A8 + 0x4c) = *(A8 + 0x50);
        *(A8 + 0x48) = *(A8 + 0x4c);
        eax = *(A8 + 0x48);
        *(A8 + 0x44) = eax;
    } else {
        edi = *(A8 + 0xc);
        *(A8 + 0x24) = *(ebp - 0x14);
        *(A8 + 0x28) = esi;
        *(A8 + 0x2c) = edi;
        *(A8 + 0x30) = eax + esi;
        ecx = Vfffffff0 + eax;
        edx = *(ebp - 0x18);
        if(ecx < edx) {
            edi = *(A8 + 0xc);
            *(A8 + 0x34) = *(A8 + 4);
            *(A8 + 0x38) = ecx;
            *(A8 + 0x3c) = edi;
            *(A8 + 0x40) = edx;
        } else {
            *(A8 + 0x40) = 0;
            *(A8 + 0x3c) = *(A8 + 0x40);
            *(A8 + 0x38) = *(A8 + 0x3c);
            *(A8 + 0x34) = *(A8 + 0x38);
        }
        ecx = *(ebp - 0x18);
        esi = *(ebp - 0x1c);
        *(A8 + 0x44) = *(A8 + 4);
        *(A8 + 0x48) = ecx;
        *(A8 + 0x4c) = esi;
        *(A8 + 0x50) = ecx + eax;
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00442A9D - 0x00442A9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442A9D()
{



}

/*	Procedure: 0x00442AA0 - 0x00442B65
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00442C60()
 *		L00442F70()
 *		L00443030()
 *		L00443120()
 *		L004441C0()
 *		L00445FA0()
 */

L00442AA0(A8)
/* unknown */ void  A8;
{



    (save)esi;
    eax = *(A8 + 0xcc) & 65535;
    if(!(eax & 2)) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    *(A8 + 0xcc) = eax | 2;
    esi = *(A8 + 0x58);
    if(esi == *(A8 + 0x5c)) {
        edx = *(A8 + 0xb0);
        if(edx != 0) {
            if(esi == edx) {
                if(( *(edx + *(A8 + 0xac) - 1) & 0xff) != 0xa) {
                    goto L00442b08;
                }
                edx = *(A8 + 0xce) & 65535;
                edx = *(A8 + 0xc4) * *(A8 + 0xc4);
                eax = *(A8 + 4);
                edx = edx + *(A8 + 8);
            } else {
L00442b08:
                L00442820(A8, esi, A8 + 0x14);
                eax = *(A8 + 0x14);
                edx = *(A8 + 0x18);
                if(eax > *(A8 + 4)) {
                    eax = eax - 1;
                }
            }
        } else {
            eax = *(A8 + 4);
            edx = *(A8 + 8);
        }
        *(A8 + 0x14) = eax;
        *(A8 + 0x18) = edx;
        *(A8 + 0x1c) = eax + 2;
        eax = ( *(A8 + 0xce) & 65535) + edx;
        *(A8 + 0x20) = eax;
    } else {
        *(A8 + 0x20) = 0;
        *(A8 + 0x1c) = *(A8 + 0x20);
        *(A8 + 0x18) = *(A8 + 0x1c);
        eax = *(A8 + 0x18);
        *(A8 + 0x14) = eax;
    }
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00442B66 - 0x00442B6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442B66()
{



}

/*	Procedure: 0x00442B70 - 0x00442C54
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00442C60()
 */

L00442B70(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = Ac;
    esi = A10;
    esp = esp - 0x10;
    edi = A8;
    if(eax == esi) {
        *(A14 + 0xc) = 0;
        eax = *(A14 + 0xc);
        *(A14 + 8) = eax;
        esi = *(A14 + 8);
        *(A14 + 4) = esi;
        edi = *(A14 + 4);
        *A14 = edi;
        return;
    }
    if(eax > esi) {
        edx = esi;
        esi = eax;
        eax = edx;
    }
    ecx = *(edi + 0xb0);
    if(esi > ecx) {
        esi = ecx;
    }
    L00442820(edi, eax, ebp - 0x14);
    L00442820(edi, esi, ebp - 0x1c);
    esi = *(ebp - 0x10);
    esi :: *(ebp - 0x18);
    if(!(eax = *(edi + 0xce) & 65535)) {
        *A14 = *(ebp - 0x14);
        *(A14 + 4) = *(ebp - 0x10);
        *(A14 + 8) = *(ebp - 0x1c);
        *(A14 + 0xc) = *(ebp - 0x18) + eax;
    } else {
        *(A14 + 8) = *(edi + 0xc);
        *(A14 + 4) = *(ebp - 0x10);
        ecx = *(edi + 4);
        if(*(ebp - 0x1c) == ecx && *(ebp - 0x18) == *(ebp - 0x10) + eax) {
            ecx = *(ebp - 0x14);
        }
        *A14 = ecx;
        esi = *(ebp - 0x1c);
        if(esi == *(edi + 4)) {
            eax = *(ebp - 0x18);
            *(A14 + 0xc) = eax;
        } else {
            *(A14 + 0xc) = *(ebp - 0x18) + eax;
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00442C55 - 0x00442C5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442C55()
{



}

/*	Procedure: 0x00442C60 - 0x00442EE8
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00442EF0()
 *		L004435A0()
 *		L004438D0()
 */

L00442C60(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = Ac;
    esp = esp - 0x2c;
    edi = A8;
    if(esi > A10) {
        edx = esi;
        esi = A10;
        A10 = edx;
    }
    ecx = *(edi + 0xb0);
    *(ebp - 0x20) = ecx;
    if(esi > ecx) {
        esi = ecx;
    }
    if(A10 > *(ebp - 0x20)) {
        A10 = ecx;
    }
    if(esi != *(ebp - 0x20)) {
        esi = L00427CA0( *(edi + 0xac), esi);
    }
    if(A10 != *(ebp - 0x20)) {
        A10 = L00427CA0( *(edi + 0xac), A10);
    }
    eax = *(edi + 0x58);
    *(ebp - 0x24) = eax;
    ecx = *(edi + 0x5c);
    if(esi == eax && A10 == ecx) {
        if(A14 != 0) {
            *(A14 + 0xc) = 0;
            ecx = *(A14 + 0xc);
            *(A14 + 8) = ecx;
            esi = *(A14 + 8);
            *(A14 + 4) = esi;
            edi = *(A14 + 4);
            *A14 = edi;
        }
        return 0;
    }
    *(ebp - 0x20) = *(edi + 0xcc) & 65535;
    if(*(ebp - 0x24) == ecx) {
        *(ebp - 0x35) = 0;
        dl = 0;
    } else {
        dl = 0;
        *(ebp - 0x35) = 1;
    }
    *(edi + 0x58) = esi;
    eax = A10;
    *(edi + 0x5c) = eax;
    *(ebp - 0x20) = *(ebp - 0x20) & -2;
    if(esi == A10) {
        *(ebp - 0x20) = *(ebp - 0x20) & -3;
    }
    *(edi + 0xcc) = *(ebp - 0x20);
    if(A14 != 0) {
        if(esi == A10 || *(ebp - 0x24) == ecx) {
            if(dl != 0) {
                *(ebp - 0x1c) = *(edi + 0x14);
                *(ebp - 0x18) = *(edi + 0x18);
                *(ebp - 0x14) = *(edi + 0x1c);
                *(ebp - 0x10) = *(edi + 0x20);
            } else {
                if(*(ebp - 0x35) != 0) {
                    L00442B70(edi, *(ebp - 0x24), ecx, ebp - 0x1c);
                } else {
                    *(ebp - 0x10) = 0;
                    ecx = *(ebp - 0x10);
                    edx = ecx;
                    *(ebp - 0x14) = ecx;
                    *(ebp - 0x18) = edx;
                    *(ebp - 0x1c) = edx;
                }
            }
            if(esi == A10) {
                if(*(ebp - 0x20) & 8 || !( *(edi + 0xd2) & 0xff & 1)) {
                    *(edi + 0xcc) = *(ebp - 0x20) | 0x20;
                    L00442AA0(edi);
                    *(ebp - 0x34) = *(edi + 0x14);
                    *(ebp - 0x30) = *(edi + 0x18);
                    *(ebp - 0x2c) = *(edi + 0x1c);
                    *(ebp - 0x28) = *(edi + 0x20);
                } else {
                    *(ebp - 0x28) = 0;
                    eax = *(ebp - 0x28);
                    ecx = eax;
                    *(ebp - 0x2c) = eax;
                    *(ebp - 0x30) = ecx;
                    *(ebp - 0x34) = ecx;
                }
            } else {
                L00442B70(edi, esi, A10, ebp - 0x34);
            }
            ecx = ebp - 0x1c;
            eax = ebp - 0x34;
            (save)eax;
            (save)ecx;
            (save)ecx;
        } else {
            if(!( *(ebp - 0x20) & 4)) {
                if(*(ebp - 0x24) > esi) {
                    eax = *(ebp - 0x24);
                    *(ebp - 0x24) = esi;
                    esi = eax;
                }
                if(ecx > A10) {
                    edx = ecx;
                    ecx = A10;
                    A10 = edx;
                }
                if(ecx > esi) {
                    eax = ecx;
                    ecx = esi;
                    esi = eax;
                }
            }
            L00442B70(edi, *(ebp - 0x24), ecx, ebp - 0x1c);
            L00442B70(edi, esi, A10, ebp - 0x34);
            edx = ebp - 0x1c;
            ecx = ebp - 0x34;
            (save)ecx;
            (save)edx;
            (save)edx;
        }
        L0044B770();
        edx = *(edi + 0x10);
        esp = esp + 0xc;
        if(*(ebp - 0x10) > edx) {
            *(ebp - 0x10) = edx;
        }
        *A14 = *(ebp - 0x1c);
        *(A14 + 4) = *(ebp - 0x18);
        *(A14 + 8) = *(ebp - 0x14);
        eax = *(ebp - 0x10);
        *(A14 + 0xc) = eax;
    }
    esi = *(edi + 0xa4);
    if(esi != 0) {
        eax = *esi( *(edi + 0xa8), *(edi + 0x58), *(edi + 0x5c));
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00442EE9 - 0x00442EEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442EE9()
{



}

/*	Procedure: 0x00442EF0 - 0x00442F67
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444BB0()
 *		L00444E38()
 *		L004450B8()
 *		L004452F0()
 *		L00445720()
 *		L00445D90()
 *		L00445E20()
 *		L0044602B()
 */

L00442EF0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    if(*(A8 + 0x8c) == 0) {
        return L00442C60(A8, Ac, A10, 0);
    }
    bl = L00442C60(A8, Ac, A10, ebp - 0x1c);
    if(bl != 0) {
        eax = *(A8 + 0x8c)( *(A8 + 0x90), ebp - 0x1c);
    }
    esp = ebp - 0xc;
    return bl;
}

/*	Procedure: 0x00442F68 - 0x00442F6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00442F68()
{



}

/*	Procedure: 0x00442F70 - 0x00443026
 *	Argument size: 8
 *	Local size: 16
 *	Save regs size: 4
 *	Called by:
 *		L00443030()
 *		L004431B0()
 *		L004450B8()
 *		L00445D10()
 */

L00442F70(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;



    Ac :: 0;
    if(!(edx = *(A8 + 0xcc) & 65535)) {
        if(!(edx & 0x20)) {
            return;
        }
        edx = edx | 0x20;
    } else {
        if(!(edx & 0x20)) {
            esp = ebp - 4;
            return;
        }
        edx = edx & -33;
    }
    *(A8 + 0xcc) = dx;
    if(Ac != 0) {
        eax = *(A8 + 0xd2) & 0xff;
        if(!(eax & 1) && !(edx & 8)) {
            esp = ebp - 4;
            return;
        }
    }
    if(*(A8 + 0x8c) != 0) {
        L00442AA0(A8);
        L00442910(A8);
        *(ebp - 0x14) = *(A8 + 0x14);
        Vfffffff0 = *(A8 + 0x18);
        Vfffffff4 = *(A8 + 0x1c);
        edx = *(A8 + 0x20);
        Vfffffff8 = edx;
        eax = *(A8 + 0x8c)( *(A8 + 0x90), ebp - 0x14);
    }
    esp = ebp - 4;
}

/*	Procedure: 0x00443027 - 0x0044302F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443027()
{



}

/*	Procedure: 0x00443030 - 0x0044311A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00443030(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != -2085654638) {
        eax = L00429610(65561);
    }
    Ac :: 0;
    if(!(edx = *(A8 + 0xcc) & 65535)) {
        if(!(edx & 4)) {
            return 0;
        }
        edx = edx | 4;
    } else {
        if(!(edx & 4)) {
            esp = ebp - 8;
            return 0;
        }
        edx = edx & -5;
    }
    *(A8 + 0xcc) = dx;
    L00442AA0(A8);
    L00442910(A8);
    ecx = *(A8 + 0x58);
    eax = *(A8 + 0x5c);
    if(ecx == eax) {
        dl = 0;
        == ? L004430c0 : ;
        ecx = *(A8 + 0xd2) & 0xff;
        dl = 0;
        eax = L00442F70(A8, dl & 0xff);
        goto L00443110;
    }
    if(*(A8 + 0x8c) != 0) {
        eax = A8 + 0x34;
        edx = A8 + 0x24;
        L0044B770(ebp - 0x18, edx, eax);
        ebx = ebp - 0x18;
        eax = A8 + 0x44;
        L0044B770(ebx, eax, ebx);
        eax = *(A8 + 0x8c)( *(A8 + 0x90), ebp - 0x18);
L00443110:
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x0044311B - 0x0044311F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044311B()
{



}

/*	Procedure: 0x00443120 - 0x004431A4
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00443120(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    L00442910(A8);
    L00442AA0(A8);
    eax = *(A8 + 0x58);
    if(eax == *(A8 + 0x5c)) {
        *Ac = *(A8 + 0x14);
        *(Ac + 4) = *(A8 + 0x18);
        *(Ac + 8) = *(A8 + 0x1c);
        *(Ac + 0xc) = *(A8 + 0x20);
    } else {
        eax = A8 + 0x34;
        L0044B770(Ac, A8 + 0x24, eax);
        L0044B770(Ac, A8 + 0x44, Ac);
    }
    return L0044B850(Ac, A8 + 4);
}

/*	Procedure: 0x004431A5 - 0x004431AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004431A5()
{



}

/*	Procedure: 0x004431B0 - 0x004431F6
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0046279D()
 */

L004431B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2085654638) {
        eax = L00429610(65561);
    }
    if(Ac != 0) {
        *(A8 + 0xd2) = *(A8 + 0xd2) & 0xfc;
    } else {
        *(A8 + 0xd2) = *(A8 + 0xd2) | 1;
        eax = L00442F70(A8, 0);
    }
}

/*	Procedure: 0x004431F7 - 0x004431FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004431F7()
{



}

/*	Procedure: 0x00443200 - 0x00443444
 *	Argument size: 12
 *	Local size: 36
 *	Save regs size: 12
 *	Called by:
 *		L004435A0()
 *		L004438D0()
 */

L00443200(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A8;
    eax = *(ebx + 0xc4);
    Vffffffec = eax;
    if(eax == 0) {
        return;
    }
    *(ebx + 0xb0) :: 0;
    if(!(edi = ebx + 0xb8)) {
        *(ebx + 0xc4) = 1;
        if(*(ebx + 0xc0) < 2) {
            *(edi + 4) = 0;
        } else {
            *(edi + 4) = 2;
            edx = *edi;
            *(edx + 4) = 0;
            edi = *edi;
            ebx = *(edx + 4);
            *edi = ebx;
        }
        esi = *A10;
        eax = Ac;
        if(*eax > esi) {
            *eax = esi;
        }
        esp = ebp - 0xc;
        return;
    }
    esi = Vffffffec;
    edx = *A10 + 1;
    if(edx >= esi) {
        edx = esi;
    }
    *(ebp - 0x2c) = *( *edi + edx * 4);
    eax = *Ac;
    if(eax != 0) {
        esi = Vffffffec - 1;
        *(ebp - 0x30) = eax;
        *(ebp - 0x30) = *(ebp - 0x30) - 1;
        if(*(ebp - 0x30) >= esi) {
            *(ebp - 0x30) = esi;
        }
    } else {
        *(ebp - 0x30) = 0;
    }
    if(*(ebp - 0x30) >= *(edi + 4)) {
        L00429610(65546);
    }
    eax = *(ebp - 0x30);
    ecx = *( *edi + eax * 4);
    Vfffffff0 = ecx;
    Vffffffdc = *(ebx + 0xc);
    Vffffffdc = Vffffffdc - *(ebx + 4);
    Vffffffe4 = *(ebx + 0xb0);
    Vffffffec = *(ebx + 0xac);
    *(ebp - 0x28) = *(ebx + 0x54);
    if(Vfffffff0 < Vffffffe4) {
        Vffffffe8 = *(ebp - 0x30);
        Vffffffe8 = Vffffffe8 << 2;
        do {
            eax = L0044BD30( *(ebp - 0x28), Vffffffec + Vfffffff0, Vffffffe4 - Vfffffff0, Vffffffdc);
            if(eax == 0) {
                eax = 1;
            }
            Vffffffe8 = Vffffffe8 + 4;
            *(ebp - 0x30) = *(ebp - 0x30) + 1;
            Vfffffff0 = Vfffffff0 + eax;
            if(*(ebp - 0x30) <= *(ebx + 0xc4)) {
                if(*(ebp - 0x30) >= *(edi + 4)) {
                    L00429610(65546);
                }
                esi = *edi + Vffffffe8;
                eax = *esi;
                Vffffffe0 = eax;
                if(Vfffffff0 < Vffffffe0) {
                    goto L0044337d;
                }
                *esi = Vfffffff0;
                do {
                    if(*(ebp - 0x30) + 1 >= *(edi + 4)) {
                        L00429610(65546);
                    }
                    if(Vfffffff0 < *(esi + 4)) {
                        break;
                    }
                    L00429C40(edi, *(ebp - 0x30) + 1);
                    *(ebx + 0xc4) = *(ebx + 0xc4) - 1;
                } while(*(ebp - 0x30) < *(ebx + 0xc4));
                if(Vfffffff0 == Vffffffe0) {
                    goto L004433ef;
                }
                if(*(ebp - 0x30) != 0) {
                    eax = Ac;
                    if(*(ebp - 0x30) == *eax) {
                        *eax = *(ebp - 0x30) - 1;
                        continue;
L004433ef:
                        if(Vfffffff0 >= *(ebp - 0x2c)) {
                            break;
                        }
                    }
                }
            } else {
L0044337d:
                L00429A90(edi, *(ebp - 0x30), Vfffffff0);
                *(ebx + 0xc4) = *(ebx + 0xc4) + 1;
            }
        } while(Vfffffff0 < Vffffffe4);
    }
    edx = *(ebp - 0x30) != 0 ? *(ebp - 0x30) - 1 : 0;
    *A10 = edx;
    esi = *A10;
    eax = Ac;
    if(*eax > esi) {
        *eax = esi;
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00443445 - 0x0044344F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443445()
{



}

/*	Procedure: 0x00443450 - 0x0044347A
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00443480()
 */

L00443450(A4)
/* unknown */ void  A4;
{



    ecx = *(A4 + 0xb0);
    if(*(A4 + 0x58) > ecx) {
        *(A4 + 0x58) = ecx;
        *(A4 + 0xcc) = *(A4 + 0xcc) & -4;
    }
    if(*(A4 + 0x5c) > ecx) {
        *(A4 + 0x5c) = ecx;
        *(A4 + 0xcc) = *(A4 + 0xcc) & -4;
    }
}

/*	Procedure: 0x0044347B - 0x0044347F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044347B()
{



}

/*	Procedure: 0x00443480 - 0x00443548
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00415380()
 *		L00443CD0()
 *		L0044602B()
 */

L00443480(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    esp = esp - 0x10;
    esi = A10;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    if(Ac == 0 || esi == 0) {
        return L00443B70(A8);
    }
    L00429790(A8 + 0xac, Ac, esi);
    *(A8 + 0xcc) = *(A8 + 0xcc) & 65535 & -4 | 0x100;
    L00443450(A8);
    eax = L00442170(A8);
    if(*(A8 + 0x8c) != 0) {
        *(ebp - 0x1c) = *(A8 + 4);
        *(ebp - 0x18) = *(A8 + 8);
        *(ebp - 0x14) = *(A8 + 0xc);
        edx = *(A8 + 0x10);
        *(ebp - 0x10) = edx;
        eax = *(A8 + 0x8c)( *(A8 + 0x90), ebp - 0x1c);
    }
    esi = *(A8 + 0x9c);
    if(esi != 0) {
        eax = *esi( *(A8 + 0xa0), 0, 0);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00443549 - 0x0044354F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443549()
{



}

/*	Procedure: 0x00443550 - 0x00443598
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0040CFF0()
 *		L004154F0()
 *		L00464908()
 */

L00443550(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = A10;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    ecx = *(A8 + 0xb0);
    if(ebx > ecx) {
        ebx = ecx;
    }
    L004342A0(Ac, *(A8 + 0xac), ebx);
    esp = ebp - 8;
    return ebx;
}

/*	Procedure: 0x00443599 - 0x0044359F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443599()
{



}

/*	Procedure: 0x004435A0 - 0x0044380E
 *	Argument size: 20
 *	Local size: 48
 *	Save regs size: 12
 *	Called by:
 *		L00443810()
 *		L00445E20()
 */

L004435A0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A14;
    if(A8 != 0) {
        eax = A8;
        if(*eax == -2085654638) {
            goto L004435c8;
        }
    }
    eax = L00429610(65561);
L004435c8:
    if(ebx == 0) {
        return 0;
    }
    if(*(A8 + 0xc4) == 0) {
        L00429610(65539);
    }
    esi = ebx;
    eax = 1374389535;
    asm("mul esi");
    edx = edx >> 4;
    if(edx < 2) {
        edx = 2;
    }
    if(edx > 0x800) {
        edx = 0x800;
    }
    (save)edx;
    L00429A50(A8 + 0xb8);
    eax = *(A8 + 0xb0);
    (restore)ecx;
    if(Ac > eax) {
        Ac = eax;
    }
    L004297E0(A8 + 0xac, Ac, A10, ebx);
    *(A8 + 0xcc) = *(A8 + 0xcc) | 0x100;
    edi = L004427C0(A8, Ac) + 1;
    eax = A8;
    ecx = *(eax + 0xc4);
    Vfffffff0 = ecx;
    esi = *(eax + 0xb8);
    if(edi <= Vfffffff0) {
        eax = L004427C0(eax, Ac) + 1;
        ecx = Vfffffff0 - eax + 1;
        edx = Vfffffff0 - 8;
        if(ecx > 8) {
            do {
                *(esi + edi * 4) = *(esi + edi * 4) + ebx;
                *(esi + edi * 4 + 4) = *(esi + edi * 4 + 4) + ebx;
                *(esi + edi * 4 + 8) = *(esi + edi * 4 + 8) + ebx;
                *(esi + edi * 4 + 0xc) = *(esi + edi * 4 + 0xc) + ebx;
                *(esi + edi * 4 + 0x10) = *(esi + edi * 4 + 0x10) + ebx;
                *(esi + edi * 4 + 0x14) = *(esi + edi * 4 + 0x14) + ebx;
                *(esi + edi * 4 + 0x18) = *(esi + edi * 4 + 0x18) + ebx;
                *(esi + edi * 4 + 0x1c) = *(esi + edi * 4 + 0x1c) + ebx;
                edi = edi + 8;
            } while(edi <= edx);
        }
        do {
            *(esi + edi * 4) = *(esi + edi * 4) + ebx;
            edi = edi + 1;
        } while(edi <= Vfffffff0);
    }
    Vffffffe4 = L004427C0(A8, Ac);
    Vffffffe8 = Ac;
    Vffffffe8 = Vffffffe8 + ebx;
    Vffffffec = L004427C0(A8, Vffffffe8);
    L00443200(A8, & Vffffffe4, & Vffffffec);
    esi = *(A8 + 0xc4);
    if(Vfffffff0 == esi) {
        Vffffffec = Vffffffec + 1;
    } else {
        if(Vfffffff0 <= esi) {
            Vfffffff0 = esi;
        }
        Vffffffec = Vfffffff0;
    }
    eax = A8;
    *(ebp - 0x3c) = *(eax + 4);
    *(ebp - 0x34) = *(eax + 0xc);
    ebx = *(eax + 0xce) & 65535;
    eax = A8;
    *(ebp - 0x38) = Vffffffe4 * Vffffffe4 + *(eax + 8);
    edi = *(eax + 0xce) & 65535;
    eax = A8;
    Vffffffd0 = Vffffffec * Vffffffec + *(eax + 8);
    if(Ac <= *(eax + 0x5c)) {
        *(eax + 0xcc) = *(eax + 0xcc) & -4;
    }
    if(A18 != 0) {
        L00442C60(A8, Vffffffe8, Vffffffe8, & Vffffffd4);
        if(al != 0) {
            ecx = ebp - 0x3c;
            L0044B770(ecx, ecx, & Vffffffd4);
        }
    }
    ebx = *(A8 + 0x8c);
    if(ebx != 0) {
        edi = *(ebp - 0x34);
        if(edi > *(ebp - 0x3c) && Vffffffd0 > *(ebp - 0x38)) {
            *ebx( *(A8 + 0x90), ebp - 0x3c);
        }
    }
    eax = A8;
    esi = *(eax + 0x9c);
    if(esi != 0) {
        eax = *esi( *(eax + 0xa0), 0, 0);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0044380F - 0x0044380F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044380F()
{



}

/*	Procedure: 0x00443810 - 0x004438C9
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444708()
 *		L0044489B()
 */

L00443810(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x18;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    edi = *(A8 + 0x9c);
    *(A8 + 0x9c) = 0;
    *(ebp - 0x10) = esp;
    L004438D0(A8, Ac, A10, 0);
    bl = al;
    L004435A0(A8, Ac, A14, A18, A1c & 0xff);
    edx = bl & 0xff;
    eax = al & 0xff;
    bl = 0;
    goto L004438a3;
    *(A8 + 0x9c) = edi;
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        (save)-1;
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)();
    }
    esp = *(ebp - 0x10);
L004438a3:
    *(A8 + 0x9c) = edi;
    if(bl != 0 && edi != 0) {
        eax = *edi( *(A8 + 0xa0), 0, 0);
    }
    esp = ebp - 0xc;
    return bl;
}

/*	Procedure: 0x004438CA - 0x004438CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004438CA()
{



}

/*	Procedure: 0x004438D0 - 0x00443B6A
 *	Argument size: 16
 *	Local size: 48
 *	Save regs size: 12
 *	Called by:
 *		L00443810()
 *		L004445B8()
 *		L004455F0()
 */

L004438D0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A10;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    eax = A8;
    edx = *(eax + 0xb0);
    if(edx == 0 || Ac > edx) {
        return 0;
    }
    esi = Ac + ebx;
    if(esi > edx || esi < Ac) {
        ebx = edx - Ac;
    }
    if(ebx == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    if(*(A8 + 0xc4) == 0) {
        L00429610(65539);
    }
    edi = L004427C0(A8, Ac) + 1;
    eax = L004427C0(A8, Ac + ebx) + 1 - edi;
    esi = eax;
    L00429CD0(A8 + 0xb8, edi, esi);
    ecx = *(A8 + 0xc4);
    Vffffffec = ecx;
    Vfffffff0 = ecx;
    Vfffffff0 = Vfffffff0 - esi;
    *(A8 + 0xc4) = Vfffffff0;
    eax = A8;
    esi = *(eax + 0xb8);
    if(edi <= Vfffffff0) {
        eax = L004427C0(eax, Ac) + 1;
        edx = Vfffffff0 - eax + 1;
        ecx = Vfffffff0 - 8;
        if(edx > 8) {
            do {
                *(esi + edi * 4) = *(esi + edi * 4) - ebx;
                *(esi + edi * 4 + 4) = *(esi + edi * 4 + 4) - ebx;
                *(esi + edi * 4 + 8) = *(esi + edi * 4 + 8) - ebx;
                *(esi + edi * 4 + 0xc) = *(esi + edi * 4 + 0xc) - ebx;
                *(esi + edi * 4 + 0x10) = *(esi + edi * 4 + 0x10) - ebx;
                *(esi + edi * 4 + 0x14) = *(esi + edi * 4 + 0x14) - ebx;
                *(esi + edi * 4 + 0x18) = *(esi + edi * 4 + 0x18) - ebx;
                *(esi + edi * 4 + 0x1c) = *(esi + edi * 4 + 0x1c) - ebx;
                edi = edi + 8;
            } while(edi <= ecx);
        }
        do {
            *(esi + edi * 4) = *(esi + edi * 4) - ebx;
            edi = edi + 1;
        } while(edi <= Vfffffff0);
    }
    L004298D0(A8 + 0xac, Ac, ebx);
    *(A8 + 0xcc) = *(A8 + 0xcc) | 0x100;
    eax = L004427C0(A8, Ac);
    ecx = eax;
    Vffffffe4 = eax;
    Vffffffe8 = ecx;
    L00443200(A8, & Vffffffe4, & Vffffffe8);
    esi = *(A8 + 0xc4);
    if(Vffffffec == esi) {
        Vffffffe8 = Vffffffe8 + 1;
    } else {
        if(Vffffffec <= esi) {
            Vffffffec = esi;
        }
        Vffffffe8 = Vffffffec;
    }
    eax = A8;
    *(ebp - 0x3c) = *(eax + 4);
    *(ebp - 0x34) = *(eax + 0xc);
    ebx = *(eax + 0xce) & 65535;
    eax = A8;
    *(ebp - 0x38) = Vffffffe4 * Vffffffe4 + *(eax + 8);
    edi = *(eax + 0xce) & 65535;
    eax = A8;
    Vffffffd0 = Vffffffe8 * Vffffffe8 + *(eax + 8);
    if(Ac <= *(eax + 0x5c)) {
        *(eax + 0xcc) = *(eax + 0xcc) & -4;
    }
    eax = A8;
    ecx = *(eax + 0xb0);
    if(*(eax + 0x58) > ecx) {
        *(eax + 0x58) = ecx;
    }
    eax = A8;
    if(*(eax + 0x5c) > ecx) {
        *(eax + 0x5c) = ecx;
    }
    if(A14 != 0) {
        L00442C60(A8, Ac, Ac, & Vffffffd4);
        if(al != 0) {
            eax = ebp - 0x3c;
            L0044B770(eax, eax, & Vffffffd4);
        }
    }
    ebx = *(A8 + 0x8c);
    if(ebx != 0) {
        edi = *(ebp - 0x34);
        if(edi > *(ebp - 0x3c) && Vffffffd0 > *(ebp - 0x38)) {
            edx = ebp - 0x3c;
            *ebx( *(A8 + 0x90), edx);
        }
    }
    eax = A8;
    esi = *(eax + 0x9c);
    if(esi != 0) {
        eax = *esi( *(eax + 0xa0), 0, 0);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00443B6B - 0x00443B6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443B6B()
{



}

/*	Procedure: 0x00443B70 - 0x00443C52
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0042177F()
 *		L00421AB0()
 *		L00443480()
 *		L00444660()
 *		L00444810()
 */

L00443B70(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != -2085654638) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0xb0) == 0) {
        return 0;
    }
    L00423980(A8 + 0x88);
    L0042E3E0(A8 + 0xac);
    *(A8 + 0xb4) = 0;
    *(A8 + 0xb0) = *(A8 + 0xb4);
    *(A8 + 0x5c) = 0;
    *(A8 + 0x58) = *(A8 + 0x5c);
    *(A8 + 0xcc) = *(A8 + 0xcc) & 65535 & -12 | 0x100;
    eax = L00442170(A8);
    if(*(A8 + 0x8c) != 0) {
        *(ebp - 0x18) = *(A8 + 4);
        *(ebp - 0x14) = *(A8 + 8);
        *(ebp - 0x10) = *(A8 + 0xc);
        edx = *(A8 + 0x10);
        *(ebp - 0xc) = edx;
        eax = *(A8 + 0x8c)( *(A8 + 0x90), ebp - 0x18);
    }
    esi = *(A8 + 0x9c);
    if(esi != 0) {
        eax = *esi( *(A8 + 0xa0), 0, 0);
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00443C53 - 0x00443C5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443C53()
{



}

/*	Procedure: 0x00443C60 - 0x00443C8D
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00462720()
 */

L00443C60()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != -2085654638) {
        eax = L00429610(65561);
    }
    *(ebx + 0xb0) :: 0;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00443C8E - 0x00443C8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443C8E()
{



}

/*	Procedure: 0x00443C90 - 0x00443CCA
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004154F0()
 */

L00443C90(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    return L00427940( *(A8 + 0xac), *(A8 + 0xb0), Ac);
}

/*	Procedure: 0x00443CCB - 0x00443CCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443CCB()
{



}

/*	Procedure: 0x00443CD0 - 0x00443D09
 *	Argument size: -244
 *	Local size: 256
 *	Save regs size: 0
 *	Called by:
 *		L00415380()
 */

L00443CD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  Vffffff00;



    return L00443480(A8, & Vffffff00, L00426870(Ac, & Vffffff00, 0x100, A10));
}

/*	Procedure: 0x00443D0A - 0x00443D0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443D0A()
{



}

/*	Procedure: 0x00443D10 - 0x00443D5B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004626CB()
 */

L00443D10(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0xb0);
    }
    if(A10 != 0) {
        *A10 = *(A8 + 0xb4);
    }
    return *(A8 + 0xac);
}

/*	Procedure: 0x00443D5C - 0x00443D5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443D5C()
{



}

/*	Procedure: 0x00443D60 - 0x00443D95
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004206D0()
 */

L00443D60(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    *(A8 + 0x8c) = Ac;
    *(A8 + 0x90) = A10;
    return *(A8 + 0x90);
}

/*	Procedure: 0x00443D96 - 0x00443D9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443D96()
{



}

/*	Procedure: 0x00443DA0 - 0x00443DD5
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004206D0()
 */

L00443DA0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    *(A8 + 0x94) = Ac;
    *(A8 + 0x98) = A10;
    return *(A8 + 0x98);
}

/*	Procedure: 0x00443DD6 - 0x00443DDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443DD6()
{



}

/*	Procedure: 0x00443DE0 - 0x00443E15
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004206D0()
 *		L0042198B()
 */

L00443DE0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    *(A8 + 0x9c) = Ac;
    *(A8 + 0xa0) = A10;
    return *(A8 + 0xa0);
}

/*	Procedure: 0x00443E16 - 0x00443E1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00443E16()
{



}

/*	Procedure: 0x00443E20 - 0x004441BD
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004441C0()
 */

L00443E20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esi = A8;
    eax = *(esi + 0x58);
    if(eax == *(esi + 0x5c)) {
        return;
    }
    (save)0xc;
    L004496D0(Ac);
    (restore)ecx;
    if(!( *(esi + 0xcc) & 65535 & 4)) {
        L0044A0D0(Ac, esi + 0x24);
        L0044A0D0(Ac, esi + 0x34);
        esi = esi + 0x44;
        eax = L0044A0D0(Ac, esi);
        esp = ebp - 8;
        return;
    }
    ecx = *(esi + 0x3c);
    if(ecx > *(esi + 0x34)) {
        edx = *(esi + 0x40);
        if(edx > *(esi + 0x38)) {
            goto L00443fd7;
        }
    }
    eax = *(esi + 0x4c);
    if(eax > *(esi + 0x44)) {
        ecx = *(esi + 0x50);
        if(ecx > *(esi + 0x48)) {
            goto L00443ec3;
        }
    }
    eax = L0044A150(Ac, esi + 0x24, 2);
    goto L004441b7;
L00443ec3:
    ecx = *(esi + 0x24);
    if(*(esi + 0x4c) <= ecx) {
        L0044A150(Ac, esi + 0x24, 2);
        eax = L0044A150(Ac, esi + 0x44, 2);
    } else {
        L00449770(Ac, ecx, *(esi + 0x28), *(esi + 0x2c));
        L00449770(Ac, *(esi + 0x24), *(esi + 0x28) + 1, *(esi + 0x2c));
        L00449960(Ac, *(esi + 0x24), *(esi + 0x28), *(esi + 0x30) + 1);
        L00449960(Ac, *(esi + 0x24) + 1, *(esi + 0x28), *(esi + 0x30) + 1);
        L00449960(Ac, *(esi + 0x2c) - 1, *(esi + 0x28), *(esi + 0x30));
        L00449960(Ac, *(esi + 0x2c) - 2, *(esi + 0x28), *(esi + 0x30));
        L00449770(Ac, *(esi + 0x44), *(esi + 0x48), *(esi + 0x24));
        L00449770(Ac, *(esi + 0x44), *(esi + 0x48) + 1, *(esi + 0x24) + 2);
        L00449770(Ac, *(esi + 0x4c) - 1, *(esi + 0x30) - 1, *(esi + 0x2c));
        L00449770(Ac, *(esi + 0x4c) - 1, *(esi + 0x30) - 2, *(esi + 0x2c));
        goto L00444133;
L00443fd7:
        L00449770(Ac, *(esi + 0x24), *(esi + 0x28), *(esi + 0x2c));
        L00449770(Ac, *(esi + 0x24), *(esi + 0x28) + 1, *(esi + 0x2c));
        L00449960(Ac, *(esi + 0x24), *(esi + 0x28), *(esi + 0x30) + 1);
        L00449960(Ac, *(esi + 0x24) + 1, *(esi + 0x28), *(esi + 0x30) + 1);
        L00449960(Ac, *(esi + 0x2c) - 1, *(esi + 0x28), *(esi + 0x30));
        L00449960(Ac, *(esi + 0x2c) - 2, *(esi + 0x28), *(esi + 0x30));
        L00449770(Ac, *(esi + 0x34), *(esi + 0x38), *(esi + 0x24));
        L00449770(Ac, *(esi + 0x34), *(esi + 0x38) + 1, *(esi + 0x24) + 2);
        L00449960(Ac, *(esi + 0x34), *(esi + 0x38), *(esi + 0x40));
        L00449960(Ac, *(esi + 0x34) + 1, *(esi + 0x38), *(esi + 0x40));
        L00449960(Ac, *(esi + 0x3c) - 1, *(esi + 0x38), *(esi + 0x40));
        L00449960(Ac, *(esi + 0x3c) - 2, *(esi + 0x38), *(esi + 0x40));
        L00449770(Ac, *(esi + 0x4c) - 1, *(esi + 0x40) - 1, *(esi + 0x3c) - 1);
        L00449770(Ac, *(esi + 0x4c) - 1, *(esi + 0x40) - 2, *(esi + 0x3c) - 1);
        ecx = *(esi + 0x4c);
        eax = *(esi + 0x44);
        if(ecx > eax) {
            edx = *(esi + 0x50);
            if(edx > *(esi + 0x48)) {
L00444133:
                L00449960(Ac, *(esi + 0x44), *(esi + 0x48), *(esi + 0x50));
                L00449960(Ac, *(esi + 0x44) + 1, *(esi + 0x48), *(esi + 0x50));
                L00449960(Ac, *(esi + 0x4c) - 1, *(esi + 0x48), *(esi + 0x50));
                L00449960(Ac, *(esi + 0x4c) - 2, *(esi + 0x48) - 2, *(esi + 0x50));
                L00449770(Ac, *(esi + 0x44), *(esi + 0x50) - 1, *(esi + 0x4c));
                eax = L00449770(Ac, *(esi + 0x44), *(esi + 0x50) - 2, *(esi + 0x4c));
            }
        }
    }
L004441b7:
    esp = ebp - 8;
}

/*	Procedure: 0x004441BE - 0x004441BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004441BE()
{



}

/*	Procedure: 0x004441C0 - 0x004443A3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00420F79()
 */

L004441C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    esp = esp - 0x14;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    L00442910(A8);
    L00442AA0(A8);
    *(ebp - 0x14) = *(A8 + 0x58);
    eax = *(A8 + 0x5c);
    *(ebp - 0x1c) = eax;
    *(ebp - 0x1d) = 0;
    *(ebp - 0x1d) :: 0;
    if(!(edi = *(A8 + 0xcc) & 65535) && (0x24 & edi) == 0x24) {
        L004496D0(Ac, 0xe);
        L0044A0D0(Ac, A8 + 0x14);
    }
    eax = *(A8 + 0x54);
    *(ebp - 0x10) = eax;
    *(ebp - 0x18) = L0044BC80( *(ebp - 0x10));
    if(*(ebp - 0x1d) == 0 && !(edi & 4)) {
        edx = *(A8 + 0xd3) & 0xff;
        if(dl != 0) {
            (save)dl & 0xff;
            (save)Ac;
            L004496D0();
        } else {
            L004496A0(Ac, *(A8 + 0xc8));
        }
        L00449710(Ac, *(ebp - 0x10));
        edi = A8 + 4;
        L0044AB00(Ac, *(ebp - 0x10), edi, *(A8 + 0xac), *(A8 + 0xb0), *(A8 + 0xb8), *(A8 + 0xc4), 0, *(ebp - 0x14), *(ebp - 0x18));
        eax = *(A8 + 0xb0);
        L0044AB00(Ac, *(ebp - 0x10), edi, *(A8 + 0xac), eax, *(A8 + 0xb8), *(A8 + 0xc4), *(ebp - 0x1c), eax - *(ebp - 0x1c), *(ebp - 0x18));
        L00443E20(A8, Ac);
        L004496D0(Ac, 0xd);
        (save) *(ebp - 0x18);
        (save) *(ebp - 0x1c) - *(ebp - 0x14);
        (save) *(ebp - 0x14);
        (save) *(A8 + 0xc4);
        (save) *(A8 + 0xb8);
        (save) *(A8 + 0xb0);
        (save) *(A8 + 0xac);
        (save)edi;
    } else {
        L00443E20(A8, Ac);
        ecx = *(A8 + 0xd3) & 0xff;
        if(cl != 0) {
            (save)cl & 0xff;
            (save)Ac;
            L004496D0();
        } else {
            L004496A0(Ac, *(A8 + 0xc8));
        }
        L00449710(Ac, *(ebp - 0x10));
        (save) *(ebp - 0x18);
        (save)-1;
        (save)0;
        (save) *(A8 + 0xc4);
        (save) *(A8 + 0xb8);
        (save) *(A8 + 0xb0);
        (save) *(A8 + 0xac);
        (save)A8 + 4;
    }
    (save) *(ebp - 0x10);
    (save)Ac;
    esp = esp + 0x28;
    return L0044AB00();
}

/*	Procedure: 0x004443A4 - 0x004443AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004443A4()
{



}

/*	Procedure: 0x004443B0 - 0x00444438
 *	Argument size: 12
 *	Local size: 8
 *	Save regs size: 16
 *	Called by:
 *		L00444708()
 *		L0044489B()
 *		L00445E20()
 */

L004443B0(A1c, A20, A24)
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  V4;
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A1c;
    eax = A24;
    if(!( *(ebx + 0xcc) & 65535 & 0x200)) {
        return;
    }
    ecx = A20;
    V4 = ebx;
    V4 = V4 + 0xd4;
    *esp = ecx;
    esi = *esp;
    if(!(eax = eax - 1)) {
        do {
            *esp = *esp + 1;
            ebp = *( *esp) & 0xff;
            ebx = *(V4 + (ebp >> 3)) & 0xff;
            edi = 7 & ebp;
            ecx = 7 - edi;
            if(!(ebx >> cl & 1)) {
                *esi = dl;
                esi = esi + 1;
            }
        } while(eax = eax - 1);
    }
    eax = esi - A20;
    esp = esp + 8;
}

/*	Procedure: 0x00444439 - 0x0044443F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00444439()
{



}

/*	Procedure: 0x00444440 - 0x0044448A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00444490()
 */

L00444440(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebp;



    edx = *(A10 + 4) - *(Ac + 8);
    if(edx <= 0) {
        return 0;
    }
    eax = edx;
    edx = 0;
    edx = ( *(Ac + 0xce) & 65535) / ( *(Ac + 0xce) & 65535) % ( *(Ac + 0xce) & 65535) / ( *(Ac + 0xce) & 65535);
    ebp = eax;
    eax = *(Ac + 0xc4);
    if(ebp >= eax) {
        ebp = eax != 0 ? eax - 1 : 0;
    }
    return ebp;
}

/*	Procedure: 0x0044448B - 0x0044448F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044448B()
{



}

/*	Procedure: 0x00444490 - 0x00444563
 *	Argument size: 8
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L00444E38()
 *		L004450B8()
 *		L004452F0()
 *		L00445720()
 *		L00445D90()
 */

L00444490(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    eax = *(A8 + 0xb0);
    esi = Ac;
    if(eax == 0) {
        return 0;
    }
    edx = *(A8 + 0xce) & 65535;
    if(*(esi + 4) > *(A8 + 0xc4) * *(A8 + 0xc4) + *(A8 + 8)) {
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x10) = *(A8 + 0xac);
    ebx = *(A8 + 0xb8);
    edx = L00444440(A8, esi);
    eax = *(ebx + edx * 4);
    *(ebp - 0x14) = eax;
    ecx = *(ebp - 0x10);
    ebx = *(ebx + edx * 4 + 4);
    ecx = ecx + eax;
    ebx = ebx - eax;
    eax = *(A8 + 4);
    *(ebp - 0x10) = eax;
    esi = *esi;
    if(esi < eax) {
        eax = *(ebp - 0x14);
        esp = ebp - 0xc;
        return;
    }
    if(ebx != 0) {
        *(A8 + 0xb0) :: *(ebp - 0x14) + ebx;
        if(edx = *(ebx + ecx - 1) & 0xff) {
            goto L00444533;
        }
        if((dl & 0xff) == 0xa) {
            goto L00444545;
L00444533:
            eax = dl & 0xff;
            if(eax == 0xa || eax == 0x20) {
                goto L00444545;
            }
            if(eax == 9) {
L00444545:
                ebx = ebx - 1;
            }
        }
    }
    eax = L0044BE90( *(A8 + 0x54), ecx, ebx, esi - *(ebp - 0x10)) + *(ebp - 0x14);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00444564 - 0x0044456F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00444564()
{



}

/*	Procedure: 0x00444570 - 0x004445B7
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004445B8()
 */

L00444570(A8)
/* unknown */ void  A8;
{



    (save)ebx;
    (save)esi;
    esi = *(A8 + 0x58);
    ebx = *(A8 + 0x5c) - esi;
    eax = *(A8 + 0xb0);
    if(ebx != 0 && eax != 0 && esi < eax) {
        if(ebx + esi > eax) {
            ebx = eax - esi;
        }
        (save)0;
        eax = L0042F3B0( *(A8 + 0xac) + esi, ebx);
    }
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x004445B8 - 0x0044465F
 *	Argument size: 4
 *	Local size: 24
 *	Save regs size: 12
 */

L004445B8(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    if(!( *(A8 + 0xd2) & 0xff & 1)) {
        return;
    }
    L00444570(A8);
    edi = *(A8 + 0x9c);
    *(A8 + 0x9c) = 0;
    Vfffffff0 = esp;
    ecx = *(A8 + 0x58);
    bl = L004438D0(A8, ecx, *(A8 + 0x5c) - ecx, 1);
    goto L0044463b;
    *(A8 + 0x9c) = edi;
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        (save)-1;
        ecx = *(ebp - 0x24);
        eax = *(ebp - 0x1c)();
    }
    esp = *(ebp - 0x10);
L0044463b:
    *(A8 + 0x9c) = edi;
    if(bl != 0 && edi != 0) {
        eax = *edi( *(A8 + 0xa0), 1, 0);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00444660 - 0x00444707
 *	Argument size: 4
 *	Local size: 24
 *	Save regs size: 12
 */

L00444660(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    if(!( *(A8 + 0xd2) & 0xff & 1)) {
        return;
    }
    (save)0;
    L0042F3B0( *(A8 + 0xac), *(A8 + 0xb0));
    edi = *(A8 + 0x9c);
    *(A8 + 0x9c) = 0;
    Vfffffff0 = esp;
    bl = L00443B70(A8);
    goto L004446e3;
    *(A8 + 0x9c) = edi;
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        (save)-1;
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)();
    }
    esp = *(ebp - 0x10);
L004446e3:
    *(A8 + 0x9c) = edi;
    if(bl != 0 && edi != 0) {
        eax = *edi( *(A8 + 0xa0), 1, 0);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00444708 - 0x00444806
 *	Argument size: 4
 *	Local size: 36
 *	Save regs size: 12
 */

L00444708(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A8;
    if(!( *(ebx + 0xd2) & 0xff & 1)) {
        return;
    }
    (save) & Vfffffff0;
    eax = L0042F550(0);
    edi = eax;
    (restore)ecx;
    if(edi == 0) {
        esp = ebp - 0xc;
        return;
    }
    Vffffffec = edi;
    eax = L004443B0(ebx, edi, Vfffffff0);
    Vfffffff0 = eax;
    if(eax == 0) {
        L00447040();
        ebx = & Vffffffec;
        eax = L0042E3E0(ebx);
        esp = ebp - 0xc;
        return;
    }
    esi = *(ebx + 0x9c);
    *(ebx + 0x9c) = 0;
    Vffffffe8 = esp;
    ecx = *(ebx + 0x58);
    L00443810(ebx, ecx, *(ebx + 0x5c) - ecx, edi, Vfffffff0, 1);
    *(ebp - 0x2d) = al;
    goto L004447d6;
    *(ebx + 0x9c) = esi;
    L004234F0(0, 0, 0);
    if(Vffffffdc != 0) {
        (save)-1;
        ecx = *(ebp - 0x2c);
        Vffffffdc();
    }
    esp = *(ebp - 0x18);
L004447d6:
    *(ebx + 0x9c) = esi;
    if(*(ebp - 0x2d) != 0 && esi != 0) {
        *esi( *(ebx + 0xa0), 1, 0);
    }
    esp = ebp - 0xc;
    return L0042E3E0( & Vffffffec);
}

/*	Procedure: 0x00444807 - 0x0044480F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00444807()
{



}

/*	Procedure: 0x00444810 - 0x0044489A
 *	Argument size: 4
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L00445720()
 */

L00444810(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    if(!( *(A8 + 0xd2) & 0xff & 1)) {
        return;
    }
    edi = *(A8 + 0x9c);
    *(A8 + 0x9c) = 0;
    Vfffffff0 = esp;
    bl = L00443B70(A8);
    goto L00444876;
    *(A8 + 0x9c) = edi;
    eax = L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        (save)-1;
        ecx = *(ebp - 0x24);
        eax = *(ebp - 0x1c)();
    }
    esp = *(ebp - 0x10);
L00444876:
    *(A8 + 0x9c) = edi;
    if(bl != 0 && edi != 0) {
        eax = *edi( *(A8 + 0xa0), 1, 0);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044489B - 0x00444A0F
 *	Argument size: 4
 *	Local size: 68
 *	Save regs size: 12
 */

L0044489B(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd5;



    if(!( *(A8 + 0xd2) & 0xff & 1)) {
L004448bb:
        return L00447040();
    }
    eax = A8;
    ecx = *(eax + 0x58);
    Vffffffd0 = ecx;
    if((esi = *(eax + 0x5c) - ecx) || esi > 8 || esi + ecx > *(eax + 0xb0)) {
        goto L004448bb;
    }
    ebx = *(eax + 0xac) + ecx;
    edi = 0;
    if(esi > 0) {
        do {
            L00428780( *(ebx + edi) & 0xff);
            if(al == 0) {
                goto L00444909;
            }
            edi = edi + 1;
        } while(edi < esi);
        goto L00444947;
L00444909:
        edi = esi;
        eax = L00428490(ebx, edi, ebp - 0x4c);
        if(*(ebp - 0x4c) != esi) {
            goto L004448bb;
        }
        esi = eax <= 65535 ? 0x1004 : 0x1006;
        ebx = & Vffffffd5;
        L00426870(eax, ebx, 0x1f, esi);
    } else {
L00444947:
        edi = esi;
        eax = L00427940(ebx, edi, 0x1000);
        ebx = & Vffffffd5;
        L00428380(eax, ebx, 0x1f);
    }
    Vffffffd4 = al;
    L004443B0(A8, ebx, Vffffffd4 & 0xff);
    Vffffffd4 = al;
    if(Vffffffd4 == 0) {
        goto L004448bb;
    }
    eax = A8;
    esi = *(eax + 0x9c);
    *(eax + 0x9c) = 0;
    Vffffffcc = esp;
    L00443810(A8, Vffffffd0, edi, ebx, Vffffffd4 & 0xff, 1);
    *(ebp - 0x4d) = al;
    goto L004449e3;
    *(A8 + 0x9c) = esi;
    L004234F0(0, 0, 0);
    if(Vffffffc0 != 0) {
        (save)-1;
        ecx = *(ebp - 0x48);
        Vffffffc0();
    }
    esp = *(ebp - 0x34);
L004449e3:
    eax = A8;
    *(eax + 0x9c) = esi;
    if(*(ebp - 0x4d) != 0 && esi != 0) {
        eax = *esi( *(A8 + 0xa0), 1, 0);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00444A10 - 0x00444A56
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444E38()
 *		L004452F0()
 */

L00444A10(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    ecx = Ac;
    eax = ecx >= *(A8 + 0xb0) ? *(A8 + 0xc4) - 1 : L004427C0(A8, ecx);
    ecx = *(A8 + 0xb8);
    *A10 = *(ecx + eax * 4);
    *A14 = *(ecx + eax * 4 + 4);
}

/*	Procedure: 0x00444A57 - 0x00444A5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00444A57()
{



}

/*	Procedure: 0x00444BB0 - 0x00444E37
 *	Argument size: 12
 *	Local size: 96
 *	Save regs size: 12
 *	Called by:
 *		L00444E38()
 */

L00444BB0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  V5c;



    esp = esp & -8;
    edx = A8 + 0x88;
    ebx = & V5c;
    esi = Ac;
    L00423980(edx);
    eax = *(A8 + 0x94);
    *(ebx - 0x2c) = eax;
    if(eax == 0) {
        return;
    }
    edx = ebx - 0x50;
    *(ebx - 0x2c)( *(A8 + 0x98), ebx - 0x28, edx);
    *(ebx - 0x20) = *esi;
    *(ebx - 0x1c) = *(esi + 4);
    *(ebx - 0x18) = *(esi + 8);
    *(ebx - 0x14) = *(esi + 0xc);
    *(ebx - 0x10) = *(esi + 0x10);
    *(ebx - 0xc) = *(esi + 0x14);
    *(ebx - 8) = *(esi + 0x18) & 0xff;
    *(ebx - 7) = *(esi + 0x19) & 0xff;
    *(ebx - 6) = *(esi + 0x1a) & 65535;
    *(ebx - 0x10) = *(ebx - 0x10) + *(ebx - 0x28);
    *(ebx - 0xc) = *(ebx - 0xc) + *(ebx - 0x50);
    *(ebx - 0x48) = 0;
    if(!( *(A8 + 0xd2) & 0xff & 1)) {
        *(ebx - 0x48) = 262144;
    }
    asm("setnc [ebx-0x59]");
    if(A10 >= *(A8 + 0x58)) {
        A10 :: *(A8 + 0x5c);
        asm("setc [ebx-0x59]");
    }
    if(*(ebx - 0x59) == 0) {
        L00442EF0(A8, A10, A10);
    }
    ecx = ebx - 0x54;
    *(ebx - 0x2c) = 262144;
    L00438690(A10, *(A8 + 0xac), *(A8 + 0xb0), ebx - 0x58, ecx);
    if(al != 0) {
        *(ebx - 0x2c) = 0;
    }
    *(ebx - 0x4c) = *(A8 + 0xb0) != 0 ? 0 : 262144;
    eax = L00423850(0x444a60, A8, 1);
    *(ebx - 0x24) = eax;
    *(ebx - 0x30) = esp;
    if(*(ebx - 0x59) != 0) {
        L00424EF0(eax, 0x65, 0x477ce0, *(ebx - 0x48), 0, 0x58);
        L00424EF0( *(ebx - 0x24), 0x67, 0x477ce4, 0, 0, 0x43);
    } else {
        L00424EF0( *(ebx - 0x24), 0x66, 0x477cec, *(ebx - 0x48) | *(ebx - 0x4c), 0, 0);
        L00424EF0( *(ebx - 0x24), 0x68, 0x477cf4, *(ebx - 0x4c), 0, 0);
    }
    L00424EF0( *(ebx - 0x24), 0x69, 0x477d00, *(ebx - 0x48), 0, 0x56);
    esi = *(ebx - 0x4c);
    L00424EF0( *(ebx - 0x24), 0x6a, "\nSelect All", esi, 0, 0x41);
    L00425140( *(ebx - 0x24));
    L00424EF0( *(ebx - 0x24), 0x6d, 0x477d14, *(ebx - 0x2c), 0, 0);
    L00424EF0( *(ebx - 0x24), 0x6e, 0x477d20, esi, 0, 0);
    L00425140( *(ebx - 0x24));
    L00424EF0( *(ebx - 0x24), 0x73, 0x477d38, *(ebx - 0x48) | *(ebx - 0x4c), 0, 0);
    eax = L00424930( *(ebx - 0x24), ebx - 0x20, 0, 0);
    goto L00444e27;
    L00423980(ebx - 0x24);
    eax = L004234F0(0, 0, 0);
    if(*(ebx - 0x3c) != 0) {
        ecx = *(ebx - 0x44);
        eax = *(ebx - 0x3c)(-1);
    }
    esp = *(ebx - 0x30);
L00444e27:
    *(A8 + 0x88) = *(ebx - 0x24);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00444E38 - 0x0044504B
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L00444E38(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x14;
    ebx = Ac;
    if(A8 == 0 || *A8 != -2085654638) {
        eax = L00429610(65561);
    }
    if(!( *(A8 + 0xd2) & 0xff & 2)) {
        return;
    }
    edi = *(A8 + 0xcc) & 65535 & -65;
    *(A8 + 0xcc) = di;
    eax = L00444490(A8, ebx + 0x10);
    *(ebp - 0x10) = eax;
    ecx = *(ebx + 0xc);
    if(!(ecx & 262144)) {
        eax = L00444BB0(A8, ebx, eax);
        esp = ebp - 0xc;
        return;
    }
    eax = *(A8 + 0xb0);
    if(eax == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(!(ecx & 0x11)) {
        edx = ebp - 0x1c;
        L00438690( *(ebp - 0x10), *(A8 + 0xac), eax, ebp - 0x18, edx);
        if(al != 0) {
            ebx = *(ebp - 0x18) + *(ebp - 0x1c);
            L00442EF0(A8, *(ebp - 0x18), ebx);
            *(A8 + 0xcc) = *(A8 + 0xcc) & 65535 & -9 | 0x400;
            eax = L0042F5F0(1);
        } else {
            eax = L00447040();
        }
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x14) = L0042EF00();
    *(ebp - 0x1d) = 0;
    if(*(ebp - 0x14) - *(A8 + 0x6c) < L0042F730() && *(ebp - 0x10) == *(A8 + 0x70)) {
        *(ebp - 0x1d) = 1;
    }
    *(A8 + 0x6c) = *(ebp - 0x14);
    ecx = *(ebp - 0x10);
    *(A8 + 0x70) = ecx;
    if(!( *(ebx + 0xc) & 8)) {
        eax = *(A8 + 0x58);
        if(*(ebp - 0x10) > eax) {
            *(A8 + 0x60) = eax;
            goto L0044502f;
        }
        ecx = *(A8 + 0x5c);
    } else {
        if(*(ebp - 0x1d) != 0) {
            *(A8 + 0x74) = *(A8 + 0x74) + 1;
            edx = *(A8 + 0xb0);
            if(*(A8 + M00000064) > edx) {
                *(A8 + M00000064) = edx;
            }
            if(*(A8 + 0x68) > edx) {
                *(A8 + 0x68) = edx;
            }
            if(*(A8 + 0x74) > 1) {
                eax = A8 + 0x68;
                L00444A10(A8, ecx, A8 + M00000064, eax);
                goto L0044502f;
            }
            eax = A8 + 0x68;
            L00428030( *(A8 + 0xac), edx, ecx, eax - 4, eax);
            *(A8 + 0x68) = *(A8 + 0x68) + *(A8 + M00000064);
            goto L0044502f;
        }
        if(*(ebp - 0x10) >= *(A8 + 0x58)) {
            eax = *(A8 + 0x5c);
            if(*(ebp - 0x10) < eax) {
                *(A8 + 0x7c) = *(ebx + 0x10);
                ebx = *(ebx + 0x14);
                *(A8 + 0x80) = ebx;
                *(A8 + 0xcc) = edi | 0x48;
                esp = ebp - 0xc;
                return;
            }
        }
        *(A8 + 0x74) = 0;
    }
    *(A8 + 0x60) = ecx;
L0044502f:
    *(A8 + 0xcc) = edi | 8;
    eax = L004452F0(A8, ebx);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044504C - 0x0044504F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044504C()
{



}

/*	Procedure: 0x00445050 - 0x004450B7
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004450B8()
 *		L004452F0()
 */

L00445050(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = L00442910(A8);
    edx = *(A8 + 0x58);
    ecx = *(A8 + 0x5c);
    al = 0;
    if(edx != ecx) {
        if(Ac >= *(A8 + 0x24) && A10 >= *(A8 + 0x28) && Ac < *(A8 + 0x2c) && A10 < *(A8 + 0x30) || Ac >= *(A8 + 0x34) && A10 >= *(A8 + 0x38) && Ac < *(A8 + 0x3c) && A10 < *(A8 + 0x40)) {
            goto L004450ae;
        }
        if(Ac >= *(A8 + 0x44) && A10 >= *(A8 + 0x48) && Ac < *(A8 + 0x4c) && A10 < *(A8 + 0x50)) {
L004450ae:
            al = 1;
        }
    }
}

/*	Procedure: 0x004450B8 - 0x004451E3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L004450B8(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A8;
    (save)edi;
    ebx = Ac;
    if(esi == 0 || *esi != -2085654638) {
        L00429610(65561);
    }
    edi = *(esi + 0xcc) & 65535 & -9;
    *(esi + 0xcc) = di;
    if(!(edi & 0x400)) {
        *(esi + 0xcc) = edi & -1025;
        if(L00445050(esi, *(ebx + 0x10), *(ebx + 0x14)) != 0) {
            edi = *(esi + 0x58);
            ecx = *(esi + 0xb0);
            ebx = *(esi + 0x5c);
            if(edi >= ecx || ebx > ecx || edi >= ebx) {
                L00429610(65538);
            }
            (save)0;
            esi = *(esi + 0xac) + edi;
            eax = L00433B90(esi, ebx - edi);
        }
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    eax = *(esi + 0xd2) & 0xff;
    if(!(eax & 1)) {
        eax = L00442F70(esi, 0);
    }
    if(!( *(esi + 0xd2) & 0xff & 2)) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    if(!(edi & 0x40)) {
        edi = edi & -65;
        *(esi + 0xcc) = di;
        eax = L00444490(esi, ebx + 0x10);
        eax = L00442EF0(esi, eax, eax);
    }
    if(!(edi & 0x10) && L00445050(esi, *(ebx + 0x10), *(ebx + 0x14)) != 0) {
        eax = L0042F5F0(1);
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x004451E4 - 0x004451EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004451E4()
{



}

/*	Procedure: 0x0044528A - 0x004452D4
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L0044528A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    *(A8 + 0xcc) = *(A8 + 0xcc) & -17;
    L0042F5F0( *(A8 + 0xd0) & 65535);
    return L004452F0(A8, Ac);
}

/*	Procedure: 0x004452D5 - 0x004452DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004452D5()
{



}

/*	Procedure: 0x004452E0 - 0x004452E0
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004452F0()
 */

L004452E0()
{



}

/*	Procedure: 0x004452E1 - 0x004452EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004452E1()
{



}

/*	Procedure: 0x004452F0 - 0x0044542F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444E38()
 *		L0044528A()
 */

L004452F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    eax = *(A8 + 0xcc) & 65535;
    *(ebp - 0x1c) = eax;
    *(ebp - 0x10) = eax;
    if(!( *(ebp - 0x10) = *(ebp - 0x10) & 8)) {
        if(!(eax & 0x40)) {
            *(A8 + 0xcc) = eax & -73;
            return L004452E0(A8, A8 + 0x7c);
        }
        edi = *(A8 + 0xb0);
        if(*(A8 + 0x60) > edi) {
            *(A8 + 0x60) = edi;
        }
        if(*(A8 + M00000064) > edi) {
            *(A8 + M00000064) = edi;
        }
        if(*(A8 + 0x68) > edi) {
            *(A8 + 0x68) = edi;
        }
        eax = L00444490(A8, Ac + 0x10);
        ecx = *(A8 + 0x74);
        esi = eax;
        if(ecx != 0) {
            if(ecx > 1) {
                L00444A10(A8, esi, ebp - 0x18, ebp - 0x14);
            } else {
                ecx = ebp - 0x14;
                L00428030( *(A8 + 0xac), edi, esi, ebp - 0x18, ecx);
                *(ebp - 0x14) = *(ebp - 0x14) + *(ebp - 0x18);
            }
            edx = *(A8 + M00000064);
            if(esi > edx) {
                *(A8 + 0x60) = edx;
                esi = *(ebp - 0x14);
            } else {
                ecx = *(A8 + 0x68);
                esi = *(ebp - 0x18);
                *(A8 + 0x60) = ecx;
            }
        }
        eax = L00442EF0(A8, *(A8 + 0x60), esi);
    }
    if(!( *(ebp - 0x1c) & 0x10)) {
        if(!( *(A8 + 0xd2) & 0xff & 2)) {
            if(*(ebp - 0x10) != 0) {
                goto L00445420;
            }
            eax = Ac;
            L00445050(A8, *(eax + 0x10), *(eax + 0x14));
            if(al == 0) {
                goto L00445420;
            }
        }
        (save)1;
        goto L00445422;
L00445420:
        (save)2;
L00445422:
        eax = L0042F5F0();
        (restore)ecx;
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00445430 - 0x00445505
 *	Argument size: 8
 *	Local size: 36
 *	Save regs size: 8
 */

L00445430(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vc;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V17;
	/* unknown */ void  Vfffffffc;



    esp = esp & -8;
    eax = A8 + 0x78;
    eax = L00462100(eax);
    if(*(Ac + 0x10) != 1) {
        return;
    }
    if(!( *(A8 + 0xd2) & 0xff & 1)) {
        esp = ebp - 8;
        return;
    }
    L00434150( & Vfffffffc, 0x18);
    Vc = *(Ac + 0x28);
    if(!( *(Ac + 0x18) & 2)) {
        L00426870( *(Ac + 0x28), & V14, 8, 0x1004);
        Vc = V14 & 0xff;
        L00445720(A8, esp);
        Vc = V15 & 0xff;
        L00445720(A8, esp);
        Vc = V16 & 0xff;
        L00445720(A8, esp);
        Vc = V17 & 0xff;
        (save)esp;
    } else {
        (save)esp;
    }
    (save)A8;
    (restore)ecx;
    esp = ebp - 8;
    return L00445720();
}

/*	Procedure: 0x00445506 - 0x0044550F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445506()
{



}

/*	Procedure: 0x004455E3 - 0x004455EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004455E3()
{



}

/*	Procedure: 0x004455F0 - 0x00445711
 *	Argument size: 8
 *	Local size: 32
 *	Save regs size: 12
 *	Called by:
 *		L00445720()
 */

L004455F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(!( *(A8 + 0xd2) & 0xff & 1)) {
        return 0;
    }
    esi = *(A8 + 0x58);
    ecx = *(A8 + 0x5c);
    Vfffffff0 = *(A8 + 0x9c);
    *(A8 + 0x9c) = 0;
    bl = 0;
    Vffffffe8 = esp;
    if(esi == ecx) {
        if(Ac == 0) {
            goto L00445678;
        }
        eax = *(A8 + 0xb0);
        ecx = esi;
        if(ecx < eax) {
            L00428490( *(A8 + 0xac) + esi, eax - ecx, & Vffffffec);
            L004438D0(A8, esi, Vffffffec, 1);
            bl = al;
            goto L004456e5;
L00445678:
            if(esi != 0 && esi <= *(A8 + 0xb0)) {
                eax = L00427CA0( *(A8 + 0xac), esi - 1);
                L004438D0(A8, eax, esi - eax, 1);
                bl = al;
            }
        }
    } else {
        L004438D0(A8, esi, ecx - esi, 1);
        bl = al;
        goto L004456e5;
        *(A8 + 0x9c) = Vfffffff0;
        L004234F0(0, 0, 0);
        if(*(ebp - 0x24) != 0) {
            (save)-1;
            ecx = *(ebp - 0x2c);
            *(ebp - 0x24)();
        }
        esp = *(ebp - 0x18);
    }
L004456e5:
    eax = Vfffffff0;
    *(A8 + 0x9c) = eax;
    if(bl != 0 && Vfffffff0 != 0) {
        eax = Vfffffff0( *(A8 + 0xa0), 1, 0);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00445712 - 0x0044571F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445712()
{



}

/*	Procedure: 0x00445720 - 0x00445D06
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00420C50()
 *		L00445430()
 */

L00445720(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x58;
    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    edx = *(A8 + 0xd2) & 0xff;
    esi = *(A8 + 0x58);
    ebx = *(A8 + 0x5c);
    *(ebp - 0x61) = 0;
    *(ebp - 0x2c) = 0;
    eax = Ac;
    *(ebp - 0x10) = *(eax + 0xc);
    if(!(ecx = ( *(eax + 0x14) & 65535) - 0x1a)) {
        if(ecx = ecx - 6) {
            goto L00445a98;
        }
        if(ecx = ecx - 0x60) {
            goto L00445a30;
        }
        if(ecx = ecx - 1) {
            goto L00445a52;
        }
        if(ecx = ecx - 3) {
            goto L00445941;
        }
        if(ecx = ecx - 1) {
            goto L004459b0;
        }
        if(ecx = ecx - 1) {
            goto L004457e1;
        }
        if(ecx = ecx - 1) {
            goto L00445871;
        }
        if(ecx = ecx - 9) {
            goto L00445ad0;
        }
        if(ecx = ecx - 1) {
            goto L00445a74;
        }
        if(!(ecx = ecx - 2)) {
            if(ecx - 0xd <= 6) {
                goto L00445ac0;
            }
            goto L00445b00;
L004457e1:
            if(*(ebp - 0x2c) == 0) {
                return 0;
            }
            if(!( *(ebp - 0x10) & 0x12)) {
                eax = L004427C0(A8, esi);
                esi = *( *(A8 + 0xb8) + eax * 4);
            } else {
                if(!( *(ebp - 0x10) & 1)) {
                    eax = ebp - 0x60;
                    edx = ebp - 0x5c;
                    L00428030( *(A8 + 0xac), *(A8 + 0xb0), esi - 1, edx, eax);
                    if(al != 0) {
                        esi = *(ebp - 0x5c);
                    }
                } else {
                    if(esi != 0) {
                        if(esi == ebx) {
                            goto L00445853;
                        }
                        if(!( *(ebp - 0x10) & 8)) {
L00445853:
                            esi = esi - 1;
                        }
                    }
                }
            }
            if(!( *(ebp - 0x10) & 8)) {
                ebx = esi;
            }
            L00442EF0(A8, esi, ebx);
            goto L00445ce0;
L00445871:
            if(*(ebp - 0x2c) == 0) {
                esp = ebp - 0xc;
                return 0;
            }
            if(!( *(ebp - 0x10) & 0x12)) {
                *(ebp - 0x4c) = *(A8 + 0xc) + M00000064;
                L004427C0(A8, ebx);
                eax = ( *(A8 + 0xce) & 65535) * ( *(A8 + 0xce) & 65535);
                ebx = ebp - 0x4c;
                *(ebp - 0x48) = eax + *(A8 + 8);
                ebx = L00444490(A8, ebx);
            } else {
                if(!( *(ebp - 0x10) & 1)) {
                    ecx = ebp - 0x54;
                    L00428030( *(A8 + 0xac), *(A8 + 0xb0), ebx, ebp - 0x58, ecx);
                    if(al != 0) {
                        ebx = *(ebp - 0x58) + *(ebp - 0x54);
                    }
                } else {
                    if(esi == ebx) {
                        goto L004458ff;
                    }
                    if(!( *(ebp - 0x10) & 8)) {
L004458ff:
                        eax = *(A8 + 0xb0);
                        edx = ebx;
                        if(edx < eax) {
                            ecx = ebp - 0x50;
                            L00428490( *(A8 + 0xac) + ebx, eax - edx, ecx);
                            ebx = ebx + *(ebp - 0x50);
                        }
                    }
                }
            }
            if(!( *(ebp - 0x10) & 8)) {
                esi = ebx;
            }
            L00442EF0(A8, esi, ebx);
            goto L00445ce0;
L00445941:
            if(*(ebp - 0x2c) == 0) {
                esp = ebp - 0xc;
                return 0;
            }
            if(!( *(ebp - 0x10) & 0x11)) {
                esi = 0;
            } else {
                if(esi == ebx || !( *(ebp - 0x10) & 8)) {
                    L00442820(A8, esi, ebp - 0x3c);
                    *(ebp - 0x38) = *(ebp - 0x38) - 1;
                    (save)ebp - 0x3c;
                    eax = L00444490(A8);
                    (restore)ecx;
                    esi = esi == eax ? 0 : eax;
                }
            }
            if(!( *(ebp - 0x10) & 8)) {
                ebx = esi;
            }
            L00442EF0(A8, esi, ebx);
            goto L00445ce0;
L004459b0:
            if(*(ebp - 0x2c) == 0) {
                esp = ebp - 0xc;
                return 0;
            }
            if(!( *(ebp - 0x10) & 0x11)) {
                ebx = ebx | -1;
            } else {
                if(esi == ebx || !( *(ebp - 0x10) & 8)) {
                    L00442820(A8, ebx, ebp - 0x44);
                    eax = *(A8 + 0xce) & 65535;
                    *(ebp - 0x40) = *(ebp - 0x40) + eax;
                    (save)ebp - 0x44;
                    eax = L00444490(A8);
                    (restore)ecx;
                    ebx = ebx == eax ? ebx | -1 : eax;
                }
            }
            if(!( *(ebp - 0x10) & 8)) {
                esi = ebx;
            }
            L00442EF0(A8, esi, ebx);
            goto L00445ce0;
L00445a30:
            if(*(ebp - 0x2c) == 0) {
                esp = ebp - 0xc;
                return 0;
            }
            L00442EF0(A8, 0, 0);
            goto L00445ce0;
L00445a52:
            if(*(ebp - 0x2c) == 0) {
                esp = ebp - 0xc;
                return 0;
            }
            L00442EF0(A8, -1, -1);
            goto L00445ce0;
L00445a74:
            eax = L004455F0(A8, 0);
            esp = ebp - 0xc;
            return;
        }
    }
    eax = L004455F0(A8, 1);
    esp = ebp - 0xc;
    return;
L00445a98:
    if(*(ebp - 0x2c) == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    L00442EF0(A8, 0, -1);
    goto L00445ce0;
L00445ac0:
    esp = ebp - 0xc;
    return 0;
L00445ad0:
    if(*(ebp - 0x61) == 0 || !(edx & 4)) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = L00444810(A8);
    esp = ebp - 0xc;
    return 1;
L00445b00:
    if(!( *(ebp - 0x10) & 0x20)) {
        eax = L00450BA0(Ac, 0x485f98, 8) - M00000064;
        if(eax <= 0x10) {
            switch(eax) {
                case 0:
L00445b32:
                    esp = ebp - 0xc;
                    return 1;
                case 1:
                    eax = L004445c0(A8);
                    esp = ebp - 0xc;
                    return 1;
                case 2:
                    goto L00445bb4;
                case 3:
                    eax = L00444570(A8);
                    esp = ebp - 0xc;
                    return 1;
                case 4:
                    goto L00445bb4;
                case 5:
                    eax = L00444710(A8);
                    esp = ebp - 0xc;
                    return 1;
                case 6:
                    goto L00445b6f;
                case 7:
                    goto L00445bd0;
                case 8:
                    eax = L00445510(A8);
                    esp = ebp - 0xc;
                    return 1;
                case 9:
                    goto L00445bb4;
                case 0xa:
                    goto L00445bb4;
                case 0xb:
                    goto L00445bb4;
                case 0xc:
                    goto L00445bb4;
                case 0xd:
                    goto L00445bb4;
                case 0xe:
                    goto L00445bb4;
                case 0xf:
                    goto L00445bb4;
                case 0x10:
                    eax = L004448a0(A8);
                    esp = ebp - 0xc;
                    return 1;
            }
            goto L00445b32;
L00445b6f:
            if(*(ebp - 0x2c) != 0) {
                goto L00445b80;
            }
            esp = ebp - 0xc;
            return 1;
            L00442EF0(A8, 0, -1);
            goto L00445ce0;
        }
L00445bb4:
        if((3 & *(ebp - 0x10)) != 3) {
            esp = ebp - 0xc;
            return 0;
        }
    }
L00445bd0:
    if(*(ebp - 0x61) != 0) {
        goto L00445be0;
    }
    esp = ebp - 0xc;
    return 0;
    *(ebp - 0x2c) = *(Ac + 0x10);
    if(*(Ac + 0x10) != 0) {
        goto L00445bf7;
    }
    esp = ebp - 0xc;
    return 0;
    if(*(ebp - 0x2c) > 0xff) {
        goto L00445c37;
    }
    edx = *(ebp - 0x2c) >> 3;
    eax = 7 & ecx;
    ecx = 7 - eax;
    if(( *(edx + A8 + 0xd4) & 0xff) >> cl & 1) {
        goto L00445c37;
    }
    L00447040();
    esp = ebp - 0xc;
    return 0;
    *(ebp - 0x10) = *(A8 + 0x9c);
    *(A8 + 0x9c) = 0;
    *(ebp - 0x14) = esp;
    L00428380( *(ebp - 0x2c), ebp - 0x34, 8);
    if(esi != ebx) {
        goto L00445c75;
    }
    L004435A0(A8, esi, ebp - 0x34, eax, 1);
    goto L00445cb5;
    L00443810(A8, esi, ebx - esi, ebp - 0x34, eax, 1);
    goto L00445cb5;
    *(A8 + 0x9c) = *(ebp - 0x10);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x20) == 0) {
        goto L00445cb2;
    }
    (save)-1;
    ecx = *(ebp - 0x28);
    *(ebp - 0x20)();
    esp = *(ebp - 0x14);
    *(A8 + 0x9c) = *(ebp - 0x10);
    if(*(ebp - 0x10) == 0) {
        goto L00445cd4;
    }
    *(ebp - 0x10)( *(A8 + 0xa0), 1, 0);
    esp = ebp - 0xc;
    return 1;
L00445ce0:
    if(al == 0) {
        goto L00445cfd;
    }
    ebx = *(A8 + 0x9c);
    if(ebx == 0) {
        goto L00445cfd;
    }
    eax = *ebx( *(A8 + 0xa0), 1, 1);
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00445D10 - 0x00445D51
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L00445D10(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    *(A8 + 0xcc) = *(A8 + 0xcc) | 0x80;
    L00442F70(A8, 0);
    return L00445D90(A8, Ac);
}

/*	Procedure: 0x00445D52 - 0x00445D5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445D52()
{



}

/*	Procedure: 0x00445D60 - 0x00445D8C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00445D60(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -2085654638) {
        eax = L00429610(65561);
    }
    *(A8 + 0xcc) = *(A8 + 0xcc) & 65407;
}

/*	Procedure: 0x00445D8D - 0x00445D8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445D8D()
{



}

/*	Procedure: 0x00445D90 - 0x00445E1C
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00420D9A()
 *		L00445D10()
 */

L00445D90(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2085654638) {
        eax = L00429610(65561);
    }
    if(!( *(A8 + 0xd2) & 0xff & 1)) {
        return 0;
    }
    if(L00450F00( *(Ac + 0x1c)) == 0) {
        esp = ebp - 8;
        return 0;
    }
    eax = L00444490(A8, Ac + 0x10);
    edx = *(Ac + 0x1c);
    if(edx != *(A8 + 0x84) || eax < *(A8 + 0x58) || eax > *(A8 + 0x5c)) {
        eax = L00442EF0(A8, eax, eax);
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00445E1D - 0x00445E1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445E1D()
{



}

/*	Procedure: 0x00445E20 - 0x00445F52
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00420ED9()
 */

L00445E20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 0x28;
    ebx = Ac;
    if(esi == 0 || *esi != -2085654638) {
        L00429610(65561);
    }
    *(esi + 0xcc) = *(esi + 0xcc) & 65407;
    eax = *(esi + 0xd2) & 0xff;
    if(!(eax & 1)) {
        return 0;
    }
    eax = L00450E10( *(ebx + 0x1c), 0, 0, ebp - 0x34);
    edi = eax;
    if(edi == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    *(ebp - 0x30) = edi;
    eax = L004443B0(esi, edi, *(ebp - 0x34));
    *(ebp - 0x34) = eax;
    if(eax == 0) {
        esi = ebp - 0x30;
        eax = L0042E3E0(esi);
        esp = ebp - 0xc;
        return 0;
    }
    ebx = *(esi + 0x9c);
    *(esi + 0x9c) = 0;
    *(ebp - 0x10) = esp;
    eax = *(esi + 0x58);
    *(ebp - 0x2c) = eax;
    *(ebp - 0x28) = eax;
    L004435A0(esi, *(ebp - 0x28), edi, *(ebp - 0x34), 0);
    L00442EF0(esi, *(ebp - 0x28), *(ebp - 0x2c) + *(ebp - 0x34));
    goto L00445f26;
    *(esi + 0x9c) = ebx;
    L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        (save)-1;
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)();
    }
    esp = *(ebp - 0x10);
L00445f26:
    *(esi + 0x9c) = ebx;
    if(ebx != 0) {
        *ebx( *(esi + 0xa0), 1, 0);
    }
    eax = L0042E3E0(ebp - 0x30);
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00445F53 - 0x00445F5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445F53()
{



}

/*	Procedure: 0x00445F60 - 0x00445F91
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445F60()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != -2085654638) {
        L00429610(65561);
    }
    eax = *(ebx + 0x84);
    ecx = *(ebp + 0xc);
    esp = ebp - 4;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00445F92 - 0x00445F9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445F92()
{



}

/*	Procedure: 0x00445FA0 - 0x00445FFB
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004205CB()
 */

L00445FA0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    eax = *(A8 + 0x58);
    if(eax != *(A8 + 0x5c)) {
        return 0;
    }
    L00442AA0(A8);
    *Ac = *(A8 + 0x14);
    eax = *(A8 + 0x18);
    *(Ac + 4) = eax;
    *(Ac + 8) = *(A8 + 0x1c);
    *(Ac + 0xc) = *(A8 + 0x20);
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00445FFC - 0x00445FFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00445FFC()
{



}

/*	Procedure: 0x00446000 - 0x0044602A
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004205CB()
 *		L00420C50()
 */

L00446000(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -2085654638) {
        L00429610(65561);
    }
    return *(A8 + 0xd2) & 0xff;
}

/*	Procedure: 0x0044602B - 0x00446401
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0044602B(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    edx = A10;
    (save)A8;
    (save)esi;
    (save)edi;
    esp = esp - 0x1a4;
    ecx = edx + 1;
    *(ebp + -432) = ecx;
    eax = edx != 0 ? *edx & 0xff : 0;
    *(ebp + -140) = eax;
    if(eax == 0) {
        eax = Ac;
        *(ebp + -432) = A8;
        if(eax >= 0x32) {
            eax = 0x32;
        }
        *(ebp + -140) = eax;
    }
    edi = ebp + -140;
    L00427F40(ebp + -432, edi);
    eax = L00427DA0(0x477d40, *(ebp + -432), *(ebp + -140), ebp + -412, 0xff);
    *(ebp + -140) = eax;
    if(eax > 0xc8) {
        *(ebp + -140) = 0xc8;
    }
    eax = L00427CA0(ebp + -412, *(ebp + -140));
    *(ebp + -140) = eax;
    eax = L0042C390(ebp + -412, eax);
    *(ebp + -140) = eax;
    eax = L004342A0(ebp + eax + -412, 0x477d44, 4);
    edx = ebp - 0x20;
    *(ebp + -140) = *(ebp + -140) + eax;
    *(ebp - 0x20) = 0;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x18) = 0x190;
    *(ebp - 0x14) = 0xf6;
    eax = L00419240(0x34, edx, 268435467, 0, 0x477d4c);
    *(ebp - 0x10) = eax;
    *(ebp - 0x24) = esp;
    L0041B6B0( *(eax + 0xc), 0x446430);
    L0041B820( *( *(ebp - 0x10) + 0xc), 0x446450, *(ebp - 0x10));
    L0041B6F0( *( *(ebp - 0x10) + 0xc), 0x446410);
    L0041CF00( *( *(ebp - 0x10) + 0xc), 0x118, 0x96, 32767, 32767);
    edx = ebp - 0x58;
    *(ebp - 0x58) = 0;
    *(ebp - 0x54) = 0;
    *(ebp - 0x50) = 0x190;
    *(ebp - 0x4c) = 0xf6;
    edi = L0043C220( *(ebp - 0x10), edx, 0x100);
    eax = ebp - 0x78;
    *(edi + 0x54) = *(edi + 0x54) & -2;
    *(ebp - 0x78) = 0xa;
    *(ebp - 0x74) = 0xf;
    *(ebp - 0x70) = 0x6e;
    *(ebp - 0x6c) = 0x1f;
    L0043A240(edi, eax, 0x100, "\nFile Name:", 0);
    ecx = ebp - 0x68;
    *(ebp - 0x68) = 0x6e;
    *(ebp - M00000064) = 0xa;
    *(ebp - 0x60) = 0x186;
    *(ebp - 0x5c) = 0x24;
    esi = L004206D0(edi, ecx, 0x104, 0, 0, 0);
    *( *(ebp - 0x10) + 0x28) = esi;
    L00443480( *(esi + 0x2c), ebp + -412, *(ebp + -140));
    L00442EF0( *(esi + 0x2c), 0, *(ebp + -140) - 4);
    L0041A0E0(esi);
    edx = ebp + -136;
    *(ebp + -136) = 0xa;
    *(ebp + -132) = 0x28;
    *(ebp - 0x80) = 0x186;
    *(ebp - 0x7c) = 0xc8;
    eax = L004206D0(edi, edx, 0x10c, 0, 2, 0);
    *( *(ebp - 0x10) + 0x2c) = eax;
    L00443480( *( *( *(ebp - 0x10) + 0x2c) + 0x2c), A8, Ac);
    eax = ebp + -156;
    *(ebp + -156) = 0x10e;
    *(ebp + -152) = 0xd2;
    *(ebp + -148) = 0x16e;
    *(ebp + -144) = 0xec;
    L00439DE0(edi, eax, 0x50f, 0x6f, 0x477d6c, 0);
    ecx = ebp - 0x48;
    *(ebp - 0x48) = 0xa0;
    *(ebp - 0x44) = 0xd5;
    *(ebp - 0x40) = 0xfa;
    *(ebp - 0x3c) = 0xe9;
    L00439DE0(edi, ecx, 0x10f, 0x70, 0x477d74, 0);
    esi = ebp + -428;
    *(ebp + -428) = 0x32;
    *(ebp + -424) = 0xd5;
    *(ebp + -420) = 0x8c;
    *(ebp + -416) = 0xe9;
    L00439DE0(edi, esi, 0x10f, 0x71, 0x477d80, 0);
    *(edi + 0x4c) = 0x6f;
    *(edi + 0x50) = 0x71;
    *( *(ebp - 0x10) + 0x18) = 0x71;
    L0041CBA0( *( *(ebp - 0x10) + 0xc), 1);
    goto L004463f7;
    L004192E0(ebp - 0x10);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x30) != 0) {
        ecx = *(ebp - 0x38);
        *(ebp - 0x30)(-1);
    }
    esp = *(ebp - 0x24);
L004463f7:
    eax = *(ebp - 0x10);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)A8;
}

/*	Procedure: 0x00446402 - 0x0044640F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446402()
{



}

/*	Procedure: 0x00446424 - 0x0044642F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446424()
{



}

/*	Procedure: 0x0044644A - 0x004469AF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0044644A(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0xa40;
    *(ebp + -272) = A8;
    ecx = *(Ac + 0xc) - 0x6f;
    if(ecx <= 3) {
        switch(ecx) {
            case 0:
                goto L0044647e;
            case 1:
                goto L0044671d;
            case 2:
                L004192E0(ebp + -272);
                goto L00446981;
            case 3:
                goto L0044665a;
        }
L0044647e:
        L00443550( *( *( *(ebp + -272) + 0x28) + 0x2c), ebp + -267, 0xff);
        *(ebp + -268) = al;
        ebx = L00443D10( *( *( *(ebp + -272) + 0x2c) + 0x2c), ebp + -2592, 0);
        if(*(ebp + -268) == 0) {
            goto L004464d5;
        }
        if(*(ebp + -2592) != 0) {
            goto L004464e2;
        }
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return L00447040();
        L00437FE0(edi, *(ebp + -268) & 0xff, 0);
        if(al == 0) {
            goto L0044650c;
        }
        L00438060(ebp + -268, 0x477d88);
        if(*(esi + 0x18) & 2) {
            goto L00446576;
        }
        if(*( *(ebp + -272) + 0x30) == 0) {
            goto L0044652c;
        }
        L00429610(65538);
        eax = L004647f0(0x446450, *(ebp + -272), 0x72, "\ntext/plain", ebp + -268, 0, 0, 0);
        *( *(ebp + -272) + 0x30) = eax;
        eax = L0041CBA0( *( *(ebp + -272) + 0xc), 0);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
        esi = *(ebp + -2592) + 3;
        eax = L0042E310(esi);
        ecx = eax;
        *(ebp + -276) = eax;
        *(ebp + -2604) = ecx;
        *eax = 0xef;
        *( *(ebp + -276) + 1) = 0xbb;
        *( *(ebp + -276) + 2) = 0xbf;
        L004342A0( *(ebp + -276) + 3, ebx, *(ebp + -2592));
        eax = L0042BA30(1, 0, 0, "\tClippings", 0x80);
        *(ebp + -2612) = eax;
        eax = L0042B600( *(ebp + -2612), 0, 0, ebp + -268, 2, "\ntext/plain");
        *(ebp + -2608) = eax;
        *(ebp + -2604) = 0;
        L0042C930(eax, ebp + -276, esi, 0);
        L004192E0(ebp + -272);
        L0042BD00(ebp + -2608);
        L0042BD00(ebp + -2612);
        L0042E3E0(ebp + -2604);
        goto L00446981;
L0044665a:
        edi = *(ebp + -272);
        *(ebp + -2636) = edi;
        ebx = L00464910( *(edi + 0x30), 0, 0);
        if(ebx == 0) {
            goto L0044670c;
        }
        *(ebp + -2624) = ebx;
        eax = L00443D10( *( *( *(ebp + -272) + 0x2c) + 0x2c), ebp + -2600, 0);
        esi = *(ebp + -2600) + 3;
        edi = eax;
        eax = L0042E310(esi);
        *(ebp + -2584) = eax;
        *( *(ebp + -2584)) = 0xef;
        *( *(ebp + -2584) + 1) = 0xbb;
        *( *(ebp + -2584) + 2) = 0xbf;
        L004342A0( *(ebp + -2584) + 3, edi, *(ebp + -2600));
        L0042C930(ebx, ebp + -2584, esi, 0);
        L0042BD00(ebp + -2624);
        L004192E0(ebp + -2636);
        goto L00446981;
L0044671d:
        L00443550( *( *( *(ebp + -272) + 0x28) + 0x2c), ebp + -531, 0xff);
        *(ebp + -532) = al;
        eax = L00443D10( *( *( *(ebp + -272) + 0x2c) + 0x2c), ebp + -2596, 0);
        *(ebp + -2588) = eax;
        (save)ebp + -2596;
        L00427F40(ebp + -2588);
        (restore)ecx;
        if(*(ebp + -532) == 0) {
            goto L0044678d;
        }
        if(*(ebp + -2596) != 0) {
            goto L004467a0;
        }
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return L00447040();
        edx = ebp + -2628;
        L00438690(0, *(ebp + -2588), *(ebp + -2596), ebp + -2616, edx);
        if(al != 0) {
            goto L004467e7;
        }
        (save)0;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return L00439CA0(1, 1, 0, 0x477da4, 0);
        ebx = L00428EA0(0x477dc8, ebp + -2580, 0x800);
        if(*(ebp + -2628) < 0x7c0) {
            goto L00446814;
        }
        ebx = ebx + L00427DA0(0x477de4, *(ebp + -2588) + *(ebp + -2616), 0x7c0, ebp + ebx + -2580, 0x7c0);
        *(ebp + ebx + -2580) = 0xd;
        *(ebp + ebx + -2579) = 0xa;
        (save)0x477de8;
        L00438060(ebp + -532);
        (restore)ecx;
        if(*(esi + 0x18) & 2) {
            goto L004468f0;
        }
        if(*( *(ebp + -272) + 0x30) == 0) {
            goto L00446885;
        }
        L00429610(65538);
        edi = ebx + 2;
        L00443480( *( *( *(ebp + -272) + 0x2c) + 0x2c), ebp + -2580, edi);
        eax = L004647f0(0x446450, *(ebp + -272), 0x72, 0x477de8, ebp + -532, 0, 0, 0);
        *( *(ebp + -272) + 0x30) = eax;
        eax = L0041CBA0( *( *(ebp + -272) + 0xc), 0);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
        eax = L0042BA30(1, 0, 0, "\tClippings", 0x80);
        *(ebp + -2620) = eax;
        eax = L0042B600( *(ebp + -2620), 0, 0, ebp + -532, 2, 0x477de8);
        ecx = ebx + 2;
        *(ebp + -2632) = eax;
        L0042CA40(eax, ebp + -2580, ecx, 0);
        L004192E0(ebp + -272);
        L0042BD00(ebp + -2632);
        (save)ebp + -2620;
        L0042BD00();
    }
L00446981:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    L00446030(A8, Ac, A10);
    esp = ebp;
}

/*	Procedure: 0x004469B0 - 0x00446A00
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0043BC50()
 *		L0043BDAF()
 */

L004469B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 != 0) {
        goto L004469c6;
    }
    L00429610(65538);
    eax = L0042E3A0(0x60);
    *(eax + 4) = *A8;
    *(eax + 8) = *(A8 + 4);
    *(eax + 0xc) = *(A8 + 8);
    *(eax + 0x10) = *(A8 + 0xc);
    *(eax + 0x14) = Ac;
    *(eax + 0x18) = A10;
    *(eax + 0x5d) = 0;
    *eax = -583986990;
}

/*	Procedure: 0x00446A10 - 0x00446A53
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0043BDD9()
 */

L00446A10(A8)
/* unknown */ void  A8;
{



    eax = *A8;
    if(eax == 0) {
        return;
    }
    if(*eax != -583986990) {
        *A8 = 0;
        esp = ebp - 4;
        return;
    }
    *eax = 0;
    L00434270(eax, 0x60);
    eax = L0042E3E0(A8);
    esp = ebp - 4;
}

/*	Procedure: 0x00446A54 - 0x00446A5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446A54()
{



}

/*	Procedure: 0x00446A60 - 0x00446AAE
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0043BE30()
 */

L00446A60(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -583986990) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    *(A8 + 4) = *Ac;
    *(A8 + 8) = *(Ac + 4);
    *(A8 + 0xc) = *(Ac + 8);
    eax = *(Ac + 0xc);
    *(A8 + 0x10) = eax;
    return *(A8 + 0x10);
}

/*	Procedure: 0x00446AAF - 0x00446AAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446AAF()
{



}

/*	Procedure: 0x00446AB0 - 0x00446B16
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00446B20()
 */

L00446AB0(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0 || *A8 != -583986990) {
        eax = L00429610(65561);
    }
    dl = 0;
    if(*(A8 + 0x5e) != 0) {
        *(A8 + 0x5e) = 0;
        edx = 1 & 0xff;
    }
    ecx = *(A8 + 0x5c) & 0xff;
    if(cl != 0) {
        eax = cl & 0xff;
        eax = L00434150(A8 + 0x1c, eax);
        *(A8 + 0x5c) = 0;
        dl = 1;
    }
    if(dl != 0) {
        esi = *(A8 + 0x14);
        if(esi != 0) {
            eax = *esi( *(A8 + 0x18), A8 + 4);
        }
    }
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00446B17 - 0x00446B1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446B17()
{



}

/*	Procedure: 0x00446B20 - 0x00446B95
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00446E30()
 */

L00446B20(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    edi = Ac;
    ebx = A10;
    if(edi == 0 || ebx == 0) {
        return L00446AB0(A8);
    }
    if(A8 == 0 || *A8 != -583986990) {
        L00429610(65561);
    }
    if(ebx > 0x40) {
        ebx = 0x40;
    }
    eax = L004342A0(A8 + 0x1c, edi, ebx);
    *(A8 + 0x5c) = bl;
    *(A8 + 0x5e) = 0;
    edi = *(A8 + 0x14);
    if(edi != 0) {
        eax = *edi( *(A8 + 0x18), A8 + 4);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00446B96 - 0x00446B9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446B96()
{



}

/*	Procedure: 0x00446BA0 - 0x00446BD5
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0040CFF0()
 *		L004154F0()
 */

L00446BA0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -583986990) {
        L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0x5c) & 0xff;
    }
    esp = ebp - 8;
    return A8 + 0x1c;
}

/*	Procedure: 0x00446BD6 - 0x00446BDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446BD6()
{



}

/*	Procedure: 0x00446BE0 - 0x00446C56
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00446BE0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    if(A8 == 0 || *A8 != -583986990) {
        eax = L00429610(65561);
    }
    edx = *(A8 + 0x5d) & 0xff;
    if(edx == ebx) {
        return 0;
    }
    ecx = ebx;
    eax = edx;
    ecx = ecx & 4;
    cl = 0;
    eax = edx;
    *(A8 + 0x5d) = bl;
    ebx = ebx & 2;
    eax = eax & 2;
    dl = 0;
    ecx = cl & 0xff;
    if(!(ecx = ecx | dl & 0xff)) {
        ebx = *(A8 + 0x14);
        if(ebx != 0) {
            eax = *ebx( *(A8 + 0x18), A8 + 4);
        }
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00446C57 - 0x00446C5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446C57()
{



}

/*	Procedure: 0x00446C60 - 0x00446CEC
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00415380()
 */

L00446C60(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0 || *A8 != -583986990) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x5e) == 0) {
        *(A8 + 0x5e) = 1;
        *(A8 + 0x5c) = 0;
        ecx = A8 + 0x1c;
        eax = 0;
        do {
            *(ecx + eax) = 0;
            *(ecx + eax + 1) = 0;
            *(ecx + eax + 2) = 0;
            *(ecx + eax + 3) = 0;
            *(ecx + eax + 4) = 0;
            *(ecx + eax + 5) = 0;
            *(ecx + eax + 6) = 0;
            *(ecx + eax + 7) = 0;
            eax = eax + 8;
            edx = eax;
        } while(edx < 0x38);
        if(edx < 0x40) {
            do {
                *(ecx + eax) = 0;
                eax = eax + 1;
            } while(eax < 0x40);
        }
        esi = *(A8 + 0x14);
        if(esi != 0) {
            eax = *esi( *(A8 + 0x18), A8 + 4);
        }
    }
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00446CED - 0x00446CEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446CED()
{



}

/*	Procedure: 0x00446CF0 - 0x00446D1A
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004154F0()
 */

L00446CF0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != -583986990) {
        eax = L00429610(65561);
    }
    *(ebx + 0x5e) :: 0;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00446D1B - 0x00446D1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446D1B()
{



}

/*	Procedure: 0x00446D20 - 0x00446E21
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0043BE8B()
 */

L00446D20(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    if(A8 == 0 || *A8 != -583986990) {
        L00429610(65561);
    }
    L0044C3C0(Ac, A8 + 4, *(A8 + 0x5d) & 0xff, L0044CA90(0xa), 1);
    eax = A8;
    esi = *(eax + 0xc) - *(eax + 4);
    edx = esi < 0x10 ? 0 : esi - 0x10 >> 3;
    eax = *(A8 + 0x5e) != 0 ? M00000064 : *(A8 + 0x5c) & 0xff;
    *(ebp - 0x10) = eax;
    if(eax > edx) {
        *(ebp - 0x10) = edx;
    }
    eax = A8;
    esi = *(eax + 8) + *(eax + 0x10);
    edi = *(eax + 4);
    esi = esi - 6;
    edi = edi + 8;
    esi :: -2147483648;
    asm("sbb esi,-0x1");
    esi = esi >> 1;
    eax = L004496D0(Ac, 0xb);
    if(!( *(ebp - 0x10) = *(ebp - 0x10) - 1)) {
        do {
            edx = edi + 5;
            L00449770(Ac, edi + 1, esi, edx);
            eax = esi + 5;
            edx = edi + 6;
            L0044A090(Ac, edi, esi + 1, edx, eax);
            eax = edi + 5;
            edx = esi + 5;
            eax = L00449770(Ac, edi + 1, edx, eax);
            edi = edi + 8;
        } while(*(ebp - 0x10) = *(ebp - 0x10) - 1);
    }
}

/*	Procedure: 0x00446E22 - 0x00446E2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00446E22()
{



}

/*	Procedure: 0x00446E30 - 0x00447038
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L00446E30(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 0x18;
    ebx = Ac;
    if(esi == 0 || *esi != -583986990) {
        eax = L00429610(65561);
    }
    if(!( *(esi + 0x5d) & 0xff & 2)) {
        return 0;
    }
    if(!(edi = ( *(ebx + 0x14) & 65535) - 0x1a)) {
        if((edi = edi - 6) || (edi = edi - 0x51)) {
            goto L00446f13;
        }
        edi = edi - 0x1f;
        if(edi > 1 && (edi = edi - 3)) {
            goto L00446f20;
        }
    }
    if(*(esi + 0x5c) != 0 || *(esi + 0x5e) != 0) {
        *(esi + 0x5c) = 0;
        edx = esi + 0x1c;
        ebx = 0;
        do {
            *(edx + ebx) = 0;
            *(edx + ebx + 1) = 0;
            *(edx + ebx + 2) = 0;
            *(edx + ebx + 3) = 0;
            *(edx + ebx + 4) = 0;
            *(edx + ebx + 5) = 0;
            *(edx + ebx + 6) = 0;
            *(edx + ebx + 7) = 0;
            ebx = ebx + 8;
            eax = ebx;
        } while(eax < 0x38);
        if(eax < 0x40) {
            do {
                *(edx + ebx) = 0;
                ebx = ebx + 1;
            } while(ebx < 0x40);
        }
        *(esi + 0x5e) = 0;
        edi = *(esi + 0x14);
        if(edi != 0) {
            eax = *edi( *(esi + 0x18), esi + 4);
        }
    }
    esp = ebp - 0xc;
    return 1;
L00446f13:
    esp = ebp - 0xc;
    return 0;
L00446f20:
    if(( *(ebx + 0xc) & 0x22) == 0x20) {
        if(L00450C40(ebx, 0x76, 0x20) != 0) {
            ebx = ebp - 0x14;
            (save)ebx;
            eax = L0042F550(0);
            (restore)ecx;
            if(eax != 0) {
                *(ebp - 0x10) = eax;
                L00446B20(esi, eax, *(ebp - 0x14));
                esi = ebp - 0x10;
                eax = L0042E3E0(esi);
                esp = ebp - 0xc;
                return 1;
            }
        }
        esp = ebp - 0xc;
        return 0;
    }
    if(L004287B0( *(ebx + 0x10)) != 0) {
        esp = ebp - 0xc;
        return 0;
    }
    if(*(esi + 0x5e) != 0) {
        *(esi + 0x5e) = 0;
        *(esi + 0x5c) = 0;
        edi = *(esi + 0x14);
        if(edi != 0) {
            eax = *edi( *(esi + 0x18), esi + 4);
        }
    }
    if(*(esi + 0x5c) >= 0x40) {
        esp = ebp - 0xc;
        return 0;
    }
    *(esi + 0x5c) = *(esi + 0x5c) + 1;
    ecx = *(esi + 0x5c) & 0xff & 0xff;
    *(esi + ecx + 0x1c) = *(ebx + 0x10) & 0xff;
    if(*(esi + 0x14) != 0) {
        eax = ( *(esi + 0x5c) & 0xff) - 1;
        ecx = *(esi + 4) + 8;
        eax = eax * 8 + ecx;
        *(ebp - 0x24) = eax;
        *(ebp - 0x1c) = eax + 6;
        ebx = *(esi + 8) + *(esi + 0x10) - 6;
        ebx :: -2147483648;
        asm("sbb ebx,-0x1");
        ebx = ebx >> 1;
        *(ebp - 0x20) = ebx;
        *(ebp - 0x18) = *(ebp - 0x20) + 6;
        if(eax < *(esi + 0xc)) {
            eax = *(esi + 0x14)( *(esi + 0x18), ebp - 0x24);
        }
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00447039 - 0x0044703F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00447039()
{



}

/*	Procedure: 0x00447040 - 0x0044704E
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0040CFF0()
 *		L004395A0()
 *		L00444708()
 *		L0044489B()
 *		L00444E38()
 *		L00459F00()
 *		L00459F70()
 */

L00447040()
{



    return MessageBeep(0);
}

/*	Procedure: 0x0044704F - 0x0044704F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044704F()
{



}

/*	Procedure: 0x00447050 - 0x0044716B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004159D0()
 *		L00415A60()
 */

L00447050(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)edi;
    if(Ac != 0) {
        if(A8 == 0) {
            L00429610(65538);
        }
        if(Ac < 0x30) {
L00447078:
            L00429610(65546);
        }
        edi = A8;
        edx = *edi;
        ecx = edx << 8 & 16711680;
        ecx = ecx | edx >> 0x18;
        ecx = ecx | edx >> 8 & 65280;
        if((ecx | edx << 0x18) != 625372235) {
            L00429610(65545);
        }
        eax = *(edi + 4) & 65535;
        ecx = eax << 8;
        if((ecx | eax >> 8) != 1) {
            L00429610(65544);
        }
        edx = *(edi + 8);
        ecx = edx << 8 & 16711680;
        ecx = ecx | edx >> 0x18;
        ecx = ecx | edx >> 8 & 65280;
        ecx = ecx | edx << 0x18;
        if(ecx > Ac) {
            goto L00447078;
        }
        eax = *(edi + 0xc);
        edx = eax << 8 & 16711680;
        edx = edx | eax >> 0x18;
        edx = edx | eax >> 8 & 65280;
        edx = edx | eax << 0x18;
        if(edx > Ac || edx + ecx * 8 > Ac) {
            goto L00447078;
        }
    }
    eax = L0042E3A0(0x8b8);
    *(eax + 0x10) = A8;
    *(eax + 0x14) = Ac;
    *(eax + 0x18) = Ac;
    *(eax + 0xc) = A10;
    *eax = -1695881261;
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0044716C - 0x0044716F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044716C()
{



}

/*	Procedure: 0x00447170 - 0x004471F1
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00415A60()
 *		L00415B9D()
 */

L00447170(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    (save)edi;
    esi = *A8;
    if(esi == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    if(*esi != -1695881261) {
        *A8 = 0;
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    *esi = 0;
    L0042E3E0(esi + 0x10);
    esi = 0x2f;
    if(!(edi = esi + 0x38)) {
        do {
            L0042BD00(edi);
            L0042E3E0(edi + 4);
            L0042E3E0(edi + 8);
            edi = edi + 0x28;
        } while(esi = esi - 1);
    }
    eax = L0042E3E0(A8);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x004471F2 - 0x004471FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004471F2()
{



}

/*	Procedure: 0x00447200 - 0x00447236
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00447618()
 *		L00448690()
 */

L00447200(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    (save)Ac;
    eax = 0;
    esi = 0;
    if(A10 > 0) {
        do {
            if(( *(( *(esi + Ac) & 0xff) + 0x486000) & 0xff) < 0x20) {
                eax = eax | 1 << cl;
            }
            esi = esi + 1;
        } while(esi < A10);
    }
    (restore)Ac;
}

/*	Procedure: 0x00447237 - 0x0044723F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00447237()
{



}

/*	Procedure: 0x00447240 - 0x0044752E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00447780()
 */

L00447240(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    eax = A8;
    (save)esi;
    (save)edi;
    esp = esp - 0x30;
    ecx = *(eax + 0x14);
    *(ebp - 0x2c) = ecx;
    edi = *(eax + 0x18);
    ebx = Ac;
    if(ecx + 0x400 > edi) {
        edi = edi > 1048576 ? edi + 262144 : edi + 131072;
        eax = L0042E410( *(A8 + 0x10), edi);
        *(A8 + 0x10) = eax;
        *(A8 + 0x18) = edi;
    }
    eax = *(ebx + 0x34);
    esi = *(A8 + 0x10) + *(ebp - 0x2c);
    *(ebp - 0x38) = eax;
    eax = *eax & 0xff;
    *(ebp - 0x24) = eax;
    edi = 0x2c + eax;
    eax = *(ebx + 0x38);
    *(ebp - 0x34) = eax;
    eax = *( *(ebp - 0x34)) & 0xff;
    *(ebp - 0x3c) = eax;
    (save) *(ebp - 0x3c);
    (restore)ecx;
    if(L00437700( *(ebp - 0x34) + 1) != 0) {
        *(ebp - 0x3c) = 0;
    }
    edx = *(A8 + 0xc);
    if(!(edx & 1)) {
        *(ebp - 0x3c) = 0;
    }
    ecx = *(ebx + 0x3c);
    edi = edi + *(ebp - 0x3c);
    *(ebp - 0x28) = ecx;
    *(ebp - 0x20) = 0;
    if(!(edx & 2)) {
        ecx = *ecx & 0xff;
        *(ebp - 0x20) = ecx;
        *(ebp - 0x28) = *(ebp - 0x28) + 1;
        edi = edi + *(ebp - 0x20);
    }
    edi = edi + 3 & -4;
    edx = *(ebp - 0x2c) + edi;
    *(A8 + 0x14) = edx;
    *(esi + edi - 4) = 0;
    *(ebp - 0x30) = *(ebx + 0x20);
    *(ebp - 0x14) = *ebx;
    edx = *(ebx + 4);
    ecx = edx << 8;
    edi = 0;
    ecx = ecx & 16711680;
    ecx = ecx | edx >> 0x18;
    edi = edx;
    edx = edx << 0x18;
    *esi = ecx | edi >> 8 & 65280 | edx;
    ecx = *(ebp - 0x14) << 8 & 16711680;
    edi = *(ebp - 0x14);
    edx = *(ebp - 0x14);
    *(ebp - 0x14) = *(ebp - 0x14) << 0x18;
    ecx = ecx | edi >> 0x18;
    *(esi + 4) = ecx | edx >> 8 & 65280 | *(ebp - 0x14);
    if(!( *(ebp - 0x30) & 1)) {
        edx = *(ebx + 4);
        *(A8 + 0x20) = *(A8 + 0x20) + *ebx;
        ecx = A8;
        asm("adc [ecx+0x24],edx");
    }
    *(ebp - 0x1c) = *(ebx + 8);
    ecx = *(ebx + 0xc);
    edx = ecx << 8;
    edi = 0;
    edx = edx & 16711680;
    edx = edx | ecx >> 0x18;
    edi = ecx;
    ecx = ecx << 0x18;
    *(esi + 8) = edx | edi >> 8 & 65280 | ecx;
    edx = *(ebp - 0x1c) << 8 & 16711680;
    edx = edx | *(ebp - 0x1c) >> 0x18;
    ecx = *(ebp - 0x1c);
    *(ebp - 0x1c) = *(ebp - 0x1c) << 0x18;
    *(esi + 0xc) = edx | ecx >> 8 & 65280 | *(ebp - 0x1c);
    edi = *(ebx + 0x14);
    edx = *(ebx + 0x10);
    ecx = edi << 8;
    ebx = 0;
    ecx = ecx & 16711680;
    ecx = ecx | edi >> 0x18;
    ebx = edi;
    edi = edi << 0x18;
    *(esi + 0x10) = ecx | ebx >> 8 & 65280 | edi;
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    ebx = edx;
    edx = edx << 0x18;
    *(esi + 0x14) = ecx | ebx >> 8 & 65280 | edx;
    edi = *(ebp - 0x30) << 8 & 16711680;
    edi = edi | *(ebp - 0x30) >> 0x18;
    ebx = *(ebp - 0x30);
    *(ebp - 0x30) = *(ebp - 0x30) << 0x18;
    *(esi + 0x18) = edi | ebx >> 8 & 65280 | *(ebp - 0x30);
    *(esi + 0x1c) = 0;
    *(esi + 0x20) = A10 << 8 & 16711680 | A10 >> 0x18 | A10 >> 8 & 65280 | A10 << 0x18;
    *(esi + 0x24) = 0;
    *(esi + 0x26) = 0;
    *(esi + 0x27) = 0;
    *(esi + 0x28) = al;
    *(esi + 0x29) = *(ebp - 0x3c);
    *(esi + 0x2a) = *(ebp - 0x24);
    *(esi + 0x2b) = *(ebp - 0x20);
    ebx = esi + 0x2c;
    L004342A0(ebx, *(ebp - 0x38) + 1, *(ebp - 0x24));
    ebx = ebx + *(ebp - 0x24);
    L004342A0(ebx, *(ebp - 0x34) + 1, *(ebp - 0x3c));
    L004342A0(ebx + *(ebp - 0x3c), *(ebp - 0x28), *(ebp - 0x20));
    *(A8 + 0x28) = *(A8 + 0x28) + 1;
    eax = *(ebp - 0x2c);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0044752F - 0x0044755A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L0044752F(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = *(Ac + 0x34);
    eax = *(A10 + 0x34);
    edx = *eax & 0xff;
    edx = *ecx & 0xff;
    return L00425D00(ecx + 1, edx, eax + 1, edx);
}

/*	Procedure: 0x0044755B - 0x00447617
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L0044755B(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = A8;
    (save)esi;
    (save)edi;
    esp = esp - 0x10;
    esi = *(ebx + 4);
    eax = esi;
    *(ebp - 0x1c) = esi;
    *Ac = eax;
    edi = ebx + 8;
    eax = L0042E310(esi * 4);
    edx = 0;
    ebx = eax;
    if(esi > 0) {
        esi :: 8;
        if(!(ecx = esi - 8)) {
            do {
                *(ebx + edx * 4) = edi;
                eax = edi + 0x40;
                edi = edi - -128;
                *(ebx + edx * 4 + 4) = eax;
                *(ebx + edx * 4 + 8) = edi;
                eax = edi + 0x40;
                edi = edi - -128;
                *(ebx + edx * 4 + 0xc) = eax;
                *(ebx + edx * 4 + 0x10) = edi;
                eax = edi + 0x40;
                edi = edi - -128;
                *(ebx + edx * 4 + 0x14) = eax;
                *(ebx + edx * 4 + 0x18) = edi;
                *(ebx + edx * 4 + 0x1c) = edi + 0x40;
                edx = edx + 8;
                edi = edi - -128;
            } while(edx < ecx);
        }
        do {
            *(ebx + edx * 4) = edi;
            edx = edx + 1;
            edi = edi + 0x40;
        } while(edx < esi);
    }
    eax = *(ebp - 0x1c);
    *(ebp - 0x14) = eax;
    *(ebp - 0x10) = *(ebp - 0x14);
    eax = ebp - 0x18;
    *(ebp - 0x18) = ebx;
    L00429E20(eax, 0x447530, 0);
    esp = ebp - 0xc;
    eax = ebx;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00447618 - 0x00447771
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 */

L00447618(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = A8;
    (save)edi;
    esp = esp - 0x14;
    eax = *(esi + 0x28);
    *(ebp - 0x10) = eax;
    edi = *(esi + 0x14);
    ecx = eax * 8;
    ebx = edi;
    edi = edi + ecx;
    eax = L0042E410( *(esi + 0x10), edi);
    *(ebp - 0x20) = eax;
    *(esi + 0x10) = *(ebp - 0x20);
    *(esi + 0x14) = edi;
    *(esi + 0x18) = edi;
    edx = *(ebp - 0x10);
    esi = edx << 8 & 16711680;
    esi = esi | edx >> 0x18;
    ecx = ebx;
    eax = edx;
    edx = edx << 0x18;
    esi = esi | eax >> 8 & 65280 | edx;
    *( *(ebp - 0x20) + 8) = esi;
    esi = ecx << 8 & 16711680;
    esi = esi | ecx >> 0x18;
    eax = *(ebp - 0x20);
    esi = esi | ecx >> 8 & 65280;
    *(eax + 0xc) = esi | ecx << 0x18;
    edi = *(ebp - 0x20);
    eax = *(ebp - 0x20);
    *(ebp - 0x14) = eax;
    *(ebp - 0x14) = *(ebp - 0x14) + ebx;
    esi = *(ebp - 0x10) * 4;
    edi = edi + 0x30;
    esi = esi + *(ebp - 0x14);
    if(!( *(ebp - 0x10) = *(ebp - 0x10) - 1)) {
        do {
            eax = *(edi + 0x29) & 0xff;
            ebx = *(edi + 0x2a) & 0xff;
            *(ebp - 0x18) = eax;
            *(ebp - 0x1c) = *(edi + 0x2b) & 0xff;
            eax = L00447200(edi + 0x2c, ebx);
            edx = eax << 8 & 16711680;
            edx = edx | eax >> 0x18;
            ecx = eax;
            eax = eax << 0x18;
            edx = edx | ecx >> 8 & 65280 | eax;
            *( *(ebp - 0x14)) = edx;
            eax = edi - *(ebp - 0x20);
            ecx = eax << 8 & 16711680;
            ecx = ecx | eax >> 0x18;
            edx = eax;
            eax = eax << 0x18;
            *esi = ecx | edx >> 8 & 65280 | eax;
            *(ebp - 0x14) = *(ebp - 0x14) + 4;
            eax = (ebx + 0x2f + *(ebp - 0x18) + *(ebp - 0x1c) & -4) + edi;
            esi = esi + 4;
            edi = eax;
        } while(*(ebp - 0x10) = *(ebp - 0x10) - 1);
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00447772 - 0x0044777F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00447772()
{



}

/*	Procedure: 0x00447780 - 0x004479BF
 *	Argument size: 16
 *	Local size: 868
 *	Save regs size: 12
 *	Called by:
 *		L00415A60()
 */

L00447780(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  V35c;



    esp = esp & -8;
    ebx = & V35c;
    esi = A10;
    if(A8 == 0 || *A8 != -1695881261) {
        L00429610(65561);
    }
    if(Ac == 0 || esi == 0) {
        L00429610(65538);
    }
    if(*(A8 + 0x38) != 0 || *(A8 + 0x10) != 0) {
        L00429610(65539);
    }
    *(A8 + 4) = esi;
    *(A8 + 8) = A14;
    eax = L0042E310(131072);
    *(ebx - 0x5c) = eax;
    *(A8 + 0x10) = eax;
    *(A8 + 0x14) = 0x30;
    *(A8 + 0x18) = 131072;
    eax = *(ebx - 0x5c);
    *(ebx + -352) = eax;
    L00434150( *(ebx + -352), 0x30);
    *( *(ebx + -352)) = 1265387045;
    *( *(ebx + -352) + 4) = 0x100;
    eax = L0042EF50();
    esi = edx << 8;
    ecx = 0;
    esi = esi & 16711680;
    esi = esi | edx >> 0x18;
    ecx = edx;
    edx = edx << 0x18;
    esi = esi | ecx >> 8 & 65280 | edx;
    *( *(ebx + -352) + 0x10) = esi;
    esi = eax << 8 & 16711680;
    esi = esi | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    esi = esi | ecx >> 8 & 65280 | eax;
    *( *(ebx + -352) + 0x14) = esi;
    *(ebx - 0xc) = ebx + -348;
    eax = ebx + -608;
    ecx = ebx - 0x40;
    *(ebx - 8) = ebx + -864;
    *(ebx - 4) = eax;
    *(ebx - 0x44) = esp;
    L0042CCB0(Ac, ecx);
    *(A8 + 0x20) = 0;
    *(A8 + 0x24) = 0;
    *(A8 + 0x28) = 0;
    esi = L00447240(A8, ebx - 0x40, 0);
    (save)0;
    eax = L0042CE90(Ac) - 0x3d;
    (restore)ecx;
    if(eax > 2) {
        goto L00447910;
    }
    switch(eax) {
        case 0:
L00447902:
            ecx = 2;
            goto L00447915;
        case 1:
L00447910:
            *( *(ebx + -352) + 7) = 1;
            L0042e140( *(A8 + 4), *(A8 + 8), Ac, 0, 0, 0, 1);
            *(A8 + 0x38) = eax;
            *(A8 + 0x4c) = 0;
            *(A8 + 0x50) = esi;
            *(A8 + 0x58) = 0;
            *(A8 + 0x5c) = 0;
            goto L00447993;
        case 2:
            ecx = 3;
            goto L00447915;
    }
    goto L00447902;
    L0042E3E0(ebx - 0x5c);
    *(A8 + 0x10) = 0;
    *(A8 + 0x14) = 0;
    *(A8 + 0x18) = 0;
    L004234F0(0, 0, 0);
    if(*(ebx - 0x50) == 0) {
        goto L00447990;
    }
    ecx = *(ebx - 0x58);
    *(ebx - 0x50)(-1);
    esp = *(ebx - 0x44);
    *(A8 + 0x2c) = 1;
    *(A8 + 0x2d) = 0;
    *(A8 + 0x7b8) = 0;
    *(A8 + 0x2e) = 0;
    *(A8 + 0x30) = 0;
    *(A8 + 0x34) = 0;
}

/*	Procedure: 0x004479C0 - 0x00447CFF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00415B9D()
 */

L004479C0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x40;
    if(A8 == 0) {
        goto L004479d8;
    }
    if(*esi == -1695881261) {
        goto L004479e3;
    }
    L00429610(65561);
    *(ebp - 0x4c) = *(( *(esi + 0x2d) & 0xff) * 0x28 + esi + 0x38);
    if(( *(esi + 0x2c) & 0xff) - 1 > 2) {
        goto L00447cf1;
    }
    goto ( *(edx * 4 + 0x478260));
    L0042e1b0( *(ebp - 0x4c));
    if(al == 0) {
        goto L00447cf1;
    }
    if(*(esi + 0xc) & 4 || *(esi + 0x2d) == 0) {
        goto L00447a40;
    }
    (save) *(esi + 0x38);
    L0042d6a0( *(ebp - 0x4c));
    (restore)ecx;
    if(al != 0) {
        goto L00447bec;
    }
    L0042e210( *(ebp - 0x4c), 0);
    *(esi + 0x2c) = 2;
    goto L00447cf1;
    L0042e280( *(ebp - 0x4c), ebp - 0x2c, 0);
    if(al == 0) {
        goto L00447cf1;
    }
    if(*(ebp - 0x2c) == 0) {
        goto L00447bec;
    }
    ecx = *(ebp - 0x2c);
    *(ebx + 4) = ecx;
    L00447560( *(ebp - 0x2c), ebx + 0x10);
    *(ebx + 8) = eax;
    *(esi + 0x2c) = 3;
    *(ebp - 0x40) = *(ebx + 8);
    eax = *(ebx + 0x10);
    edi = *(ebx + 0xc);
    *(ebp - 0x38) = eax;
    *(ebp - 0x34) = *(ebx + 0x14);
    *(ebp - 0x30) = 2;
    if(*(esi + 0xc) & 4) {
        goto L00447be3;
    }
    *(ebp - 0x30) = *(ebp - 0x30) | 0x40;
    goto L00447be3;
    *(ebx + 0xc) = edi;
    *(ebp - 0x28) = *( *(ebp - 0x40) + edi * 4);
    L00447240(esi, *(ebp - 0x28), *(ebp - 0x34));
    *(ebp - 0x44) = eax;
    eax = *(ebp - 0x28);
    if(*(eax + 0x20) & *(ebp - 0x30)) {
        goto L00447be0;
    }
    if(*(esi + 0x2d) < 0x2f) {
        goto L00447b01;
    }
    L00429610(196729);
    *(ebp - 0x10) = esp;
    L0042e140( *(esi + 4), *(esi + 8), *(ebp - 0x4c), 0, 0, *( *(ebp - 0x28) + 0x34), 1);
    *(ebp - 0x3c) = eax;
    goto L00447b83;
    *(ebp - 0x48) = *(ebp - 0x18);
    if(*( *(ebp - 0x48)) != 196712 && edx != 196717 && edx != 196726) {
        goto L00447b60;
    }
    if(*(ebp - 0x1c) == 0) {
        goto L00447b54;
    }
    (save)-1;
    ecx = *(ebp - 0x24);
    *(ebp - 0x1c)();
    esp = *(ebp - 0x10);
    goto L00447be0;
    L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) == 0) {
        goto L00447b80;
    }
    (save)-1;
    ecx = *(ebp - 0x24);
    *(ebp - 0x1c)();
    esp = *(ebp - 0x10);
    *(ebx + 0xc) = edi + 1;
    *(esi + 0x2d) = *(esi + 0x2d) + 1;
    *(ebx + 0x28) = *(ebp - 0x3c);
    *(ebx + 0x3c) = *(esi + 0x28) - 1;
    *(ebx + 0x40) = *(ebp - 0x44);
    *(ebx + 0x48) = *(esi + 0x20);
    *(ebx + 0x4c) = *(esi + 0x24);
    *(esi + 0x2c) = 1;
    L00428970(esi + 0x7b8, *( *(ebp - 0x28) + 0x34), 0xff);
    *(esi + 0x2e) = 1;
    return 1;
    if(edi + 1 < *(ebp - 0x38)) {
        goto L00447ac5;
    }
    *(ebp - 0x4c) = *(esi + 0x10);
    *(ebp - 0x4c) = *(ebp - 0x4c) + *(ebx + 0x18);
    eax = *(ebx + 0x14) + 1;
    ecx = *(esi + 0x28) - eax << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    ecx = ecx | eax >> 8 & 65280 | edx;
    *( *(ebp - 0x4c) + 0x1c) = ecx;
    edi = *(esi + 0x20) - *(ebx + 0x20);
    eax = *(esi + 0x24);
    asm("sbb eax,[ebx+0x24]");
    edx = eax << 8;
    ecx = 0;
    edx = edx & 16711680;
    edx = edx | eax >> 0x18;
    ecx = eax;
    eax = eax << 0x18;
    edx = edx | ecx >> 8 & 65280 | eax;
    *( *(ebp - 0x4c)) = edx;
    ecx = edi << 8 & 16711680;
    edx = edi;
    eax = edi;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    eax = *(ebp - 0x4c);
    *(eax + 4) = ecx | edi << 0x18;
    L0042BD00(ebx);
    L0042E3E0(ebx + 4);
    L0042E3E0(ebx + 8);
    (save)0x28;
    L00434150(ebx);
    (restore)ecx;
    if(( *(esi + 0x2d) & 0xff) != 0) {
        goto L00447cd0;
    }
    L00447620(esi);
    *(esi + 0x2c) = 0xff;
    esp = ebp - 0xc;
    return 0;
    *(esi + 0x2d) = dl + 0xff;
    *(ebp - 0x4c) = *((edx - 1) * 0x28 + esi + 0x38);
    *(esi + 0x2c) = 3;
    goto L00447a93;
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00447D00 - 0x00447DAF
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00415B9D()
 */

L00447D00(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  edi;



    esp = esp - 8;
    edi = A14;
    if(A8 == 0) {
        goto L00447d1e;
    }
    if(*A8 == -1695881261) {
        goto L00447d29;
    }
    L00429610(65561);
    if(Ac == 0) {
        goto L00447d40;
    }
    L004288C0(Ac, A8 + 0x7b8);
    if(A10 == 0) {
        goto L00447d49;
    }
    *A10 = *(A8 + 0x28);
    if(edi == 0) {
        goto L00447d58;
    }
    *edi = *(A8 + 0x20);
    *(edi + 4) = *(A8 + 0x24);
    *(A8 + 0x2e) = 0;
    if(0 == 0 || A18 == 0) {
        goto L00447da6;
    }
    eax = L0042EF00();
    *(ebp - 0x14) = eax;
    *(ebp - 0x14) = *(ebp - 0x14) - *(A8 + 0x30);
    edi = edx;
    asm("sbb edi,[esi+0x34]");
    *(ebp - 0x10) = A18;
    if(edi > 0) {
        goto L00447da0;
    }
    != ? 0x447d96 : ;
    if(*(ebp - 0x14) >= *(ebp - 0x10)) {
        goto L00447da0;
    }
    bl = 0;
    goto L00447da6;
    *(A8 + 0x30) = eax;
    *(A8 + 0x34) = edx;
    esp = ebp - 0xc;
    return bl;
}

/*	Procedure: 0x00447DB0 - 0x00447DE4
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00415B9D()
 */

L00447DB0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        goto L00447dc7;
    }
    if(*A8 == -1695881261) {
        goto L00447dd2;
    }
    L00429610(65561);
    if(Ac == 0) {
        goto L00447ddb;
    }
    *Ac = *(A8 + 0x14);
    return *(A8 + 0x10);
}

/*	Procedure: 0x00447DF0 - 0x00447FEC
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00447FF0()
 *		L00448160()
 *		L004483B0()
 */

L00447DF0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    (save)edi;
    esp = esp - 0x10;
    *(ebp - 0x14) = *(A8 + 0x2a) & 0xff;
    *(ebp - 0x10) = *(A8 + 0x29) & 0xff;
    *(ebp - 0x18) = *(A8 + 0x2b) & 0xff;
    eax = ( *(ebp - 0x14) + 0x2f + *(ebp - 0x10) + *(ebp - 0x18) & -4) + Ac;
    if(eax > A10) {
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    edx = *A8;
    edi = *(A8 + 4);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    ecx = ecx | eax >> 8 & 65280 | edx;
    edx = edi << 8 & 16711680;
    edx = edx | edi >> 0x18;
    eax = edi;
    edi = edi << 0x18;
    edx = edx | eax >> 8 & 65280 | edi;
    eax = ecx;
    *(ebp - 0x1c) = 0;
    *A14 = edx | *(ebp - 0x1c);
    *(A14 + 4) = eax;
    ecx = *(A8 + 8);
    edi = *(A8 + 0xc);
    *(ebp - 0x1c) = 0;
    edx = ecx << 8 & 16711680;
    edx = edx | ecx >> 0x18;
    eax = ecx;
    ecx = ecx << 0x18;
    edx = edx | eax >> 8 & 65280 | ecx;
    ecx = edi << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    eax = edi;
    edi = edi << 0x18;
    *(A14 + 8) = ecx | eax >> 8 & 65280 | edi | *(ebp - 0x1c);
    *(A14 + 0xc) = edx;
    edi = *(A8 + 0x10);
    edx = *(A8 + 0x14);
    *(ebp - 0x1c) = 0;
    ecx = edi << 8 & 16711680;
    ecx = ecx | edi >> 0x18;
    eax = edi;
    edi = edi << 0x18;
    ecx = ecx | eax >> 8 & 65280 | edi;
    edi = edx << 8 & 16711680;
    edi = edi | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *(A14 + 0x10) = edi | eax >> 8 & 65280 | edx | *(ebp - 0x1c);
    *(A14 + 0x14) = ecx;
    edx = *(A8 + 0x18);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *(A14 + 0x20) = ecx | eax >> 8 & 65280 | edx;
    edx = *(A14 + 0x34);
    edx :: 0;
    if(!(edi = A8 + 0x2c)) {
        L00428F50(edx, edi, *(ebp - 0x14));
    }
    eax = *(A14 + 0x38);
    edi = edi + *(ebp - 0x14);
    if(eax != 0) {
        if(*(ebp - 0x10) != 0) {
            L00428F50(eax, edi, *(ebp - 0x10));
        } else {
            L00437730( *(A8 + 0x28) & 0xff, eax + 1, 0x3f, 0);
            *( *(A14 + 0x38)) = al;
        }
    }
    eax = *(A14 + 0x3c);
    edi = edi + *(ebp - 0x10);
    if(eax != 0) {
        eax = L00428F50(eax, edi, *(ebp - 0x18));
    }
    esp = ebp - 0xc;
    (restore)edi;
    return 1;
}

/*	Procedure: 0x00447FED - 0x00447FEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00447FED()
{



}

/*	Procedure: 0x00447FF0 - 0x00448159
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00416000()
 */

L00447FF0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 4;
    if(ebx == 0 || *ebx != -1695881261) {
        L00429610(65561);
    }
    if(A10 != 0) {
        A14 = A10;
        *(ebp - 0x10) = *(A14 + 0x34);
        esi = *(A14 + 0x38);
        edi = *(A14 + 0x3c);
        L00434150(A14, 0x40);
        *(A10 + 0x34) = *(ebp - 0x10);
        *(A10 + 0x38) = esi;
        *(A10 + 0x3c) = edi;
    }
    A14 = *(ebx + 0x14);
    *(ebp - 0x10) = A14;
    if(A14 >= 0x30) {
        esi = *(ebx + 0x10);
        edi = *(esi + 8);
        ebx = *(esi + 0xc);
        A14 = edi << 8 & 16711680;
        A14 = A14 | edi >> 0x18;
        edx = edi;
        edi = edi << 0x18;
        A14 = A14 | edx >> 8 & 65280 | edi;
        edx = ebx << 8 & 16711680;
        edx = edx | ebx >> 0x18;
        edx = edx | ebx >> 8 & 65280;
        edx = (edx | ebx << 0x18) + esi;
        ecx = A14 * 4 + edx;
        if(Ac < A14) {
            edx = *(ecx + Ac * 4);
            ebx = edx << 8 & 16711680;
            ecx = edx;
            A14 = edx;
            ebx = ebx | ecx >> 0x18;
            A14 = A14 >> 8 & 65280;
            ebx = ebx | A14;
            ebx = ebx | edx << 0x18;
            if(ebx <= *(ebp - 0x10) && ebx + 0x2c <= *(ebp - 0x10)) {
                A14 :: 0;
                if(!(edx = ebx + esi)) {
                    A14 = *(edx + 0x1c);
                    ecx = A14 << 8 & 16711680;
                    ecx = ecx | A14 >> 0x18;
                    esi = A14 >> 8 & 65280;
                    A14 = A14 << 0x18;
                    ecx = ecx | esi | A14;
                    *A14 = ecx;
                }
                if(A10 == 0) {
                    goto L0044813f;
                }
                if(L00447DF0(edx, ebx, *(ebp - 0x10), A10) != 0) {
L0044813f:
                    return 1;
                }
            }
        }
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0044815A - 0x0044815F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044815A()
{



}

/*	Procedure: 0x00448160 - 0x004483A2
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00448580()
 */

L00448160(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0xc;
    if(edi == 0 || *edi != -1695881261) {
        L00429610(65561);
    }
    if(A10 == 0) {
        L00429610(65538);
    }
    if(A14 != 0) {
        eax = A14;
        *(ebp - 0x18) = *(eax + 0x34);
        esi = *(eax + 0x38);
        ebx = *(eax + 0x3c);
        L00434150(eax, 0x40);
        *(A14 + 0x34) = *(ebp - 0x18);
        *(A14 + 0x38) = esi;
        *(A14 + 0x3c) = ebx;
    }
    eax = *(edi + 0x14);
    *(ebp - 0x18) = eax;
    if(eax >= 0x30) {
        eax = *(edi + 0x10);
        *(ebp - 0x10) = eax;
        esi = *(eax + 8);
        eax = *(eax + 0xc);
        ebx = esi << 8 & 16711680;
        ebx = ebx | esi >> 0x18;
        edi = esi;
        esi = esi << 0x18;
        edx = eax;
        ebx = ebx | edi >> 8 & 65280 | esi;
        edx = edx << 8 & 16711680;
        ecx = eax;
        edi = eax;
        eax = eax << 0x18;
        edx = edx | ecx >> 0x18;
        *(ebp - 0x14) = ebx;
        *(ebp - 0x14) = *(ebp - 0x14) << 2;
        *(ebp - 0x14) = *(ebp - 0x14) + (edx | edi >> 8 & 65280 | eax) + *(ebp - 0x10);
        esi = *A10;
        if(esi == 0) {
            esi = Ac + 1;
            goto L004482f5;
        }
        if(esi < ebx) {
            edx = *( *(ebp - 0x14) + esi * 4);
            ecx = edx << 8 & 16711680;
            edi = edx;
            eax = edx;
            ecx = ecx | edi >> 0x18;
            ecx = ecx | eax >> 8 & 65280;
            ecx = ecx | edx << 0x18;
            if(ecx <= *(ebp - 0x18) && ecx + 0x2c <= *(ebp - 0x18)) {
                eax = *(ebp - 0x10) + ecx;
                ecx = *(eax + 0x18);
                edx = ecx << 8 & 16711680;
                edx = edx | ecx >> 0x18;
                edx = edx | ecx >> 8 & 65280;
                edx = edx | ecx << 0x18;
                esi = esi + 1;
                if(!(edx & 0x42)) {
                    edi = *(eax + 0x1c);
                    eax = edi << 8 & 16711680;
                    ecx = edi;
                    edx = edi;
                    eax = eax | ecx >> 0x18;
                    eax = eax | edx >> 8 & 65280;
                    esi = esi + (eax | edi << 0x18);
                }
L004482f5:
                if(esi < ebx) {
                    ecx = *( *(ebp - 0x14) + esi * 4);
                    ebx = ecx << 8 & 16711680;
                    edx = ecx;
                    eax = ecx;
                    ebx = ebx | edx >> 0x18;
                    ebx = ebx | eax >> 8 & 65280;
                    ebx = ebx | ecx << 0x18;
                    if(ebx <= *(ebp - 0x18) && ebx + 0x2c <= *(ebp - 0x18)) {
                        edx = *(ebp - 0x10) + ebx;
                        eax = *(edx + 0x20);
                        ecx = eax << 8 & 16711680;
                        ecx = ecx | eax >> 0x18;
                        ecx = ecx | eax >> 8 & 65280;
                        if(Ac == (ecx | eax << 0x18)) {
                            eax = A10;
                            *eax = esi;
                            if(A14 == 0) {
                                goto L00448383;
                            }
                            if(L00447DF0(edx, ebx, *(ebp - 0x18), A14) != 0) {
L00448383:
                                return 1;
                            }
                        }
                    }
                }
            }
        }
    }
    eax = A10;
    *eax = -1;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x004483A3 - 0x004483AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004483A3()
{



}

/*	Procedure: 0x004483B0 - 0x00448573
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00416000()
 */

L004483B0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 8;
    if(esi == 0 || *esi != -1695881261) {
        L00429610(65561);
    }
    if(A10 == 0) {
        L00429610(65538);
    }
    if(A14 != 0) {
        *(ebp - 0x14) = *(A14 + 0x34);
        *(ebp - 0x10) = *(A14 + 0x38);
        edi = *(A14 + 0x3c);
        L00434150(A14, 0x40);
        *(A14 + 0x34) = *(ebp - 0x14);
        *(A14 + 0x38) = *(ebp - 0x10);
        *(A14 + 0x3c) = edi;
    }
    if(Ac != 0) {
        A10 = *(esi + 0x14);
        *(ebp - 0x14) = A10;
        if(A10 >= 0x30) {
            A10 = *(esi + 0x10);
            *(ebp - 0x10) = A10;
            edi = *( *(ebp - 0x10) + 8);
            edx = edi << 8 & 16711680;
            edx = edx | edi >> 0x18;
            A10 = edi;
            edi = edi << 0x18;
            edx = edx | A10 >> 8 & 65280 | edi;
            esi = *( *(ebp - 0x10) + 0xc);
            A10 = esi << 8 & 16711680;
            A10 = A10 | esi >> 0x18;
            A10 = A10 | esi >> 8 & 65280;
            A10 = (A10 | esi << 0x18) + *(ebp - 0x10);
            ecx = edx * 4 + A10;
            if(Ac < edx) {
                edi = *(ecx + Ac * 4);
                esi = edi << 8 & 16711680;
                esi = esi | edi >> 0x18;
                esi = esi | edi >> 8 & 65280;
                esi = esi | edi << 0x18;
                if(esi <= *(ebp - 0x14) && esi + 0x2c <= *(ebp - 0x14)) {
                    A10 = *( *(ebp - 0x10) + esi + 0x20);
                    esi = A10 << 8 & 16711680;
                    esi = esi | A10 >> 0x18;
                    edi = A10;
                    A10 = A10 << 0x18;
                    esi = esi | edi >> 8 & 65280 | A10;
                    *A10 = esi;
                    if(esi < edx) {
                        A10 = *(ecx + esi * 4);
                        edi = A10 << 8 & 16711680;
                        ecx = A10;
                        edx = A10;
                        edi = edi | ecx >> 0x18;
                        edi = edi | edx >> 8 & 65280;
                        A10 = A10 << 0x18;
                        edi = edi | A10;
                        if(edi <= *(ebp - 0x14) && edi + 0x2c <= *(ebp - 0x14)) {
                            esi = *(ebp - 0x10) + edi;
                            if(A14 == 0) {
                                goto L00448557;
                            }
                            if(L00447DF0(esi, edi, *(ebp - 0x14), A14) != 0) {
L00448557:
                                return 1;
                            }
                        }
                    }
                }
            }
        }
    }
    *A10 = -1;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00448574 - 0x0044857F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00448574()
{



}

/*	Procedure: 0x00448580 - 0x0044862A
 *	Argument size: 20
 *	Local size: 332
 *	Save regs size: 12
 *	Called by:
 *		L00415DE0()
 */

L00448580(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  edi;
	/* unknown */ void  V30;
	/* unknown */ void  V34;
	/* unknown */ void  V38;
	/* unknown */ void  V40;
	/* unknown */ void  V41;
	/* unknown */ void  V140;



    esp = esp & -8;
    edx = esp;
    V30 = & V40;
    V34 = 0;
    V38 = 0;
    V140 = 0;
    L00448160(A8, Ac, & V140, edx);
    if(al != 0) {
        edi = & V41;
        do {
            if((V40 & 0xff) == A14) {
                L00425E40(edi, A14, A10, A14, A18);
                if(al != 0) {
                    goto L00448604;
                }
            }
            L00448160(A8, Ac, & V140, esp);
        } while(al != 0);
        goto L00448621;
L00448604:
        return V140;
    }
L00448621:
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x0044862B - 0x0044862F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044862B()
{



}

/*	Procedure: 0x00448630 - 0x00448688
 *	Argument size: 12
 *	Local size: 68
 *	Save regs size: 4
 *	Called by:
 *		L00448690()
 */

L00448630(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffffbc;



    ebx = A10;
    for(L00434B20( & Vffffffbc, A8, Ac, 0x47825c, 1); 1; ebx = ebx + L00428F50(ebx, eax, *(ebp - 0x48)) + 1) {
        ecx = ebp - 0x48;
        eax = L00434B00( & Vffffffbc, ecx, 0);
        if(eax == 0) {
            break;
        }
    }
    *ebx = 0;
}

/*	Procedure: 0x00448689 - 0x0044868F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00448689()
{



}

/*	Procedure: 0x00448690 - 0x00448EB1
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00416000()
 */

L00448690(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 0x1f4;
    ebx = Ac;
    if(esi == 0 || *esi != -1695881261) {
        L00429610(65561);
    }
    if(A10 == 0) {
        L00429610(65538);
    }
    eax = *(esi + 0x14);
    *(ebp - 0x74) = eax;
    if(eax < 0x30) {
        if(A14 != 0) {
            *A14 = 0;
        }
        return 0;
    }
    eax = *(esi + 0x10);
    *(ebp - 0x54) = eax;
    edx = *( *(ebp - 0x54) + 8);
    edi = edx;
    *(ebp - 0x78) = edx;
    eax = edx;
    edx = edx << 0x18;
    eax = eax >> 0x18;
    *(ebp - 0x78) = *(ebp - 0x78) << 8;
    *(ebp - 0x78) = *(ebp - 0x78) & 16711680;
    *(ebp - 0x78) = *(ebp - 0x78) | eax;
    *(ebp - 0x78) = *(ebp - 0x78) | edi >> 8 & 65280;
    *(ebp - 0x78) = *(ebp - 0x78) | edx;
    ecx = *( *(ebp - 0x54) + 0xc);
    esi = ecx << 8 & 16711680;
    esi = esi | ecx >> 0x18;
    (save) *(A10 + 0x4c) & 0xff;
    edi = ecx >> 8 & 65280;
    esi = esi | edi;
    ecx = ecx << 0x18;
    esi = esi | ecx;
    edi = L00447200(A10 + 0x4d);
    eax = A10;
    (restore)ecx;
    if(!( *(eax + 0x44) & 0x100)) {
        ecx = eax + 0x4c;
        *(ebp + L004288C0(ebp + -440, ecx) + -439) = 0;
    } else {
        L00448630(A10 + 0x4d, *(A10 + 0x4c) & 0xff, ebp + -440);
        edi = edi & -134217729;
    }
    edx = ebp - 0x6c;
    *(ebp - 0x48) = edi;
    *(ebp - 0x48) = *(ebp - 0x48) << 8;
    *(ebp - 0x48) = *(ebp - 0x48) & 16711680;
    *(ebp - 0x48) = *(ebp - 0x48) | edi >> 0x18;
    eax = *(ebp - 0x54);
    ecx = edi;
    *(ebp + -156) = eax;
    eax = *(ebp - 0x78);
    *(ebp + -156) = *(ebp + -156) + esi;
    *(ebp - 0x48) = *(ebp - 0x48) | ecx >> 8 & 65280;
    edi = edi << 0x18;
    *(ebp - 0x50) = eax;
    *(ebp - 0x48) = *(ebp - 0x48) | edi;
    *(ebp - 0x50) = *(ebp - 0x50) << 2;
    *(ebp - 0x50) = *(ebp - 0x50) + *(ebp + -156);
    *edx = 0;
    *(edx + 4) = 0;
    *(edx + 8) = 0;
    ecx = *(A10 + 0x48);
    *(ebp - 0x80) = ecx;
    if(ecx == 0) {
        *(ebp - 0x80) = 0x3e8;
    }
    eax = A10;
    *(ebp - 0x2c) = *eax;
    *(ebp - 0x40) = *(eax + 4);
    *(ebp - 0x14) = *(eax + 8);
    ecx = *(eax + 0xc);
    *(ebp - 0x5c) = ecx;
    if(*(ebp - 0x40) >= ecx) {
        != ? 0x448856 : ;
        if(*(ebp - 0x2c) > *(ebp - 0x14)) {
            eax = *(ebp - 0x14);
            esi = *(ebp - 0x2c);
            edi = *(ebp - 0x40);
            *(ebp - 0x2c) = eax;
            *(ebp - 0x40) = *(ebp - 0x5c);
            *(ebp - 0x14) = esi;
            *(ebp - 0x5c) = edi;
        }
    }
    *(ebp + -447) = 1;
    if(!(eax = *(ebp - 0x2c) | *(ebp - 0x40)) && !(ecx = *(ebp - 0x14) | *(ebp - 0x5c))) {
        *(ebp + -447) = 0;
    }
    eax = A10;
    *(ebp - 0x24) = *(eax + 0x10);
    *(ebp - 0x58) = *(eax + 0x14);
    *(ebp - 0x1c) = *(eax + 0x18);
    ecx = *(eax + 0x1c);
    *(ebp - 0x70) = ecx;
    if(*(ebp - 0x58) >= ecx) {
        != ? 0x4488b8 : ;
        if(*(ebp - 0x24) > *(ebp - 0x1c)) {
            eax = *(ebp - 0x1c);
            ecx = *(ebp - 0x24);
            esi = *(ebp - 0x58);
            *(ebp - 0x24) = eax;
            *(ebp - 0x58) = *(ebp - 0x70);
            *(ebp - 0x1c) = ecx;
            *(ebp - 0x70) = esi;
        }
    }
    *(ebp + -446) = 1;
    if(!(edi = *(ebp - 0x24) | *(ebp - 0x58)) && !(edx = *(ebp - 0x1c) | *(ebp - 0x70))) {
        *(ebp + -446) = 0;
    }
    eax = A10;
    *(ebp - 0x3c) = *(eax + 0x20);
    *(ebp - 0x60) = *(eax + 0x24);
    *(ebp - 0x34) = *(eax + 0x28);
    ecx = *(eax + 0x2c);
    *(ebp - 0x44) = ecx;
    if(*(ebp - 0x60) >= ecx) {
        != ? 0x44891a : ;
        if(*(ebp - 0x3c) > *(ebp - 0x34)) {
            eax = *(ebp - 0x34);
            ecx = *(ebp - 0x3c);
            edi = *(ebp - 0x60);
            *(ebp - 0x3c) = eax;
            *(ebp - 0x60) = *(ebp - 0x44);
            *(ebp - 0x34) = ecx;
            *(ebp - 0x44) = edi;
        }
    }
    *(ebp + -445) = 1;
    if(!(eax = *(ebp - 0x3c) | *(ebp - 0x60)) && !(esi = *(ebp - 0x34) | *(ebp - 0x44))) {
        *(ebp + -445) = 0;
    }
    if(ebx >= *(ebp - 0x78)) {
        L00429610(65548);
    }
    ecx = *( *(ebp - 0x50) + ebx * 4);
    edi = ecx << 8 & 16711680;
    edx = ecx;
    eax = ecx;
    edi = edi | edx >> 0x18;
    edi = edi | eax >> 8 & 65280;
    edi = edi | ecx << 0x18;
    if(edi > *(ebp - 0x74) || edi + 0x2c > *(ebp - 0x74)) {
        L00429610(65546);
    }
    *(ebp - 0x7c) = ebx;
    *(ebp - 0x7c) = *(ebp - 0x7c) + 1;
    edx = *( *(ebp - 0x54) + edi + 0x1c);
    esi = edx << 8 & 16711680;
    eax = edx;
    ecx = edx;
    esi = esi | eax >> 0x18;
    esi = esi | ecx >> 8 & 65280;
    esi = (esi | edx << 0x18) + *(ebp - 0x7c);
    if(esi >= *(ebp - 0x78)) {
        esi = *(ebp - 0x78);
    }
    *(ebp - 0x78) = esi;
    if(*(ebp + -447) == 0 && *(ebp + -446) == 0 && *(ebp + -445) == 0 && *(A10 + 0x14c) == 0) {
        if(*(ebp - 0x7c) < esi) {
            *(ebp - 0x2c) = *(ebp - 0x7c);
            *(ebp - 0x2c) = *(ebp - 0x2c) << 2;
            *(ebp - 0x2c) = *(ebp - 0x2c) + *(ebp - 0x50);
            do {
                esi = *(ebp - 0x48);
                eax = *(ebp + -156);
                if(*(ebp - 0x48) == (esi & *(eax + *(ebp - 0x7c) * 4))) {
                    eax = *( *(ebp - 0x2c));
                    ecx = eax << 8 & 16711680;
                    edx = eax;
                    ebx = eax;
                    ecx = ecx | edx >> 0x18;
                    ecx = ecx | ebx >> 8 & 65280;
                    ecx = ecx | eax << 0x18;
                    if(ecx <= *(ebp - 0x74)) {
                        edi = ecx + 0x2c;
                        if(edi <= *(ebp - 0x74)) {
                            esi = *(ebp - 0x54) + ecx;
                            *(ebp - 0x40) = *(esi + 0x2a) & 0xff;
                            ebx = *(ebp - 0x40) + 0x2f;
                            edx = ( *(esi + 0x29) & 0xff) + ebx;
                            if((edx + ( *(esi + 0x2b) & 0xff) & -4) + ecx <= *(ebp - 0x74)) {
                                for(edi = ebp + -440; 1; edi = edi + ebx) {
                                    ebx = *edi & 0xff;
                                    edi = edi + 1;
                                    if(ebx == 0) {
                                        break;
                                    }
                                    if(L00426440(edi, ebx, esi + 0x2c, *(ebp - 0x40), 1) == 0) {
                                        goto L00448b42;
                                    }
                                }
                                *(ebp + -132) = esp;
                                L00429A00(ebp - 0x6c, *(ebp - 0x7c));
L00448b36:
                                if(*(ebp - 0x68) >= *(ebp - 0x80)) {
                                    break;
                                }
                            }
                        }
                    }
                }
L00448b42:
                *(ebp - 0x2c) = *(ebp - 0x2c) + 4;
                *(ebp - 0x7c) = *(ebp - 0x7c) + 1;
            } while(*(ebp - 0x7c) < *(ebp - 0x78));
            goto L00448e87;
            L0042E3E0(ebp - 0x6c);
            L004234F0(0, 0, 0);
            if(*(ebp + -144) != 0) {
                (save)-1;
                ecx = *(ebp + -152);
                *(ebp + -144)();
            }
            esp = *(ebp + -132);
            goto L00448b36;
            L0042E3E0(ebp - 0x6c);
            L004234F0(0, 0, 0);
            if(*(ebp + -172) != 0) {
                ecx = *(ebp + -180);
                *(ebp + -172)(-1);
            }
            esp = *(ebp + -160);
            goto L00448e6b;
L00448e7b:
            while(*(ebp - 0x7c) < *(ebp - 0x78)) {
                esi = *(ebp - 0x48);
                eax = *(ebp + -156);
                if(*(ebp - 0x48) == (esi & *(eax + *(ebp - 0x7c) * 4))) {
                    eax = *( *(ebp - 0x4c));
                    edi = eax << 8 & 16711680;
                    edx = eax;
                    ebx = eax;
                    edi = edi | edx >> 0x18;
                    edi = edi | ebx >> 8 & 65280;
                    edi = edi | eax << 0x18;
                    if(edi <= *(ebp - 0x74) && edi + 0x2c <= *(ebp - 0x74)) {
                        esi = *(ebp - 0x54) + edi;
                        *(ebp + -444) = *(esi + 0x2a) & 0xff;
                        eax = *(esi + 0x29) & 0xff;
                        *(ebp - 0x50) = eax;
                        edx = *(ebp + -444) + 0x2f + eax;
                        if((edx + ( *(esi + 0x2b) & 0xff) & -4) + edi <= *(ebp - 0x74)) {
                            if(*(ebp + -447) == 0) {
                                goto L00448c71;
                            }
                            edi = *esi;
                            eax = *(esi + 4);
                            ecx = edi << 8 & 16711680;
                            ecx = ecx | edi >> 0x18;
                            ebx = edi;
                            edi = edi << 0x18;
                            ecx = ecx | ebx >> 8 & 65280 | edi;
                            ebx = eax << 8 & 16711680;
                            ebx = ebx | eax >> 0x18;
                            ebx = ebx | eax >> 8 & 65280;
                            eax = eax << 0x18;
                            ebx = ebx | eax;
                            edi = ecx;
                            ebx = ebx;
                            if(edi >= *(ebp - 0x40)) {
                                != ? 0x448c5d : ;
                                if(ebx >= *(ebp - 0x2c) && edi <= *(ebp - 0x5c)) {
                                    != ? 0x448c71 : ;
                                    if(ebx <= *(ebp - 0x14)) {
L00448c71:
                                        if(*(ebp + -446) == 0) {
                                            goto L00448cf8;
                                        }
                                        edi = *(esi + 8);
                                        eax = *(esi + 0xc);
                                        ebx = edi << 8 & 16711680;
                                        ebx = ebx | edi >> 0x18;
                                        ecx = edi;
                                        edi = edi << 0x18;
                                        ebx = ebx | ecx >> 8 & 65280 | edi;
                                        ecx = eax << 8 & 16711680;
                                        ecx = ecx | eax >> 0x18;
                                        ecx = ecx | eax >> 8 & 65280;
                                        eax = eax << 0x18;
                                        ecx = ecx | eax;
                                        edi = ebx;
                                        ecx = ecx;
                                        if(edi >= *(ebp - 0x58)) {
                                            != ? 0x448ce4 : ;
                                            if(ecx >= *(ebp - 0x24) && edi <= *(ebp - 0x70)) {
                                                != ? 0x448cf8 : ;
                                                if(ecx <= *(ebp - 0x1c)) {
L00448cf8:
                                                    if(*(ebp + -445) == 0) {
                                                        goto L00448d7e;
                                                    }
                                                    ebx = *(esi + 0x10);
                                                    edi = *(esi + 0x14);
                                                    ecx = ebx << 8 & 16711680;
                                                    ecx = ecx | ebx >> 0x18;
                                                    edx = ebx;
                                                    ebx = ebx << 0x18;
                                                    ecx = ecx | edx >> 8 & 65280 | ebx;
                                                    ebx = edi << 8 & 16711680;
                                                    ebx = ebx | edi >> 0x18;
                                                    ebx = ebx | edi >> 8 & 65280;
                                                    edi = edi << 0x18;
                                                    ebx = ebx | edi;
                                                    eax = ecx;
                                                    ebx = ebx;
                                                    if(eax >= *(ebp - 0x60)) {
                                                        != ? 0x448d6a : ;
                                                        if(ebx >= *(ebp - 0x3c) && eax <= *(ebp - 0x44)) {
                                                            != ? 0x448d7e : ;
                                                            if(ebx <= *(ebp - 0x34)) {
L00448d7e:
                                                                ebx = *(A10 + 0x14c) & 0xff;
                                                                if(bl == 0) {
                                                                    goto L00448ded;
                                                                }
                                                                if(*(ebp - 0x50) == 0) {
                                                                    (save)1;
                                                                    (save)L00437730( *(esi + 0x28) & 0xff, ebp + -512, 0x40, 0);
                                                                    edx = ebp + -512;
                                                                    (save)edx;
                                                                    eax = *(A10 + 0x14c) & 0xff;
                                                                } else {
                                                                    (save)1;
                                                                    (save) *(ebp - 0x50);
                                                                    (save)esi + 0x2c + *(ebp + -444);
                                                                    eax = bl & 0xff;
                                                                }
                                                                (save)eax;
                                                                (save)A10 + 0x14d;
                                                                esp = esp + 0x14;
                                                                if(L00426440() != 0) {
L00448ded:
                                                                    for(edi = ebp + -440; 1; edi = edi + ebx) {
                                                                        ebx = *edi & 0xff;
                                                                        edi = edi + 1;
                                                                        if(ebx == 0) {
                                                                            break;
                                                                        }
                                                                        if(L00426440(edi, ebx, esi + 0x2c, *(ebp + -444), 1) == 0) {
                                                                            goto L00448e73;
                                                                        }
                                                                    }
                                                                    *(ebp + -160) = esp;
                                                                    L00429A00(ebp - 0x6c, *(ebp - 0x7c));
L00448e6b:
                                                                    if(*(ebp - 0x68) >= *(ebp - 0x80)) {
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
L00448e73:
                *(ebp - 0x4c) = *(ebp - 0x4c) + 4;
                *(ebp - 0x7c) = *(ebp - 0x7c) + 1;
            }
        }
L00448e87:
        if(A14 != 0) {
            edx = *(ebp - 0x68);
            *A14 = edx;
        }
        eax = *(ebp - 0x6c);
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x4c) = *(ebp - 0x7c);
    *(ebp - 0x4c) = *(ebp - 0x4c) << 2;
    *(ebp - 0x4c) = *(ebp - 0x4c) + *(ebp - 0x50);
    goto L00448e7b;
}

/*	Procedure: 0x00448EC0 - 0x0044900D
 *	Argument size: 24
 *	Local size: 60
 *	Save regs size: 12
 *	Called by:
 *		L00416790()
 */

L00448EC0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = A18;
    *(ebp - 0x48) = L0042E3A0(0x1018);
    Vffffffd8 = esp;
    if(esi == 0) {
        esi = "\ntext/plain";
    }
    ebx = L0042B600(A8, Ac, A10, A14, 0x8b, esi);
    *( *(ebp - 0x48) + 4) = ebx;
    eax = L0042C570(ebx, 0);
    esi = *(ebp - 0x48);
    *(esi + 8) = eax;
    *(esi + 0xc) = edx;
    if(!(ecx = eax & 0xfff)) {
        edi = ecx;
        *( *(ebp - 0x48) + 0x10) = edi;
        esi = ebp - 0x40;
        *(ebp - 0x40) = edi;
        (save)0;
        (save)esi;
        esi = ecx;
        ecx = 0;
        eax = eax - esi;
        asm("sbb edx,ecx");
        (save)edx;
        (save)eax;
        (save)ebx;
        eax = L0042C600();
        esp = esp + 0x14;
        *(ebp - 0x44) = eax;
        L004342A0( *(ebp - 0x48) + 0x18, *(ebp - 0x44), *(ebp - 0x40));
        L0042E3E0(ebp - 0x44);
        goto L00448fa3;
        L0042BD00( *(ebp - 0x48) + 4);
        L0042E3E0(ebp - 0x48);
        L004234F0(0, 0, 0);
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = Vffffffc4;
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
    }
L00448fa3:
    *( *(ebp - 0x48)) = 1049466601;
    if(!(A1c & 1)) {
        ecx = *(ebp - 0x48);
        if(!(edx = *(ecx + 8) | *(ecx + 0xc))) {
            Vfffffff0 = esp;
            L00449060( *(ebp - 0x48), 0x47830c, 3);
            goto L00449003;
            L00449010(ebp - 0x48);
            L004234F0(0, 0, 0);
            if(Vffffffe4 != 0) {
                ecx = Vffffffdc;
                Vffffffe4(-1);
            }
            esp = *(ebp - 0x10);
        }
    }
L00449003:
    return *(ebp - 0x48);
}

/*	Procedure: 0x0044900E - 0x0044900F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044900E()
{



}

/*	Procedure: 0x00449010 - 0x00449053
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00416790()
 *		L00448EC0()
 */

L00449010(A8)
/* unknown */ void  A8;
{



    ecx = *A8;
    if(ecx == 0) {
        return;
    }
    if(*ecx != 1049466601) {
        *A8 = 0;
        esp = ebp - 4;
        return;
    }
    *ecx = 0;
    L0042BD00(ecx + 4);
    eax = L0042E3E0(A8);
    esp = ebp - 4;
}

/*	Procedure: 0x00449054 - 0x0044905F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449054()
{



}

/*	Procedure: 0x00449060 - 0x0044914C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00416790()
 *		L00448EC0()
 *		L00449150()
 */

L00449060(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != 1049466601) {
        L00429610(65561);
    }
    eax = *(A8 + 0x10);
    *(ebp - 0x1c) = eax;
    *(ebp - 0x10) = *(ebp - 0x1c);
    *(ebp - 0x10) = *(ebp - 0x10) + A10;
    eax = L0042E310( *(ebp - 0x10) + 0xfff & -4096);
    *(ebp - 0x18) = eax;
    *(ebp - 0x14) = A8;
    *(ebp - 0x14) = *(ebp - 0x14) + 0x18;
    L004342A0( *(ebp - 0x18), *(ebp - 0x14), *(ebp - 0x1c));
    L004342A0( *(ebp - 0x18) + *(ebp - 0x1c), Ac, A10);
    ecx = *(ebp - 0x1c);
    eax = 0;
    edi = *(A8 + 8) - ecx;
    esi = *(A8 + 0xc);
    asm("sbb esi,eax");
    L0042C770( *(A8 + 4), edi, esi, ebp - 0x18, *(ebp - 0x10), 0);
    ecx = *(ebp - 0x10);
    eax = 0;
    ecx = ecx + edi;
    asm("adc eax,esi");
    *(A8 + 8) = ecx;
    *(A8 + 0xc) = eax;
    edx = *(ebp - 0x10) & 0xfff;
    edi = edx;
    *(A8 + 0x10) = edi;
    if(A10 < edx) {
        (save)A10;
        (save)Ac;
        (save) *(ebp - 0x14) + *(ebp - 0x1c);
    } else {
        (save)edi;
        (save)A10 - edx + Ac;
        (save) *(ebp - 0x14);
    }
    esp = esp + 0xc;
    return L004342A0();
}

/*	Procedure: 0x0044914D - 0x0044914F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044914D()
{



}

/*	Procedure: 0x00449150 - 0x004491F9
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00459F00()
 */

L00449150(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    eax = 0x1000;
    L00434370();
    ebx = A14;
    (save) & A10;
    L00427F40( & Ac);
    (restore)ecx;
    if(ebx == 0) {
        ebx = 12320;
    }
    ebx = L00437370(ebp + -4100, 0x80, ebx);
    *(ebp + ebx + -4100) = 0x20;
    *(ebp + ebx + -4099) = 0x20;
    ebx = ebx + 2;
    if(A10 > 0xf7c) {
        A10 = L00427CA0(Ac, 0xf7c);
    }
    ebx = ebx + L004342A0(ebp + ebx + -4100, Ac, A10);
    eax = ebx + 1;
    *(ebp + ebx + -4100) = 0xa;
    return L00449060(A8, ebp + -4100, eax);
}

/*	Procedure: 0x004491FA - 0x004491FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004491FA()
{



}

/*	Procedure: 0x00449200 - 0x00449229
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00416790()
 */

L00449200(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 1049466601) {
        L00429610(65561);
    }
    eax = *(A8 + 8);
    edx = *(A8 + 0xc);
}

/*	Procedure: 0x0044922A - 0x0044922F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044922A()
{



}

/*	Procedure: 0x00449230 - 0x004492EE
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041FFD0()
 *		L0042462A()
 *		L004503AB()
 */

L00449230(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    esp = esp - 0x1c;
    if(A8 == 0 || Ac == 0) {
        L00429610(65538);
    }
    *(ebp - 0x28) = L0042E3A0(0x48);
    edi = A8 * 4 + 7 & -8;
    edx = edi;
    *(ebp - 0x10) = esp;
    eax = L0042E310(Ac * Ac + 0xfff & -4096);
    *( *(ebp - 0x28) + 0x18) = eax;
    goto L004492b3;
    L0042E3E0(ebp - 0x28);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)(-1);
    }
    esp = *(ebp - 0x10);
L004492b3:
    *( *(ebp - 0x28)) = A8;
    *( *(ebp - 0x28) + 4) = Ac;
    *( *(ebp - 0x28) + 8) = 0x20;
    *( *(ebp - 0x28) + 0xc) = edi;
    *( *(ebp - 0x28) + 0x30) = A8;
    *( *(ebp - 0x28) + 0x34) = Ac;
    *( *(ebp - 0x28) + 0x44) = -187035125;
    return *(ebp - 0x28);
}

/*	Procedure: 0x004492EF - 0x004492EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004492EF()
{



}

/*	Procedure: 0x004492F0 - 0x00449335
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00418850()
 *		L0041D700()
 *		L0041FFD0()
 *		L0042462A()
 *		L004503AB()
 */

L004492F0(A8)
/* unknown */ void  A8;
{



    ecx = *A8;
    if(ecx == 0) {
        return;
    }
    if(*(ecx + 0x44) != -187035125) {
        *A8 = 0;
        esp = ebp - 4;
        return;
    }
    *(ecx + 0x44) = 0;
    L0042E3E0(ecx + 0x18);
    eax = L0042E3E0(A8);
    esp = ebp - 4;
}

/*	Procedure: 0x00449336 - 0x0044933F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449336()
{



}

/*	Procedure: 0x00449340 - 0x0044937F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00418850()
 */

L00449340(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        eax = L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *A8;
    }
    if(A10 != 0) {
        eax = *(A8 + 4);
        *A10 = eax;
    }
}

/*	Procedure: 0x00449380 - 0x004493F4
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00460810()
 *		L00460D40()
 */

L00449380(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)Ac;
    if(A10 < 0x48 || *(A8 + 8) != 0x20) {
        L00429610(65547);
    }
    L00434150(Ac, 0x48);
    *Ac = *A8;
    *(Ac + 4) = *(A8 + 4);
    *(Ac + 8) = *(A8 + 8);
    *(Ac + 0xc) = *(A8 + 0xc);
    *(Ac + 0x10) = *(A8 + 0x10);
    *(Ac + 0x14) = *(A8 + 0x14);
    *(Ac + 0x18) = *(A8 + 0x18);
    *(Ac + 0x1c) = *(A8 + 0x1c);
    *(Ac + 0x30) = *A8;
    *(Ac + 0x34) = *(A8 + 4);
    *(Ac + 0x44) = -187035125;
    esp = ebp - 8;
    eax = Ac;
    (restore)Ac;
}

/*	Procedure: 0x004493F5 - 0x004493FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004493F5()
{



}

/*	Procedure: 0x00449400 - 0x00449434
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00451C10()
 */

L00449400(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)Ac;
    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    *(A8 + 0x20) = *Ac;
    eax = *(Ac + 4);
    *(A8 + 0x24) = eax;
    esp = ebp - 8;
    (restore)Ac;
}

/*	Procedure: 0x00449435 - 0x0044943F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449435()
{



}

/*	Procedure: 0x00449440 - 0x00449470
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042462A()
 *		L004503AB()
 */

L00449440(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    *(A8 + 0x20) = Ac;
    *(A8 + 0x24) = A10;
    return *(A8 + 0x24);
}

/*	Procedure: 0x00449471 - 0x0044947F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449471()
{



}

/*	Procedure: 0x00449480 - 0x004494B4
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00451C10()
 */

L00449480(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    *Ac = *(A8 + 0x20);
    eax = *(A8 + 0x24);
    *(Ac + 4) = eax;
    return *(Ac + 4);
}

/*	Procedure: 0x004494B5 - 0x004494BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004494B5()
{



}

/*	Procedure: 0x004494C0 - 0x004494F0
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00451C10()
 */

L004494C0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    *(A8 + 0x20) = *(A8 + 0x20) + Ac;
    *(A8 + 0x24) = *(A8 + 0x24) + A10;
}

/*	Procedure: 0x004494F1 - 0x004494FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004494F1()
{



}

/*	Procedure: 0x00449500 - 0x00449580
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044A2F0()
 *		L00451C10()
 */

L00449500(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 4;
    ebx = Ac;
    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    eax = *(A8 + 0x20);
    *(ebp - 0x10) = eax;
    edx = *ebx + eax;
    edi = *(A8 + 0x24);
    ecx = *(ebx + 4);
    eax = *(ebx + 8);
    ebx = *(ebx + 0xc);
    ecx = ecx + edi;
    eax = eax + *(ebp - 0x10);
    ebx = ebx + edi;
    if(edx < 0) {
        edx = 0;
    }
    if(ecx < 0) {
        ecx = 0;
    }
    edi = *A8;
    if(eax > edi) {
        eax = edi;
    }
    edi = *(A8 + 4);
    if(ebx > edi) {
        ebx = edi;
    }
    if(eax < edx) {
        eax = edx;
    }
    if(ebx < ecx) {
        ebx = ecx;
    }
    *(A8 + 0x28) = edx;
    *(A8 + 0x2c) = ecx;
    *(A8 + 0x30) = eax;
    *(A8 + 0x34) = ebx;
}

/*	Procedure: 0x00449581 - 0x0044958F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449581()
{



}

/*	Procedure: 0x00449590 - 0x004495E7
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044A2F0()
 *		L00451C10()
 */

L00449590(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 4;
    if(esi == 0 || *(esi + 0x44) != -187035125) {
        L00429610(65561);
    }
    eax = *(esi + 0x24);
    *(ebp - 0x10) = eax;
    ecx = *(esi + 0x34) - eax;
    eax = *(esi + 0x20);
    edx = *(esi + 0x30);
    edi = *(esi + 0x2c) - *(ebp - 0x10);
    esi = *(esi + 0x28);
    edx = edx - eax;
    *Ac = esi - eax;
    *(Ac + 4) = edi;
    *(Ac + 8) = edx;
    *(Ac + 0xc) = ecx;
}

/*	Procedure: 0x004495E8 - 0x004495EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004495E8()
{



}

/*	Procedure: 0x004495F0 - 0x00449694
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00451C10()
 */

L004495F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 8;
    esi = Ac;
    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    *(ebp - 0x14) = *(A8 + 0x24);
    *(ebp - 0x10) = *(A8 + 0x20);
    eax = *esi + *(ebp - 0x10);
    edi = *(A8 + 0x28);
    if(edi <= eax) {
        edi = eax;
    }
    ecx = *(esi + 4) + *(ebp - 0x14);
    edx = *(A8 + 0x2c);
    if(edx <= ecx) {
        edx = ecx;
    }
    eax = *(esi + 8) + *(ebp - 0x10);
    ecx = *(A8 + 0x30);
    if(ecx >= eax) {
        ecx = eax;
    }
    esi = *(esi + 0xc) + *(ebp - 0x14);
    eax = *(A8 + 0x34);
    if(eax >= esi) {
        eax = esi;
    }
    if(edi < ecx) {
        if(edx >= eax) {
            goto L00449674;
        }
        *(A8 + 0x28) = edi;
        *(A8 + 0x2c) = edx;
        *(A8 + 0x30) = ecx;
        *(A8 + 0x34) = eax;
    } else {
L00449674:
        *(A8 + 0x34) = 0;
        *(A8 + 0x30) = *(A8 + 0x34);
        *(A8 + 0x2c) = *(A8 + 0x30);
        eax = *(A8 + 0x2c);
        *(A8 + 0x28) = eax;
    }
}

/*	Procedure: 0x00449695 - 0x0044969F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449695()
{



}

/*	Procedure: 0x004496A0 - 0x004496CA
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004441C0()
 *		L0044BFA0()
 *		L0044C160()
 *		L0044C3C0()
 *		L0044C5F0()
 *		L0044CAF0()
 *		L0044CB90()
 *		L0044CFA0()
 *		L0044D320()
 *		L0044D8B0()
 *		L0044D9D0()
 *		L0044E050()
 *		L00451C10()
 *		L00458030()
 *		L004585CA()
 *		L0045879E()
 *		L0045DCA0()
 *		L0045E4B0()
 *		L0045E790()
 *		L0045E8D0()
 *		L0045EC20()
 *		L0045ED00()
 *		L00460810()
 *		L00461AB0()
 */

L004496A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    *(A8 + 0x38) = Ac;
    return *(A8 + 0x38);
}

/*	Procedure: 0x004496CB - 0x004496CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004496CB()
{



}

/*	Procedure: 0x004496D0 - 0x00449700
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00423E40()
 *		L0043A89B()
 *		L00443E20()
 *		L004441C0()
 *		L00446D20()
 *		L0044C5F0()
 *		L0044CB50()
 *		L0044D8B0()
 *		L00450020()
 *		L00451C10()
 *		L00456D00()
 *		L0045E790()
 *		L0045ED00()
 *		L00461BD0()
 */

L004496D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    eax = L0044CA90(Ac);
    *(A8 + 0x38) = eax;
    return *(A8 + 0x38);
}

/*	Procedure: 0x00449701 - 0x0044970F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449701()
{



}

/*	Procedure: 0x00449710 - 0x0044976C
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0043A89B()
 *		L004441C0()
 */

L00449710(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        eax = L00429610(65561);
    }
    if(Ac < 0x100) {
        return;
    }
    if(!( *(Ac + 0xc) & 0x1000)) {
        edx = *(Ac + 0x18) & 65535;
        if(edx != 0) {
            eax = L0044CA90(edx);
            *(A8 + 0x38) = eax;
        } else {
            *(A8 + 0x38) = *(Ac + 0x10);
        }
    }
    esp = ebp - 8;
}

/*	Procedure: 0x0044976D - 0x0044976F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044976D()
{



}

/*	Procedure: 0x00449770 - 0x00449792
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00443E20()
 *		L00446D20()
 *		L0044C5F0()
 *		L0044CB90()
 */

L00449770(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(A8 != 0) {
        eax = L004497A0(A8, Ac, A10, A14, *(A8 + 0x38));
    }
}

/*	Procedure: 0x00449793 - 0x0044979F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449793()
{



}

/*	Procedure: 0x004497A0 - 0x0044995A
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00449770()
 *		L00449B90()
 *		L0044A180()
 *		L0044A2F0()
 *		L0044A45D()
 *		L0044BFA0()
 *		L0044C160()
 *		L0044C3C0()
 *		L0044C5F0()
 *		L0044CFA0()
 *		L0044D270()
 *		L0044D320()
 *		L0044D9D0()
 *		L00458030()
 *		L004582BD()
 *		L004585CA()
 *		L0045879E()
 *		L0045DAA0()
 *		L0045DB10()
 *		L00461AB0()
 */

L004497A0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = A8;
    esp = esp - 0x14;
    ecx = A10;
    edx = A14;
    edi = A18;
    if(eax == 0) {
        return;
    }
    if(Ac > edx) {
        ebx = edx;
        edx = Ac;
        Ac = ebx;
    }
    ebx = *(eax + 0x20);
    Ac = Ac + ebx;
    ecx = ecx + *(eax + 0x24);
    edx = edx + ebx;
    if(ecx < *(eax + 0x2c) || ecx >= *(eax + 0x34)) {
        esp = ebp - 0xc;
        return;
    }
    ebx = *(eax + 0x28);
    if(Ac < ebx) {
        Ac = ebx;
    }
    ebx = *(eax + 0x30);
    if(edx > ebx) {
        edx = ebx;
    }
    if(Ac >= edx) {
        esp = ebp - 0xc;
        return;
    }
    ebx = *(eax + 0xc);
    ebx = ecx * ecx;
    ebx = ebx + *(eax + 0x18);
    *(ebp - 0x20) = edi;
    *(ebp - 0x20) = *(ebp - 0x20) & 0xff;
    eax = *(ebp - 0x20) & 0xff;
    eax :: 0;
    *(ebp - 0x20) = eax;
    if(!(esi = ebx + Ac * 4)) {
        eax = L00434080(esi, edx - Ac, edi);
    } else {
        if(*(ebp - 0x20) >= 0xff) {
            esp = ebp - 0xc;
            return;
        }
        *(ebp - 0x18) = edi;
        *(ebp - 0x18) = *(ebp - 0x18) >> 8;
        *(ebp - 0x18) = *(ebp - 0x18) & 0xff;
        *(ebp - 0x14) = edi;
        *(ebp - 0x14) = *(ebp - 0x14) >> 0x10;
        *(ebp - 0x14) = *(ebp - 0x14) & 0xff;
        *(ebp - 0x1c) = edi;
        *(ebp - 0x1c) = *(ebp - 0x1c) >> 0x18;
        *(ebp - 0x18) = *(ebp - 0x18) & 0xff;
        eax = *(ebp - 0x14) & 0xff;
        edi = edx;
        *(ebp - 0x14) = eax;
        eax = *(ebp - 0x1c) & 0xff;
        *(ebp - 0x1c) = eax;
        if(!(edi = edi - Ac - 1)) {
            do {
                eax = *esi;
                *(ebp - 0x10) = eax;
                edx = *(ebp - 0x10) >> 0x10;
                edx = dl & 0xff;
                edx = (dl & 0xff) - *(ebp - 0x14);
                edx = *(ebp - 0x20) * *(ebp - 0x20);
                eax = -2139062143;
                ecx = edx;
                asm("imul edx");
                eax = -2139062143;
                edx = edx + ecx >> 7;
                ecx = (ecx >> 0x1f) + edx + *(ebp - 0x14);
                edx = *(ebp - 0x10) >> 8;
                edx = dl & 0xff;
                edx = (dl & 0xff) - *(ebp - 0x18);
                edx = *(ebp - 0x20) * *(ebp - 0x20);
                ecx = (cl & 0xff) << 0x10;
                ebx = edx;
                asm("imul edx");
                eax = -2139062143;
                edx = edx + ebx >> 7;
                ebx = (ebx >> 0x1f) + edx + *(ebp - 0x18);
                edx = *(ebp - 0x10) >> 0x18;
                edx = (dl & 0xff) - *(ebp - 0x1c);
                edx = *(ebp - 0x20) * *(ebp - 0x20);
                ecx = ecx | (bl & 0xff) << 8;
                ebx = edx;
                asm("imul edx");
                edx = edx + ebx >> 7;
                ebx = (ebx >> 0x1f) + edx + *(ebp - 0x1c);
                *(ebp - 0x10) = *(ebp - 0x10) & 0xff;
                eax = *(ebp - 0x10) & 0xff;
                *esi = ecx | (bl & 0xff) << 0x18 | eax;
                esi = esi + 4;
            } while(edi = edi - 1);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044995B - 0x0044995F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044995B()
{



}

/*	Procedure: 0x00449960 - 0x00449982
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00443E20()
 *		L0044C5F0()
 */

L00449960(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    if(A8 != 0) {
        eax = L00449990(A8, Ac, A10, A14, *(A8 + 0x38));
    }
}

/*	Procedure: 0x00449983 - 0x0044998F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449983()
{



}

/*	Procedure: 0x00449990 - 0x00449B64
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L00449960()
 *		L00449B90()
 *		L0044A180()
 *		L0044BFA0()
 *		L0044C160()
 *		L0044C3C0()
 *		L0044C5F0()
 *		L0044CFA0()
 *		L0044D320()
 *		L0044D9D0()
 *		L00458030()
 *		L0045835D()
 *		L004583FD()
 *		L004585CA()
 *		L0045879E()
 *		L0045DBA0()
 *		L0045DC10()
 *		L00461AB0()
 */

L00449990(A14, A18, A1c, A20, A24)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    edi = A14;
    esp = esp - 0x18;
    esi = A18;
    ebp = A1c;
    ecx = A20;
    ebx = A24;
    if(edi == 0) {
        esp = esp + 0x18;
        return;
    }
    if(ebp > ecx) {
        edx = ecx;
        ecx = ebp;
        ebp = edx;
    }
    eax = *(edi + 0x24);
    esi = esi + *(edi + 0x20);
    ebp = ebp + eax;
    ecx = ecx + eax;
    if(esi < *(edi + 0x28) || esi >= *(edi + 0x30)) {
        esp = esp + 0x18;
        return;
    }
    edx = *(edi + 0x2c);
    if(ebp < edx) {
        ebp = edx;
    }
    eax = *(edi + 0x34);
    if(ecx > eax) {
        ecx = eax;
    }
    if(ebp >= ecx) {
        esp = esp + 0x18;
        return;
    }
    eax = *(edi + 0xc);
    Vffffffec = eax;
    edx = Vffffffec;
    edx = ebp * ebp + *(edi + 0x18);
    edi = ecx;
    *esp = ebx;
    *esp = *esp & 0xff;
    eax = *esp & 0xff;
    edi = edi - ebp;
    eax :: 0;
    *esp = eax;
    if(!(esi = edx + esi * 4)) {
        if(!(edi = edi - 1)) {
            do {
                *esi = ebx;
                esi = esi + Vffffffec;
            } while(edi = edi - 1);
        }
    } else {
        if(*esp >= 0xff) {
            esp = esp + 0x18;
            return;
        }
        Vfffffff8 = ebx;
        Vfffffff8 = Vfffffff8 >> 8;
        Vfffffff8 = Vfffffff8 & 0xff;
        Vfffffff8 = Vfffffff8 & 0xff;
        Vfffffff4 = ebx;
        Vfffffff4 = Vfffffff4 >> 0x10;
        Vfffffff4 = Vfffffff4 & 0xff;
        Vfffffff4 = Vfffffff4 & 0xff;
        Vfffffff0 = ebx;
        Vfffffff0 = Vfffffff0 >> 0x18;
        eax = Vfffffff0 & 0xff;
        Vfffffff0 = eax;
        if(!(edi = edi - 1)) {
            do {
                eax = *esi;
                Vfffffffc = eax;
                edx = Vfffffffc >> 0x10;
                edx = dl & 0xff;
                edx = (dl & 0xff) - Vfffffff4;
                edx = *esp * *esp;
                eax = -2139062143;
                ecx = edx;
                asm("imul edx");
                eax = -2139062143;
                edx = edx + ecx >> 7;
                ecx = (ecx >> 0x1f) + edx + Vfffffff4;
                edx = Vfffffffc >> 8;
                edx = dl & 0xff;
                edx = (dl & 0xff) - Vfffffff8;
                edx = *esp * *esp;
                ecx = (cl & 0xff) << 0x10;
                ebx = edx;
                asm("imul edx");
                eax = -2139062143;
                edx = edx + ebx >> 7;
                ebx = (ebx >> 0x1f) + edx + Vfffffff8;
                edx = Vfffffffc >> 0x18;
                edx = (dl & 0xff) - Vfffffff0;
                edx = *esp * *esp;
                ecx = ecx | (bl & 0xff) << 8;
                ebx = edx;
                asm("imul edx");
                edx = edx + ebx >> 7;
                ebx = (ebx >> 0x1f) + edx + Vfffffff0;
                Vfffffffc = Vfffffffc & 0xff;
                eax = Vfffffffc & 0xff;
                *esi = ecx | (bl & 0xff) << 0x18 | eax;
                esi = esi + Vffffffec;
            } while(edi = edi - 1);
        }
    }
    esp = esp + 0x18;
}

/*	Procedure: 0x00449B65 - 0x00449B6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449B65()
{



}

/*	Procedure: 0x00449B8E - 0x00449B8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449B8E()
{



}

/*	Procedure: 0x00449B90 - 0x00449C55
 *	Argument size: 24
 *	Local size: 32
 *	Save regs size: 12
 */

L00449B90(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = Ac;
    edx = A10;
    ecx = A14;
    eax = A18;
    if(A1c == 1) {
        if(esi == ecx) {
            return L00449990(A8, esi, edx, eax, *(A8 + 0x38));
        }
        if(edx == eax) {
            eax = L004497A0(A8, esi, edx, ecx, *(A8 + 0x38));
            esp = ebp - 0xc;
            return;
        }
        edi = *(A8 + 0x20);
        esi = esi + edi;
        ecx = ecx + edi;
        edi = *(A8 + 0x24);
        edx = edx + edi;
        eax = eax + edi;
        eax = L00465680(esi, edx, ecx, eax, A8 + 0x28, 0x449b70, A8, *(A8 + 0x38));
    } else {
        if(A1c != 0) {
            L004660C0(esi, edx, ecx, eax, A1c, ebp - 0x2c);
            eax = L0044A480(A8, 0, 0, ebp - 0x2c, 4, 0);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00449C56 - 0x00449C5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449C56()
{



}

/*	Procedure: 0x00449C60 - 0x00449DDD
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00449DE0()
 */

L00449C60(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x10;
    esi = Ac;
    ebx = A10;
    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        eax = L00429610(65561);
    }
    esi = esi + *(A8 + 0x20);
    ebx = ebx + *(A8 + 0x24);
    if(esi < *(A8 + 0x28) || ebx < *(A8 + 0x2c) || esi >= *(A8 + 0x30) || ebx >= *(A8 + 0x34)) {
        return;
    }
    ecx = *(A8 + 0xc);
    ecx = ebx * ebx;
    ecx = ecx + *(A8 + 0x18);
    *(ebp - 0x1c) = A14;
    *(ebp - 0x1c) = *(ebp - 0x1c) & 0xff;
    eax = *(ebp - 0x1c) & 0xff;
    eax :: 0;
    *(ebp - 0x1c) = eax;
    if(!(esi = ecx + esi * 4)) {
        if(*(A8 + 0x41) != 0) {
            *esi = *esi & 0xff | A14;
        } else {
            eax = A14;
            *esi = eax;
        }
    } else {
        if(*(ebp - 0x1c) >= 0xff) {
            esp = ebp - 0xc;
            return;
        }
        *(ebp - 0x14) = A14;
        *(ebp - 0x14) = *(ebp - 0x14) >> 8;
        *(ebp - 0x14) = *(ebp - 0x14) & 0xff;
        *(ebp - 0x14) = *(ebp - 0x14) & 0xff;
        *(ebp - 0x18) = A14;
        *(ebp - 0x18) = *(ebp - 0x18) >> 0x18;
        *(ebp - 0x18) = *(ebp - 0x18) & 0xff;
        eax = *esi;
        *(ebp - 0x10) = eax;
        edx = eax;
        ebx = A14 >> 0x10;
        edx = edx >> 0x10;
        ebx = bl & 0xff;
        ebx = bl & 0xff;
        edx = dl & 0xff;
        edx = (dl & 0xff) - ebx;
        edx = *(ebp - 0x1c) * *(ebp - 0x1c);
        eax = -2139062143;
        ecx = edx;
        asm("imul edx");
        eax = -2139062143;
        edx = edx + ecx >> 7;
        ecx = (ecx >> 0x1f) + edx + ebx;
        edx = *(ebp - 0x10) >> 8;
        edx = dl & 0xff;
        edx = (dl & 0xff) - *(ebp - 0x14);
        edx = *(ebp - 0x1c) * *(ebp - 0x1c);
        ecx = (cl & 0xff) << 0x10;
        ebx = edx;
        asm("imul edx");
        eax = -2139062143;
        edx = edx + ebx >> 7;
        ebx = (ebx >> 0x1f) + edx + *(ebp - 0x14);
        edx = ( *(ebp - 0x10) >> 0x18 & 0xff) - *(ebp - 0x18);
        edx = *(ebp - 0x1c) * *(ebp - 0x1c);
        ecx = ecx | (bl & 0xff) << 8;
        ebx = edx;
        asm("imul edx");
        edx = edx + ebx >> 7;
        ebx = (ebx >> 0x1f) + edx + *(ebp - 0x18);
        *(ebp - 0x10) = *(ebp - 0x10) & 0xff;
        eax = *(ebp - 0x10) & 0xff;
        *esi = ecx | (bl & 0xff) << 0x18 | eax;
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00449DDE - 0x00449DDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449DDE()
{



}

/*	Procedure: 0x00449DE0 - 0x00449E16
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044CB90()
 */

L00449DE0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    return L00449C60(A8, Ac, A10, *(A8 + 0x38));
}

/*	Procedure: 0x00449E17 - 0x00449E1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449E17()
{



}

/*	Procedure: 0x00449E20 - 0x00449E61
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044BFA0()
 *		L0044C160()
 *		L0044C5F0()
 *		L0044CFA0()
 *		L0044D270()
 *		L0044D320()
 *		L0044D9D0()
 *		L00458030()
 *		L00461AB0()
 */

L00449E20(A4, A8, Ac, A10)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebx;
    ebx = A8;
    ecx = Ac;
    if(A4 == 0) {
        (restore)ebx;
        return;
    }
    ebx = ebx + *(A4 + 0x20);
    ecx = ecx + *(A4 + 0x24);
    if(ebx >= *(A4 + 0x28) && ecx >= *(A4 + 0x2c) && ebx < *(A4 + 0x30) && ecx < *(A4 + 0x34)) {
        A10 = *(A4 + 0xc);
        A10 = ecx * ecx;
        ecx = *(A4 + 0x18) + A10;
        *(ecx + ebx * 4) = A10;
    }
    (restore)ebx;
}

/*	Procedure: 0x00449E62 - 0x00449E6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00449E62()
{



}

/*	Procedure: 0x00449E70 - 0x0044A087
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044A090()
 *		L0044A0D0()
 *		L0044A120()
 */

L00449E70(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 0x24;
    ebx = A18;
    edi = A1c;
    if(esi == 0 || *(esi + 0x44) != -187035125) {
        L00429610(65561);
    }
    edx = *(esi + 0x20);
    Ac = Ac + edx;
    A14 = A14 + edx;
    eax = *(esi + 0x24);
    A10 = A10 + eax;
    ecx = *(esi + 0x28);
    ebx = ebx + eax;
    if(Ac < ecx) {
        Ac = ecx;
    }
    edx = *(esi + 0x2c);
    if(A10 < edx) {
        A10 = edx;
    }
    eax = *(esi + 0x30);
    if(A14 > eax) {
        A14 = eax;
    }
    ecx = *(esi + 0x34);
    if(ebx > ecx) {
        ebx = ecx;
    }
    eax = Ac;
    if(A14 <= eax || ebx <= A10) {
        return;
    }
    *(ebp - 0x2c) = *(esi + 0xc);
    *(ebp - 0x18) = Ac;
    *(ebp - 0x18) = *(ebp - 0x18) << 2;
    edx = *(ebp - 0x2c);
    *(ebp - 0x18) = *(ebp - 0x18) + A10 * A10 + *(esi + 0x18);
    *(ebp - 0x20) = ebx;
    *(ebp - 0x20) = *(ebp - 0x20) - A10;
    *(ebp - 0x28) = A14;
    *(ebp - 0x28) = *(ebp - 0x28) - Ac;
    *(ebp - 0x30) = edi;
    *(ebp - 0x30) = *(ebp - 0x30) & 0xff;
    eax = *(ebp - 0x30) & 0xff;
    *(ebp - 0x30) = eax;
    if(eax == 0) {
        if(!( *(ebp - 0x20) = *(ebp - 0x20) - 1)) {
            do {
                L00434080( *(ebp - 0x18), *(ebp - 0x28), edi);
                eax = *(ebp - 0x2c);
                *(ebp - 0x18) = *(ebp - 0x18) + eax;
            } while(*(ebp - 0x20) = *(ebp - 0x20) - 1);
        }
    } else {
        if(*(ebp - 0x30) >= 0xff) {
            esp = ebp - 0xc;
            return;
        }
        *(ebp - 0x1c) = edi;
        *(ebp - 0x1c) = *(ebp - 0x1c) >> 8;
        *(ebp - 0x1c) = *(ebp - 0x1c) & 0xff;
        *(ebp - 0x1c) = *(ebp - 0x1c) & 0xff;
        *(ebp - 0x14) = edi;
        *(ebp - 0x14) = *(ebp - 0x14) >> 0x10;
        *(ebp - 0x14) = *(ebp - 0x14) & 0xff;
        *(ebp - 0x14) = *(ebp - 0x14) & 0xff;
        *(ebp - 0x24) = edi;
        *(ebp - 0x24) = *(ebp - 0x24) >> 0x18;
        eax = *(ebp - 0x24) & 0xff;
        *(ebp - 0x24) = eax;
        if(!( *(ebp - 0x20) = *(ebp - 0x20) - 1)) {
            do {
                esi = *(ebp - 0x18);
                if(!(edi = *(ebp - 0x28) - 1)) {
                    do {
                        eax = *esi;
                        *(ebp - 0x10) = eax;
                        edx = *(ebp - 0x10) >> 0x10;
                        edx = dl & 0xff;
                        edx = (dl & 0xff) - *(ebp - 0x14);
                        edx = *(ebp - 0x30) * *(ebp - 0x30);
                        eax = -2139062143;
                        ecx = edx;
                        asm("imul edx");
                        eax = -2139062143;
                        edx = edx + ecx >> 7;
                        ecx = (ecx >> 0x1f) + edx + *(ebp - 0x14);
                        edx = *(ebp - 0x10) >> 8;
                        edx = dl & 0xff;
                        edx = (dl & 0xff) - *(ebp - 0x1c);
                        edx = *(ebp - 0x30) * *(ebp - 0x30);
                        ecx = (cl & 0xff) << 0x10;
                        ebx = edx;
                        asm("imul edx");
                        eax = -2139062143;
                        edx = edx + ebx >> 7;
                        ebx = (ebx >> 0x1f) + edx + *(ebp - 0x1c);
                        edx = *(ebp - 0x10) >> 0x18;
                        edx = (dl & 0xff) - *(ebp - 0x24);
                        edx = *(ebp - 0x30) * *(ebp - 0x30);
                        ecx = ecx | (bl & 0xff) << 8;
                        ebx = edx;
                        asm("imul edx");
                        edx = edx + ebx >> 7;
                        ebx = (ebx >> 0x1f) + edx + *(ebp - 0x24);
                        *(ebp - 0x10) = *(ebp - 0x10) & 0xff;
                        eax = *(ebp - 0x10) & 0xff;
                        *esi = ecx | (bl & 0xff) << 0x18 | eax;
                        esi = esi + 4;
                    } while(edi = edi - 1);
                }
                eax = *(ebp - 0x2c);
                *(ebp - 0x18) = *(ebp - 0x18) + eax;
            } while(*(ebp - 0x20) = *(ebp - 0x20) - 1);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044A088 - 0x0044A08F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A088()
{



}

/*	Procedure: 0x0044A090 - 0x0044A0CC
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00423E40()
 *		L00446D20()
 *		L0044A180()
 *		L0044BFA0()
 *		L0044C160()
 *		L0044C3C0()
 *		L0044C5F0()
 *		L0044CFA0()
 *		L0044D320()
 *		L00458030()
 *		L004585CA()
 *		L0045879E()
 *		L0045DCA0()
 *		L00461AB0()
 */

L0044A090(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    return L00449E70(A8, Ac, A10, A14, A18, *(A8 + 0x38));
}

/*	Procedure: 0x0044A0CD - 0x0044A0CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A0CD()
{



}

/*	Procedure: 0x0044A0D0 - 0x0044A110
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00443E20()
 *		L004441C0()
 *		L0044A180()
 *		L0044CAF0()
 *		L0044CB50()
 *		L0044D9D0()
 *		L00450020()
 *		L00451C10()
 *		L00456D00()
 *		L0045EC20()
 *		L0045ED00()
 *		L00461BD0()
 */

L0044A0D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    return L00449E70(A8, *Ac, *(Ac + 4), *(Ac + 8), *(Ac + 0xc), *(A8 + 0x38));
}

/*	Procedure: 0x0044A111 - 0x0044A11F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A111()
{



}

/*	Procedure: 0x0044A120 - 0x0044A142
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044CB90()
 */

L0044A120(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L00449E70(A8, *Ac, *(Ac + 4), *(Ac + 8), *(Ac + 0xc), A10);
}

/*	Procedure: 0x0044A143 - 0x0044A14F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A143()
{



}

/*	Procedure: 0x0044A150 - 0x0044A172
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00443E20()
 *		L0044BFA0()
 *		L0044C160()
 *		L0044C5F0()
 *		L00458030()
 */

L0044A150(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    return L0044A180(A8, *Ac, *(Ac + 4), *(Ac + 8), *(Ac + 0xc), A10);
}

/*	Procedure: 0x0044A173 - 0x0044A17F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A173()
{



}

/*	Procedure: 0x0044A180 - 0x0044A2E2
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044A150()
 *		L0044C3C0()
 *		L0044C5F0()
 */

L0044A180(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x10;
    ebx = A10;
    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    eax = Ac;
    if(A14 <= eax || A18 <= ebx) {
        return;
    }
    if(A1c == 1) {
        edi = *(A8 + 0x38);
        L004497A0(A8, Ac, ebx, A14, edi);
        L004497A0(A8, Ac, A18 - 1, A14, edi);
        L00449990(A8, Ac, ebx + 1, A18 - 1, edi);
        edx = ebx + 1;
        eax = L00449990(A8, A14 - 1, edx, A18 - 1, edi);
    } else {
        if(A1c != 0) {
            edi = A1c + A1c;
            if(A18 - ebx <= edi || A14 - Ac <= edi) {
                eax = L0044A090(A8, Ac, ebx, A14, A18);
            } else {
                *(ebp - 0x1c) = Ac;
                edx = ebp - 0x1c;
                *(ebp - 0x14) = A14;
                edi = ebx + A1c;
                *(ebp - 0x18) = ebx;
                *(ebp - 0x10) = edi;
                L0044A0D0(A8, edx);
                ebx = A18 - A1c;
                *(ebp - 0x10) = A18;
                *(ebp - 0x18) = ebx;
                L0044A0D0(A8, ebp - 0x1c);
                *(ebp - 0x14) = Ac + A1c;
                *(ebp - 0x18) = edi;
                *(ebp - 0x10) = ebx;
                L0044A0D0(A8, ebp - 0x1c);
                *(ebp - 0x14) = A14;
                *(ebp - 0x1c) = A14 - A1c;
                eax = L0044A0D0(A8, ebp - 0x1c);
            }
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044A2E3 - 0x0044A2EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A2E3()
{



}

/*	Procedure: 0x0044A2F0 - 0x0044A45C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0045E430()
 *		L00460660()
 */

L0044A2F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = Ac;
    esp = esp - 0x44;
    if(edi == 0 || A10 == 0) {
        return;
    }
    L00449590(A8, ebp - 0x38);
    ecx = ebp - 0x50;
    ebx = ebp - 0x38;
    if(L0044B6F0(ecx, ebx, edi) == 0) {
        esp = ebp - 0xc;
        return;
    }
    eax = A10;
    *(ebp - 0x20) = *eax;
    *(ebp - 0x18) = *(eax + 4);
    if(*(ebp - 0x20) == 1) {
        edi = *(ebp - 0x4c);
        eax = *(ebp - 0x48);
        ecx = edi;
        *(ebp - 0x10) = eax;
        *(ebp - 0x1c) = *(ebp - 0x44);
        eax = ecx;
        asm("cdq");
        *(ebp - 0x18) = *(ebp - 0x18) / *(ebp - 0x18);
        edx = *(ebp - 0x18) % *(ebp - 0x18);
        esi = edi;
        ebx = *(ebp - 0x50);
        ecx = eax;
        esi = esi - *(ebp - 0x18) * *(ebp - 0x18);
        do {
            eax = L004497A0(A8, ebx, edi, *(ebp - 0x10), L00466830(A10, 0, esi));
            esi = esi + 1;
            if(esi == *(ebp - 0x18)) {
                esi = 0;
            }
            edi = edi + 1;
        } while(edi < *(ebp - 0x1c));
    } else {
        L00449500(A8, ebp - 0x50);
        esi = *(ebp - 0x18);
        eax = *(ebp - 0x50);
        ecx = *(ebp - 0x20);
        asm("cdq");
        ecx = ecx / ecx;
        edx = ecx % ecx;
        edi = *(ebp - 0x48);
        *(ebp - 0x10) = ecx * ecx;
        eax = *(ebp - 0x4c);
        asm("cdq");
        esi = esi / esi;
        edx = esi % esi;
        *(ebp - 0x14) = esi * esi;
        eax = *(ebp - 0x44);
        *(ebp - 0x1c) = eax;
        if(*(ebp - 0x14) < eax) {
            *(ebp - 0x40) = esi;
            *(ebp - 0x3c) = ecx;
            do {
                esi = *(ebp - 0x10);
                if(esi < edi) {
                    ebx = *(ebp - 0x14);
                    do {
                        edx = ebp - 0x28;
                        *(ebp - 0x28) = esi;
                        *(ebp - 0x24) = ebx;
                        L0044B0C0(A8, edx, A10, 0, *(ebp - 0x3c), *(ebp - 0x40), 0);
                        esi = esi + *(ebp - 0x20);
                    } while(esi < edi);
                }
                *(ebp - 0x14) = *(ebp - 0x14) + *(ebp - 0x18);
            } while(*(ebp - 0x14) < *(ebp - 0x1c));
        }
        eax = L00449500(A8, ebp - 0x38);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044A45D - 0x0044A47D
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A45D(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    return L004497A0(A8, Ac, A10, A14, A18);
}

/*	Procedure: 0x0044A47E - 0x0044A47F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A47E()
{



}

/*	Procedure: 0x0044A480 - 0x0044A4C1
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00449B90()
 */

L0044A480(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        L00429610(65561);
    }
    return L00467280(Ac, A10, A14, A18, 0x44a460, A8, *(A8 + 0x38));
}

/*	Procedure: 0x0044A4C2 - 0x0044A4CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A4C2()
{



}

/*	Procedure: 0x0044A4D0 - 0x0044A61A
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044CB90()
 *		L0044D8B0()
 *		L0044D9D0()
 *		L00456D00()
 *		L0045E4B0()
 *		L0045E790()
 *		L00461BD0()
 */

L0044A4D0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x18;
    ebx = A10;
    if(A8 == 0 || *(A8 + 0x44) != -187035125) {
        eax = L00429610(65561);
    }
    if(A18 == 0 || ebx == 0) {
        return;
    }
    *(ebp - 0x24) = L0044BAE0(Ac, ebp - 0x10);
    eax = *(ebx + 4);
    edi = *ebx;
    *(ebp - 0x14) = eax;
    eax = *(ebx + 8);
    *(ebp - 0x18) = eax;
    ebx = *(ebx + 0xc);
    if(eax <= edi || ebx <= *(ebp - 0x14)) {
        esp = ebp - 0xc;
        return;
    }
    if(!(A1c & 4)) {
        eax = L00467910( *(ebp - 0x24), *(ebp - 0x10), A14, A18);
        edi = *(ebp - 0x18) - eax;
    } else {
        if(!(A1c & 0x10)) {
            eax = L00467910( *(ebp - 0x24), *(ebp - 0x10), A14, A18);
            edi = edi + *(ebp - 0x18) - eax;
            edi :: -2147483648;
            asm("sbb edi,-0x1");
            edi = edi >> 1;
        }
    }
    if(!(A1c & 8)) {
        (save) *(ebp - 0x10);
        eax = L00467B80( *(ebp - 0x24));
        edx = ebx - eax;
        (restore)ecx;
    } else {
        if(!(A1c & 0x20)) {
            (save) *(ebp - 0x10);
            eax = L00467B80( *(ebp - 0x24));
            edx = ebx + *(ebp - 0x14) - eax;
            edx :: -2147483648;
            asm("sbb edx,-0x1");
            edx = edx >> 1;
            (restore)ecx;
        } else {
            edx = *(ebp - 0x14);
        }
    }
    ebx = edx + *(A8 + 0x24);
    ecx = A8 + 0x28;
    edx = ebp - 0x20;
    *(ebp - 0x20) = edi + *(A8 + 0x20);
    *(ebp - 0x1c) = ebx;
    eax = L004675A0( *(ebp - 0x24), *(ebp - 0x10), A8, edx, ecx, A14, A18, *(A8 + 0x38));
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044A61B - 0x0044A61F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A61B()
{



}

/*	Procedure: 0x0044A620 - 0x0044A849
 *	Argument size: 24
 *	Local size: 48
 *	Save regs size: 12
 *	Called by:
 *		L0044C5F0()
 *		L0044D320()
 *		L0044D8B0()
 *		L0044E050()
 *		L00450020()
 *		L0045E790()
 *		L0045E8D0()
 *		L0045ED00()
 *		L00460810()
 */

L0044A620(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A10;
    if(A8 != 0) {
        eax = A8;
        if(*(eax + 0x44) == -187035125) {
            goto L0044a64c;
        }
    }
    eax = L00429610(65561);
L0044a64c:
    if(A18 == 0 || edi == 0) {
        return;
    }
    Vffffffe4 = L0044BAE0(Ac, & Vffffffec);
    Vfffffff0 = *edi;
    Vffffffe8 = *(edi + 4);
    Vffffffdc = *(edi + 8);
    *(ebp - 0x34) = *(edi + 0xc);
    eax = Vfffffff0;
    if(Vffffffdc > eax) {
        eax = Vffffffe8;
        if(*(ebp - 0x34) > eax) {
            goto L0044a6a0;
        }
    }
    esp = ebp - 0xc;
    return;
L0044a6a0:
    Vffffffd8 = Vffffffdc;
    Vffffffd8 = Vffffffd8 - Vfffffff0;
    eax = L00467A30(Vffffffe4, Vffffffec, A14, A18, Vffffffd8, ebp - 0x38);
    ebx = eax;
    *(ebp - 0x3b) = M00486100;
    *(ebp - 0x39) = M00486102;
    if(ebx < A18) {
        Vffffffe0 = L00467910(Vffffffe4, Vffffffec, ebp - 0x3b, 3);
        eax = Vffffffd8 - *(ebp - 0x38);
        if(eax < Vffffffe0) {
            do {
                if(ebx == 0) {
                    goto L0044a706;
                }
L0044a710:
                edi = ebx;
                ebx = L00427CA0(A14, ebx - 1);
                edx = ebx + A14;
                *(ebp - 0x38) = *(ebp - 0x38) - L00467910(Vffffffe4, Vffffffec, edx, edi - ebx);
                eax = Vffffffd8 - *(ebp - 0x38);
            } while(eax < Vffffffe0);
            goto L0044a745;
L0044a706:
            esp = ebp - 0xc;
            return;
            goto L0044a710;
L0044a745:
        }
    } else {
        Vffffffe0 = 0;
    }
    if(!(A1c & 4)) {
        ecx = *(ebp - 0x38) + Vffffffe0;
        Vfffffff0 = Vffffffdc;
        Vfffffff0 = Vfffffff0 - ecx;
    } else {
        if(!(A1c & 0x10)) {
            eax = Vfffffff0;
            edx = *(ebp - 0x38) + Vffffffe0;
            Vfffffff0 = Vfffffff0 + Vffffffdc;
            Vfffffff0 = Vfffffff0 - edx;
            Vfffffff0 :: -2147483648;
            asm("sbb dword [ebp-0x10],-0x1");
            Vfffffff0 = Vfffffff0 >> 1;
        }
    }
    if(!(A1c & 8)) {
        (save)Vffffffec;
        edi = *(ebp - 0x34) - L00467B80(Vffffffe4);
        (restore)ecx;
    } else {
        if(!(A1c & 0x20)) {
            (save)Vffffffec;
            edi = *(ebp - 0x34) + Vffffffe8 - L00467B80(Vffffffe4);
            edi :: -2147483648;
            asm("sbb edi,-0x1");
            edi = edi >> 1;
            (restore)ecx;
        } else {
            edi = Vffffffe8;
        }
    }
    eax = A8;
    ecx = Vfffffff0 + *(eax + 0x20);
    Vffffffd0 = ecx;
    Vffffffd4 = edi + *(eax + 0x24);
    ecx = *(eax + 0x38);
    edi = eax + 0x28;
    Vffffffe8 = ecx;
    eax = L004675A0(Vffffffe4, Vffffffec, eax, & Vffffffd0, edi, A14, ebx, ecx);
    if(Vffffffe0 != 0) {
        ecx = *(ebp - 0x38);
        eax = ebp - 0x3b;
        Vffffffd0 = Vffffffd0 + ecx;
        eax = L004675A0(Vffffffe4, Vffffffec, A8, & Vffffffd0, edi, eax, 3, Vffffffe8);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044A84A - 0x0044A84F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A84A()
{



}

/*	Procedure: 0x0044A850 - 0x0044A8CA
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004395A0()
 *		L0044A8D0()
 */

L0044A850(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A14;
    esp = esp - 8;
    edi = Ac;
    ebx = A10;
    if(esi == 0 || edi == 0) {
        return 0;
    }
    *(ebp - 0x10) = L0044BE30(A8);
    *(ebp - 0x14) = *(edi + 8);
    *(ebp - 0x14) = *(ebp - 0x14) - *edi;
    if(*(ebp - 0x14) <= 0) {
        esp = ebp - 0xc;
        return 0;
    }
    edi = 0;
    do {
        eax = L0044BD30(A8, ebx, esi, *(ebp - 0x14));
        esi = esi - eax;
        ebx = ebx + eax;
        edi = edi + *(ebp - 0x10);
    } while(esi != 0);
    esp = ebp - 0xc;
    return edi;
}

/*	Procedure: 0x0044A8CB - 0x0044A8CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044A8CB()
{



}

/*	Procedure: 0x0044A8D0 - 0x0044AAFC
 *	Argument size: 24
 *	Local size: 60
 *	Save regs size: 12
 *	Called by:
 *		L0043A89B()
 */

L0044A8D0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A14;
    if(A8 != 0) {
        eax = A8;
        if(*(eax + 0x44) == -187035125) {
            goto L0044a8f9;
        }
    }
    eax = L00429610(65561);
L0044a8f9:
    if(A18 == 0 || A10 == 0) {
        return;
    }
    Vffffffe4 = L0044BAE0(Ac, & Vffffffe8);
    ebx = *(A8 + 0x20);
    Vffffffec = *A10;
    Vffffffec = Vffffffec + ebx;
    edx = *(A8 + 0x24);
    eax = A10;
    ecx = *(eax + 8);
    esi = *(eax + 4);
    *(ebp - 0x48) = ecx;
    *(ebp - 0x48) = *(ebp - 0x48) + ebx;
    Vfffffff0 = *(eax + 0xc);
    Vfffffff0 = Vfffffff0 + edx;
    eax = Vffffffec;
    esi = esi + edx;
    if(*(ebp - 0x48) <= eax || Vfffffff0 <= esi) {
        esp = ebp - 0xc;
        return;
    }
    if(!(A1c & 0x20)) {
        (save)A1c;
        eax = L0044A850(Ac, A10, edi, A18);
        ebx = Vfffffff0 - esi - eax;
        ebx :: -2147483648;
        asm("sbb ebx,-0x1");
        esi = esi + (ebx >> 1);
    } else {
        if(!(A1c & 8)) {
            (save)A1c;
            eax = L0044A850(Ac, A10, edi, A18);
            esi = Vfffffff0 - eax;
        }
    }
    ecx = *(A8 + 0x2c);
    if(ecx <= esi) {
        ecx = esi;
    }
    eax = A8;
    *(ebp - 0x40) = ecx;
    edx = *(eax + 0x34);
    if(edx >= Vfffffff0) {
        edx = Vfffffff0;
    }
    Vfffffff0 = edx;
    if(edx <= ecx) {
        esp = ebp - 0xc;
        return;
    }
    Vffffffe0 = L00467B90(Vffffffe4, Vffffffe8);
    Vffffffd8 = *(ebp - 0x48);
    Vffffffd8 = Vffffffd8 - Vffffffec;
    eax = A8;
    *(ebp - 0x44) = *(eax + 0x38);
    if(A18 != 0) {
        Vffffffd0 = A1c;
        Vffffffc4 = *(ebp - 0x48);
        Vffffffd4 = A1c;
        Vffffffdc = Vffffffec;
        Vffffffdc = Vffffffdc + *(ebp - 0x48);
        Vffffffd0 = Vffffffd0 & 4;
        Vffffffd4 = Vffffffd4 & 0x10;
        *(ebp - 0x48) = A8;
        *(ebp - 0x48) = *(ebp - 0x48) + 0x28;
        do {
            eax = L0044BD30(Ac, edi, A18, Vffffffd8);
            ebx = eax;
            if(esi + Vffffffe0 >= *(ebp - 0x40)) {
                if(Vffffffd0 == 0) {
                    if(Vffffffd4 == 0) {
                        ecx = Vffffffec;
                    } else {
                        eax = L00467910(Vffffffe4, Vffffffe8, edi, ebx);
                        ecx = Vffffffdc - eax;
                        ecx :: -2147483648;
                        asm("sbb ecx,-0x1");
                        ecx = ecx >> 1;
                    }
                } else {
                    eax = L00467910(Vffffffe4, Vffffffe8, edi, ebx);
                    ecx = Vffffffc4 - eax;
                }
                Vffffffc8 = ecx;
                Vffffffcc = esi;
                eax = L004675A0(Vffffffe4, Vffffffe8, A8, & Vffffffc8, *(ebp - 0x48), edi, ebx, *(ebp - 0x44));
            }
            esi = esi + Vffffffe0;
            edi = edi + ebx;
            A18 = A18 - ebx;
            if(esi > Vfffffff0) {
                break;
            }
        } while(A18 != 0);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044AAFD - 0x0044AAFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044AAFD()
{



}

/*	Procedure: 0x0044AB00 - 0x0044B0BB
 *	Argument size: 40
 *	Local size: 60
 *	Save regs size: 12
 *	Called by:
 *		L004441C0()
 */

L0044AB00(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A1c;
    esi = A28;
    if(A8 != 0 && A10 != 0 && A18 != 0 && A20 != 0 && esi != 0) {
        eax = A18;
        if(A24 < eax) {
            goto L0044ab40;
        }
    }
    return;
L0044ab40:
    edi = A24 + esi;
    if(edi < A24) {
        edi = edi | -1;
    }
    ecx = A18;
    if(edi >= ecx) {
        edi = ecx;
    }
    esi = 0;
    Vffffffd8 = edi;
    if(A24 != 0) {
        edx = A20;
        ecx = 0;
        if(edx > 0) {
            do {
                esi = edx + ecx >> 1;
                if(A24 < *(ebx + esi * 4)) {
                    edx = esi;
                } else {
                    if(A24 < *(ebx + esi * 4 + 4)) {
                        break;
                    }
                    ecx = esi + 1;
                }
            } while(ecx < edx);
        }
        A24 = A24 - *(ebx + esi * 4);
    }
    if(edi >= A18) {
        *(ebp - 0x48) = A20;
        *(ebp - 0x48) = *(ebp - 0x48) - 1;
    } else {
        ecx = A20;
        edx = 0;
        *(ebp - 0x48) = 0;
        if(ecx > 0) {
            do {
                *(ebp - 0x48) = edx;
                *(ebp - 0x48) = *(ebp - 0x48) + ecx;
                *(ebp - 0x48) = *(ebp - 0x48) >> 1;
                eax = *(ebp - 0x48);
                if(edi < *(ebx + eax * 4)) {
                    ecx = *(ebp - 0x48);
                } else {
                    if(edi < *(ebx + eax * 4 + 4)) {
                        goto L0044abe7;
                    }
                    edx = eax + 1;
                }
            } while(edx < ecx);
        }
    }
L0044abe7:
    ecx = *(ebx + *(ebp - 0x48) * 4);
    Vffffffd8 = Vffffffd8 - ecx;
    eax = L0044BAE0(Ac, & Vffffffe8);
    Vffffffec = eax;
    Vffffffc4 = L00467B90(Vffffffec, Vffffffe8);
    edi = *(A8 + 0x20);
    Vfffffff0 = *A10;
    Vfffffff0 = Vfffffff0 + edi;
    edx = *(A8 + 0x24);
    eax = A10;
    Vffffffdc = *(eax + 4);
    Vffffffdc = Vffffffdc + edx;
    Vffffffc8 = *(eax + 8);
    Vffffffc8 = Vffffffc8 + edi;
    edi = *(eax + 0xc) + edx;
    edx = *(A8 + 0x2c);
    if(edx <= Vffffffdc) {
        edx = Vffffffdc;
    }
    eax = A8;
    ecx = *(eax + 0x34);
    if(ecx >= edi) {
        ecx = edi;
    }
    if(ecx <= edx) {
        esp = ebp - 0xc;
        return;
    }
    eax = edx - Vffffffdc;
    asm("cdq");
    Vffffffc4 = Vffffffc4 / Vffffffc4;
    edx = Vffffffc4 % Vffffffc4;
    edi = eax;
    if(edi >= A20) {
        esp = ebp - 0xc;
        return;
    }
    if(edi > esi) {
        esi = edi;
        A24 = 0;
    }
    eax = ecx - Vffffffdc;
    asm("cdq");
    Vffffffc4 = Vffffffc4 / Vffffffc4;
    edx = Vffffffc4 % Vffffffc4;
    ecx = eax;
    if(ecx >= A20) {
        ecx = A20 - 1;
    }
    if(ecx < *(ebp - 0x48)) {
        *(ebp - 0x48) = ecx;
        Vffffffd8 = -1;
    }
    edi = esi;
    if(*(ebp - 0x48) < edi) {
        esp = ebp - 0xc;
        return;
    }
    eax = edi;
    Vffffffd4 = Vffffffc4 * Vffffffc4;
    Vffffffd4 = Vffffffd4 + Vffffffdc;
    *(ebp - 0x44) = *(A8 + 0x38);
    if(edi == *(ebp - 0x48)) {
        edx = *(ebx + esi * 4);
        ebx = *(ebx + esi * 4 + 4);
        edi = A14 + edx;
        ebx = ebx - edx;
        if(A2c == 4) {
            eax = L00467910(Vffffffec, Vffffffe8, edi, ebx);
            Vfffffff0 = Vffffffc8;
            Vfffffff0 = Vfffffff0 - eax;
        } else {
            if(A2c == 0x10) {
                eax = L00467910(Vffffffec, Vffffffe8, edi, ebx);
                Vfffffff0 = Vfffffff0 + Vffffffc8;
                Vfffffff0 = Vfffffff0 - eax;
                Vfffffff0 :: -2147483648;
                asm("sbb dword [ebp-0x10],-0x1");
                Vfffffff0 = Vfffffff0 >> 1;
                eax = Vfffffff0;
            }
        }
        if(Vffffffd8 < ebx) {
            ebx = Vffffffd8;
        }
        if(A24 > ebx) {
            A24 = ebx;
        }
        Vffffffe0 = L00467910(Vffffffec, Vffffffe8, edi, A24) + Vfffffff0;
        Vffffffe4 = Vffffffd4;
        eax = ebx - A24;
        edi = edi + A24;
        eax = L004675A0(Vffffffec, Vffffffe8, A8, & Vffffffe0, A8 + 0x28, edi, eax, *(ebp - 0x44));
    } else {
        if(A24 != 0) {
            ecx = *(ebx + esi * 4);
            *(ebp - 0x40) = A14;
            *(ebp - 0x40) = *(ebp - 0x40) + ecx;
            Vffffffd0 = *(ebx + esi * 4 + 4);
            Vffffffd0 = Vffffffd0 - ecx;
            eax = Vffffffd0;
            if(A24 > eax) {
                A24 = eax;
            }
            if(A2c == 4) {
                eax = L00467910(Vffffffec, Vffffffe8, *(ebp - 0x40), Vffffffd0);
                edi = Vffffffc8 - eax;
            } else {
                if(A2c == 0x10) {
                    eax = L00467910(Vffffffec, Vffffffe8, *(ebp - 0x40), Vffffffd0);
                    edi = Vfffffff0 + Vffffffc8 - eax;
                    edi :: -2147483648;
                    asm("sbb edi,-0x1");
                    edi = edi >> 1;
                } else {
                    edi = Vfffffff0;
                }
            }
            Vffffffe0 = L00467910(Vffffffec, Vffffffe8, *(ebp - 0x40), A24) + edi;
            Vffffffe4 = Vffffffd4;
            ecx = *(ebp - 0x40);
            ecx = ecx + A24;
            L004675A0(Vffffffec, Vffffffe8, A8, & Vffffffe0, A8 + 0x28, ecx, Vffffffd0 - A24, *(ebp - 0x44));
            Vffffffd4 = Vffffffd4 + Vffffffc4;
            esi = esi + 1;
        }
        eax = Vffffffd8;
        *(ebp - 0x40) = eax;
        if(eax != -1) {
            edx = *(ebx + *(ebp - 0x48) * 4);
            Vffffffd0 = A14;
            Vffffffd0 = Vffffffd0 + edx;
            Vffffffcc = *(ebx + *(ebp - 0x48) * 4 + 4);
            Vffffffcc = Vffffffcc - edx;
            if(A2c == 4) {
                edi = Vffffffc8 - L00467910(Vffffffec, Vffffffe8, Vffffffd0, Vffffffcc);
            } else {
                if(A2c == 0x10) {
                    edi = Vfffffff0 + Vffffffc8 - L00467910(Vffffffec, Vffffffe8, Vffffffd0, Vffffffcc);
                    edi :: -2147483648;
                    asm("sbb edi,-0x1");
                    edi = edi >> 1;
                } else {
                    edi = Vfffffff0;
                }
            }
            if(*(ebp - 0x40) < Vffffffcc) {
                Vffffffcc = Vffffffd8;
            }
            edx = *(ebp - 0x48);
            Vffffffe4 = Vffffffc4 * Vffffffc4 + Vffffffdc;
            Vffffffe0 = edi;
            eax = L004675A0(Vffffffec, Vffffffe8, A8, & Vffffffe0, A8 + 0x28, Vffffffd0, Vffffffcc, *(ebp - 0x44));
            *(ebp - 0x48) = *(ebp - 0x48) - 1;
        }
        if(A2c == 4) {
            if(esi <= *(ebp - 0x48)) {
                Vffffffcc = A8;
                Vffffffcc = Vffffffcc + 0x28;
                do {
                    ecx = *(ebx + esi * 4);
                    Vffffffd8 = A14;
                    Vffffffd8 = Vffffffd8 + ecx;
                    edi = *(ebx + esi * 4 + 4) - ecx;
                    eax = L00467910(Vffffffec, Vffffffe8, Vffffffd8, edi);
                    edx = Vffffffc8 - eax;
                    Vffffffe0 = edx;
                    Vffffffe4 = Vffffffd4;
                    L004675A0(Vffffffec, Vffffffe8, A8, & Vffffffe0, Vffffffcc, Vffffffd8, edi, *(ebp - 0x44));
                    eax = Vffffffc4;
                    esi = esi + 1;
                    Vffffffd4 = Vffffffd4 + eax;
                } while(esi <= *(ebp - 0x48));
            }
        } else {
            if(A2c == 0x10) {
                if(esi <= *(ebp - 0x48)) {
                    Vffffffd8 = Vfffffff0;
                    Vffffffd8 = Vffffffd8 + Vffffffc8;
                    Vfffffff0 = A8;
                    Vfffffff0 = Vfffffff0 + 0x28;
                    do {
                        ecx = *(ebx + esi * 4);
                        Vffffffdc = A14;
                        Vffffffdc = Vffffffdc + ecx;
                        edi = *(ebx + esi * 4 + 4) - ecx;
                        eax = L00467910(Vffffffec, Vffffffe8, Vffffffdc, edi);
                        edx = Vffffffd8 - eax;
                        eax = Vffffffd4;
                        edx :: -2147483648;
                        asm("sbb edx,-0x1");
                        edx = edx >> 1;
                        Vffffffe0 = edx;
                        Vffffffe4 = eax;
                        L004675A0(Vffffffec, Vffffffe8, A8, & Vffffffe0, Vfffffff0, Vffffffdc, edi, *(ebp - 0x44));
                        eax = Vffffffc4;
                        esi = esi + 1;
                        Vffffffd4 = Vffffffd4 + eax;
                    } while(esi <= *(ebp - 0x48));
                }
            } else {
                eax = Vfffffff0;
                Vffffffe0 = eax;
                if(esi <= *(ebp - 0x48)) {
                    Vffffffdc = A8;
                    Vffffffdc = Vffffffdc + 0x28;
                    do {
                        ecx = *(ebx + esi * 4);
                        edi = *(ebx + esi * 4 + 4) - ecx;
                        Vffffffe4 = Vffffffd4;
                        L004675A0(Vffffffec, Vffffffe8, A8, & Vffffffe0, Vffffffdc, A14 + ecx, edi, *(ebp - 0x44));
                        eax = Vffffffc4;
                        esi = esi + 1;
                        Vffffffd4 = Vffffffd4 + eax;
                    } while(esi <= *(ebp - 0x48));
                }
            }
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044B0BC - 0x0044B0BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B0BC()
{



}

/*	Procedure: 0x0044B0C0 - 0x0044B2DF
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044A2F0()
 *		L0044E050()
 *		L004584A0()
 *		L0045DCA0()
 *		L0045E0E0()
 *		L0045E3A0()
 */

L0044B0C0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0x38;
    esi = Ac;
    if(edi == 0 || *(edi + 0x44) != -187035125) {
        L00429610(65561);
    }
    if(A10 == 0) {
        L00429610(65538);
    }
    if(esi != 0) {
        *(ebp - 0x18) = *esi;
        *(ebp - 0x14) = *(esi + 4);
    } else {
        *(ebp - 0x18) = 0;
        *(ebp - 0x14) = 0;
    }
    if(A14 != 0) {
        eax = A14;
        *(ebp - 0x30) = *eax;
        *(ebp - 0x2c) = *(eax + 4);
    } else {
        *(ebp - 0x30) = 0;
        *(ebp - 0x2c) = 0;
    }
    esi = *(A10 + 4);
    *(ebp - 0x40) = 0;
    *(ebp - 0x3c) = 0;
    *(ebp - 0x38) = *A10;
    *(ebp - 0x34) = esi;
    esi = ~( *(edi + 0x20));
    edx = ~( *(edi + 0x24));
    ecx = esi + *edi;
    eax = edx + *(edi + 4);
    *(ebp - 0x28) = esi;
    *(ebp - 0x24) = edx;
    *(ebp - 0x20) = ecx;
    ecx = ebp - 0x30;
    *(ebp - 0x1c) = eax;
    eax = ebp - 0x18;
    edx = ebp - 0x40;
    ecx = ebp - 0x28;
    if(L00464BC0(ecx, edx, 0, edi + 0x28, eax, ecx, 0, & A18, & A1c) == 0) {
        return;
    }
    esi = *(A10 + 0xc);
    eax = *(ebp - 0x30);
    edx = esi;
    edx = *(ebp - 0x2c) * *(ebp - 0x2c) + *(A10 + 0x18);
    *(ebp - 0x10) = eax;
    eax = *(edi + 0xc);
    *(ebp - 0x44) = eax;
    ecx = *(ebp - 0x14) - *(ebp - 0x24);
    ecx = eax * eax;
    eax = *(A10 + 8) - 1;
    ecx = ecx + *(edi + 0x18);
    edi = *(ebp - 0x18) - *(ebp - 0x28);
    if(eax > 0x1f) {
        goto L0044b2c7;
    }
    switch(eax) {
        case 0:
            L00468540(ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
            goto L0044b2d2;
        case 1:
            L00468eb0(ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
            goto L0044b2d2;
        case 2:
L0044b2c7:
            L00429610(65538);
            esp = ebp - 0xc;
            return;
        case 3:
            L00469560(ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
            goto L0044b2d2;
        case 4:
            goto L0044b2c7;
        case 5:
            goto L0044b2c7;
        case 6:
            goto L0044b2c7;
        case 7:
            L0046a2f0(ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
            goto L0044b2d2;
        case 8:
            goto L0044b2c7;
        case 9:
            goto L0044b2c7;
        case 0xa:
            goto L0044b2c7;
        case 0xb:
            goto L0044b2c7;
        case 0xc:
            goto L0044b2c7;
        case 0xd:
            goto L0044b2c7;
        case 0xe:
            goto L0044b2c7;
        case 0xf:
            L0046a740(ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c);
            goto L0044b2d2;
        case 0x10:
            goto L0044b2c7;
        case 0x11:
            goto L0044b2c7;
        case 0x12:
            goto L0044b2c7;
        case 0x13:
            goto L0044b2c7;
        case 0x14:
            goto L0044b2c7;
        case 0x15:
            goto L0044b2c7;
        case 0x16:
            goto L0044b2c7;
        case 0x17:
            L0046aa20(ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c);
            goto L0044b2d2;
        case 0x18:
            goto L0044b2c7;
        case 0x19:
            goto L0044b2c7;
        case 0x1a:
            goto L0044b2c7;
        case 0x1b:
            goto L0044b2c7;
        case 0x1c:
            goto L0044b2c7;
        case 0x1d:
            goto L0044b2c7;
        case 0x1e:
            goto L0044b2c7;
        case 0x1f:
L0044b1f0:
            L0046b1c0(ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c);
            goto L0044b2d2;
    }
    goto L0044b1f0;
}

/*	Procedure: 0x0044B2E0 - 0x0044B512
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044D9D0()
 *		L0044E050()
 *		L0045DCA0()
 *		L0045E0E0()
 *		L0045E3A0()
 */

L0044B2E0(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0x38;
    esi = Ac;
    if(edi == 0) {
        goto L0044b2ff;
    }
    if(*(edi + 0x44) == -187035125) {
        goto L0044b30a;
    }
    L00429610(65561);
    if(A10 != 0) {
        goto L0044b319;
    }
    L00429610(65538);
    if(esi == 0) {
        goto L0044b330;
    }
    *(ebp - 0x18) = *esi;
    *(ebp - 0x14) = *(esi + 4);
    goto L0044b33e;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = 0;
    if(A14 == 0) {
        goto L0044b354;
    }
    eax = A14;
    *(ebp - 0x30) = *eax;
    *(ebp - 0x2c) = *(eax + 4);
    goto L0044b362;
    *(ebp - 0x30) = 0;
    *(ebp - 0x2c) = 0;
    esi = *(A10 + 4);
    *(ebp - 0x40) = 0;
    *(ebp - 0x3c) = 0;
    *(ebp - 0x38) = *A10;
    *(ebp - 0x34) = esi;
    esi = ~( *(edi + 0x20));
    edx = ~( *(edi + 0x24));
    ecx = esi + *edi;
    eax = edx + *(edi + 4);
    *(ebp - 0x28) = esi;
    *(ebp - 0x24) = edx;
    *(ebp - 0x20) = ecx;
    ecx = ebp - 0x30;
    *(ebp - 0x1c) = eax;
    eax = ebp - 0x18;
    edx = ebp - 0x40;
    ecx = ebp - 0x28;
    if(L00464BC0(ecx, edx, 0, edi + 0x28, eax, ecx, 0, & A18, & A1c) != 0) {
        goto L0044b3d0;
    }
    return;
    esi = *(A10 + 0xc);
    eax = *(ebp - 0x30);
    edx = esi;
    edx = *(ebp - 0x2c) * *(ebp - 0x2c) + *(A10 + 0x18);
    *(ebp - 0x10) = eax;
    eax = *(edi + 0xc);
    *(ebp - 0x44) = eax;
    ecx = *(ebp - 0x14) - *(ebp - 0x24);
    ecx = eax * eax;
    eax = *(A10 + 8) - 1;
    ecx = ecx + *(edi + 0x18);
    edi = *(ebp - 0x18) - *(ebp - 0x28);
    if(eax > 0x1f) {
        goto L0044b500;
    }
    goto ( *(eax * 4 + 0x478478));
    L0046c610(A20, ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c);
    goto L0044b50b;
    L0046c580(A20, ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c);
    goto L0044b50b;
    L0046c4d0(A20, ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c);
    goto L0044b50b;
    L0046c230(A20, ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
    goto L0044b50b;
    L0046C080(A20, ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
    goto L0044b50b;
    L0046bd30(A20, ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
    goto L0044b50b;
    L0046B8C0(A20, ecx, *(ebp - 0x44), edi, edx, esi, *(ebp - 0x10), A18, A1c, *(A10 + 0x1c), *(A10 + 0x10));
    goto L0044b50b;
    esp = ebp - 0xc;
    return L00429610(65538);
}

/*	Procedure: 0x0044B520 - 0x0044B614
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

__entry_point__()
{



    (save)ebp;
    ebp = esp;
    (save)-1;
    (save)0x49cff0;
    (save)0x46c790;
    (save) *fs:0x0];
    *fs:0x0] = esp;
    (save)eax;
    (save)ebx;
    esp = esp - 0x48;
    *(ebp - 0x14) = esp;
    *(ebp - 4) = 0;
    (save)ebp;
    (save)-1;
    (save)-1;
    (save)0x46c9d0;
    (save) *fs:0x0];
    *fs:0x0] = esp;
    esp = esp - 0x20;
    esp = esp & -32;
    L004224E0(0x486108);
    if(L0046CA40() == 0) {
        L0046CAF0(-1);
    }
    L00457FA0(0x49d000);
    ebx = GetCommandLineA();
    if(ebx != 0) {
        ebx = ebx + M004a1144;
    }
    GetStartupInfoA(ebp - 0x60);
    eax = !( *(ebp - 0x34) & 1) ? *(ebp - 0x30) & 65535 : 0xa;
    eax = L0046CAF0(L0042FDF0(GetModuleHandleA(0), 0, ebx, eax));
    *(ebp - 4) = -1;
    goto L0044b604;
    eax = L0046CA00( *(ebp - 0x14));
    *(ebp - 0x1c) = eax;
    return *(ebp - 0x1c);
    esp = *(ebp - 0x14);
    *(ebp - 4) = -1;
    eax = L0046CAE0();
L0044b604:
    esp = ebp - 0x18;
    (restore)ebx;
    (restore)ecx;
    (restore) *fs:0x0];
    esp = esp + 0xc;
    (restore)ebp;
}

/*	Procedure: 0x0044B615 - 0x0044B61F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B615()
{



}

/*	Procedure: 0x0044B692 - 0x0044B69F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B692()
{



}

/*	Procedure: 0x0044B6A0 - 0x0044B6E8
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041D470()
 *		L00423E40()
 *		L00451C10()
 */

L0044B6A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ecx = Ac;
    (save)esi;
    (save)ebp;
    ebx = *(ecx + 8);
    ebp = *(A8 + 8);
    al = 0;
    if(ebp >= ebx) {
        ebp = ebx;
    }
    esi = *ecx;
    ebx = *A8;
    if(ebx <= esi) {
        ebx = esi;
    }
    if(ebx < ebp) {
        ebp = *(ecx + 0xc);
        ebx = *(A8 + 0xc);
        if(ebx >= ebp) {
            ebx = ebp;
        }
        ebp = *(ecx + 4);
        ecx = *(A8 + 4);
        if(ecx <= ebp) {
            ecx = ebp;
        }
        if(ecx < ebx) {
            al = 1;
        }
    }
    (restore)ebp;
    (restore)esi;
}

/*	Procedure: 0x0044B6E9 - 0x0044B6EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B6E9()
{



}

/*	Procedure: 0x0044B6F0 - 0x0044B766
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L00419F00()
 *		L00419F80()
 *		L0041D2F0()
 *		L0041D9B0()
 *		L0041EB50()
 *		L0044A2F0()
 *		L00451C10()
 */

L0044B6F0(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;



    esi = A1c;
    ebp = *esi;
    ebx = *A18;
    if(ebx <= ebp) {
        ebx = ebp;
    }
    edx = *(esi + 4);
    eax = *(A18 + 4);
    if(eax <= edx) {
        eax = edx;
    }
    ebp = *(esi + 8);
    edx = *(A18 + 8);
    if(edx >= ebp) {
        edx = ebp;
    }
    esi = *(esi + 0xc);
    ebp = *(A18 + 0xc);
    if(ebp >= esi) {
        ebp = esi;
    }
    if(ebx < edx && eax < ebp) {
        *A14 = ebx;
        *(A14 + 4) = eax;
        *(A14 + 8) = edx;
        *(A14 + 0xc) = ebp;
        return 1;
    }
    *(A14 + 0xc) = 0;
    *(A14 + 8) = *(A14 + 0xc);
    eax = *(A14 + 8);
    *(A14 + 4) = eax;
    *A14 = *(A14 + 4);
    return 0;
}

/*	Procedure: 0x0044B767 - 0x0044B76F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B767()
{



}

/*	Procedure: 0x0044B770 - 0x0044B847
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041D9B0()
 *		L0041F14C()
 *		L00438EAB()
 *		L00442C60()
 *		L00443030()
 *		L00443120()
 *		L004435A0()
 *		L004438D0()
 *		L004574E0()
 */

L0044B770(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    eax = A8;
    (save)ebx;
    (save)esi;
    (save)edi;
    edi = Ac;
    (save)ebp;
    esp = esp - 0xc;
    esi = *eax;
    ebx = *(eax + 8);
    ebp = *(eax + 4);
    edx = *(eax + 0xc);
    Vffffffec = *edi;
    *esp = *(edi + 4);
    Vffffffe8 = *(edi + 8);
    edi = *(edi + 0xc);
    if(ebx <= esi || edx <= ebp) {
        eax = Vffffffec;
        if(Vffffffe8 <= eax || edi <= *esp) {
            *(A4 + 0xc) = 0;
            *(A4 + 8) = *(A4 + 0xc);
            *(A4 + 4) = *(A4 + 8);
            edx = *(A4 + 4);
            *A4 = edx;
            esp = esp + 0xc;
            (restore)ebp;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return 0;
        }
        *A4 = Vffffffec;
        *(A4 + 4) = *esp;
        eax = Vffffffe8;
        *(A4 + 8) = eax;
        *(A4 + 0xc) = edi;
    } else {
        eax = Vffffffec;
        if(Vffffffe8 <= eax || edi <= *esp) {
            *A4 = esi;
            *(A4 + 4) = ebp;
            *(A4 + 8) = ebx;
        } else {
            if(esi >= Vffffffec) {
                esi = Vffffffec;
            }
            *A4 = esi;
            if(ebp >= *esp) {
                ebp = *esp;
            }
            *(A4 + 4) = ebp;
            if(ebx <= Vffffffe8) {
                ebx = Vffffffe8;
            }
            *(A4 + 8) = ebx;
            if(edx <= edi) {
                edx = edi;
            }
        }
        *(A4 + 0xc) = edx;
    }
    esp = esp + 0xc;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x0044B848 - 0x0044B84F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B848()
{



}

/*	Procedure: 0x0044B850 - 0x0044B8BD
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00443120()
 */

L0044B850(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A8;
    (save)ebx;
    (save)esi;
    (save)ebp;
    esi = *eax;
    ebx = *A4;
    ebp = *(eax + 8);
    if(ebx < esi) {
        *A4 = esi;
    } else {
        if(ebx > ebp) {
            *A4 = ebp;
        }
    }
    edx = *(A4 + 8);
    if(edx < esi) {
        *(A4 + 8) = esi;
    } else {
        if(edx > ebp) {
            *(A4 + 8) = ebp;
        }
    }
    ebp = *(eax + 4);
    edx = *(A4 + 4);
    ebx = *(eax + 0xc);
    if(edx < ebp) {
        *(A4 + 4) = ebp;
    } else {
        if(edx > ebx) {
            *(A4 + 4) = ebx;
        }
    }
    eax = *(A4 + 0xc);
    if(eax < ebp) {
        *(A4 + 0xc) = ebp;
    } else {
        if(eax > ebx) {
            *(A4 + 0xc) = ebx;
        }
    }
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0044B8BE - 0x0044B8BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B8BE()
{



}

/*	Procedure: 0x0044B8C0 - 0x0044B8E7
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004395A0()
 */

L0044B8C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = *(A8 + 8) - *A8;
    eax = *Ac + *(Ac + 8) - ebx;
    eax :: -2147483648;
    asm("sbb eax,-0x1");
    eax = eax >> 1;
    *A8 = eax;
    eax = *A8 + ebx;
    *(A8 + 8) = eax;
    return *(A8 + 8);
}

/*	Procedure: 0x0044B8E8 - 0x0044B8EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044B8E8()
{



}

/*	Procedure: 0x0044B8F0 - 0x0044BA5D
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00451A30()
 */

L0044B8F0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    edx = Ac;
    (save)esi;
    (save)edi;
    (save)ebp;
    esp = esp - 4;
    *esp = *edx;
    ebp = *(edx + 8);
    eax = ebp - *esp;
    if(!(A10 & 1)) {
        ebp = *A14;
        *A8 = ebp;
        ebp = *A8 + eax;
    } else {
        if(!(A10 & 4)) {
            esi = *(A14 + 8);
            *A8 = esi - eax;
            *(A8 + 8) = esi;
            goto L0044b9af;
        }
        if(!(A10 & 0x10)) {
            ebp = *A14 + *(A14 + 8) - eax;
            ebp :: -2147483648;
            asm("sbb ebp,-0x1");
            ebp = ebp >> 1;
            *A8 = ebp;
            ebp = *A8 + eax;
        } else {
            if(!(A10 & 0x40)) {
                esi = *A14;
                if(*esp < esi) {
                    *A8 = esi;
                    ebp = eax + esi;
                } else {
                    edi = *(A14 + 8);
                    if(ebp > edi) {
                        ebp = edi - eax;
                        if(ebp < esi) {
                            ebp = esi;
                            edi = eax + esi;
                        }
                        *A8 = ebp;
                        *(A8 + 8) = edi;
                        goto L0044b9af;
                    }
                    *A8 = *esp;
                }
            } else {
                *A8 = *esp;
            }
        }
    }
    *(A8 + 8) = ebp;
L0044b9af:
    edi = *(edx + 0xc);
    ebp = *(edx + 4);
    eax = edi - ebp;
    if(!(A10 & 2)) {
        ebp = *(A14 + 4);
        *(A8 + 4) = ebp;
        *(A8 + 0xc) = *(A8 + 4) + eax;
    } else {
        if(!(A10 & 8)) {
            esi = *(A14 + 0xc);
            *(A8 + 4) = esi - eax;
            *(A8 + 0xc) = esi;
        } else {
            if(!(A10 & 0x20)) {
                ebp = *(A14 + 4) + *(A14 + 0xc) - eax;
                ebp :: -2147483648;
                asm("sbb ebp,-0x1");
                ebp = ebp >> 1;
                *(A8 + 4) = ebp;
                *(A8 + 0xc) = *(A8 + 4) + eax;
            } else {
                if(!(A10 & 0x80)) {
                    edx = *(A14 + 4);
                    if(ebp < edx) {
                        *(A8 + 4) = edx;
                        *(A8 + 0xc) = eax + edx;
                        goto L0044ba56;
                    }
                    esi = *(A14 + 0xc);
                    if(edi > esi) {
                        ebp = esi - eax;
                        if(ebp < edx) {
                            ebp = edx;
                            esi = eax + edx;
                        }
                        *(A8 + 4) = ebp;
                        *(A8 + 0xc) = esi;
                        goto L0044ba56;
                    }
                }
                *(A8 + 4) = ebp;
                *(A8 + 0xc) = edi;
            }
        }
    }
L0044ba56:
    esp = esp + 4;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0044BA5E - 0x0044BA5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BA5E()
{



}

/*	Procedure: 0x0044BA60 - 0x0044BA93
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00423D50()
 */

L0044BA60(A4, A8, Ac, A10)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = Ac;
    (save)A8;
    (save)A4;
    (save)ebp;
    *A4 = eax;
    *(A4 + 8) = *(A8 + 8) - *A8 + *A4;
    *(A4 + 4) = A10;
    eax = *(A8 + 0xc) - *(A8 + 4) + *(A4 + 4);
    *(A4 + 0xc) = eax;
    (restore)ebp;
    (restore)A4;
    (restore)A8;
}

/*	Procedure: 0x0044BA94 - 0x0044BA9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BA94()
{



}

/*	Procedure: 0x0044BADD - 0x0044BADF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BADD()
{



}

/*	Procedure: 0x0044BAE0 - 0x0044BB2F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0044A4D0()
 *		L0044A620()
 *		L0044A8D0()
 *		L0044AB00()
 */

L0044BAE0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp - 4;
    if(A8 < 0x100) {
        eax = L00467390(A8, ebp - 0xc, 0);
    } else {
        if(*(A8 + 0x30) != 1790575130) {
            L00429610(65561);
        }
        edx = *(A8 + 0x38);
        eax = *(A8 + 0x34);
        *(ebp - 0xc) = edx;
    }
    *Ac = *(ebp - 0xc);
}

/*	Procedure: 0x0044BB30 - 0x0044BBE4
 *	Argument size: -4
 *	Local size: 8
 *	Save regs size: 0
 *	Called by:
 *		L00439D0B()
 *		L0043A379()
 *		L0043A869()
 *		L0043AC4D()
 *		L0043AF38()
 *		L0043B6C0()
 *		L00442430()
 *		L004425A0()
 *		L00442660()
 *		L00462100()
 */

L0044BB30(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    eax = *A8;
    Vfffffffc = eax;
    *A8 = 0;
    if(Vfffffffc < 0x100) {
        return;
    }
    if(*(Vfffffffc + 0x30) != 1790575130) {
        esp = ebp;
        return;
    }
    *(Vfffffffc + 0x40) = *(Vfffffffc + 0x40) - 1;
    eax = Vfffffffc;
    if(*(eax + 0x40) != 0) {
        esp = ebp;
        return;
    }
    ecx = *(Vfffffffc + 0x3c);
    Vfffffff8 = ecx;
    if(ecx != 0) {
        eax = ecx;
        if(*(eax + 0x10c) == 0) {
            esp = ebp;
            return;
        }
        *(Vfffffff8 + 0x10c) = *(Vfffffff8 + 0x10c) - 1;
        ecx = Vfffffff8;
        if(*(ecx + 0x10c) == 0) {
            L0042A150(0x4811d4, ecx);
            L0042E3E0(Vfffffff8 + 0x104);
            L0042E3E0( & Vfffffff8);
        }
    }
    *(Vfffffffc + 0x30) = 0;
    esp = ebp;
    return L0042E3E0( & Vfffffffc);
}

/*	Procedure: 0x0044BBE5 - 0x0044BBEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BBE5()
{



}

/*	Procedure: 0x0044BBF0 - 0x0044BC3F
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00439D0B()
 *		L0043A379()
 *		L0043AF38()
 *		L00442660()
 *		L00462060()
 */

L0044BBF0(A8)
/* unknown */ void  A8;
{



    if(A8 < 0x100) {
        esp = ebp - 4;
        return A8;
    }
    if(*(A8 + 0x30) != 1790575130) {
        L00429610(65561);
    }
    eax = L0042E350(A8, 0x44);
    *(eax + 0x40) = 1;
    ecx = *(eax + 0x3c);
    if(ecx != 0) {
        *(ecx + 0x10c) = *(ecx + 0x10c) + 1;
    }
    esp = ebp - 4;
}

/*	Procedure: 0x0044BC40 - 0x0044BC76
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00439D0B()
 *		L0043A379()
 *		L0043AF38()
 *		L00442660()
 */

L0044BC40(A8)
/* unknown */ void  A8;
{



    if(A8 < 0x100) {
        esp = ebp - 4;
        return A8;
    }
    if(*(A8 + 0x30) != 1790575130) {
        L00429610(65561);
    }
    *(A8 + 0x40) = *(A8 + 0x40) + 1;
    esp = ebp - 4;
    return A8;
}

/*	Procedure: 0x0044BC77 - 0x0044BC7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BC77()
{



}

/*	Procedure: 0x0044BC80 - 0x0044BCCD
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0043A89B()
 *		L00442820()
 *		L004441C0()
 */

L0044BC80(A8)
/* unknown */ void  A8;
{



    eax = A8;
    if(eax < 0x100) {
        if(eax == 3) {
            esp = ebp - 4;
            return 4;
        }
        esp = ebp - 4;
        return 1;
    }
    if(*(A8 + 0x30) != 1790575130) {
        L00429610(65561);
    }
    eax = *(A8 + 0xa) & 65535;
    esp = ebp - 4;
}

/*	Procedure: 0x0044BCCE - 0x0044BCCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BCCE()
{



}

/*	Procedure: 0x0044BCD0 - 0x0044BD27
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004395A0()
 *		L00442740()
 *		L00442820()
 *		L0044C5F0()
 *		L0044D1A0()
 *		L00456D00()
 *		L004573F0()
 *		L0045ED00()
 *		L00460810()
 */

L0044BCD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp - 4;
    if(A8 < 0x100) {
        eax = L00467390(A8, ebp - 8, 0);
    } else {
        if(*(A8 + 0x30) != 1790575130) {
            L00429610(65561);
        }
        edx = *(A8 + 0x38);
        eax = *(A8 + 0x34);
        *(ebp - 8) = edx;
    }
    return L00467910(eax, *(ebp - 8), Ac, A10);
}

/*	Procedure: 0x0044BD28 - 0x0044BD2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BD28()
{



}

/*	Procedure: 0x0044BD30 - 0x0044BE2C
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00442170()
 *		L00443200()
 *		L0044A850()
 *		L0044A8D0()
 */

L0044BD30(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  edi;



    esp = esp - 4;
    edi = A8;
    if(A10 == 0) {
        return 0;
    }
    if(edi < 0x100) {
        eax = L00467390(edi, ebp - 0x10, 0);
    } else {
        if(*(edi + 0x30) != 1790575130) {
            L00429610(65561);
        }
        ecx = *(edi + 0x38);
        eax = *(edi + 0x34);
        *(ebp - 0x10) = ecx;
    }
    eax = L00467A30(eax, *(ebp - 0x10), Ac, A10, A14, 0);
    if(eax == 0) {
        esp = ebp - 0xc;
        return 1;
    }
    edx = Ac;
    if(!(edi = eax - 1)) {
        do {
            ecx = *edx & 0xff;
            edx = edx + 1;
            if(ecx == 0xa) {
                goto L0044bdcd;
            }
L0044bde0:
        } while(edi = edi - 1);
        goto L0044bde5;
L0044bdcd:
        esp = ebp - 0xc;
        return edx - Ac;
        goto L0044bde0;
    }
L0044bde5:
    if(eax >= A10) {
        esp = ebp - 0xc;
        return A10;
    }
    ecx = eax - 1;
    if(!(edi = eax + Ac)) {
        do {
            edi = edi - 1;
            edx = *edi & 0xff;
            if(edx == 0x20 || edx == 0x2f) {
                goto L0044be10;
            }
L0044be20:
        } while(ecx = ecx - 1);
        goto L0044be25;
L0044be10:
        esp = ebp - 0xc;
        return edi + 1 - Ac;
        goto L0044be20;
    }
L0044be25:
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044BE2D - 0x0044BE2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BE2D()
{



}

/*	Procedure: 0x0044BE30 - 0x0044BE80
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00442340()
 *		L004425A0()
 *		L0044A850()
 *		L00456B0E()
 */

L0044BE30(A8)
/* unknown */ void  A8;
{



    esp = esp - 4;
    if(A8 < 0x100) {
        eax = L00467390(A8, ebp - 8, 0);
    } else {
        if(*(A8 + 0x30) != 1790575130) {
            L00429610(65561);
        }
        edx = *(A8 + 0x38);
        eax = *(A8 + 0x34);
        *(ebp - 8) = edx;
    }
    return L00467B90(eax, *(ebp - 8));
}

/*	Procedure: 0x0044BE81 - 0x0044BE8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BE81()
{



}

/*	Procedure: 0x0044BE90 - 0x0044BF38
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00444490()
 *		L00457710()
 */

L0044BE90(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A8;
    esp = esp - 0xc;
    ebx = Ac;
    if(esi < 0x100) {
        edi = L00467390(esi, ebp - 0x18, 0);
    } else {
        if(*(esi + 0x30) != 1790575130) {
            L00429610(65561);
        }
        eax = *(esi + 0x38);
        edi = *(esi + 0x34);
        *(ebp - 0x18) = eax;
    }
    esi = L00467A30(edi, *(ebp - 0x18), ebx, A10, A14, ebp - 0x14);
    ecx = esi;
    if(ecx < A10) {
        ebx = ebx + esi;
        eax = ebp - 0x10;
        L00428490(ebx, A10 - ecx, eax);
        if(A14 > (L00467910(edi, *(ebp - 0x18), ebx, *(ebp - 0x10)) >> 1) + *(ebp - 0x14)) {
            esi = esi + *(ebp - 0x10);
        }
    }
    esp = ebp - 0xc;
    return esi;
}

/*	Procedure: 0x0044BF39 - 0x0044BF3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BF39()
{



}

/*	Procedure: 0x0044BF40 - 0x0044BF90
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044C5F0()
 *		L0045ED00()
 *		L00460810()
 */

L0044BF40(A8)
/* unknown */ void  A8;
{



    esp = esp - 4;
    if(A8 < 0x100) {
        eax = L00467390(A8, ebp - 8, 0);
    } else {
        if(*(A8 + 0x30) != 1790575130) {
            L00429610(65561);
        }
        edx = *(A8 + 0x38);
        eax = *(A8 + 0x34);
        *(ebp - 8) = edx;
    }
    return L00467B80(eax, *(ebp - 8));
}

/*	Procedure: 0x0044BF91 - 0x0044BF9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044BF91()
{



}

/*	Procedure: 0x0044BFA0 - 0x0044C15E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044D8B0()
 */

L0044BFA0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ecx = A10;
    esp = esp - 0x24;
    esi = Ac;
    edx = M00481000;
    if(!(ecx & 2)) {
        *(ebp - 0x10) = *(edx + 0xb4);
        ebx = *(edx + 0xac);
        ecx = *(edx + 0xc0);
        *(ebp - 0x1c) = ebx;
        eax = *(edx + 0xbc);
    } else {
        if(!(ecx & 1)) {
            *(ebp - 0x10) = *(edx + 0x98);
            ebx = *(edx + 0x90);
            ecx = *(edx + 0xa4);
            *(ebp - 0x1c) = ebx;
            eax = *(edx + 0xa0);
        } else {
            if(!(ecx & 8)) {
                *(ebp - 0x10) = *(edx + 0x7c);
                ebx = *(edx + 0x84);
                ecx = *(edx + 0x88);
                *(ebp - 0x1c) = ebx;
                eax = *(edx + 0x74);
            } else {
                *(ebp - 0x10) = *(edx + 0x7c);
                ebx = *(edx + 0x74);
                ecx = *(edx + 0x88);
                *(ebp - 0x1c) = ebx;
                eax = *(edx + 0x84);
            }
        }
    }
    *(ebp - 0x18) = eax;
    *(ebp - 0x30) = *esi;
    *(ebp - 0x28) = *(esi + 4);
    *(ebp - 0x2c) = *(esi + 8);
    edi = *(esi + 0xc);
    L004496A0(A8, ecx);
    L0044A150(A8, esi, 1);
    L004496A0(A8, *(ebp - 0x10));
    *(ebp - 0x14) = *(ebp - 0x2c);
    *(ebp - 0x14) = *(ebp - 0x14) - 2;
    *(ebp - 0x20) = *(ebp - 0x28);
    *(ebp - 0x20) = *(ebp - 0x20) + 2;
    *(ebp - 0x24) = *(ebp - 0x30);
    *(ebp - 0x24) = *(ebp - 0x24) + 2;
    esi = edi - 2;
    L0044A090(A8, *(ebp - 0x24), *(ebp - 0x20), *(ebp - 0x14), esi);
    edi = *(ebp - 0x28) + 1;
    0;
    *(ebp - 0x30) = *(ebp - 0x30) + 1;
    L00449E20(A8, *(ebp - 0x30), edi, ebx);
    L004497A0(A8, *(ebp - 0x24), edi, *(ebp - 0x14), *(ebp - 0x1c));
    L00449E20(A8, *(ebp - 0x14), edi, *(ebp - 0x10));
    L00449E20(A8, *(ebp - 0x30), esi, *(ebp - 0x10));
    L004497A0(A8, *(ebp - 0x24), esi, *(ebp - 0x2c) - 1, *(ebp - 0x18));
    L00449990(A8, *(ebp - 0x30), *(ebp - 0x20), esi, *(ebp - 0x1c));
    return L00449990(A8, *(ebp - 0x14), *(ebp - 0x20), esi, *(ebp - 0x18));
}

/*	Procedure: 0x0044C15F - 0x0044C15F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044C15F()
{



}

/*	Procedure: 0x0044C160 - 0x0044C3B1
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044D8B0()
 */

L0044C160(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edx = A10;
    esp = esp - 0x3c;
    edi = Ac;
    ecx = M00481000;
    if(!(edx & 2)) {
        *(ebp - 0x10) = *(ecx + 0xb4);
        eax = *(ecx + 0xb0);
        edx = *(ecx + 0xc0);
        *(ebp - 0x34) = eax;
        esi = *(ecx + 0xac);
        *(ebp - 0x2c) = esi;
        *(ebp - 0x24) = *(ecx + 0xb8);
        eax = *(ecx + 0xbc);
    } else {
        if(!(edx & 1)) {
            *(ebp - 0x10) = *(ecx + 0x98);
            eax = *(ecx + 0x94);
            edx = *(ecx + 0xa4);
            *(ebp - 0x34) = eax;
            esi = *(ecx + 0x90);
            *(ebp - 0x2c) = esi;
            *(ebp - 0x24) = *(ecx + 0x9c);
            eax = *(ecx + 0xa0);
        } else {
            *(ebp - 0x10) = *(ecx + 0x7c);
            eax = *(ecx + 0x78);
            edx = *(ecx + 0x88);
            *(ebp - 0x34) = eax;
            esi = *(ecx + 0x74);
            *(ebp - 0x2c) = esi;
            *(ebp - 0x24) = *(ecx + 0x80);
            eax = *(ecx + 0x84);
        }
    }
    *(ebp - 0x20) = eax;
    *(ebp - 0x3c) = *edi;
    *(ebp - 0x48) = *(edi + 4);
    *(ebp - 0x40) = *(edi + 8);
    *(ebp - 0x44) = *(edi + 0xc);
    L004496A0(A8, edx);
    L0044A150(A8, edi, 1);
    L004496A0(A8, *(ebp - 0x10));
    *(ebp - 0x14) = *(ebp - 0x44);
    *(ebp - 0x14) = *(ebp - 0x14) - 3;
    *(ebp - 0x18) = *(ebp - 0x40);
    *(ebp - 0x18) = *(ebp - 0x18) - 3;
    *(ebp - 0x30) = *(ebp - 0x48);
    *(ebp - 0x30) = *(ebp - 0x30) + 3;
    *(ebp - 0x38) = *(ebp - 0x3c);
    *(ebp - 0x38) = *(ebp - 0x38) + 3;
    L0044A090(A8, *(ebp - 0x38), *(ebp - 0x30), *(ebp - 0x18), *(ebp - 0x14));
    eax = *(ebp - 0x3c);
    edi = *(ebp - 0x48) + 1;
    *(ebp - 0x28) = eax;
    *(ebp - 0x28) = *(ebp - 0x28) + 1;
    L00449E20(A8, *(ebp - 0x28), edi, esi);
    eax = *(ebp - 0x40);
    esi = *(ebp - 0x3c) + 2;
    *(ebp - 0x1c) = eax;
    *(ebp - 0x1c) = *(ebp - 0x1c) - 2;
    L004497A0(A8, esi, edi, *(ebp - 0x1c), *(ebp - 0x2c));
    L00449E20(A8, *(ebp - 0x1c), edi, *(ebp - 0x10));
    0;
    *(ebp - 0x48) = *(ebp - 0x48) + 2;
    L004497A0(A8, esi, *(ebp - 0x48), *(ebp - 0x18), *(ebp - 0x34));
    L00449E20(A8, *(ebp - 0x18), *(ebp - 0x48), *(ebp - 0x10));
    L00449E20(A8, esi, *(ebp - 0x14), *(ebp - 0x10));
    L004497A0(A8, *(ebp - 0x38), *(ebp - 0x14), *(ebp - 0x1c), *(ebp - 0x24));
    edi = *(ebp - 0x44) - 2;
    L00449E20(A8, *(ebp - 0x28), edi, *(ebp - 0x10));
    L004497A0(A8, esi, edi, *(ebp - 0x40) - 1, *(ebp - 0x20));
    L00449990(A8, *(ebp - 0x28), *(ebp - 0x48), edi, *(ebp - 0x2c));
    L00449990(A8, esi, *(ebp - 0x30), *(ebp - 0x14), *(ebp - 0x34));
    L00449990(A8, *(ebp - 0x18), *(ebp - 0x30), *(ebp - 0x14), *(ebp - 0x24));
    return L00449990(A8, *(ebp - 0x1c), *(ebp - 0x48), edi, *(ebp - 0x20));
}

/*	Procedure: 0x0044C3B2 - 0x0044C3BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044C3B2()
{



}

/*	Procedure: 0x0044C3C0 - 0x0044C5E7
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00446D20()
 *		L00451C10()
 */

L0044C3C0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;



    esi = Ac;
    (save)edi;
    esp = esp - 0x14;
    if(L0045EC20(A8, esi, A10, A14, A18 & 0xff) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    *(ebp - 0x20) = *esi;
    *(ebp - 0x14) = *(esi + 4);
    *(ebp - 0x10) = *(esi + 8);
    edi = M00481000;
    esi = *(esi + 0xc);
    if(!(A10 & 5)) {
        if(A10 & 0x42) {
            goto L0044c4e1;
        }
        eax = *(edi + 0x24);
        *(ebp - 0x18) = eax;
        L00449990(A8, *(ebp - 0x20), *(ebp - 0x14) + 1, esi - 1, *(ebp - 0x18));
        L004497A0(A8, *(ebp - 0x20) + 1, *(ebp - 0x14), *(ebp - 0x10) - 1, *(ebp - 0x18));
        L00449990(A8, *(ebp - 0x10) - 1, *(ebp - 0x14) + 1, esi - 1, *(ebp - 0x18));
        edx = *(ebp - 0x10) - 1;
        L004497A0(A8, *(ebp - 0x20) + 1, esi - 1, edx, *(ebp - 0x18));
        L004496A0(A8, *(ebp - 0x18));
        L0044A180(A8, *(ebp - 0x20) + 1, *(ebp - 0x14) + 1, *(ebp - 0x10) - 1, esi - 1, 1);
        *(ebp - 0x20) = *(ebp - 0x20) + 2;
        *(ebp - 0x14) = *(ebp - 0x14) + 2;
        *(ebp - 0x10) = *(ebp - 0x10) - 2;
        esi = esi - 2;
        (save) *(edi + 0x10);
    } else {
L0044c4e1:
        eax = !(A10 & 2) ? *(edi + 0x18) : *(edi + 0x10);
        *(ebp - 0x18) = eax;
        *(ebp - 0x1c) = *(edi + 4);
        edi = *(edi + 0xc);
        if(!(A10 & 0x40)) {
            *(ebp - 0x20) = *(ebp - 0x20) + 1;
            *(ebp - 0x14) = *(ebp - 0x14) + 1;
            *(ebp - 0x10) = *(ebp - 0x10) - 1;
            esi = esi - 1;
        }
        L004497A0(A8, *(ebp - 0x20), *(ebp - 0x14), *(ebp - 0x10) - 1, edi);
        L00449990(A8, *(ebp - 0x20), *(ebp - 0x14) + 1, esi - 1, edi);
        L004497A0(A8, *(ebp - 0x20) + 1, esi - 1, *(ebp - 0x10), *(ebp - 0x1c));
        L00449990(A8, *(ebp - 0x10) - 1, *(ebp - 0x14) + 1, esi - 1, *(ebp - 0x1c));
        *(ebp - 0x20) = *(ebp - 0x20) + 1;
        *(ebp - 0x14) = *(ebp - 0x14) + 1;
        *(ebp - 0x10) = *(ebp - 0x10) - 1;
        esi = esi - 1;
        (save) *(ebp - 0x18);
    }
    (save)A8;
    L004496A0();
    (restore)ecx;
    eax = L0044A180(A8, *(ebp - 0x20), *(ebp - 0x14), *(ebp - 0x10), esi, 1);
    if(A18 != 0) {
        L004496A0(A8, A14);
        eax = L0044A090(A8, *(ebp - 0x20) + 1, *(ebp - 0x14) + 1, *(ebp - 0x10) - 1, esi - 1);
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0044C5E8 - 0x0044C5EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044C5E8()
{



}

/*	Procedure: 0x0044C5F0 - 0x0044CA85
 *	Argument size: 12
 *	Local size: 72
 *	Save regs size: 12
 */

L0044C5F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A10;
    if(L0045ED00(A8, Ac, edi) != 0) {
        return;
    }
    eax = Ac;
    *(ebp - 0x54) = *eax;
    Vffffffe4 = *(eax + 4);
    Vffffffec = *(eax + 8);
    Vffffffe8 = *(eax + 0xc);
    esi = *edi;
    ebx = M00481000;
    if(esi == 2 || esi == 3) {
        Vfffffff0 = *(ebx + 8);
        Vffffffcc = *(ebx + 4);
        Vffffffc8 = *(ebx + 0xc);
        L004496A0(A8, *(ebx + 0x10));
        L0044A150(A8, Ac, 1);
        if(esi == 3) {
            L004496A0(A8, Vfffffff0);
            L0044A090(A8, *(ebp - 0x54) + 2, Vffffffe4 + 2, Vffffffec - 2, Vffffffe8 - 2);
        }
        esi = *(ebp - 0x54);
        edi = Vffffffe4 + 1;
        esi = esi + 1;
        L00449E20(A8, esi, edi, Vffffffcc);
        ebx = *(ebp - 0x54) + 2;
        Vffffffe0 = Vffffffec;
        Vffffffe0 = Vffffffe0 - 2;
        L004497A0(A8, ebx, edi, Vffffffe0, Vffffffcc);
        L00449E20(A8, Vffffffe0, edi, Vfffffff0);
        edi = Vffffffe8 - 2;
        L00449E20(A8, esi, edi, Vfffffff0);
        L004497A0(A8, ebx, edi, Vffffffec - 1, Vffffffc8);
        ebx = Vffffffe4 + 2;
        L00449990(A8, esi, ebx, edi, Vffffffcc);
        eax = L00449990(A8, Vffffffe0, ebx, edi, Vffffffc8);
    } else {
        if(esi == 4) {
            L004496A0(A8, *(ebx + 0x10));
            Vffffffd8 = Vffffffec;
            Vffffffd8 = Vffffffd8 - 1;
            eax = *(ebp - 0x54);
            esi = Vffffffe8 - 1;
            edi = Vffffffe4 + 1;
            Vffffffe8 = eax;
            Vffffffe8 = Vffffffe8 + 1;
            L0044A180(A8, Vffffffe8, edi, Vffffffd8, esi, 1);
            L004496A0(A8, *(ebx + 0xc));
            L00449770(A8, *(ebp - 0x54), Vffffffe4, Vffffffd8);
            L00449960(A8, *(ebp - 0x54), edi, esi);
            L004496A0(A8, *(ebx + 4));
            L00449770(A8, Vffffffe8, esi, Vffffffec);
            eax = L00449960(A8, Vffffffd8, edi, esi);
        } else {
            Vfffffff0 = *(ebx + 4);
            esi = *(ebx + 0xc);
            ebx = Vffffffec - *(ebp - 0x54);
            if(*(edi + 0xc) == 0 || ebx <= 0x36) {
                L004496A0(A8, esi);
                Vffffffd4 = Vffffffec;
                Vffffffd4 = Vffffffd4 - 1;
                edi = Vffffffe8 - 1;
                Vffffffdc = Vffffffe4;
                eax = *(ebp - 0x54);
                Vffffffd0 = eax;
                L0044A180(A8, Vffffffd0, Vffffffdc, Vffffffd4, edi, 1);
                esi = *(ebp - 0x54);
                ebx = Vffffffe4 + 1;
                esi = esi + 1;
                L004497A0(A8, esi, ebx, Vffffffec - 2, Vfffffff0);
                L00449990(A8, esi, ebx, Vffffffe8 - 2, Vfffffff0);
                L004497A0(A8, Vffffffd0, edi, Vffffffec, Vfffffff0);
                eax = L00449990(A8, Vffffffd4, Vffffffdc, edi, Vfffffff0);
            } else {
                eax = *(edi + 4);
                Vffffffc8 = eax;
                Vffffffcc = L0044BF40(Vffffffc8);
                eax = L0044BCD0(Vffffffc8, *(edi + 8), *(edi + 0xc));
                Vffffffe0 = eax;
                if(eax > ebx - 0x20) {
                    Vffffffe0 = ebx;
                    Vffffffe0 = Vffffffe0 - 0x20;
                }
                eax = Vffffffcc;
                eax :: -2147483648;
                asm("sbb eax,-0x1");
                Vffffffe4 = Vffffffe4 + (eax >> 1) - 1;
                ebx = Vffffffe8 - 2;
                Vffffffdc = Vffffffe4;
                eax = *(ebp - 0x54);
                Vffffffd0 = eax;
                L00449990(A8, Vffffffd0, Vffffffdc, ebx, esi);
                Vffffffd4 = Vffffffec;
                Vffffffd4 = Vffffffd4 - 1;
                L004497A0(A8, Vffffffd0, ebx, Vffffffd4, esi);
                Vffffffc0 = Vffffffec;
                Vffffffc0 = Vffffffc0 - 2;
                L00449990(A8, Vffffffc0, Vffffffdc, ebx, esi);
                Vffffffd8 = *(ebp - 0x54);
                Vffffffd8 = Vffffffd8 + 0xc;
                L004497A0(A8, Vffffffd0, Vffffffdc, Vffffffd8, esi);
                Vffffffc4 = *(ebp - 0x54);
                Vffffffc4 = Vffffffc4 + Vffffffe0;
                Vffffffc4 = Vffffffc4 + 0x14;
                L004497A0(A8, Vffffffc4, Vffffffdc, Vffffffc0, esi);
                esi = Vffffffe4 + 1;
                L00449990(A8, *(ebp - 0x54) + 1, esi, ebx, Vfffffff0);
                ebx = Vffffffe8 - 1;
                L004497A0(A8, Vffffffd0, ebx, Vffffffec, Vfffffff0);
                L00449990(A8, Vffffffd4, Vffffffdc, ebx, Vfffffff0);
                L004497A0(A8, *(ebp - 0x54) + 2, esi, Vffffffd8, Vfffffff0);
                L004497A0(A8, Vffffffc4, esi, Vffffffc0, Vfffffff0);
                ebx = *(ebp - 0x54);
                eax = *(Ac + 4);
                *(ebp - 0x50) = ebx + 0x10;
                *(ebp - 0x4c) = eax;
                Vffffffb8 = *(ebp - 0x54) + 0x10 + Vffffffe0;
                Vffffffbc = eax + Vffffffcc;
                L004496D0(A8, 5);
                eax = L0044A620(A8, Vffffffc8, ebp - 0x50, *(edi + 8), *(edi + 0xc), 0x30);
            }
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044CA86 - 0x0044CA8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044CA86()
{



}

/*	Procedure: 0x0044CA90 - 0x0044CAEF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00446D20()
 *		L004496D0()
 *		L00449710()
 *		L0044CB90()
 *		L0044D7C0()
 *		L0044D8B0()
 *		L0044EBB0()
 *		L00461AB0()
 */

L0044CA90(A10)
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    if(A10 >= 0xdd) {
        return 0;
    }
    if(A10 >= M00481004) {
        eax = *L00486D34;
        ebx = eax << 8 & 16711680;
        ebx = ebx | eax >> 0x18;
        ecx = eax >> 8 & 65280;
        eax = eax << 0x18;
        return *(0x486cf8 + (ebx | ecx | eax) + A10 * 4);
    }
    return *(M00481000 + A10 * 4);
}

/*	Procedure: 0x0044CAF0 - 0x0044CB44
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0045ED00()
 */

L0044CAF0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = A10;
    (save)A8;
    if(ebx >= 0xdd) {
        ebx = 2;
    }
    if(L0045E430(A8, Ac, ebx) != 0) {
        esp = ebp - 0xc;
        (restore)A8;
        return;
    }
    L004496A0(A8, *(M00481000 + ebx * 4));
    eax = L0044A0D0(A8, Ac);
    esp = ebp - 0xc;
    (restore)A8;
}

/*	Procedure: 0x0044CB45 - 0x0044CB4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044CB45()
{



}

/*	Procedure: 0x0044CB50 - 0x0044CB8C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00423E40()
 */

L0044CB50(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(L004605A0(A8, Ac, A10) != 0) {
        return;
    }
    L004496D0(A8, 0x69);
    eax = L0044A0D0(A8, Ac);
    esp = ebp - 8;
}

/*	Procedure: 0x0044CB8D - 0x0044CB8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044CB8D()
{



}

/*	Procedure: 0x0044CB90 - 0x0044CF99
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0044CFA0()
 *		L00460660()
 */

L0044CB90(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;



    esi = Ac;
    (save)edi;
    esp = esp - 0xa8;
    eax = *(esi + 4);
    ecx = *esi;
    *(ebp - 0x44) = eax;
    *(ebp + -144) = *(esi + 8);
    eax = *(esi + 0xc);
    *(ebp - 0x48) = eax;
    edi = *(ebp - 0x48);
    edx = *(ebp - 0x44);
    *(ebp - 0x3c) = edx;
    *(ebp - 0x34) = edi;
    *(ebp - 0x38) = *(ebp + -144);
    *(ebp - 0x1c) = edx;
    *(ebp - 0x14) = edi;
    *(ebp - 0x2c) = edx;
    *(ebp - 0x24) = edi;
    *(ebp + -140) = *(A10 + 0xc);
    if(!( *(A10 + 0x10) & 8)) {
        edx = ecx + 4;
        esi = ecx + 0x14;
        ecx = ecx + 0x18;
        edi = edx;
        *(ebp - 0x30) = edx;
        *(ebp - 0x20) = edi;
        *(ebp - 0x28) = esi;
        *(ebp - 0x18) = esi;
        *(ebp - 0x40) = ecx;
        if(*(A10 + 0x14) != 0) {
            *(ebp + -140) = *(ebp + -140) & -131073;
        }
    } else {
        esi = ecx + 0x10;
        eax = esi;
        *(ebp - 0x30) = ecx;
        *(ebp - 0x28) = eax;
        if(*(A10 + 0x14) != 0) {
            *(ebp - 0x20) = eax;
            *(ebp - 0x18) = esi + 0x10;
            esi = esi + 0x14;
        }
        *(ebp - 0x40) = esi;
    }
    if(*(A10 + 0x14) != 0) {
        esi = 0;
        edi = 1048624;
        if(!( *(ebp + -140) & 262144)) {
            edi = 1310768;
            (save)0x69;
        } else {
            if(*(ebp + -140) & 16777216) {
                goto L0044cc83;
            }
            edi = edi | 262144;
            (save)0x6d;
        }
        (restore)ecx;
        esi = L0044CA90();
L0044cc83:
        if(!( *(ebp + -140) & 1048576)) {
            L0044E9E0( *(A10 + 0x14), A8, ebp - 0x20, edi, esi, A14);
        } else {
            if(!( *(ebp + -140) & 2097152)) {
                *(ebp - 0x1c) = *(ebp - 0x1c) + 1;
                *(ebp - 0x14) = *(ebp - 0x14) - 1;
                L0044A120(A8, ebp - 0x20, *(A10 + 0x14));
            } else {
                *(ebp + -148) = esp;
                eax = L0043C150(1229672270, *(A10 + 0x14), ebp + -180);
                L0046D150(eax, *(ebp + -180), -1, A8, ebp - 0x20, edi, esi, A14);
                goto L0044cd36;
                if(*(ebp + -160) != 0) {
                    (save)-1;
                    ecx = *(ebp + -168);
                    *(ebp + -160)();
                }
                esp = *(ebp + -148);
            }
        }
    }
L0044cd36:
    L004496A0(A8, A14);
    eax = L0044A4D0(A8, *A10, ebp - 0x40, *(A10 + 4), *(A10 + 8), 0x21);
    if(!( *(ebp + -140) & 131072)) {
        (save)0x31;
        (save)3;
        (save)0x4785b0;
        (save)ebp - 0x30;
    } else {
        if(*(ebp + -140) & 4194304) {
            goto L0044cd9d;
        }
        (save)0x31;
        (save)1;
        (save)0x4785b4;
        (save)ebp - 0x30;
    }
    (save)0;
    (save)A8;
    eax = L0044A4D0();
    esp = esp + 0x18;
L0044cd9d:
    *(ebp + -144) = *(ebp + -144) - 0xa;
    if(!( *(ebp + -140) & 524288)) {
        esi = *(ebp - 0x44) + *(ebp - 0x48);
        edi = *(ebp + -144) - 6;
        esi = esi - 0xb;
        esi :: -2147483648;
        asm("sbb esi,-0x1");
        esi = esi >> 1;
        *(ebp - 0x10) = edi;
        L00449DE0(A8, edi, esi);
        *(ebp - 0x44) = edi;
        *(ebp - 0x44) = *(ebp - 0x44) + 2;
        L00449770(A8, *(ebp - 0x10), esi + 1, *(ebp - 0x44));
        *(ebp - 0x48) = edi;
        *(ebp - 0x48) = *(ebp - 0x48) + 3;
        L00449770(A8, *(ebp - 0x10), esi + 2, *(ebp - 0x48));
        *(ebp + -176) = edi;
        *(ebp + -176) = *(ebp + -176) + 4;
        L00449770(A8, *(ebp - 0x10), esi + 3, *(ebp + -176));
        *(ebp + -172) = edi;
        *(ebp + -172) = *(ebp + -172) + 5;
        L00449770(A8, *(ebp - 0x10), esi + 4, *(ebp + -172));
        ecx = edi + 6;
        L00449770(A8, *(ebp - 0x10), esi + 5, ecx);
        L00449770(A8, *(ebp - 0x10), esi + 6, *(ebp + -172));
        L00449770(A8, *(ebp - 0x10), esi + 7, *(ebp + -176));
        L00449770(A8, *(ebp - 0x10), esi + 8, *(ebp - 0x48));
        L00449770(A8, *(ebp - 0x10), esi + 9, *(ebp - 0x44));
        eax = L00449DE0(A8, *(ebp - 0x10), esi + 0xa);
        *(ebp + -144) = *(ebp + -144) - 0x10;
    }
    if(*(A10 + 0x24) != 0) {
        *(ebp + -136) = 0x5e;
        esi = 1;
        if(!( *(ebp + -140) & 2)) {
            *(ebp + -135) = 0x3a;
            esi = 2;
        }
        if(!( *(ebp + -140) & 8)) {
            *(ebp + esi + -136) = 0x21;
            esi = esi + 1;
        }
        if(!( *(ebp + -140) & 16384)) {
            esi = esi + L004276D0(0, *(A10 + 0x24) & 65535, 0, ebp + esi + -136, 0x20, 1);
        } else {
            *(ebp + esi + -136) = *(A10 + 0x24) & 0xff;
            esi = esi + 1;
        }
        *(ebp - 0x38) = *(ebp + -144);
        eax = ebp + -136;
        eax = L0044A4D0(A8, *A10, ebp - 0x40, eax, esi, 0x24);
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0044CF9A - 0x0044CF9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044CF9A()
{



}

/*	Procedure: 0x0044CFA0 - 0x0044D199
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L0044CFA0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)esi;
    (save)edi;
    esp = esp - 0x30;
    if(L00460660(A8, Ac, A10) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    ecx = *(A10 + 0xc);
    *(ebp - 0x10) = ecx;
    *(ebp - 0x39) = 0;
    dl = 0;
    cl = *(ebp - 0x39) != 0 || 0 != 0 ? 0 : 0;
    esi = M00481000;
    if(cl != 0) {
        *(ebp - 0x18) = *(esi + 0x1b4);
        *(ebp - 0x20) = *(esi + 0x1b0);
        *(ebp - 0x1c) = *(esi + 0x1b8);
        eax = *(esi + 0x1bc);
    } else {
        *(ebp - 0x18) = *(esi + 0x1a4);
        *(ebp - 0x20) = *(esi + 0x1a0);
        *(ebp - 0x1c) = *(esi + 0x1a8);
        al = dl != 0 ? 0x70 : 0x6b;
        eax = *(esi + (al & 0xff) * 4);
    }
    *(ebp - 0x34) = eax;
    *(ebp - 0x28) = *Ac;
    *(ebp - 0x24) = *(Ac + 4);
    eax = *(Ac + 8);
    *(ebp - 0x30) = eax;
    esi = *(ebp - 0x30) - 1;
    *(ebp - 0x38) = *(Ac + 0xc);
    if(cl != 0) {
        L004496A0(A8, *(ebp - 0x18));
        L0044A090(A8, *(ebp - 0x28) + 1, *(ebp - 0x24), esi, *(ebp - 0x38));
    }
    *(ebp - 0x2c) = *(ebp - 0x38);
    eax = *(ebp - 0x28);
    edi = *(ebp - 0x24);
    *(ebp - 0x14) = eax;
    L00449990(A8, eax, edi, *(ebp - 0x2c), *(ebp - 0x20));
    L00449990(A8, esi, edi, *(ebp - 0x2c), *(ebp - 0x1c));
    if(!( *(ebp - 0x10) & 33554432)) {
        L004497A0(A8, *(ebp - 0x14), edi, esi, *(ebp - 0x20));
        L00449E20(A8, esi, edi, *(ebp - 0x18));
    }
    if(!( *(ebp - 0x10) & 67108864)) {
        edi = *(ebp - 0x38) - 1;
        L00449E20(A8, *(ebp - 0x14), edi, *(ebp - 0x18));
        L004497A0(A8, *(ebp - 0x28) + 1, edi, esi, *(ebp - 0x1c));
    }
    if(*(ebp - 0x39) != 0) {
        edi = *(ebp - 0x38) + *(ebp - 0x24) - 2;
        edi :: -2147483648;
        asm("sbb edi,-0x1");
        edi = edi >> 1;
        L004497A0(A8, *(ebp - 0x14), edi, esi, *(ebp - 0x1c));
        eax = L004497A0(A8, *(ebp - 0x14), edi + 1, *(ebp - 0x30), *(ebp - 0x20));
    } else {
        eax = L0044CB90(A8, Ac, A10, *(ebp - 0x34));
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0044D19A - 0x0044D19F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044D19A()
{



}

/*	Procedure: 0x0044D1A0 - 0x0044D26C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00423A50()
 */

L0044D1A0(A8)
/* unknown */ void  A8;
{



    (save)esi;
    (save)edi;
    esp = esp - 0x40;
    *(A8 + 0x10) & 8;
    if(!(edi = L0044BCD0( *A8, *(A8 + 4), *(A8 + 8)) + 0x10)) {
        edi = edi + 0x18;
    } else {
        edi = edi + 0x10;
        if(*(A8 + 0x14) != 0) {
            edi = edi + 0x14;
        }
    }
    ecx = *(A8 + 0xc);
    if(!(ecx & 524288)) {
        edi = edi + 0x10;
    }
    if(*(A8 + 0x24) != 0) {
        *(ebp - 0x4c) = 0x5e;
        esi = 1;
        if(!(ecx & 2)) {
            *(ebp - 0x4b) = 0x3a;
            esi = 2;
        }
        if(!(ecx & 8)) {
            *(ebp + esi - 0x4c) = 0x21;
            esi = esi + 1;
        }
        if(!(ecx & 16384)) {
            esi = esi + L004276D0(0, *(A8 + 0x24) & 65535, 0, ebp + esi - 0x4c, 0x20, 1);
        } else {
            *(ebp + esi - 0x4c) = *(A8 + 0x24) & 0xff;
            esi = esi + 1;
        }
        edi = edi + L0044BCD0( *A8, ebp - 0x4c, esi) + 0x10;
    }
    esp = ebp - 0xc;
    eax = edi + 1;
    (restore)edi;
    (restore)esi;
    return eax & -2;
}

/*	Procedure: 0x0044D26D - 0x0044D26F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044D26D()
{



}

/*	Procedure: 0x0044D270 - 0x0044D316
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0044D320()
 *		L0045E8D0()
 */

L0044D270(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = Ac + A14 - 9;
    ebx = A10;
    esi :: -2147483648;
    asm("sbb esi,-0x1");
    ebx = ebx + A18;
    esi = esi >> 1;
    ebx = ebx - 5;
    ebx :: -2147483648;
    asm("sbb ebx,-0x1");
    (save)A1c;
    ebx = ebx >> 1;
    edx = esi + 9;
    L004497A0(A8, esi, ebx, edx, A1c);
    ecx = esi + 8;
    eax = ebx + 1;
    L004497A0(A8, esi + 1, eax, ecx, A1c);
    ecx = esi + 7;
    eax = ebx + 2;
    L004497A0(A8, esi + 2, eax, ecx, A1c);
    ecx = esi + 6;
    eax = ebx + 3;
    L004497A0(A8, esi + 3, eax, ecx, A1c);
    ecx = ebx + 4;
    eax = L00449E20(A8, esi + 4, ecx, A1c);
    esp = ebp - 0xc;
    (restore)A1c;
}

/*	Procedure: 0x0044D317 - 0x0044D31F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044D317()
{



}

/*	Procedure: 0x0044D320 - 0x0044D7BE
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0043B15F()
 */

L0044D320(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = Ac;
    (save)edi;
    esp = esp - 0x6c;
    if(L0045E8D0(A8, esi, A10) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    *(ebp - 0x1c) = *A10;
    *(ebp - 0x30) = *esi;
    *(ebp - 0x44) = *(esi + 4);
    *(ebp - 0x78) = *(esi + 8);
    *(ebp - 0x24) = *(esi + 0xc);
    *(ebp - 0x60) = *(ebp - 0x78);
    *(ebp - 0x60) = *(ebp - 0x60) - *(ebp - 0x30);
    ebx = M00481000;
    if(*(ebp - 0x60) <= 0x1c) {
        edx = ebp - 0x74;
        edi = ebp - 0x74;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *(ebp - 0x74) = *A10;
        L0044D9D0(A8, esi, edx);
        ecx = !( *(ebp - 0x1c) & 2) ? *(ebx + 0xc4) : !( *(ebp - 0x1c) & 1) ? *(ebx + 0xa8) : *(ebx + 0x8c);
        eax = L0044D270(A8, *(ebp - 0x30), *(ebp - 0x44), *(ebp - 0x78), *(ebp - 0x24), ecx);
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    if(!( *(ebp - 0x1c) & 2)) {
        *(ebp - 0x28) = *(ebx + 0xb4);
        *(ebp - 0x14) = *(ebx + 0xc0);
        *(ebp - 0x4c) = *(ebx + 0xb0);
        *(ebp - 0x34) = *(ebx + 0xac);
        *(ebp - 0x20) = *(ebx + 0xb8);
        *(ebp - 0x3c) = *(ebx + 0xbc);
        eax = *(ebx + 0xc4);
    } else {
        if(!( *(ebp - 0x1c) & 1)) {
            *(ebp - 0x28) = *(ebx + 0x98);
            *(ebp - 0x14) = *(ebx + 0xa4);
            *(ebp - 0x4c) = *(ebx + 0x94);
            *(ebp - 0x34) = *(ebx + 0x90);
            *(ebp - 0x20) = *(ebx + 0x9c);
            *(ebp - 0x3c) = *(ebx + 0xa0);
            eax = *(ebx + 0xa8);
        } else {
            *(ebp - 0x28) = *(ebx + 0x7c);
            *(ebp - 0x14) = *(ebx + 0x88);
            *(ebp - 0x4c) = *(ebx + 0x78);
            *(ebp - 0x34) = *(ebx + 0x74);
            *(ebp - 0x20) = *(ebx + 0x80);
            *(ebp - 0x3c) = *(ebx + 0x84);
            eax = *(ebx + 0x8c);
        }
    }
    *(ebp - 0x48) = eax;
    L004496A0(A8, *(ebp - 0x28));
    eax = *(ebp - 0x44);
    ebx = *(ebp - 0x30);
    *(ebp - 0x10) = eax;
    *(ebp - 0x10) = *(ebp - 0x10) + 2;
    *(ebp - 0x18) = *(ebp - 0x78);
    *(ebp - 0x18) = *(ebp - 0x18) - 3;
    edi = *(ebp - 0x24);
    ebx = ebx + 2;
    edi = edi - 2;
    L0044A090(A8, ebx, *(ebp - 0x10), *(ebp - 0x18), edi);
    eax = *(ebp - 0x44);
    esi = *(ebp - 0x78) - 2;
    *(ebp - 0x1c) = eax;
    L004497A0(A8, ebx, eax, esi, *(ebp - 0x14));
    *(ebp - 0x38) = *(ebp - 0x44);
    *(ebp - 0x38) = *(ebp - 0x38) + 1;
    *(ebp - 0x40) = *(ebp - 0x30);
    *(ebp - 0x40) = *(ebp - 0x40) + 1;
    L00449E20(A8, *(ebp - 0x40), *(ebp - 0x38), *(ebp - 0x14));
    L004497A0(A8, ebx, *(ebp - 0x38), *(ebp - 0x18), *(ebp - 0x34));
    L00449E20(A8, *(ebp - 0x18), *(ebp - 0x38), *(ebp - 0x20));
    L00449E20(A8, esi, *(ebp - 0x38), *(ebp - 0x14));
    L00449E20(A8, ebx, *(ebp - 0x10), *(ebp - 0x34));
    L00449990(A8, *(ebp - 0x30), *(ebp - 0x10), edi, *(ebp - 0x14));
    *(ebp - 0x2c) = *(ebp - 0x24);
    *(ebp - 0x2c) = *(ebp - 0x2c) - 3;
    L00449990(A8, *(ebp - 0x40), *(ebp - 0x10), *(ebp - 0x2c), *(ebp - 0x34));
    L00449E20(A8, *(ebp - 0x40), *(ebp - 0x2c), *(ebp - 0x28));
    L00449E20(A8, *(ebp - 0x40), edi, *(ebp - 0x14));
    L00449E20(A8, ebx, edi, *(ebp - 0x28));
    L004497A0(A8, *(ebp - 0x30) + 3, edi, esi, *(ebp - 0x3c));
    L00449E20(A8, esi, edi, *(ebp - 0x14));
    L004497A0(A8, ebx, *(ebp - 0x24) - 1, esi, *(ebp - 0x14));
    ebx = *(ebp - 0x44) + 3;
    L00449990(A8, *(ebp - 0x18), ebx, *(ebp - 0x2c), *(ebp - 0x20));
    L00449E20(A8, esi, *(ebp - 0x10), *(ebp - 0x20));
    L00449990(A8, esi, ebx, edi, *(ebp - 0x3c));
    L00449990(A8, *(ebp - 0x78) - 1, *(ebp - 0x10), edi, *(ebp - 0x14));
    esi = *(ebp - 0x78) - 0x16;
    L00449E20(A8, esi, *(ebp - 0x38), *(ebp - 0x28));
    L00449990(A8, esi, *(ebp - 0x10), edi, *(ebp - 0x3c));
    L00449990(A8, *(ebp - 0x78) - 0x15, *(ebp - 0x10), edi, *(ebp - 0x34));
    edi = *(ebp - 0x78) - 0x14;
    L00449990(A8, edi, ebx, *(ebp - 0x2c), *(ebp - 0x4c));
    L004497A0(A8, edi, *(ebp - 0x10), *(ebp - 0x18), *(ebp - 0x4c));
    L00449E20(A8, *(ebp - 0x18), *(ebp - 0x10), *(ebp - 0x28));
    L004497A0(A8, *(ebp - 0x78) - 0x13, *(ebp - 0x2c), *(ebp - 0x18), *(ebp - 0x20));
    L00449E20(A8, *(ebp - 0x18), *(ebp - 0x2c), *(ebp - 0x3c));
    L00449E20(A8, *(ebp - 0x78) - 4, *(ebp - 0x24) - 4, *(ebp - 0x20));
    eax = L0044D270(A8, esi, *(ebp - 0x1c), *(ebp - 0x78), *(ebp - 0x24), *(ebp - 0x48));
    if(*(ebp - 0x60) >= 0x26) {
        L004496A0(A8, *(ebp - 0x48));
        *(ebp - 0x58) = *(ebp - 0x1c);
        eax = *(ebp - 0x78) - 0x17;
        ecx = *(ebp - 0x30);
        *(ebp - 0x54) = eax;
        eax = *(ebp - 0x24);
        ecx = ecx + 8;
        *(ebp - 0x50) = eax;
        eax = A10;
        edx = ebp - 0x5c;
        *(ebp - 0x5c) = ecx;
        eax = L0044A620(A8, *(eax + 4), edx, *(eax + 8), *(eax + 0xc), 0x21);
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0044D7BF - 0x0044D7BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044D7BF()
{



}

/*	Procedure: 0x0044D7C0 - 0x0044D8AA
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044D8B0()
 *		L0045E790()
 */

L0044D7C0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x1c;
    if(*(A10 + 4) == 0) {
        return;
    }
    edx = *A10;
    esi = 0;
    edi = 1048624;
    if(!(edx & 2)) {
        edi = 1310768;
        (save)0x2d;
        goto L0044d810;
    }
    if(!(edx & 1)) {
        edi = edi | 262144;
        (save)0x26;
L0044d810:
        (restore)ecx;
        esi = L0044CA90();
    }
    ecx = *(A10 + 0x14);
    if(!(ecx & 0x20)) {
        eax = L0044E9E0( *(A10 + 4), A8, Ac, edi, esi, A14);
    } else {
        if(!(ecx & 0x400)) {
            eax = L0044E360(A8, Ac, *(A10 + 4));
        } else {
            *(ebp - 0x14) = esp;
            eax = L0046D150(L0043C150(1229672270, *(A10 + 4), ebp - 0x10), *(ebp - 0x10), -1, A8, Ac, edi, esi, A14);
            goto L0044d8a3;
            if(*(ebp - 0x20) != 0) {
                ecx = *(ebp - 0x28);
                eax = *(ebp - 0x20)(-1);
            }
            esp = *(ebp - 0x14);
        }
    }
L0044d8a3:
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044D8AB - 0x0044D8AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044D8AB()
{



}

/*	Procedure: 0x0044D8B0 - 0x0044D9CE
 *	Argument size: 12
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L00450020()
 */

L0044D8B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vfffffff0;



    esi = Ac;
    if(L0045E790(A8, esi, A10) != 0) {
        return;
    }
    edx = ebp - 0x40;
    L0044FC20(esi, A10, & Vffffffe0, edx, & Vffffffd0);
    eax = *(A10 + 0x14);
    esi = *A10;
    Vfffffff0 = eax;
    if(!(eax & 1)) {
        L0044BFA0(A8, & Vffffffe0, esi);
    } else {
        L0044C160(A8, & Vffffffe0, esi);
    }
    ecx = !(esi & 2) ? 0x31 : !(esi & 1) ? 0x2a : 0x23;
    esi = L0044CA90(ecx);
    if(!(Vfffffff0 & 0x10)) {
        L004496D0(A8, 5);
        (save)0x30;
        (save) *(A10 + 0x10);
        (save) *(A10 + 0xc);
        (save)ebp - 0x40;
    } else {
        (save)esi;
        L004496A0(A8);
        (restore)ecx;
        if(!(Vfffffff0 & 8)) {
            L0044A620(A8, *(A10 + 8), ebp - 0x40, *(A10 + 0xc), *(A10 + 0x10), 0x21);
            goto L0044d9b5;
        }
        (save)0x30;
        (save) *(A10 + 0x10);
        (save) *(A10 + 0xc);
        (save)ebp - 0x40;
    }
    (save) *(A10 + 8);
    (save)A8;
    L0044A4D0();
L0044d9b5:
    esp = esp + 0x18;
    eax = L0044D7C0(A8, & Vffffffd0, A10, esi);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044D9CF - 0x0044D9CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044D9CF()
{



}

/*	Procedure: 0x0044D9D0 - 0x0044E044
 *	Argument size: 12
 *	Local size: 196
 *	Save regs size: 12
 *	Called by:
 *		L0044D320()
 */

L0044D9D0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffff3c;
	/* unknown */ void  Vffffff40;
	/* unknown */ void  Vffffff70;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff7c;
	/* unknown */ void  Vffffff80;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff88;
	/* unknown */ void  Vffffff8c;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(L0045E4B0(A8, Ac, A10) != 0) {
        return;
    }
    Vffffffc8 = *A10;
    eax = Ac;
    Vffffffb4 = *eax;
    Vffffffc0 = *(eax + 4);
    Vffffffa4 = *(eax + 8);
    Vffffffa0 = *(eax + 0xc);
    esi = M00481000;
    if(!(Vffffffc8 & 0x20)) {
        if(!(Vffffffc8 & 2)) {
            eax = *(esi + 0xc8);
            Vffffff8c = eax;
            *(ebp + -204) = Vffffff8c;
            eax = *(esi + 0xcc);
            Vffffffcc = eax;
            *(ebp + -200) = Vffffffcc;
            eax = *(esi + 0xd0);
            Vffffff94 = eax;
            Vffffff3c = Vffffff94;
            eax = *(esi + 0xd4);
            Vffffffc4 = eax;
            Vffffff40 = Vffffffc4;
            Vffffffd8 = 0xa;
            Vffffffd4 = Vffffffd8;
            Vffffffdc = 4;
            Vffffffe0 = 6;
            Vffffffe4 = 0x10;
            Vffffffe8 = 0;
            Vffffffec = 0x4865f8;
            Vfffffff0 = ebp + -208;
            Vffffffb8 = 0;
            Vffffffbc = 0;
            eax = Vffffffb4;
            *(ebp - M00000064) = eax;
            Vffffffac = *(ebp - M00000064);
            eax = Vffffffc0;
            Vffffffd0 = eax;
            Vffffffb0 = Vffffffd0;
            (save)0;
            L0044B2E0(A8, & Vffffffac, & Vffffffd4, & Vffffffb8, 5, 5, 1);
            ebx = Vffffffa4 - 5;
            Vffffff80 = Vffffffb4;
            Vffffff80 = Vffffff80 + 5;
            L004497A0(A8, Vffffff80, Vffffffd0, ebx, Vffffffc4);
            L004497A0(A8, Vffffff80, Vffffffc0 + 1, ebx, Vffffff8c);
            L004497A0(A8, Vffffff80, Vffffffc0 + 2, ebx, Vffffffcc);
            Vffffffb8 = 5;
            Vffffffac = ebx;
            (save)0;
            L0044B2E0(A8, & Vffffffac, & Vffffffd4, & Vffffffb8, 5, 5, 1);
            eax = *(ebp - M00000064);
            Vffffffac = eax;
            edi = Vffffffa0 - 5;
            Vffffffb8 = 0;
            Vffffffbc = 5;
            Vffffffb0 = edi;
            (save)0;
            L0044B2E0(A8, & Vffffffac, & Vffffffd4, & Vffffffb8, 5, 5, 1);
            L004497A0(A8, Vffffff80, Vffffffa0 - 3, ebx, Vffffffcc);
            L004497A0(A8, Vffffff80, Vffffffa0 - 2, ebx, Vffffff94);
            L004497A0(A8, Vffffff80, Vffffffa0 - 1, ebx, Vffffffc4);
            Vffffffb8 = 5;
            Vffffffac = ebx;
            (save)0;
            L0044B2E0(A8, & Vffffffac, & Vffffffd4, & Vffffffb8, 5, 5, 1);
            ebx = Vffffffc0 + 5;
            L00449990(A8, *(ebp - M00000064), ebx, edi, Vffffffc4);
            L00449990(A8, Vffffffb4 + 1, ebx, edi, Vffffff8c);
            L00449990(A8, Vffffffb4 + 2, ebx, edi, Vffffffcc);
            L00449990(A8, Vffffffa4 - 3, ebx, edi, Vffffffcc);
            L00449990(A8, Vffffffa4 - 2, ebx, edi, Vffffff94);
            L00449990(A8, Vffffffa4 - 1, ebx, edi, Vffffffc4);
        }
        Vffffffb4 = Vffffffb4 + 3;
        Vffffffc0 = Vffffffc0 + 3;
        Vffffffa4 = Vffffffa4 - 3;
        Vffffffa0 = Vffffffa0 - 3;
    }
    if(!(Vffffffc8 & 2)) {
        *(ebp - M00000064) = *(esi + 0xb4);
        Vffffff80 = *(esi + 0xc0);
        Vffffff8c = *(esi + 0xb0);
        edi = *(esi + 0xac);
        Vffffff94 = edi;
        Vffffffd0 = *(esi + 0xb8);
        Vffffffcc = *(esi + 0xbc);
        eax = *(esi + 0xc4);
    } else {
        if(!(Vffffffc8 & 1)) {
            *(ebp - M00000064) = *(esi + 0x98);
            Vffffff80 = *(esi + 0xa4);
            Vffffff8c = *(esi + 0x94);
            edi = *(esi + 0x90);
            Vffffff94 = edi;
            Vffffffd0 = *(esi + 0x9c);
            Vffffffcc = *(esi + 0xa0);
            eax = *(esi + 0xa8);
        } else {
            *(ebp - M00000064) = *(esi + 0x7c);
            Vffffff80 = *(esi + 0x88);
            Vffffff8c = *(esi + 0x78);
            edi = *(esi + 0x74);
            Vffffff94 = edi;
            Vffffffd0 = *(esi + 0x80);
            Vffffffcc = *(esi + 0x84);
            eax = *(esi + 0x8c);
        }
    }
    Vffffffc4 = eax;
    Vffffff88 = Vffffffb4;
    Vffffff88 = Vffffff88 + 3;
    Vffffff70 = Vffffff88;
    Vffffffc8 = Vffffffc0;
    Vffffffc8 = Vffffffc8 + 3;
    Vffffff74 = Vffffffc8;
    Vffffffa8 = Vffffffa4;
    Vffffffa8 = Vffffffa8 - 3;
    ebx = Vffffffa0 - 3;
    Vffffff78 = Vffffffa8;
    Vffffff7c = ebx;
    L004496A0(A8, *(ebp - M00000064));
    L0044A0D0(A8, & Vffffff70);
    Vffffff90 = Vffffffa4;
    Vffffff90 = Vffffff90 - 2;
    Vffffff98 = Vffffffb4;
    Vffffff98 = Vffffff98 + 2;
    L004497A0(A8, Vffffff98, Vffffffc0, Vffffff90, Vffffff80);
    esi = Vffffffc0 + 1;
    Vffffff84 = Vffffffb4;
    Vffffff84 = Vffffff84 + 1;
    L00449E20(A8, Vffffff84, esi, Vffffff80);
    L004497A0(A8, Vffffff98, esi, Vffffffa8, Vffffff94);
    L00449E20(A8, Vffffffa8, esi, Vffffffd0);
    L00449E20(A8, Vffffff90, esi, Vffffff80);
    esi = Vffffffc0 + 2;
    L00449E20(A8, Vffffff98, esi, edi);
    L004497A0(A8, Vffffff88, esi, Vffffffa8, Vffffff8c);
    L00449E20(A8, Vffffffa8, esi, *(ebp - M00000064));
    L00449E20(A8, Vffffff90, esi, Vffffffd0);
    L00449E20(A8, Vffffff84, ebx, Vffffffd0);
    L00449E20(A8, Vffffff98, ebx, *(ebp - M00000064));
    L004497A0(A8, Vffffff88, ebx, Vffffffa8, Vffffffd0);
    edi = Vffffffa0 - 2;
    L00449E20(A8, Vffffff84, edi, Vffffff80);
    L00449E20(A8, Vffffff98, edi, Vffffffd0);
    L004497A0(A8, Vffffff88, edi, Vffffff90, Vffffffcc);
    L004497A0(A8, Vffffff98, Vffffffa0 - 1, Vffffff90, Vffffff80);
    L00449990(A8, Vffffffb4, esi, edi, Vffffff80);
    L00449990(A8, Vffffff84, esi, ebx, Vffffff94);
    L00449990(A8, Vffffff98, Vffffffc8, ebx, Vffffff8c);
    L00449E20(A8, Vffffffa4 - 4, Vffffffa0 - 4, Vffffffd0);
    L00449990(A8, Vffffffa8, Vffffffc8, ebx, Vffffffd0);
    L00449E20(A8, Vffffffa8, ebx, Vffffffcc);
    L00449990(A8, Vffffff90, Vffffffc8, edi, Vffffffcc);
    L00449E20(A8, Vffffff90, edi, Vffffff80);
    L00449990(A8, Vffffffa4 - 1, esi, edi, Vffffff80);
    L004496A0(A8, Vffffffc4);
    eax = A10;
    eax = L0044A4D0(A8, *(eax + 4), Ac, *(eax + 8), *(eax + 0xc), 0x30);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044E045 - 0x0044E04F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044E045()
{



}

/*	Procedure: 0x0044E050 - 0x0044E2FA
 *	Argument size: 12
 *	Local size: 140
 *	Save regs size: 12
 */

L0044E050(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff7c;
	/* unknown */ void  Vffffff80;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff88;
	/* unknown */ void  Vffffff8c;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = Ac;
    if(L0045E5A0(A8, edi, A10) != 0) {
        return;
    }
    eax = *A10;
    Vffffffd0 = eax;
    Vffffff74 = Vffffffd0;
    ebx = M00481000;
    if(!(Vffffff74 = Vffffff74 & 2)) {
        Vffffff84 = *(ebx + 0xc4);
        Vffffff88 = *(ebx + 0xac);
        Vffffff8c = *(ebx + 0xac);
        Vffffff90 = *(ebx + 0xb0);
        Vffffff94 = *(ebx + 0xb4);
        Vffffff98 = *(ebx + 0xb8);
        *(ebp - M00000064) = *(ebx + 0xbc);
        Vffffffa0 = *(ebx + 0xc0);
    } else {
        if(!(Vffffffd0 & 1)) {
            Vffffff84 = *(ebx + 0xa8);
            Vffffff88 = *(ebx + 0x90);
            Vffffff8c = *(ebx + 0x90);
            Vffffff90 = *(ebx + 0x94);
            Vffffff94 = *(ebx + 0x98);
            Vffffff98 = *(ebx + 0x9c);
            *(ebp - M00000064) = *(ebx + 0xa0);
            Vffffffa0 = *(ebx + 0xa4);
        } else {
            Vffffff84 = *(ebx + 0x8c);
            Vffffff88 = *(ebx + 0x74);
            Vffffff8c = *(ebx + 0x74);
            Vffffff90 = *(ebx + 0x78);
            Vffffff94 = *(ebx + 0x7c);
            Vffffff98 = *(ebx + 0x80);
            *(ebp - M00000064) = *(ebx + 0x84);
            Vffffffa0 = *(ebx + 0x88);
        }
    }
    Vffffffd8 = 0xe;
    Vffffffe0 = 7;
    Vffffffdc = 4;
    Vffffffe4 = 0x10;
    Vffffffe8 = 0;
    Vffffffd4 = Vffffffd8;
    Vfffffff0 = & Vffffff80;
    *(ebp + -148) = *edi;
    *(ebp + -144) = *(edi + 4);
    *(ebp + -152) = *(edi + 8);
    edi = *(edi + 0xc);
    Vffffff78 = *(ebp + -148) + 2;
    ecx = edi + *(ebp + -144) - 0xe;
    ecx :: -2147483648;
    asm("sbb ecx,-0x1");
    Vffffff7c = ecx >> 1;
    if(!(Vffffffd0 & 0x20)) {
        Vffffffec = !(Vffffffd0 & 0x10) ? 0x48681e : !(Vffffffd0 & 8) ? 0x4867bc : 0x48675a;
        (save)0;
        L0044B2E0(A8, & Vffffff78, & Vffffffd4, 0, 0xe, 0xe, 1);
    } else {
        Vffffffec = !(Vffffffd0 & 0x10) ? 0x4866f8 : !(Vffffffd0 & 8) ? 0x486696 : 0x486634;
        (save)0;
        L0044B0C0(A8, & Vffffff78, & Vffffffd4, 0, 0xe, 0xe);
    }
    dl = Vffffff74 != 0 ? 7 : 5;
    L004496A0(A8, *(ebx + (dl & 0xff) * 4));
    eax = *(ebp + -144);
    ecx = *(ebp + -148) + 0x14;
    Vffffffc4 = eax;
    eax = *(ebp + -152);
    Vffffffc0 = ecx;
    Vffffffc8 = eax;
    Vffffffcc = edi;
    eax = L0044A620(A8, *(A10 + 4), & Vffffffc0, *(A10 + 8), *(A10 + 0xc), 0x21);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044E2FB - 0x0044E2FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044E2FB()
{



}

/*	Procedure: 0x0044E300 - 0x0044E353
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0043B5CF()
 */

L0044E300(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(L0045E750(A8, Ac, A10) != 0) {
        return;
    }
    ecx = *(A8 + 0xc) + *(A8 + 4);
    edx = *A8 + 2;
    *A10 = edx;
    ecx = ecx - 0xe;
    ecx :: -2147483648;
    asm("sbb ecx,-0x1");
    ecx = ecx >> 1;
    *(A10 + 4) = ecx;
    *(A10 + 8) = edx + 0xe;
    *(A10 + 0xc) = ecx + 0xe;
    esp = ebp - 8;
}

/*	Procedure: 0x0044E354 - 0x0044E35F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044E354()
{



}

/*	Procedure: 0x0044E360 - 0x0044E5F0
 *	Argument size: 12
 *	Local size: 124
 *	Save regs size: 12
 *	Called by:
 *		L0044D7C0()
 */

L0044E360(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A10;
    if(A8 == 0 || Ac == 0) {
        return;
    }
    if(L004604A0(A8, Ac, ebx) != 0) {
        esp = ebp - 0xc;
        return;
    }
    ecx = ebx - 2;
    if(ecx <= 6) {
        switch(ecx) {
            case 0:
L0044e3af:
                *(ebp + -136) = 56576;
                goto L0044e40d;
            case 1:
                *(ebp + -136) = 8388352;
                goto L0044e40d;
            case 2:
                *(ebp + -136) = 11141120;
                goto L0044e40d;
            case 3:
                *(ebp + -136) = -587202560;
                goto L0044e40d;
            case 4:
                *(ebp + -136) = -1869574144;
                goto L0044e40d;
            case 5:
                *(ebp + -136) = 56576;
                goto L0044e40d;
            case 6:
                *(ebp + -136) = 8388352;
                goto L0044e40d;
        }
        goto L0044e3af;
    }
    *(ebp + -136) = 2139062016;
    Vfffffff0 = ebp + -132;
    Vffffffc8 = *(ebp + -136);
    Vffffffc8 = Vffffffc8 >> 8;
    Vffffffc8 = Vffffffc8 & 0xff;
    Vffffffc8 = (Vffffffc8 & 0xff) + (Vffffffc8 & 0xff);
    Ac = *(ebp + -136);
    *(ebp + -136) = *(ebp + -136) >> 0x18;
    Vffffffcc = Ac;
    Vffffffcc = Vffffffcc >> 0x10;
    Vffffffcc = Vffffffcc & 0xff;
    Vffffffcc = (Vffffffcc & 0xff) + (Vffffffcc & 0xff);
    Vffffffd4 = 0x10;
    Vffffffd8 = 0x10;
    Vffffffdc = 4;
    Vffffffe0 = 8;
    Vffffffe4 = 0x10;
    Vffffffe8 = 0;
    Vffffffec = 0x486b1c;
    *(ebp + -136) = ( *(ebp + -136) & 0xff) + ( *(ebp + -136) & 0xff);
    Vffffffbc = "";
    edi = 0;
    ebx = *Vffffffbc;
    ecx = ebx >> 8;
    ecx = cl & 0xff;
    ecx = cl & 0xff;
    ecx = Vffffffc8 * Vffffffc8;
    Ac = -2139062143;
    asm("mul ecx");
    ecx = ebx >> 0x10;
    ebx = ebx >> 0x18;
    edx = edx >> 7;
    Vffffffd0 = edx;
    ecx = cl & 0xff;
    ecx = cl & 0xff;
    ecx = Vffffffcc * Vffffffcc;
    Ac = -2139062143;
    ebx = bl & 0xff;
    ebx = *(ebp + -136) * *(ebp + -136);
    asm("mul ecx");
    Ac = -2139062143;
    edx = edx >> 7;
    ecx = edx;
    asm("mul ebx");
    edx = edx >> 7;
    if(Vffffffd0 <= 0xff) {
        goto L0044e510;
    }
    esi = Vffffffd0 + -255 >> 1;
    goto L0044e512;
    esi = 0;
    if(ecx <= 0xff) {
        goto L0044e524;
    }
    ebx = ecx + -255 >> 1;
    goto L0044e526;
    ebx = 0;
    if(edx <= 0xff) {
        goto L0044e538;
    }
    Ac = edx + -255 >> 1;
    goto L0044e53a;
    ecx = ecx + esi;
    Vffffffd0 = Vffffffd0 + ebx;
    edx = edx + esi + ebx;
    0;
    ecx = ecx;
    if(Vffffffd0 <= 0xff) {
        goto L0044e558;
    }
    Vffffffd0 = 0xff;
    if(ecx <= 0xff) {
        goto L0044e565;
    }
    ecx = 0xff;
    if(edx <= 0xff) {
        goto L0044e572;
    }
    *(ebp + edi * 4 + -132) = 0xff << 0x10 | (Vffffffd0 & 0xff) << 8 | 0xff << 0x18;
    if(edi + 1 < 0x10) {
        goto L0044e4a0;
    }
    esi = *(Ac + 4) + *(Ac + 0xc);
    ecx = *Ac;
    esi = esi - 0x10;
    esi :: -2147483648;
    asm("sbb esi,-0x1");
    ecx = ecx + *(Ac + 8) - 0x10;
    esi = esi >> 1;
    ecx :: -2147483648;
    asm("sbb ecx,-0x1");
    Vffffffc0 = ecx >> 1;
    Vffffffc4 = esi;
    (save)0;
    esp = ebp - 0xc;
    return L0044B2E0(A8, & Vffffffc0, & Vffffffd4, 0, 0x10, 0x10, 1);
}

/*	Procedure: 0x0044E600 - 0x0044E600
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0043A1AD()
 */

L0044E600()
{



}

/*	Procedure: 0x0044E601 - 0x0044E60F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044E601()
{



}

/*	Procedure: 0x0044E611 - 0x0044E61F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044E611()
{



}

/*	Procedure: 0x0044E620 - 0x0044E620
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044E620()
{



}

/*	Procedure: 0x0044E621 - 0x0044E62F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044E621()
{



}

/*	Procedure: 0x0044E630 - 0x0044E9D0
 *	Argument size: 28
 *	Local size: 1088
 *	Save regs size: 12
 *	Called by:
 *		L0044E9E0()
 */

L0044E630(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffbc0;
	/* unknown */ void  Vfffffbc4;
	/* unknown */ void  Vfffffbc8;
	/* unknown */ void  Vfffffbcc;
	/* unknown */ void  Vfffffbd0;
	/* unknown */ void  Vfffffbd4;
	/* unknown */ void  Vfffffbd8;
	/* unknown */ void  Vfffffbdc;
	/* unknown */ void  Vfffffbe0;
	/* unknown */ void  Vfffffbe4;
	/* unknown */ void  Vfffffbe8;
	/* unknown */ void  Vfffffbec;
	/* unknown */ void  Vfffffbf0;
	/* unknown */ void  Vfffffbf4;
	/* unknown */ void  Vfffffbf8;



    if(Ac < 8) {
        return;
    }
    ecx = A8;
    ebx = *ecx & 65535;
    esi = ebx << 8;
    ebx = ebx >> 8;
    edi = *(ecx + 2) & 65535;
    esi = esi | ebx;
    Vfffffbd0 = edi;
    Vfffffbd0 = Vfffffbd0 << 8;
    Vfffffbd0 = Vfffffbd0 | edi >> 8;
    esi = si & 65535;
    eax = Vfffffbd0 & 65535;
    Vfffffbd0 = eax;
    if(esi == 0 || eax == 0 || esi > 16384 || eax > 16384) {
        esp = ebp - 0xc;
        return;
    }
    Vfffffbd4 = esi;
    eax = Vfffffbd0;
    *(ebp + -1092) = esi;
    *(ebp + -1096) = eax;
    Vfffffbd8 = *(ebp + -1096);
    eax = *(ecx + 5) & 0xff;
    edx = eax - 1;
    if(edx > 7) {
        goto L0044e710;
    }
    switch(edx) {
        case 0:
L0044e6e3:
            ebx = (esi + 0x1f & -32) >> 3;
            goto L0044e718;
        case 1:
            ebx = (esi + 0xf & -16) >> 2;
            goto L0044e718;
        case 2:
L0044e710:
            esp = ebp - 0xc;
            return;
        case 3:
            ebx = (esi + 7 & -8) >> 1;
            goto L0044e718;
        case 4:
            goto L0044e710;
        case 5:
            goto L0044e710;
        case 6:
            goto L0044e710;
        case 7:
            ebx = esi + 3 & -4;
            goto L0044e718;
    }
    goto L0044e6e3;
    Vfffffbdc = eax;
    Vfffffbe0 = ebx;
    eax = *(ecx + 4) & 0xff;
    edi = eax & 0xf;
    *(ebp + -1100) = eax;
    if(edi > 8) {
        goto L0044e760;
    }
    goto ( *(edi * 4 + 0x47863c));
    edi = 0;
    goto L0044e768;
    edi = (esi + 0xf & -16) >> 2;
    goto L0044e768;
    edi = (esi + 7 & -8) >> 1;
    goto L0044e768;
    edi = esi + 3 & -4;
    goto L0044e768;
    esp = ebp - 0xc;
    return;
    eax = edi;
    edx = ( *(ecx + 6) & 0xff) + 1;
    eax = Vfffffbd0 * Vfffffbd0 + edx * 4 + 8;
    if(Vfffffbd0 * Vfffffbd0 + eax <= Ac) {
        goto L0044e797;
    }
    esp = ebp - 0xc;
    return;
    Vfffffbe4 = edx;
    Vfffffbf0 = A8 + 8;
    Vfffffbec = A8 + eax;
    Vfffffbe8 = 0;
    A18 & 1048576;
    if((ebx = *(ecx + 7) & 0xff) || Vfffffbe4 != 2) {
        goto L0044e810;
    }
    edi = Vfffffbf0;
    if(*edi != -256 || *(edi + 4) != 0) {
        goto L0044e810;
    }
    *(ebp + -1100) = *(ebp + -1100) | 1;
    bl = 0;
    Vfffffbf8 = A20;
    Vfffffbf0 = & Vfffffbf4;
    goto L0044e91a;
    if(A18 & 131072) {
        goto L0044e845;
    }
    L00466b40(Vfffffbf0, Vfffffbe4, & Vfffffbf4);
    Vfffffbf0 = & Vfffffbf4;
    goto L0044e91a;
    if(A18 & 65536) {
        goto L0044e870;
    }
    L00466c10(Vfffffbf0, Vfffffbe4, & Vfffffbf4);
    goto L0044e90e;
    if(A18 & 262144) {
        goto L0044e8c0;
    }
    if(A1c != -256) {
        goto L0044e8a0;
    }
    L00466c10(Vfffffbf0, Vfffffbe4, & Vfffffbf4);
    goto L0044e90e;
    L00466c90(A1c, Vfffffbf0, Vfffffbe4, & Vfffffbf4);
    goto L0044e90e;
    if(A18 & 524288) {
        goto L0044e91a;
    }
    if(A1c != -256) {
        goto L0044e8f0;
    }
    L00466c10(Vfffffbf0, Vfffffbe4, & Vfffffbf4);
    goto L0044e90e;
    L00466d50(A1c, Vfffffbf0, Vfffffbe4, & Vfffffbf4);
    Vfffffbf0 = & Vfffffbf4;
    eax = A14;
    ecx = *(eax + 4);
    eax = *eax;
    Vfffffbc0 = eax;
    Vfffffbc4 = ecx;
    Vfffffbc8 = Vfffffbc0 + esi;
    Vfffffbcc = ecx + Vfffffbd0;
    ecx = & Vfffffbc0;
    L0044B8F0(ecx, ecx, A18 & 65535, A14);
    if(*(ebp + -1100) & 1) {
        goto L0044e9a0;
    }
    edx = (bl & 0xff) << 0x18 | 1;
    (save)0;
    L0044B2E0(A10, & Vfffffbc0, & Vfffffbd4, 0, *(ebp + -1092), *(ebp + -1096), edx);
    goto L0044e9c9;
    (save)0;
    eax = L0044B0C0(A10, & Vfffffbc0, & Vfffffbd4, 0, *(ebp + -1092), *(ebp + -1096));
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044E9E0 - 0x0044EBA3
 *	Argument size: 24
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0044CB90()
 *		L0044D7C0()
 *		L0044EBB0()
 */

L0044E9E0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    if(A8 >= 0xc0) {
        return;
    }
    if(A10 == 0) {
        esp = ebp - 0xc;
        return;
    }
    cl = 1;
    if(*(A10 + 8) - *A10 >= 0x18 && *(A10 + 0xc) - *(A10 + 4) >= 0x18) {
        cl = 0;
    }
    ebx = M0048100c;
    if(ebx >= 0xc00) {
        eax = M00481008;
        esi = (A8 << 4) + eax;
        *(ebp - 0x10) = eax;
        if(cl != 0) {
            eax = *esi;
            esi = eax << 8 & 16711680;
            esi = esi | eax >> 0x18;
            esi = esi | eax >> 8 & 65280;
            esi = esi | eax << 0x18;
        } else {
            edi = *(esi + 4);
            esi = edi << 8 & 16711680;
            esi = esi | edi >> 0x18;
            esi = esi | edi >> 8 & 65280;
            esi = esi | edi << 0x18;
        }
        if(esi != 0) {
            if(esi > ebx) {
                esi = ebx;
            }
            eax = L0044E630( *(ebp - 0x10) + esi, ebx - esi, Ac, A10, A14, A18, A1c);
            esp = ebp - 0xc;
            return;
        }
    }
    edi = *L00486D3C;
    esi = edi << 8 & 16711680;
    esi = esi | edi >> 0x18;
    esi = esi | edi >> 8 & 65280;
    esi = (esi | edi << 0x18) + 0x486cf8;
    ebx = (A8 << 4) + esi;
    if(cl != 0) {
        ebx = *ebx;
        eax = ebx << 8 & 16711680;
        ecx = ebx;
        edi = ebx;
        eax = eax | ecx >> 0x18;
        eax = eax | edi >> 8 & 65280;
        eax = eax | ebx << 0x18;
    } else {
        ecx = *(ebx + 4);
        eax = ecx << 8 & 16711680;
        eax = eax | ecx >> 0x18;
        eax = eax | ecx >> 8 & 65280;
        if(!(eax = eax | ecx << 0x18)) {
            ecx = *ebx;
            eax = ecx << 8 & 16711680;
            eax = eax | ecx >> 0x18;
            eax = eax | ecx >> 8 & 65280;
            eax = eax | ecx << 0x18;
        }
    }
    eax = L0044E630(eax + esi, 1048576, Ac, A10, A14, A18, A1c);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044EBA4 - 0x0044EBAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044EBA4()
{



}

/*	Procedure: 0x0044EBB0 - 0x0044EC0B
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 8
 */

L0044EBB0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = 0;
    esi = A14 | 1048576;
    ecx = 0x10;
    if((0x101 & A18) == 0x101) {
        esi = esi | 262144;
        ebx = L0044CA90(0x11);
        ecx = 0x12;
    }
    return L0044E9E0(A8, Ac, A10, esi, ebx, L0044CA90(ecx));
}

/*	Procedure: 0x0044EC0C - 0x0044EC0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044EC0C()
{



}

/*	Procedure: 0x0044EC10 - 0x0044EDAE
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044EDB0()
 */

L0044EC10(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    L00465F50(A8, A10, A14, A18, *Ac);
    L00465F50(A8, A10, A14 + 1, A18, *(Ac + 4));
    L00465F50(A8, A10, A14 + 2, A18, *(Ac + 8));
    L00465F50(A8, A10, A14 + 3, A18, *(Ac + 0xc));
    L00465F50(A8, A10, A14 + 4, A18, *(Ac + 0x10));
    L00465F50(A8, A10, A14 + 5, A18, *(Ac + 0x14));
    L00465F50(A8, A10, A14 + 6, A18, *(Ac + 0x18));
    L00465F50(A8, A10, A14 + 7, A18, *(Ac + 0x1c));
    L00465F50(A8, A10, A14 + 8, A18, *(Ac + 0x20));
    L00465F50(A8, A10, A14 + 9, A18, *(Ac + 0x24));
    L00465F50(A8, A10, A14 + 0xa, A18, *(Ac + 0x28));
    L00465F50(A8, A10, A14 + 0xb, A18, *(Ac + 0x2c));
    L00465F50(A8, A10, A14 + 0xc, A18, *(Ac + 0x30));
    L00465F50(A8, A10, A14 + 0xd, A18, *(Ac + 0x34));
    L00465F50(A8, A10, A14 + 0xe, A18, *(Ac + 0x38));
    L00465F50(A8, A10, A14 + 0xf, A18, *(Ac + 0x3c));
    L00465F50(A8, A10, A14 + 0x10, A18, *(Ac + 0x40));
    return L00465F50(A8, A10, A14 + 0x11, A18, *(Ac + 0x44));
}

/*	Procedure: 0x0044EDAF - 0x0044EDAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044EDAF()
{



}

/*	Procedure: 0x0044EDB0 - 0x0044F662
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041EB50()
 */

L0044EDB0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    (save)esi;
    (save)edi;
    esp = esp - 0xd8;
    if(L00460810(A8, ebx, A10) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    *(ebp - 0x14) = *ebx;
    *(ebp - 0x44) = *(ebx + 4);
    *(ebp - 0x3c) = *(ebx + 8);
    *(ebp - 0x40) = *(ebx + 0xc);
    eax = A10;
    ecx = *(eax + 8);
    if(!( *eax & 5)) {
        *(ebp - 0x10) = *(ecx + 0x144);
        *(ebp - 0x38) = *(ecx + 0x150);
        esi = *(ecx + 0x13c);
        *(ebp - 0x58) = esi;
        *(ebp - 0x4c) = *(ecx + 0x14c);
        *(ebp + -144) = *(ecx + 0x154);
        edi = ecx + 0x158;
    } else {
        *(ebp - 0x10) = *(ecx + 0xe0);
        *(ebp - 0x38) = *(ecx + 0xec);
        esi = *(ecx + 0xd8);
        *(ebp - 0x58) = esi;
        *(ebp - 0x4c) = *(ecx + 0xe8);
        *(ebp + -144) = *(ecx + 0xf0);
        edi = ecx + 0xf4;
    }
    ecx = *(A10 + 0x14);
    *(ebp - M00000064) = ecx;
    if((ecx & 130023424) == 41943040) {
        *(ebp + -144) = *(ebp - 0x3c);
        eax = *(ebp - 0x14);
        *(ebp - M00000064) = eax;
        L00465F50(A8, *(ebp - M00000064), *(ebp - 0x44), *(ebp + -144), *(ebp - 0x38));
        eax = *(ebp - 0x44);
        edi = *(ebp - 0x3c) - 2;
        *(ebp - 0x48) = eax;
        *(ebp - 0x48) = *(ebp - 0x48) + 1;
        L00465F50(A8, *(ebp - M00000064), *(ebp - 0x48), edi, *(ebp - 0x58));
        L00466700(A8, edi, *(ebp - 0x48), *(ebp - 0x10));
        eax = *(ebp - 0x44);
        ebx = *(ebp - 0x14) + 2;
        *(ebp - 0x6c) = eax;
        *(ebp - 0x6c) = *(ebp - 0x6c) + 2;
        L00465F50(A8, ebx, *(ebp - 0x6c), edi, *(ebp - 0x10));
        *(ebp - 0x50) = *(ebp - 0x3c);
        *(ebp + -136) = *(ebp - 0x44);
        *(ebp - 0x50) = *(ebp - 0x50) - 3;
        *(ebp + -136) = *(ebp + -136) + 3;
        *(ebp + -140) = *(ebp - 0x14);
        *(ebp + -140) = *(ebp + -140) + 3;
        L00465F50(A8, *(ebp + -140), *(ebp + -136), *(ebp - 0x50), *(ebp - 0x38));
        *(ebp - 0x70) = *(ebp - 0x40);
        *(ebp - 0x70) = *(ebp - 0x70) - 4;
        L00465F50(A8, *(ebp + -140), *(ebp - 0x70), *(ebp - 0x50), *(ebp - 0x38));
        *(ebp + -132) = *(ebp - 0x40);
        *(ebp + -132) = *(ebp + -132) - 3;
        L00465F50(A8, ebx, *(ebp + -132), edi, *(ebp - 0x10));
        eax = *(ebp - 0x14);
        esi = *(ebp - 0x40) - 2;
        *(ebp - 0x68) = eax;
        *(ebp - 0x68) = *(ebp - 0x68) + 1;
        L00466700(A8, *(ebp - 0x68), esi, *(ebp - 0x10));
        *(ebp - 0x14) = *(ebp - 0x3c);
        *(ebp - 0x14) = *(ebp - 0x14) - 1;
        L00465F50(A8, ebx, esi, *(ebp - 0x14), *(ebp - 0x4c));
        *(ebp - 0x54) = *(ebp - 0x40);
        *(ebp - 0x54) = *(ebp - 0x54) - 1;
        L00465F50(A8, *(ebp - M00000064), *(ebp - 0x54), *(ebp + -144), *(ebp - 0x38));
        L00466000(A8, *(ebp - M00000064), *(ebp - 0x48), *(ebp - 0x54), *(ebp - 0x38));
        L00466000(A8, *(ebp - 0x68), *(ebp - 0x6c), esi, *(ebp - 0x58));
        L00466000(A8, ebx, *(ebp + -136), *(ebp + -132), *(ebp - 0x10));
        ebx = *(ebp - 0x44) + 4;
        L00466000(A8, *(ebp + -140), ebx, *(ebp - 0x70), *(ebp - 0x38));
        L00466000(A8, *(ebp - 0x14), *(ebp - 0x48), *(ebp - 0x54), *(ebp - 0x38));
        L00466000(A8, edi, *(ebp - 0x6c), esi, *(ebp - 0x4c));
        L00466000(A8, *(ebp - 0x50), *(ebp + -136), *(ebp + -132), *(ebp - 0x10));
        eax = L00466000(A8, *(ebp - 0x3c) - 4, ebx, *(ebp - 0x70), *(ebp - 0x38));
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    *(ebp + -208) = *(ebp - 0x38);
    *(ebp + -200) = *(ebp - 0x58);
    *(ebp + -196) = *(ebp - 0x10);
    *(ebp + -192) = *(ebp + -144);
    *(ebp + -188) = *(ebp - 0x4c);
    *(ebp + -136) = *(ebp - 0x14);
    *(ebp + -136) = *(ebp + -136) + 2;
    *(ebp - 0x80) = *(ebp + -136);
    *(ebp - 0x70) = *(ebp - 0x44);
    *(ebp - 0x70) = *(ebp - 0x70) + 2;
    *(ebp + -204) = esi;
    *(ebp - 0x7c) = *(ebp - 0x70);
    eax = *(ebp - 0x3c);
    esi = *(ebp - 0x44);
    *(ebp - 0x48) = eax;
    *(ebp - 0x48) = *(ebp - 0x48) - 2;
    eax = *(ebp - 0x48);
    esi = esi + 0x14;
    *(ebp - 0x78) = eax;
    *(ebp - 0x74) = esi;
    L0044EC10(A8, edi, *(ebp - 0x80), *(ebp - 0x7c), eax);
    eax = *(ebp - 0x40);
    ebx = *(ebp - 0x40) - 4;
    *(ebp - 0x54) = eax;
    *(ebp - 0x54) = *(ebp - 0x54) - 2;
    eax = *(ebp - 0x54);
    *(ebp - 0x74) = eax;
    *(ebp - 0x7c) = ebx;
    L00465530(A8, ebp - 0x80, *(ebp - 0x10));
    edi = *(ebp - 0x14) + 4;
    *(ebp - 0x7c) = esi;
    *(ebp - 0x78) = edi;
    *(ebp - 0x74) = ebx;
    L00465530(A8, ebp - 0x80, *(ebp - 0x10));
    eax = *(ebp - 0x48);
    ebx = *(ebp - 0x3c) - 4;
    *(ebp - 0x78) = eax;
    eax = ebp - 0x80;
    *(ebp - 0x80) = ebx;
    L00465530(A8, eax, *(ebp - 0x10));
    *(ebp + -140) = *(ebp - 0x3c);
    eax = *(ebp - 0x14);
    *(ebp + -132) = eax;
    L00465F50(A8, *(ebp + -132), *(ebp - 0x44), *(ebp + -140), *(ebp - 0x38));
    *(ebp - 0x50) = *(ebp - 0x44);
    *(ebp - 0x50) = *(ebp - 0x50) + 1;
    L00465F50(A8, *(ebp + -132), *(ebp - 0x50), *(ebp - 0x48), *(ebp - 0x58));
    L00466700(A8, *(ebp - 0x48), *(ebp - 0x50), *(ebp - 0x10));
    *(ebp - 0x68) = *(ebp - 0x3c);
    *(ebp - 0x68) = *(ebp - 0x68) - 5;
    L00465F50(A8, edi, esi, *(ebp - 0x68), *(ebp - 0x4c));
    L00466700(A8, *(ebp - 0x68), esi, *(ebp - 0x10));
    eax = *(ebp - 0x44);
    esi = *(ebp - 0x14) + 5;
    *(ebp - 0x6c) = eax;
    *(ebp - 0x6c) = *(ebp - 0x6c) + 0x15;
    L00465F50(A8, esi, *(ebp - 0x6c), *(ebp - 0x68), *(ebp - 0x38));
    *(ebp + -216) = *(ebp - 0x40);
    *(ebp + -216) = *(ebp + -216) - 6;
    L00465F50(A8, esi, *(ebp + -216), *(ebp - 0x68), *(ebp - 0x38));
    *(ebp + -212) = *(ebp - 0x40);
    *(ebp + -212) = *(ebp + -212) - 5;
    L00466700(A8, edi, *(ebp + -212), *(ebp - 0x10));
    L00465F50(A8, esi, *(ebp + -212), ebx, *(ebp - 0x58));
    *(ebp + -220) = *(ebp - 0x14);
    *(ebp + -220) = *(ebp + -220) + 1;
    L00466700(A8, *(ebp + -220), *(ebp - 0x54), *(ebp - 0x10));
    *(ebp - 0x10) = *(ebp - 0x3c);
    *(ebp - 0x10) = *(ebp - 0x10) - 1;
    L00465F50(A8, *(ebp + -136), *(ebp - 0x54), *(ebp - 0x10), *(ebp - 0x4c));
    ebx = *(ebp - 0x40) - 1;
    L00465F50(A8, *(ebp + -132), ebx, *(ebp + -140), *(ebp - 0x38));
    L00466000(A8, *(ebp + -132), *(ebp - 0x50), ebx, *(ebp - 0x38));
    L00466000(A8, *(ebp + -220), *(ebp - 0x70), *(ebp - 0x54), *(ebp - 0x58));
    L00466000(A8, edi, *(ebp - 0x6c), *(ebp + -212), *(ebp - 0x4c));
    edi = *(ebp - 0x44) + 0x16;
    L00466000(A8, esi, edi, *(ebp + -216), *(ebp - 0x38));
    L00466000(A8, *(ebp - 0x10), *(ebp - 0x50), ebx, *(ebp - 0x38));
    L00466000(A8, *(ebp - 0x48), *(ebp - 0x70), *(ebp - 0x54), *(ebp - 0x4c));
    L00466000(A8, *(ebp - 0x68), *(ebp - 0x6c), *(ebp + -212), *(ebp - 0x58));
    L00466000(A8, *(ebp - 0x3c) - 6, edi, *(ebp + -216), *(ebp - 0x38));
    eax = *(ebp - 0x44) + 4;
    *(ebp - 0x30) = 0xe;
    edx = *(ebp - 0x30);
    ecx = ebp + -208;
    *(ebp - 0x60) = esi;
    *(ebp - 0x34) = edx;
    *(ebp - 0x2c) = 4;
    *(ebp - 0x28) = 7;
    *(ebp - 0x24) = 0x10;
    *(ebp - 0x20) = 0;
    *(ebp - 0x1c) = 0x486218;
    *(ebp - 0x18) = ecx;
    *(ebp - 0x5c) = eax;
    if(!(esi = *(ebp - M00000064) & 1)) {
        ebx = ebp - 0x34;
        L00464E70(A8, ebp - 0x60, ebx, 0, 0xe, 0xe, 0, 0);
    }
    *(ebp - 0x4c) = *(ebp - M00000064);
    if(!( *(ebp - 0x4c) = *(ebp - 0x4c) & 4)) {
        edx = *(ebp - 0x14) + 0x1b;
        ecx = ebp - 0x34;
        eax = ebp - 0x60;
        *(ebp - 0x60) = edx;
        *(ebp - 0x34) = 0x20;
        *(ebp - 0x28) = 0x10;
        *(ebp - 0x1c) = 0x48633e;
        L00464E70(A8, eax, ecx, 0, 0x20, 0xe, 0, 0);
    }
    ebx = *(ebp - 0x3c) - 0x25;
    *(ebp - 0x34) = 0xe;
    *(ebp - 0x28) = 7;
    *(ebp - 0x1c) = 0x48627a;
    *(ebp - 0x60) = ebx;
    if(!(edi = *(ebp - M00000064) & 2)) {
        edx = ebp - 0x34;
        L00464E70(A8, ebp - 0x60, edx, 0, 0xe, 0xe, 0, 0);
    }
    eax = *(ebp - 0x3c) - 0x13;
    *(ebp - 0x1c) = 0x4862dc;
    *(ebp - 0x60) = eax;
    if(!(ebx = *(ebp - M00000064) & 0x40)) {
        edx = ebp - 0x34;
        L00464E70(A8, ebp - 0x60, edx, 0, 0xe, 0xe, 0, 0);
    }
    eax = A10;
    if(*(eax + 0x10) != 0) {
        eax = L00467390(2, 0, ebp + -221);
        *(ebp - 0x40) = eax;
        *(ebp - 0x58) = L00467470( *(ebp - 0x40), 0, *(ebp + -221) & 0xff, ebp + -228);
        eax = A10;
        eax = L00467910( *(ebp - 0x40), *(ebp - 0x58), *(eax + 0xc), *(eax + 0x10));
        edx = *(ebp - 0x4c) != 0 ? *(ebp - 0x14) + 0x3c : esi != 0 ? *(ebp - 0x14) + 0x18 : *(ebp - 0x14) + 0x10;
        ebx = edi != 0 ? *(ebp - 0x3c) - 0x28 : ebx == 0 ? *(ebp - 0x3c) - 0x16 : *(ebp - 0x3c) - 4;
        ecx = *(ebp - 0x50);
        edi = *(ebp - 0x3c) - *(ebp - 0x14) - eax;
        edi :: -2147483648;
        asm("sbb edi,-0x1");
        edi = edi >> 1;
        *(ebp - 0x7c) = ecx;
        ecx = *(ebp - 0x6c);
        edi = edi + *(ebp - 0x14);
        *(ebp - 0x80) = edx;
        *(ebp - 0x78) = ebx;
        *(ebp - 0x74) = ecx;
        if(edi < edx) {
            edi = edx;
        }
        eax = A10;
        ecx = ebp - 0x60;
        esi = 0x16 - *(ebp + -228);
        esi :: -2147483648;
        asm("sbb esi,-0x1");
        *(ebp - 0x60) = edi;
        *(ebp - 0x5c) = (esi >> 1) + *(ebp - 0x44);
        eax = L004675A0( *(ebp - 0x40), *(ebp - 0x58), A8, ecx, ebp - 0x80, *(eax + 0xc), *(eax + 0x10), *(ebp + -144));
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0044F663 - 0x0044F66F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044F663()
{



}

/*	Procedure: 0x0044F670 - 0x0044F784
 *	Argument size: 12
 *	Local size: 104
 *	Save regs size: 12
 *	Called by:
 *		L0041D470()
 *		L0041EB50()
 */

L0044F670(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = A10;
    if(L00460D40(A8, Ac, ebx) != 0) {
        return;
    }
    ecx = *(ebx + 8);
    if(!( *ebx & 5)) {
        *(ebp - 0x70) = *(ecx + 0x14c);
        *(ebp - 0x6c) = *(ecx + 0x144);
        Vffffff98 = *(ecx + 0x140);
        *(ebp - M00000064) = *(ecx + 0x13c);
        Vffffffa0 = *(ecx + 0x13c);
        Vffffffa4 = *(ecx + 0x150);
    } else {
        *(ebp - 0x70) = *(ecx + 0xe8);
        *(ebp - 0x6c) = *(ecx + 0xe0);
        Vffffff98 = *(ecx + 0xdc);
        *(ebp - M00000064) = *(ecx + 0xd8);
        Vffffffa0 = *(ecx + 0xd8);
        Vffffffa4 = *(ecx + 0xec);
    }
    Vffffffd4 = 0x11;
    Vffffffd8 = 0x11;
    Vffffffdc = 4;
    Vffffffe0 = 9;
    Vffffffe4 = 0x10;
    Vffffffe8 = 0;
    Vffffffec = 0x486b9c;
    Vfffffff0 = ebp - 0x74;
    ecx = *(Ac + 0xc);
    ebx = *(Ac + 8);
    ecx = ecx - 0x15;
    ebx = ebx - 0x15;
    Vffffffcc = ebx;
    Vffffffd0 = ecx;
    eax = L00464E70(A8, & Vffffffcc, & Vffffffd4, 0, 0x11, 0x11, 0, 0);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044F785 - 0x0044F78F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044F785()
{



}

/*	Procedure: 0x0044F99D - 0x0044F99F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0044F99D()
{



}

/*	Procedure: 0x0044F9A0 - 0x0044FB7F
 *	Argument size: 16
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0041D470()
 *		L0041DD99()
 *		L0041EB50()
 */

L0044F9A0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esi = Ac;
    if(L00461550(edi, esi, A10, A14) != 0) {
        return;
    }
    *(ebp - 0x10) = *edi;
    esi = *(esi + 0x14) & 130023424;
    edx = *(edi + 4);
    ecx = *(edi + 8);
    edi = *(edi + 0xc);
    if(esi == 41943040) {
        eax = A10 - 1;
        if(eax > 0) {
            goto L0044fb60;
        }
        switch(eax) {
            case 0:
L0044fa06:
                esi = *(ebp - 0x10) + 4;
                eax = edx + 4;
                ecx = ecx - 4;
                *A14 = esi;
                *(A14 + 4) = eax;
                *(A14 + 8) = ecx;
                *(A14 + 0xc) = edi - 4;
                goto L0044fb51;
        }
        goto L0044fa06;
    }
    if(A10 - 1 <= 8) {
        goto ( *(esi * 4 + 0x478688));
        eax = *(ebp - 0x10) + 6;
        ecx = ecx - 6;
        edi = edi - 6;
        *A14 = eax;
        *(A14 + 4) = edx + 0x16;
        *(A14 + 8) = ecx;
        *(A14 + 0xc) = edi;
        goto L0044fb51;
        if(!(eax & 8)) {
            eax = ecx - 0x15;
            *A14 = eax;
            *(A14 + 4) = edi - 0x15;
            *(A14 + 8) = ecx;
            *(A14 + 0xc) = edi;
            goto L0044fb51;
            if(!(eax & 8)) {
                esi = ecx - 0x15;
                edx = ecx - 4;
                eax = edi - 0x15;
                *A14 = esi;
                *(A14 + 4) = eax;
                *(A14 + 8) = edx;
                *(A14 + 0xc) = edi - 4;
                goto L0044fb51;
                if(!(eax & 1)) {
                    *A14 = *(ebp - 0x10) + 3;
                    *(A14 + 4) = edx;
                    eax = *(ebp - 0x10) + 0x13;
                    *(A14 + 8) = eax;
                    *(A14 + 0xc) = edx + 0x16;
                    goto L0044fb51;
                    if(!(eax & 4)) {
                        *A14 = *(ebp - 0x10) + 0x17;
                        *(A14 + 4) = edx;
                        esi = *(ebp - 0x10) + 0x3e;
                        *(A14 + 8) = esi;
                        *(A14 + 0xc) = edx + 0x16;
                        goto L0044fb51;
                        if(!(eax & 4)) {
                            eax = *(ebp - 0x10) + 0x1b;
                            *A14 = eax;
                            *(A14 + 4) = edx + 4;
                            esi = *(ebp - 0x10) + 0x3b;
                            *(A14 + 8) = esi;
                            *(A14 + 0xc) = edx + 0x12;
                            goto L0044fb51;
                            if(!(eax & 2)) {
                                edi = ecx - 0x27;
                                eax = ecx - 0x15;
                                *A14 = edi;
                                *(A14 + 4) = edx;
                                *(A14 + 8) = eax;
                                *(A14 + 0xc) = edx + 0x16;
                                goto L0044fb51;
                                if(!(eax & 0x40)) {
                                    *A14 = ecx - 0x15;
                                    edi = ecx - 2;
                                    *(A14 + 4) = edx;
                                    *(A14 + 8) = edi;
                                    *(A14 + 0xc) = edx + 0x16;
                                    esp = ebp - 0xc;
                                    return;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L0044fb60:
    *(A14 + 0xc) = 0;
    eax = *(A14 + 0xc);
    *(A14 + 8) = eax;
    *(A14 + 4) = *(A14 + 8);
    *A14 = *(A14 + 4);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0044FB80 - 0x0044FC1F
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041C5A0()
 *		L0041F810()
 *		L00424930()
 */

L0044FB80(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    L004618f0(A8, Ac, A10, A14, A18);
    if(al == 0) {
        goto L0044fbb0;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    if((A8 & 130023424) != 41943040) {
        goto L0044fbd2;
    }
    *edi = 4;
    *esi = 4;
    *ebx = 4;
    *A18 = 4;
    goto L0044fbe1;
    *edi = 6;
    *esi = 0x16;
    *ebx = 6;
    *A18 = 6;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    esp = esp - 4;
    L00461990(A8, Ac, ebp - 1);
    if(al == 0) {
        goto L0044fc13;
    }
    al = *(ebp - 1);
    esp = ebp;
    return;
    esp = ebp;
    return 0;
}

/*	Procedure: 0x0044FC20 - 0x0044FFF0
 *	Argument size: 20
 *	Local size: 44
 *	Save regs size: 12
 *	Called by:
 *		L0044D8B0()
 *		L0045E790()
 */

L0044FC20(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edx = Ac;
    esi = A8;
    ebx = A14;
    if(*(edx + 0x14) & 8) {
        goto L0044fd50;
    }
    Vffffffe8 = 0;
    if(*(edx + 4) == 0) {
        goto L0044fcbb;
    }
    if(*(edx + 0x14) & 0x420) {
        goto L0044fc80;
    }
    edi = *(esi + 0xc) - *(esi + 4);
    if(edi >= 0x28) {
        goto L0044fc70;
    }
    edx = 0x10;
    goto L0044fc75;
    Vffffffe8 = 0x20;
    goto L0044fcbb;
    Vffffffe4 = esp;
    eax = L0043C150(1229672270, edi, ebp - 0x34);
    L0046d1c0(eax, *(ebp - 0x34), esi, & Vffffffe8, 0);
    goto L0044fcbb;
    if(Vffffffd8 == 0) {
        goto L0044fcb8;
    }
    (save)-1;
    ecx = *(ebp - 0x30);
    Vffffffd8();
    esp = *(ebp - 0x1c);
    if(A10 == 0) {
        goto L0044fce9;
    }
    Vfffffff0 = *(esi + 4);
    ecx = *esi;
    edx = *(esi + 8);
    edi = *(esi + 0xc);
    *A10 = ecx;
    *(A10 + 4) = Vfffffff0;
    *(A10 + 8) = edx;
    *(A10 + 0xc) = edi;
    if(ebx == 0) {
        goto L0044fd0c;
    }
    ecx = *esi;
    edx = *(esi + 8);
    ecx = ecx + Vffffffe8;
    eax = *(esi + 0xc);
    edx = edx - 3;
    edi = *(esi + 4);
    ecx = ecx + 0xa;
    *ebx = ecx;
    *(ebx + 4) = edi;
    *(ebx + 8) = edx;
    *(ebx + 0xc) = eax;
    if(A18 == 0) {
        goto L0044ffe9;
    }
    ebx = *esi;
    edx = *(esi + 0xc);
    edi = ebx + 6 + Vffffffe8;
    esi = *(esi + 4);
    edx = edx - 4;
    esi = esi + 4;
    ebx = ebx + 6;
    *A18 = ebx;
    *(A18 + 4) = esi;
    *(A18 + 8) = edi;
    *(A18 + 0xc) = edx;
    goto L0044ffe9;
    if(ecx & 0x10) {
        goto L0044fe90;
    }
    if(ebx == 0) {
        goto L0044fdb0;
    }
    if(*(edx + 0xc) != 0 && *(edx + 0x10) != 0) {
        goto L0044fd88;
    }
    *(ebx + 0xc) = 0;
    *(ebx + 8) = *(ebx + 0xc);
    edx = *(ebx + 8);
    *(ebx + 4) = edx;
    *ebx = *(ebx + 4);
    eax = 0;
    goto L0044fdc9;
    eax = L0044BF40( *(edx + 8));
    ecx = *(esi + 0xc);
    edx = *esi;
    edi = *(esi + 8);
    *ebx = edx;
    edx = ecx - eax;
    *(ebx + 4) = edx;
    *(ebx + 8) = edi;
    *(ebx + 0xc) = ecx;
    goto L0044fdc9;
    if(*(edx + 0xc) != 0 && *(edx + 0x10) != 0) {
        goto L0044fdc0;
    }
    eax = 0;
    goto L0044fdc9;
    eax = L0044BF40( *(edx + 8));
    if(A10 == 0 && A18 == 0) {
        goto L0044ffe9;
    }
    edx = *esi;
    Vfffffff0 = edx;
    ecx = *(esi + 4);
    Vffffffec = ecx;
    *(ebp - 0x38) = Vffffffec;
    ebx = *(esi + 8);
    edi = edx + 0x2c;
    ecx = ebx;
    edi = edi - edx;
    ecx = ecx - edx;
    if(edi >= ecx) {
        goto L0044fe0e;
    }
    ebx = ecx - edi;
    ebx :: -2147483648;
    asm("sbb ebx,-0x1");
    Vfffffff0 = Vfffffff0 + (ebx >> 1);
    ebx = Vfffffff0 + edi;
    esi = *(esi + 0xc);
    edi = esi - Vffffffec;
    ecx = *(ebp - 0x38) + 0x2c;
    edx = edi;
    ecx = ecx - *(ebp - 0x38);
    edx = edx - eax;
    if(ecx < edx) {
        goto L0044fe30;
    }
    edi = esi - eax;
    goto L0044fe40;
    esi = edi - ecx - eax >> 1;
    *(ebp - 0x38) = *(ebp - 0x38) + esi;
    edi = *(ebp - 0x38) + ecx;
    if(A18 == 0) {
        goto L0044fe63;
    }
    *A18 = Vfffffff0;
    *(A18 + 4) = *(ebp - 0x38);
    *(A18 + 8) = ebx;
    *(A18 + 0xc) = edi;
    if(A10 == 0) {
        goto L0044ffe9;
    }
    *A10 = Vfffffff0;
    *(A10 + 4) = *(ebp - 0x38);
    *(A10 + 8) = ebx;
    *(A10 + 0xc) = edi;
    goto L0044ffe9;
    if(*(edx + 4) == 0) {
        goto L0044ff77;
    }
    if(A10 == 0) {
        goto L0044fece;
    }
    Vffffffec = *(esi + 4);
    *(ebp - 0x38) = *(esi + 8);
    ecx = *esi;
    edi = *(esi + 0xc);
    *A10 = ecx;
    *(A10 + 4) = Vffffffec;
    *(A10 + 8) = *(ebp - 0x38);
    *(A10 + 0xc) = edi;
    if(ebx == 0) {
        goto L0044ff28;
    }
    if(*(edx + 0xc) != 0 && *(edx + 0x10) != 0) {
        goto L0044ff00;
    }
    *(ebx + 0xc) = 0;
    *(ebx + 8) = *(ebx + 0xc);
    *(ebx + 4) = *(ebx + 8);
    *ebx = *(ebx + 4);
    eax = 0;
    goto L0044ff41;
    eax = L0044BF40( *(edx + 8));
    edx = *(esi + 0xc);
    edi = *esi;
    ecx = *(esi + 8);
    *ebx = edi;
    edi = edx - eax - 4;
    edx = edx - 4;
    *(ebx + 4) = edi;
    *(ebx + 8) = ecx;
    *(ebx + 0xc) = edx;
    goto L0044ff41;
    if(*(edx + 0xc) != 0 && *(edx + 0x10) != 0) {
        goto L0044ff38;
    }
    eax = 0;
    goto L0044ff41;
    eax = L0044BF40( *(edx + 8));
    if(A18 == 0) {
        goto L0044ffe9;
    }
    ebx = *(esi + 0xc) - eax;
    ecx = *(esi + 8);
    edx = *(esi + 4);
    ebx = ebx - 4;
    edx = edx + 4;
    esi = *esi;
    *A18 = esi;
    *(A18 + 4) = edx;
    *(A18 + 8) = ecx;
    *(A18 + 0xc) = ebx;
    goto L0044ffe9;
    if(A10 == 0) {
        goto L0044ffa5;
    }
    Vffffffec = *(esi + 4);
    ecx = *esi;
    edi = *(esi + 8);
    edx = *(esi + 0xc);
    *A10 = ecx;
    *(A10 + 4) = Vffffffec;
    *(A10 + 8) = edi;
    *(A10 + 0xc) = edx;
    if(ebx == 0) {
        goto L0044ffbf;
    }
    edx = *(esi + 4);
    edi = *(esi + 8);
    ecx = *(esi + 0xc);
    *ebx = *esi;
    *(ebx + 4) = edx;
    *(ebx + 8) = edi;
    *(ebx + 0xc) = ecx;
    if(A18 == 0) {
        goto L0044ffe9;
    }
    *(A18 + 0xc) = 0;
    eax = A18;
    *(eax + 8) = *(eax + 0xc);
    eax = A18;
    *(eax + 4) = *(eax + 8);
    eax = A18;
    *eax = *(eax + 4);
}

/*	Procedure: 0x00450000 - 0x0045001C
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00450AF0()
 */

L00450000()
{



    eax = L0042E3A0(0x24);
    *(eax + 0xc) = 0xc8;
    *(eax + 0x10) = -1;
}

/*	Procedure: 0x0045001D - 0x0045001F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045001D()
{



}

/*	Procedure: 0x00450020 - 0x0045019A
 *	Argument size: 12
 *	Local size: 52
 *	Save regs size: 12
 *	Called by:
 *		L004503AB()
 */

L00450020(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = A10;
    L004496D0(Ac, 2);
    L0044A0D0(Ac, esi);
    eax = A8;
    ecx = *(eax + 0x18);
    if(ecx == 0) {
        return;
    }
    edx = *(esi + 4);
    ebx = edx >> 0x1f;
    eax = 780903145;
    asm("imul edx");
    edx = edx >> 2;
    ebx = ebx + edx;
    if(ebx >= ecx) {
        ebx = ecx - 1;
    }
    edi = *(esi + 0xc) + 0x15;
    eax = -1171354717;
    asm("mul edi");
    edx = edx >> 4;
    Vffffffd8 = edx;
    if(edx >= ecx) {
        Vffffffd8 = ecx;
        Vffffffd8 = Vffffffd8 - 1;
    }
    ecx = ebx;
    *(ebp - 0x40) = 0;
    esi = ecx + ecx * 4;
    *(ebp - 0x38) = *(A8 + 0xc);
    edi = & Vffffffdc;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    Vfffffff0 = 0xa;
    eax = A8;
    esi = esi * 4 + ecx * 2;
    Vffffffd4 = *(eax + 0x10);
    Vffffffd0 = *(eax + 0x14);
    do {
        edi = *(Vffffffd0 + ebx * 4);
        if(*edi == 0) {
            Vffffffcc = esi + 0x16;
            *(ebp - 0x40) = 8;
            *(ebp - 0x3c) = esi;
            L004496D0(Ac, 2);
            L0044A0D0(Ac, ebp - 0x40);
            L004496D0(Ac, 5);
            eax = *(edi + 4);
            edx = *eax & 0xff;
            eax = eax + 1;
            eax = L0044A620(Ac, 0, ebp - 0x40, eax, edx, 0x21);
        } else {
            ebx :: Vffffffd4;
            *(ebp - 0x40) = 0;
            *(ebp - 0x3c) = esi;
            dl = Vffffffcc = esi + 0x16 ? 0 : 1;
            Vffffffdc = dl & 0xff;
            Vffffffe8 = *(edi + 4) + 1;
            ecx = *( *(edi + 4)) & 0xff;
            Vffffffec = ecx;
            eax = L0044D8B0(Ac, ebp - 0x40, & Vffffffdc);
        }
        ebx = ebx + 1;
        esi = esi + 0x16;
    } while(ebx <= Vffffffd8);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0045019B - 0x0045019F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045019B()
{



}

/*	Procedure: 0x004501A0 - 0x00450250
 *	Argument size: 8
 *	Local size: 16
 *	Save regs size: 12
 *	Called by:
 *		L0045029A()
 */

L004501A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    eax = Ac;
    edx = *(A8 + 0x10);
    if(edx == eax) {
        return;
    }
    esi = eax < *(A8 + 0x18) ? *( *(A8 + 0x14) + eax * 4) : 0;
    if(esi == 0 || *esi == 0) {
        eax = eax | -1;
    }
    *(ebp - 0x1c) = 0;
    *(ebp - 0x14) = *(A8 + 0xc);
    if(edx != -1) {
        esi = (edx + edx * 4) * 4 + edx * 2;
        ebx = esi + 0x16;
    } else {
        ebx = 0;
        esi = 0;
    }
    if(eax != -1) {
        edi = eax;
        edx = (edi + edi * 4) * 4 + edi * 2;
        ebx :: esi;
        if(!(edi = edx + 0x16)) {
            esi = edx;
            ebx = edi;
        } else {
            if(esi >= edx) {
                esi = edx;
            }
            if(ebx <= edi) {
                ebx = edi;
            }
        }
    }
    *(ebp - 0x18) = esi;
    Vfffffff0 = ebx;
    *(A8 + 0x10) = eax;
    eax = L0041D2F0( *A8, ebp - 0x1c);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00450251 - 0x0045025F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450251()
{



}

/*	Procedure: 0x00450260 - 0x00450299
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0045029A()
 */

L00450260(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = Ac;
    eax = *ecx;
    edx = *(ecx + 4);
    if(eax >= 0 && eax < *(A8 + 0xc) && edx >= 0) {
        ecx = edx >> 0x1f;
        eax = 780903145;
        asm("imul edx");
        ecx = ecx + (edx >> 2);
        if(ecx < *(A8 + 0x18)) {
            return ecx;
        }
    }
    return eax | -1;
}

/*	Procedure: 0x0045029A - 0x004502D0
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L0045029A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(*(A8 + 0x20) == 0) {
        return;
    }
    eax = L004501A0(A8, L00450260(A8, Ac + 0x10));
    esp = ebp - 4;
}

/*	Procedure: 0x004502D1 - 0x004502DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004502D1()
{



}

/*	Procedure: 0x004503AB - 0x0045048F
 *	Argument size: 4
 *	Local size: 160
 *	Save regs size: 12
 */

L004503AB(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    ebx = ebp + -168;
    eax = L0041D3C0( *A8, ebx, 8, 0, 0);
    esi = 0;
    Vffffffd8 = eax;
    if(eax > 0) {
        ebx = ebp + -168;
        do {
            (save)0;
            *(ebp + -172) = L00449230( *(ebx + 8) - *ebx, *(ebx + 0xc) - *(ebx + 4));
            Vfffffff0 = esp;
            L00449440( *(ebp + -172), ~( *ebx), ~( *(ebx + 4)));
            L00450020(A8, *(ebp + -172), ebx);
L00450467:
            eax = L0041D700( *A8, ebx, ebp + -172);
            esi = esi + 1;
            ebx = ebx + 0x10;
        } while(esi < Vffffffd8);
        goto L00450488;
        L004492F0(ebp + -172);
        L004234F0(0, 0, 0);
        if(Vffffffe4 != 0) {
            (save)-1;
            ecx = Vffffffdc;
            Vffffffe4();
        }
        esp = *(ebp - 0x10);
        goto L00450467;
    }
L00450488:
}

/*	Procedure: 0x00450490 - 0x0045054F
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 8
 */

L00450490(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff4;



    ecx = *(Ac + 8) - 9;
    if(ecx <= 4) {
        switch(ecx) {
            case 0:
                goto L004504b4;
            case 1:
                goto L004504fb;
            case 2:
L00450538:
                L004502a0(A8, eax);
                goto L00450542;
            case 3:
                goto L00450538;
            case 4:
                goto L00450538;
        }
L004504b4:
        if(*(eax + 0xc) & 262144) {
            goto L004504c6;
        }
        (save)eax;
        (save)A8;
        eax = L004502e0();
        goto L00450540;
        *(A8 + 0x20) = 1;
        Vfffffff4 = esp;
        (save)eax;
        (save)A8;
        L004502a0();
        goto L00450540;
        *(A8 + 0x20) = 0;
        L004234F0(0, 0, 0);
        if(Vffffffe8 == 0) {
            goto L004504f6;
        }
        (save)-1;
        ecx = *(ebp - 0x20);
        eax = Vffffffe8();
        esp = *(ebp - 0xc);
        goto L00450542;
L004504fb:
        L004502a0(A8, eax);
        *(A8 + 0x20) = 0;
        ecx = *(A8 + 0x10);
        if(ecx >= *(A8 + 0x18)) {
            goto L00450518;
        }
        esi = *( *(A8 + 0x14) + ecx * 4);
        goto L0045051a;
        esi = 0;
        (save)-1;
        L004501A0(A8);
        (restore)ecx;
        if(esi == 0) {
            goto L00450542;
        }
        edx = *esi;
        if(edx == 0) {
            goto L00450542;
        }
        (save)0;
        (save)edx;
        eax = L00450B40();
        goto L00450540;
    }
L00450542:
}

/*	Procedure: 0x00450550 - 0x004505D5
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004505E0()
 *		L00450800()
 *		L00450B60()
 */

L00450550(A4, A8, Ac, A10, A1c, A20)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{



    eax = A4;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)ebp;
    if(eax != 0 && A8 != 0) {
        A10 = *(eax + 0x18);
        esi = esi | -1;
        ebp = 0;
        edi = *(eax + 0x14);
        if(A10 > 0) {
L00450573:
            eax = *edi;
            if(*eax != A8) {
                goto L004505a0;
            }
            if(Ac == 0) {
                goto L00450589;
            }
            *Ac = 0;
            if(A10 == 0) {
                goto L00450596;
            }
            *A10 = esi;
            (restore)ebp;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return;
            if(ebx != 0) {
                goto L004505a6;
            }
            esi = ebp;
            if(ebp + 1 < A10) {
                goto L00450573;
            }
        }
    }
    if(A1c == 0) {
        goto L004505be;
    }
    *A1c = -1;
    if(A20 == 0) {
        goto L004505cf;
    }
    *A20 = -1;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x004505E0 - 0x00450738
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041C860()
 *		L0041CBA0()
 */

L004505E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    ebx = A8;
    edx = ebp - 0xc;
    ecx = ebp - 0x20;
    (save)esi;
    esp = esp - 0x34;
    eax = L00450550(ebx, Ac, ecx, edx);
    *(ebp - 0x34) = eax;
    if(eax == 0) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    L00429C40(ebx + 0x14, *(ebp - 0x20));
    eax = L0042E3E0(ebp - 0x34);
    ecx = *(ebp - 0xc);
    edx = ecx;
    if(edx < *(ebx + 0x18)) {
        eax = *(ebx + 0x14);
        ecx = *(eax + ecx * 4);
    } else {
        ecx = 0;
    }
    *(ebp - 0x38) = ecx;
    if(ecx != 0) {
        edx = *(ebp - 0xc) + 1;
        eax = edx < *(ebx + 0x18) ? *( *(ebx + 0x14) + edx * 4) : 0;
        if(eax == 0) {
            goto L0045066b;
        }
        if(*eax == 0) {
L0045066b:
            L00429C40(ebx + 0x14, *(ebp - 0xc));
            L0042E3E0(ebp - 0x38);
            eax = *(ebp - 0xc);
            *(ebp - 0x20) = eax;
        }
    }
    ecx = *ebx;
    *(ebp - 0x3c) = ecx;
    if(ecx == 0) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    eax = *(ebx + 0x18);
    if(eax == 0) {
        L0041CD90( *(ebp - 0x3c), ebp - 0x30, 0, 0);
        ecx = ebp - 0x3c;
        *(ebx + 4) = *(ebp - 0x30);
        *(ebx + 8) = *(ebp - 0x2c);
        *(ebx + 0x21) = 1;
        *ebx = 0;
        eax = L0041C860(ecx);
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    edx = eax;
    esi = edx + edx * 4;
    ebx = *(ebx + 0xc);
    esi = esi * 4 + edx * 2;
    L0041CE80( *(ebp - 0x3c), ebx, esi, 0, 0);
    eax = *(ebp - 0x20);
    ecx = eax + eax * 4;
    edx = ebp - 0x1c;
    *(ebp - 0x18) = ecx * 4 + eax * 2;
    *(ebp - 0x1c) = 0;
    *(ebp - 0x14) = ebx;
    *(ebp - 0x10) = esi;
    eax = L0041D2F0( *(ebp - 0x3c), edx);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00450739 - 0x0045073F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450739()
{



}

/*	Procedure: 0x00450740 - 0x004507B3
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00450800()
 */

L00450740(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 != 0 && Ac != 0) {
        eax = *(A8 + 0x18);
        *(ebp - 0x10) = eax;
        esi = 0;
        edi = *(A8 + 0x14);
        if(eax > 0) {
            do {
                ebx = *(edi + esi * 4);
                if(*ebx == 0) {
                    (save)Ac;
                    L00428D80( *(ebx + 4));
                    (restore)ecx;
                    if(al != 0) {
                        goto L0045077e;
                    }
                }
                esi = esi + 1;
            } while(esi < *(ebp - 0x10));
            goto L0045079b;
L0045077e:
            if(A10 != 0) {
                *A10 = esi;
            }
            esp = ebp - 0xc;
            return ebx;
        }
    }
L0045079b:
    if(A10 != 0) {
        *A10 = -1;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x004507B4 - 0x004507BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004507B4()
{



}

/*	Procedure: 0x004507C0 - 0x004507FB
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00450800()
 */

L004507C0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    edx = A4;
    (save)ebx;
    (save)ebp;
    ebx = *(edx + 0x18);
    eax = A8;
    ebp = ebx;
    edx = *(edx + 0x14);
    if(eax == -1) {
        eax = 0;
        goto L004507f3;
L004507e0:
        if(*( *(edx + eax * 4)) == 0) {
            (restore)ebp;
            (restore)ebx;
            return;
        }
    }
    eax = eax + 1;
L004507f3:
    if(eax < ebp) {
        goto L004507e0;
    }
    eax = ebx;
    (restore)ebp;
    (restore)ebx;
}

/*	Procedure: 0x004507FC - 0x004507FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004507FC()
{



}

/*	Procedure: 0x00450800 - 0x00450AEC
 *	Argument size: 12
 *	Local size: 176
 *	Save regs size: 12
 *	Called by:
 *		L00450AF0()
 */

L00450800(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffff50;
	/* unknown */ void  Vffffff54;
	/* unknown */ void  Vffffff58;
	/* unknown */ void  Vffffff5c;
	/* unknown */ void  Vffffff60;
	/* unknown */ void  Vffffff61;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = A10;
    if(Ac == 0) {
        return;
    }
    eax = L00450550(A8, Ac, 0, 0);
    if(eax != 0) {
        esp = ebp - 0xc;
        return;
    }
    L0041CB50(Ac, & Vffffff61, 0x3f);
    Vffffff60 = al;
    Vffffffec = -1;
    eax = esi != 0 ? *esi & 0xff : 0;
    if(eax == 0) {
        ebx = L004507C0(A8, -1);
    } else {
        if(L00450740(A8, esi, ebp + -188) != 0) {
            ebx = L004507C0(A8, *(ebp + -188));
        } else {
            eax = *(A8 + 0x18);
            Vffffffec = eax;
            edx = ( *esi & 0xff) + 9;
            ebx = Vffffffec;
            eax = L0042E3A0(edx);
            Vffffffe8 = eax;
            *(eax + 4) = eax + 8;
            L004288C0( *(Vffffffe8 + 4), esi);
            Vffffffbc = esp;
            L00429A90(A8 + 0x14, Vffffffec, Vffffffe8);
            goto L00450923;
            L0042E3E0( & Vffffffe8);
            L004234F0(0, 0, 0);
            if(Vffffffb0 != 0) {
                (save)-1;
                ecx = Vffffffa8;
                Vffffffb0();
            }
            esp = *(ebp - 0x44);
L00450923:
            ebx = ebx + 1;
        }
    }
    Vfffffff0 = 0;
    Vffffffe4 = esp;
    eax = L0042E3A0((Vffffff60 & 0xff) + 9);
    ecx = eax;
    Vfffffff0 = eax;
    *ecx = Ac;
    *(Vfffffff0 + 4) = Vfffffff0 + 8;
    L004288C0( *(Vfffffff0 + 4), & Vffffff60);
    L00429A90(A8 + 0x14, ebx, Vfffffff0);
    goto L004509c7;
    L0042E3E0( & Vfffffff0);
    eax = L00429C40(A8 + 0x14, Vffffffec);
    ecx = ebp + -184;
    *(ebp + -184) = eax;
    L0042E3E0(ecx);
    L004234F0(0, 0, 0);
    if(Vffffffd8 != 0) {
        (save)-1;
        ecx = Vffffffd0;
        Vffffffd8();
    }
    esp = *(ebp - 0x1c);
L004509c7:
    Vffffffa0 = *(A8 + 0xc);
    eax = *(A8 + 0x18);
    esi = (eax + eax * 4) * 4 + eax * 2;
    eax = *A8;
    Vffffffa4 = eax;
    if(eax == 0) {
        if(*(A8 + 0x21) != 0) {
            *(ebp + -180) = 0;
            Vffffff50 = *(A8 + 4);
            Vffffff54 = *(A8 + 8);
        } else {
            L0041CD90(Ac, & Vffffff50, ebp + -180, 0);
        }
        Vffffff58 = Vffffff50 + Vffffffa0;
        Vffffff5c = Vffffff54 + esi;
        ebx = & Vffffff50;
        *A8 = L0041C5A0(A8, ebx, 0x50, *(ebp + -180), 0x481034);
        L0041B5B0( *A8, 0x4503b0);
        eax = L0041B5F0( *A8, 0x450490);
        esp = ebp - 0xc;
        return;
    }
    L0041CE80(Vffffffa4, Vffffffa0, esi, 0, 0);
    if(Vffffffec != -1) {
        ebx = Vffffffec;
    }
    eax = ebx;
    edx = eax + eax * 4;
    edx = edx * 4 + eax * 2;
    Vffffffc4 = edx;
    Vffffffc8 = Vffffffa0;
    Vffffffc0 = 0;
    Vffffffcc = esi;
    L0041D2F0(Vffffffa4, & Vffffffc0);
    esp = ebp - 0xc;
    return L0041D1C0(Vffffffa4);
}

/*	Procedure: 0x00450AED - 0x00450AEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450AED()
{



}

/*	Procedure: 0x00450AF0 - 0x00450B35
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041C4E9()
 */

L00450AF0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    eax = M00481030;
    if(eax == 0) {
        eax = L00450000();
        M00481030 = eax;
    }
    L00450800(eax, A8, Ac);
    return L0041CBA0(A8, 0);
}

/*	Procedure: 0x00450B36 - 0x00450B3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450B36()
{



}

/*	Procedure: 0x00450B40 - 0x00450B52
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041D1C0()
 */

L00450B40(A8)
/* unknown */ void  A8;
{



    return L0041CBA0(A8, 0x10);
}

/*	Procedure: 0x00450B53 - 0x00450B5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450B53()
{



}

/*	Procedure: 0x00450B60 - 0x00450B93
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041D1C0()
 *		L0041DB20()
 */

L00450B60()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0) {
        L00429610(65538);
    }
    eax = L00450550(M00481030, ebx, 0, 0);
    esp = ebp - 4;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00450B94 - 0x00450B9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450B94()
{



}

/*	Procedure: 0x00450BA0 - 0x00450C32
 *	Argument size: 12
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L0041F14C()
 *		L00445720()
 */

L00450BA0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    eax = *(edi + 0x14) & 65535;
    esi = Ac;
    ebx = A10;
    *(ebp - 0x18) = eax;
    eax = eax != 0 ? L0041FE30( *(ebp - 0x18) & 65535, 0) : *(edi + 0x10);
    ecx = *(edi + 0xc);
    *(ebp - 0x14) = ecx;
    if(!(ebx = ebx - 1)) {
        *(ebp - 0x10) = ecx;
        *(ebp - 0x10) = *(ebp - 0x10) & 0xa;
        do {
            ecx = *(esi + 6) & 65535;
            edi = eax;
            if(!(ecx & 16384)) {
                edi = *(ebp - 0x18);
                ecx = ecx & -16385;
            }
            if(( *(esi + 4) & 65535) == edi && ecx == (ecx & *(ebp - 0x14)) && *(ebp - 0x10) == (ecx & 0xa)) {
                goto L00450c20;
            }
            esi = esi + 8;
        } while(ebx = ebx - 1);
        goto L00450c29;
L00450c20:
        return *esi;
    }
L00450c29:
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00450C33 - 0x00450C3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450C33()
{



}

/*	Procedure: 0x00450C40 - 0x00450CCA
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041F14C()
 *		L00446E30()
 *		L00456670()
 *		L00457AE0()
 */

L00450C40()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    ebx = *(ebp + 0xc);
    (save)edi;
    ecx = *(ebp + 8);
    esi = *(ebp + 0x10);
    if(ebx != 0) {
        if(!(esi & 16384)) {
            edx = *(ecx + 0x14) & 65535;
            al = 0;
            if(edx == ebx) {
                esi = esi & -16385;
                if(esi == (esi & *(ecx + 0xc))) {
                    eax = 1 & 0xff;
                }
            }
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            (restore)ebp;
            return;
        }
        edi = *(ecx + 0xc);
        if(esi == (esi & edi)) {
            eax = esi;
            edx = edi;
            eax = eax & 0xa;
            if((edx & 0xa) == eax) {
                esi = *(ecx + 0x14) & 65535;
                eax = si != 0 ? L0041FE30(si & 65535, 0) : *(ecx + 0x10);
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                (restore)ebp;
                al = 0;
                return;
            }
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return 0;
}

/*	Procedure: 0x00450CCB - 0x00450CCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450CCB()
{



}

/*	Procedure: 0x00450CD0 - 0x00450D56
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 */

L00450CD0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    esp = esp - 0x14;
    if(*(A8 + 0x18) != 0) {
        return;
    }
    eax = *(A8 + 4);
    if(eax == 0) {
        esp = ebp - 8;
        return;
    }
    *(A8 + 0x18) = 1;
    ecx = A8 + 8;
    edx = ebp - 0x1c;
    *(ebp - 0x1c) = 0xf;
    *(ebp - 0x18) = 0;
    *(ebp - 0x14) = 1;
    *(ebp - 0x10) = -1;
    *(ebp - 0xc) = 1;
    (save)ecx;
    (save)edx;
    (save)eax;
    eax = *( *eax + 0xc)();
    if(eax == 0) {
        eax = DragQueryFileW( *(A8 + 0xc), -1, 0, 0);
        *(A8 + 0x14) = eax;
    } else {
        *(A8 + 0xc) = 0;
        *(A8 + 0x14) = 1;
    }
    esp = ebp - 8;
}

/*	Procedure: 0x00450D57 - 0x00450D5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450D57()
{



}

/*	Procedure: 0x00450D60 - 0x00450D98
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0041FB2E()
 */

L00450D60(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0) {
        L00429610(65538);
    }
    esi = L0042E3A0(0x1c);
    *(esi + 4) = A8;
    *( *A8 + 4)(A8);
    *esi = 892850389;
    esp = ebp - 8;
    eax = esi;
    (restore)esi;
}

/*	Procedure: 0x00450D99 - 0x00450D9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450D99()
{



}

/*	Procedure: 0x00450DA0 - 0x00450E00
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0041C860()
 *		L0041FB2E()
 *		L0041FCF0()
 */

L00450DA0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    ebx = *A8;
    if(ebx == 0) {
        return;
    }
    if(*ebx != 892850389) {
        *A8 = 0;
        esp = ebp - 8;
        return;
    }
    *ebx = 0;
    if(*(ebx + 0xc) != 0) {
        (save)ebx + 8;
        ReleaseStgMedium();
    }
    ecx = *(ebx + 4);
    if(ecx != 0) {
        (save)ecx;
        *( *ecx + 8)();
    }
    eax = L0042E3E0(A8);
    esp = ebp - 8;
}

/*	Procedure: 0x00450E01 - 0x00450E0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450E01()
{



}

/*	Procedure: 0x00450E10 - 0x00450EFA
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00445E20()
 */

L00450E10(A8, Ac, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esp = esp - 0x38;
    if(edi == 0 || *edi != 892850389) {
        L00429610(65561);
    }
    if(Ac == 0) {
        edi = *(edi + 4);
        if(edi != 0) {
            eax = ebp - 0x30;
            edx = eax;
            ecx = ebp - 0x44;
            *(ebp - 0x44) = 0xd;
            *(ebp - 0x40) = 0;
            *(ebp - 0x3c) = 1;
            *(ebp - 0x38) = -1;
            *(ebp - 0x34) = 1;
            *eax = 0;
            *(eax + 4) = 0;
            *(eax + 8) = 0;
            (save)edx;
            (save)ecx;
            (save)edi;
            if(*( *edi + 0xc)() == 0) {
                *(ebp - 0x10) = esp;
                esi = L0042F420( *(ebp - 0x2c), A14);
                goto L00450ed3;
                (save)ebp - 0x30;
                ReleaseStgMedium();
                L004234F0(0, 0, 0);
                if(*(ebp - 0x1c) != 0) {
                    (save)-1;
                    ecx = *(ebp - 0x24);
                    *(ebp - 0x1c)();
                }
                esp = *(ebp - 0x10);
L00450ed3:
                ReleaseStgMedium(ebp - 0x30);
                esp = ebp - 0xc;
                return esi;
            }
        }
    }
    if(A14 != 0) {
        *A14 = 0;
    }
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00450EFB - 0x00450EFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450EFB()
{



}

/*	Procedure: 0x00450F00 - 0x00450F66
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00445D90()
 */

L00450F00()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    esp = esp - 0x14;
    if(ebx == 0 || *ebx != 892850389) {
        eax = L00429610(65561);
    }
    edx = *(ebx + 4);
    if(edx == 0) {
        esp = ebp - 4;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    ecx = ebp - 0x18;
    *(ebp - 0x18) = 0xd;
    *(ebp - 0x14) = 0;
    *(ebp - 0x10) = 1;
    *(ebp - 0xc) = -1;
    *(ebp - 8) = 1;
    eax = *( *edx + 0x14)(edx, ecx);
    esp = ebp - 4;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00450F67 - 0x00450F6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00450F67()
{



}

/*	Procedure: 0x00451011 - 0x0045101F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451011()
{



}

/*	Procedure: 0x00451087 - 0x0045108F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451087()
{



}

/*	Procedure: 0x004510B8 - 0x004510E7
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004510B8()
{



    (save)ebp;
    ebp = esp;
    eax = *(ebp + 8);
    if(eax == 0 || *eax != 892850389) {
        eax = L00429610(65561);
    }
    esp = ebp;
    (restore)ebp;
    *"" = 0;
}

/*	Procedure: 0x004510E8 - 0x004510EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004510E8()
{



}

/*	Procedure: 0x004510F0 - 0x004511CE
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004206D0()
 *		L00421520()
 */

L004510F0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;



    (save)edi;
    ebx = Ac;
    if(A8 == 0) {
        L00429610(65538);
    }
    if(!(ebx & 0x400) && !(ebx & 0x6c)) {
        ebx = ebx & -1025;
    }
    if(!(ebx & 0x20) && !(ebx & 2)) {
        ebx = ebx & -33;
    }
    if(!(ebx & 0x40) && !(ebx & 1)) {
        ebx = ebx & -65;
    }
    edx = !(ebx & 0x400) ? 0xac : 0x104;
    edi = L0042E3A0(edx);
    *(edi + 4) = *A8;
    *(edi + 8) = *(A8 + 4);
    *(edi + 0xc) = *(A8 + 8);
    *(edi + 0x10) = *(A8 + 0xc);
    *(edi + 0x2c) = ebx;
    *(edi + 0x30) = A10 & 0xff;
    *(edi + 0x50) = 3;
    if(A14 == 0) {
        A14 = 2;
    }
    *(edi + 0x74) = A14;
    *(edi + 0x78) = -256;
    *(edi + 0x54) = A18;
    *(edi + 0x58) = A1c;
    *(edi + 0x38) = 0x10;
    L00453730(edi);
    *edi = -38350822;
    esp = ebp - 0xc;
    eax = edi;
    (restore)edi;
}

/*	Procedure: 0x004511CF - 0x004511CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004511CF()
{



}

/*	Procedure: 0x004511D0 - 0x0045122C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004206D0()
 *		L004208E9()
 *		L00421520()
 *		L00421B68()
 *		L004523C0()
 */

L004511D0(A8)
/* unknown */ void  A8;
{



    ecx = *A8;
    if(ecx == 0) {
        return;
    }
    if(*ecx != -38350822) {
        *A8 = 0;
        esp = ebp - 4;
        return;
    }
    if(!( *(ecx + 0x50) & 0x20)) {
        *(ecx + 0x50) = *(ecx + 0x50) | 0x40;
        *A8 = 0;
        esp = ebp - 4;
        return;
    }
    *ecx = 0;
    L0042F150(ecx + 0x3c);
    eax = L0042E3E0(A8);
    esp = ebp - 4;
}

/*	Procedure: 0x0045122D - 0x0045122F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045122D()
{



}

/*	Procedure: 0x00451230 - 0x0045128F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00451230(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    *(A8 + 4) = *Ac;
    *(A8 + 8) = *(Ac + 4);
    *(A8 + 0xc) = *(Ac + 8);
    *(A8 + 0x10) = *(Ac + 0xc);
    L00453730(A8);
    return L00453A10(A8, 0);
}

/*	Procedure: 0x00451290 - 0x00451607
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004205CB()
 */

L00451290(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x6c;
    ebx = Ac;
    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    edi = *(A8 + 0x14);
    *(ebp - 0x78) = *(A8 + 0x18);
    if(edi == ebx) {
        eax = A10;
        if(*(ebp - 0x78) == eax) {
            return 0;
        }
    }
    *(A8 + 0x14) = ebx;
    *(A8 + 0x18) = A10;
    if(*(A8 + 0x54) == 0 || !(A14 & 1)) {
        eax = L00453A10(A8, 0);
        esp = ebp - 0xc;
        return 1;
    }
    ecx = *(A8 + 0x2c);
    if((0x1800 & ecx) == 0x1800) {
        L00453A10(A8, 1);
        edx = *(ebp - 0x78);
        ecx = A10;
        *(ebp - 0x10) = 0;
        if(ecx <= edx) {
            ecx = edx;
        }
        if(ebx > edi) {
            *(ebp - 0x1c) = edi;
            *(ebp - 0x18) = ebx;
        } else {
            *(ebp - 0x1c) = ebx;
            *(ebp - 0x18) = edi;
        }
        *(ebp - 0x20) = 0;
        if(ebx <= edi) {
            ebx = edi;
        }
        eax = *(ebp - 0x78);
        if(A10 > eax) {
            edx = eax;
        } else {
            eax = *(ebp - 0x78);
            edx = A10;
            A10 = eax;
        }
        eax = *(A8 + 0x7c);
        *(ebp - 0x14) = eax;
        eax = *(ebp - 0x14) - *(A8 + 0x1c);
        *(ebp - 0x1c) = *(ebp - 0x1c) + eax;
        *(ebp - 0x18) = *(ebp - 0x18) + eax;
        *(ebp - 0x20) = *(ebp - 0x20) + eax;
        ebx = ebx + eax;
        eax = *(A8 + 0x80);
        *(ebp - 0x78) = eax;
        edi = *(ebp - 0x78) - *(A8 + 0x20);
        *(ebp - 0x10) = *(ebp - 0x10) + edi;
        A10 = A10 + edi;
        eax = *(ebp - 0x14);
        ecx = ecx + edi;
        edx = edx + edi;
        if(*(ebp - 0x1c) < eax) {
            *(ebp - 0x1c) = eax;
        }
        eax = *(ebp - 0x78);
        if(*(ebp - 0x10) < eax) {
            *(ebp - 0x10) = eax;
        }
        eax = *(A8 + 0x84);
        *(ebp - 0x54) = eax;
        if(*(ebp - 0x18) > eax) {
            *(ebp - 0x18) = eax;
        }
        edi = *(A8 + 0x88);
        if(ecx > edi) {
            ecx = edi;
        }
        eax = *(ebp - 0x14);
        if(*(ebp - 0x20) < eax) {
            *(ebp - 0x20) = eax;
        }
        if(edx < *(ebp - 0x78)) {
            edx = *(ebp - 0x78);
        }
        if(ebx > *(ebp - 0x54)) {
            ebx = *(ebp - 0x54);
        }
        if(A10 > edi) {
            A10 = edi;
        }
        eax = *(ebp - 0x18);
        if(*(ebp - 0x1c) < eax) {
            if(*(ebp - 0x10) >= ecx) {
                goto L00451443;
            }
            if(*(ebp - 0x20) < ebx && edx < A10) {
                eax = *(ebp - 0x20);
                if(*(ebp - 0x1c) > eax) {
                    *(ebp - 0x1c) = eax;
                }
                if(*(ebp - 0x10) > edx) {
                    *(ebp - 0x10) = edx;
                }
                if(*(ebp - 0x18) < ebx) {
                    *(ebp - 0x18) = ebx;
                }
                if(ecx < A10) {
                    ecx = A10;
                }
            }
            *(ebp - 0x74) = *(ebp - 0x1c);
            *(ebp - 0x70) = *(ebp - 0x10);
            eax = *(ebp - 0x18);
            *(ebp - 0x6c) = eax;
            *(ebp - 0x68) = ecx;
            (save)ebp - 0x74;
        } else {
L00451443:
            if(*(ebp - 0x20) >= ebx || edx >= A10) {
                goto L004515fe;
            }
            *(ebp - M00000064) = *(ebp - 0x20);
            *(ebp - 0x58) = A10;
            *(ebp - 0x60) = edx;
            *(ebp - 0x5c) = ebx;
            (save)ebp - M00000064;
        }
    } else {
        if(!(ecx & 0x800)) {
            if(*(ebp - 0x78) != A10) {
                goto L00451528;
            }
            (save)1;
            L00453A10(A8);
            eax = *(ebp - 0x78);
            (restore)ecx;
            *(ebp - 0x10) = 0;
            if(A10 <= eax) {
                A10 = *(ebp - 0x78);
            }
            if(ebx > edi) {
                ecx = edi;
            } else {
                ecx = ebx;
                ebx = edi;
            }
            edi = *(A8 + 0x7c);
            eax = *(A8 + 0x80);
            edx = edi - *(A8 + 0x1c);
            ecx = ecx + edx;
            ebx = ebx + edx;
            edx = eax - *(A8 + 0x20);
            *(ebp - 0x10) = *(ebp - 0x10) + edx;
            A10 = A10 + edx;
            if(ecx < edi) {
                ecx = edi;
            }
            if(*(ebp - 0x10) < eax) {
                *(ebp - 0x10) = eax;
            }
            edx = *(A8 + 0x84);
            if(ebx > edx) {
                ebx = edx;
            }
            eax = *(A8 + 0x88);
            if(A10 > eax) {
                A10 = eax;
            }
            if(ecx >= ebx) {
                goto L004515fe;
            }
            eax = A10;
            if(*(ebp - 0x10) >= eax) {
                goto L004515fe;
            }
            *(ebp - 0x2c) = *(ebp - 0x10);
            *(ebp - 0x28) = ebx;
            ebx = ebp - 0x30;
            *(ebp - 0x30) = ecx;
            *(ebp - 0x24) = A10;
            (save)ebx;
        } else {
L00451528:
            if(!(ecx & 0x1000)) {
                if(edi != ebx) {
                    goto L004515d0;
                }
                L00453A10(A8, 1);
                *(ebp - 0x14) = 0;
                if(ebx <= edi) {
                    ebx = edi;
                }
                eax = *(ebp - 0x78);
                if(A10 > eax) {
                    edx = eax;
                } else {
                    eax = *(ebp - 0x78);
                    edx = A10;
                    A10 = eax;
                }
                ecx = *(A8 + 0x7c);
                eax = ecx - *(A8 + 0x1c);
                *(ebp - 0x14) = *(ebp - 0x14) + eax;
                edi = *(A8 + 0x80);
                ebx = ebx + eax;
                eax = edi - *(A8 + 0x20);
                edx = edx + eax;
                A10 = A10 + eax;
                if(*(ebp - 0x14) < ecx) {
                    *(ebp - 0x14) = ecx;
                }
                if(edx < edi) {
                    edx = edi;
                }
                eax = *(A8 + 0x84);
                if(ebx > eax) {
                    ebx = eax;
                }
                edi = *(A8 + 0x88);
                if(A10 > edi) {
                    A10 = edi;
                }
                if(*(ebp - 0x14) >= ebx || edx >= A10) {
                    goto L004515fe;
                }
                *(ebp - 0x50) = *(ebp - 0x14);
                *(ebp - 0x44) = A10;
                *(ebp - 0x4c) = edx;
                *(ebp - 0x48) = ebx;
                (save)ebp - 0x50;
            } else {
L004515d0:
                L00453A10(A8, 0);
                *(ebp - 0x40) = *(A8 + 4);
                *(ebp - 0x3c) = *(A8 + 8);
                *(ebp - 0x38) = *(A8 + 0xc);
                edi = *(A8 + 0x10);
                *(ebp - 0x34) = edi;
                (save)ebp - 0x40;
            }
        }
    }
    (save) *(A8 + 0x58);
    eax = *(A8 + 0x54)();
    (restore)ecx;
L004515fe:
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00451608 - 0x0045160F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451608()
{



}

/*	Procedure: 0x00451610 - 0x0045164F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041AE20()
 */

L00451610(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -38350822) {
        eax = L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0x14);
    }
    if(A10 != 0) {
        eax = *(A8 + 0x18);
        *A10 = eax;
    }
}

/*	Procedure: 0x00451650 - 0x00451698
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004223FC()
 */

L00451650(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -38350822) {
        eax = L00429610(65561);
    }
    if(( *(A8 + 0x31) & 0xff) == Ac) {
        return 0;
    }
    *(A8 + 0x31) = bl;
    eax = L00453A10(A8, 1);
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00451699 - 0x0045169F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451699()
{



}

/*	Procedure: 0x004516A0 - 0x004516C6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042198B()
 */

L004516A0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    return *(A8 + 0x2c);
}

/*	Procedure: 0x004516C7 - 0x004516CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004516C7()
{



}

/*	Procedure: 0x004516D0 - 0x0045171E
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0041AE20()
 *		L004205CB()
 *		L004206D0()
 *		L00421520()
 */

L004516D0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -38350822) {
        eax = L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0x84) - *(A8 + 0x7c);
    }
    if(A10 != 0) {
        eax = *(A8 + 0x88) - *(A8 + 0x80);
        *A10 = eax;
    }
}

/*	Procedure: 0x0045171F - 0x0045171F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045171F()
{



}

/*	Procedure: 0x00451720 - 0x0045174A
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L00451720(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    *(A8 + 0x38) = Ac;
    return *(A8 + 0x38);
}

/*	Procedure: 0x0045174B - 0x0045174F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045174B()
{



}

/*	Procedure: 0x00451750 - 0x00451777
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004204CD()
 */

L00451750(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    return *(A8 + 0x38) & 65535;
}

/*	Procedure: 0x00451778 - 0x0045177F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451778()
{



}

/*	Procedure: 0x00451780 - 0x0045192B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00451930()
 *		L004519AD()
 *		L004519F0()
 *		L00451A30()
 *		L00451B3F()
 *		L00452BD0()
 */

L00451780(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x28;
    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    edx = *(A8 + 0x24);
    ecx = *(A8 + 0x28);
    if(Ac > edx) {
        Ac = edx;
    }
    if(A10 > ecx) {
        A10 = ecx;
    }
    *(ebp - 0x31) = 0;
    eax = *(A8 + 0x20);
    *(ebp - 0x32) = 0;
    if(*(ebp - 0x31) == 0 && *(ebp - 0x32) == 0) {
        return;
    }
    *(A8 + 0x1c) = Ac;
    eax = A10;
    *(A8 + 0x20) = eax;
    if(*(A8 + 0x54) != 0) {
        eax = *(A8 + 0x2c);
        edi = *(A8 + 0x7c);
        esi = *(A8 + 0x80);
        edx = *(A8 + 0x84);
        ecx = *(A8 + 0x88);
        *(ebp - 0x10) = eax;
        if(*(ebp - 0x31) != 0) {
            if(!(eax & 1)) {
                eax = *(A8 + 0x8c);
                if(eax < edi) {
                    edi = eax;
                }
                eax = *(A8 + 0x94);
                if(eax > edx) {
                    edx = eax;
                }
                eax = *(A8 + 0x98);
                if(eax > ecx) {
                    ecx = eax;
                }
            }
            if(!( *(ebp - 0x10) & 4)) {
                eax = *(A8 + 0xac);
                if(eax < edi) {
                    edi = eax;
                }
                eax = *(A8 + 0xb0);
                if(eax < esi) {
                    esi = eax;
                }
                eax = *(A8 + 0xb4);
                if(eax > edx) {
                    edx = eax;
                }
            }
        }
        if(*(ebp - 0x32) != 0) {
            if(!( *(ebp - 0x10) & 2)) {
                eax = *(A8 + 0xa0);
                if(eax < esi) {
                    esi = eax;
                }
                eax = *(A8 + 0xa4);
                if(eax > edx) {
                    edx = eax;
                }
                eax = *(A8 + 0xa8);
                if(eax > ecx) {
                    ecx = eax;
                }
            }
            if(!( *(ebp - 0x10) & 8)) {
                eax = *(A8 + 0xbc);
                if(eax < edi) {
                    edi = eax;
                }
                eax = *(A8 + 0xc0);
                if(eax < esi) {
                    esi = eax;
                }
                eax = *(A8 + 0xc8);
                if(eax > ecx) {
                    ecx = eax;
                }
            }
        }
        eax = ebp - 0x2c;
        *(ebp - 0x24) = edx;
        *(ebp - 0x20) = ecx;
        *(ebp - 0x2c) = edi;
        *(ebp - 0x28) = esi;
        eax = *(A8 + 0x54)( *(A8 + 0x58), eax);
    }
    if(*(A8 + 0x6c) != 0) {
        L00453650(A8, ebp - 0x14, ebp - 0x30);
        edi = *(A8 + 0x48) - *(ebp - 0x14);
        edx = *(A8 + 0x4c) - *(ebp - 0x30);
        eax = ebp - 0x1c;
        *(ebp - 0x1c) = edi;
        *(ebp - 0x18) = edx;
        eax = *(A8 + 0x6c)( *(A8 + 0x70), Ac, A10, eax);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0045192C - 0x0045192F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045192C()
{



}

/*	Procedure: 0x00451930 - 0x004519AC
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004204CD()
 */

L00451930(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = Ac;
    ebx = A10;
    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    edx = *(A8 + 0x1c);
    ecx = *(A8 + 0x20);
    if(esi < 0) {
        esi = ~esi;
        eax = edx - esi;
        if(eax > edx) {
            eax = 0;
        }
    } else {
        eax = esi + edx;
        if(eax < edx) {
            eax = eax | -1;
        }
    }
    if(ebx < 0) {
        ebx = ~ebx;
        esi = ecx - ebx;
        if(esi > ecx) {
            esi = 0;
        }
    } else {
        esi = ebx + ecx;
        if(esi < ecx) {
            esi = esi | -1;
        }
    }
    return L00451780(A8, eax, esi);
}

/*	Procedure: 0x004519AD - 0x004519E1
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L004519AD(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    return L00451780(A8, *(A8 + 0x1c), 0);
}

/*	Procedure: 0x004519E2 - 0x004519EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004519E2()
{



}

/*	Procedure: 0x004519F0 - 0x00451A21
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L004519F0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    return L00451780(A8, *(A8 + 0x1c), -1);
}

/*	Procedure: 0x00451A22 - 0x00451A2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451A22()
{



}

/*	Procedure: 0x00451A30 - 0x00451B05
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004205AA()
 *		L004205CB()
 */

L00451A30(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  edi;



    esp = esp - 0x20;
    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    edx = *(A8 + 0x20);
    eax = *(A8 + 0x88) - *(A8 + 0x80) + edx;
    edi = *(A8 + 0x84) - *(A8 + 0x7c);
    ecx = *(A8 + 0x1c);
    edi = edi + ecx;
    *(ebp - 0x2c) = ecx;
    *(ebp - 0x28) = edx;
    *(ebp - 0x24) = edi;
    *(ebp - 0x20) = eax;
    eax = A10 | 0xc0;
    if(!(eax & 0x100) && *Ac >= ecx) {
        edx = *(Ac + 4);
        if(edx >= *(ebp - 0x28)) {
            edx = *(Ac + 8);
            if(edx <= edi) {
                edx = *(Ac + 0xc);
                if(edx <= *(ebp - 0x20)) {
                    return;
                }
            }
        }
    }
    edx = ebp - 0x2c;
    L0044B8F0(ebp - 0x1c, Ac, eax, edx);
    edx = *(ebp - 0x1c) - *(ebp - 0x2c);
    eax = *Ac - edx;
    if(eax < 0) {
        eax = 0;
    }
    ecx = *(ebp - 0x18) - *(ebp - 0x28);
    edi = *(Ac + 4) - ecx;
    if(edi < 0) {
        edi = 0;
    }
    eax = L00451780(A8, eax, edi);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00451B06 - 0x00451B0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451B06()
{



}

/*	Procedure: 0x00451B10 - 0x00451B3E
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451B10()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != -38350822) {
        L00429610(65561);
    }
    eax = *(ebx + 0x28);
    ecx = *(ebx + 0x20);
    esp = ebp - 4;
    ecx :: eax;
    (restore)ebx;
    (restore)ebp;
    asm("setnc al");
}

/*	Procedure: 0x00451B3F - 0x00451C02
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L00451B3F(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 4;
    edi = Ac;
    eax = *(A8 + 0x1c);
    esi = *(A8 + 0x38) & 65535;
    *(ebp - 0x10) = eax;
    ebx = *(A8 + 0x20);
    if(edi != 0) {
        eax = *(A8 + 0x84) - *(A8 + 0x7c) - esi;
        if(eax < esi) {
            eax = esi;
        }
        if(edi < 0) {
            *(ebp - 0x10) = *(ebp - 0x10) - eax;
            if(*(ebp - 0x10) < 0) {
                *(ebp - 0x10) = 0;
            }
        } else {
            *(ebp - 0x10) = *(ebp - 0x10) + eax;
        }
        edi = esi;
        edi :: -2147483648;
        asm("sbb edi,-0x1");
        eax = (edi >> 1) + *(ebp - 0x10);
        asm("cdq");
        esi = esi / esi;
        edx = esi % esi;
        edi = eax;
        *(ebp - 0x10) = esi * esi;
    }
    if(A10 != 0) {
        eax = *(A8 + 0x88) - *(A8 + 0x80) - esi;
        if(eax < esi) {
            eax = esi;
        }
        if(A10 < 0) {
            ebx = ebx - eax;
            if(ebx < 0) {
                ebx = 0;
            }
        } else {
            ebx = ebx + eax;
        }
        edi = esi;
        edi :: -2147483648;
        asm("sbb edi,-0x1");
        eax = (edi >> 1) + ebx;
        asm("cdq");
        esi = esi / esi;
        edx = esi % esi;
        edi = eax;
        ebx = esi * esi;
    }
    eax = L00451780(A8, *(ebp - 0x10), ebx);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00451C03 - 0x00451C0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00451C03()
{



}

/*	Procedure: 0x00451C10 - 0x00452336
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 */

L00451C10(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0xd0;
    if(A8 == 0 || *A8 != -38350822) {
        eax = L00429610(65561);
    }
    if(Ac == 0) {
        return;
    }
    eax = *(A8 + 0x2c);
    *(ebp - 0x20) = eax;
    if(!(eax & 0x180)) {
        eax = ebp + -144;
        edi = A8 + 0x7c;
        L0044B6F0(eax, edi, A10);
        *(ebp - 0x2c) = al;
    } else {
        if(*(A8 + 0x30) != 0) {
            eax = ebp - 0x1c;
            *(ebp - 0x1c) = *(A8 + 0x7c);
            *(ebp - 0x18) = *(A8 + 0x80);
            *(ebp - 0x14) = *(A8 + 0x84);
            *(ebp - 0x10) = *(A8 + 0x88);
            ebx = *(A8 + 0x30) & 0xff;
            *(ebp - 0x1c) = *(ebp - 0x1c) - ebx;
            *(ebp - 0x18) = *(ebp - 0x18) - ebx;
            *(ebp - 0x14) = *(ebp - 0x14) + ebx;
            *(ebp - 0x10) = *(ebp - 0x10) + ebx;
            L0044B6F0(eax, eax, A10);
            if(al != 0) {
                ecx = *(A8 + 0x74);
                if(ecx != 0) {
                    L004496D0(Ac, ecx);
                } else {
                    L004496A0(Ac, *(A8 + 0x78));
                }
                L0044A0D0(Ac, ebp - 0x1c);
            }
            ecx = ebp + -144;
            edi = A8 + 0x7c;
            L0044B6F0(ecx, edi, A10);
            *(ebp - 0x2c) = al;
        } else {
            edx = ebp + -144;
            edi = A8 + 0x7c;
            L0044B6F0(edx, edi, A10);
            *(ebp - 0x2c) = al;
            if(*(ebp - 0x2c) != 0) {
                ebx = *(A8 + 0x74);
                if(ebx != 0) {
                    L004496D0(Ac, ebx);
                } else {
                    L004496A0(Ac, *(A8 + 0x78));
                }
                L0044A0D0(Ac, ebp + -144);
            }
        }
    }
    *(ebp - 0x24) = *(A8 + 0x5c);
    *(ebp - 0x6c) = *(A8 + 0x60);
    *(ebp - 0x68) = *(A8 + 0x31) & 0xff;
    *(ebp - 0x28) = *(A8 + 0x7c);
    eax = *(A8 + 0x1c);
    *(ebp - 0x28) = *(ebp - 0x28) - eax;
    ebx = *(A8 + 0x80) - *(A8 + 0x20);
    if(*(ebp - 0x2c) != 0) {
        if(*(ebp - 0x24) != 0) {
            *(ebp + -140) = *(ebp + -140) - ebx;
            *(ebp + -132) = *(ebp + -132) - ebx;
            eax = *(ebp - 0x28);
            *(ebp + -144) = *(ebp + -144) - eax;
            *(ebp + -136) = *(ebp + -136) - eax;
            eax = *(A8 + 0x88) - *(A8 + 0x80);
            ecx = *(A8 + 0x18);
            if(ecx <= eax) {
                ecx = eax;
            }
            edx = *(A8 + 0x84) - *(A8 + 0x7c);
            eax = *(A8 + 0x14);
            if(eax <= edx) {
                eax = edx;
            }
            *(ebp - 0x14) = eax;
            eax = Ac;
            *(ebp - 0x10) = ecx;
            *(ebp + -164) = eax;
            *(ebp - 0x1c) = 0;
            *(ebp - 0x18) = 0;
            L00449590( *(ebp + -164), ebp + -160);
            *(ebp + -220) = Ac;
            L00449480(Ac, ebp + -216);
            L004495F0(Ac, edi);
            L004494C0(Ac, *(ebp - 0x28), ebx);
            edx = ebp + -144;
            *(ebp - 0x24)( *(ebp - 0x6c), 1, *(ebp - 0x68), Ac, ebp - 0x1c, edx, A14);
            L00449400( *(ebp + -220), ebp + -216);
            L00449500( *(ebp + -164), ebp + -160);
        }
        eax = A10;
        edi = *eax;
        if(edi >= *(A8 + 0x7c)) {
            eax = *(eax + 4);
            if(eax >= *(A8 + 0x80)) {
                eax = A10;
                edx = *(eax + 8);
                if(edx <= *(A8 + 0x84)) {
                    eax = *(A8 + 0x88);
                    if(*(A10 + 0xc) <= eax) {
                        esp = ebp - 0xc;
                        return;
                    }
                }
            }
        }
    }
    ebx = *(A8 + 0x50);
    if(!( *(ebp - 0x20) & 0x80)) {
        if(!( *(ebp - 0x68) & 2)) {
            ecx = 2;
        } else {
            al = !(ebx & 4) ? 4 : 0;
            ecx = al & 0xff;
        }
        eax = L0044C3C0(Ac, A8 + 4, ecx, 0, 0);
    }
    if(!( *(ebp - 0x20) & 1)) {
        (save)A10;
        (restore)ecx;
        if(L0044B6A0(A8 + 0x8c) != 0) {
            edi = ebp - M00000064;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            dl = !(ebx & 1) ? 2 : 0;
            *(ebp - M00000064) = dl & 0xff;
            *(ebp - 0x60) = *(A8 + 0x34) & 0xff;
            *(ebp - 0x5c) = *(A8 + 0x1c);
            *(ebp - 0x58) = *(A8 + 0x24);
            *(ebp - 0x54) = *(A8 + 0x84) - *(A8 + 0x7c);
            eax = *(A8 + 0x14);
            edx = ebp - M00000064;
            *(ebp - 0x50) = eax;
            eax = L004592B0(Ac, A8 + 0x8c, edx);
        }
    }
    if(!( *(ebp - 0x20) & 2)) {
        (save)A10;
        (restore)ecx;
        if(L0044B6A0(A8 + 0x9c) != 0) {
            edi = ebp - 0x48;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            *edi = 0;
            edi = edi + 4;
            cl = !(ebx & 2) ? 2 : 0;
            *(ebp - 0x48) = cl & 0xff;
            *(ebp - 0x44) = *(A8 + 0x35) & 0xff;
            *(ebp - 0x40) = *(A8 + 0x20);
            *(ebp - 0x3c) = *(A8 + 0x28);
            *(ebp - 0x38) = *(A8 + 0x88) - *(A8 + 0x80);
            edi = *(A8 + 0x18);
            edx = ebp - 0x48;
            *(ebp - 0x34) = edi;
            eax = L004592B0(Ac, A8 + 0x9c, edx);
        }
    }
    if(*(ebp - 0x20) & 0x400 || *(ebp - 0x24) == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(!( *(ebp - 0x20) & 4)) {
        *(ebp - 0x28) = A8;
        *(ebp - 0x28) = *(ebp - 0x28) + 0xac;
        if(L0044B6F0(ebp + -144, *(ebp - 0x28), A10) != 0) {
            ebx = *(A8 + 0xb0);
            edi = *(A8 + 0xac) - *(A8 + 0x1c);
            *(ebp + -144) = *(ebp + -144) - edi;
            *(ebp + -140) = *(ebp + -140) - ebx;
            *(ebp + -136) = *(ebp + -136) - edi;
            *(ebp + -132) = *(ebp + -132) - ebx;
            edx = *(A8 + 0xb4);
            ecx = *(A8 + 0xb8);
            edx = edx - *(A8 + 0xac);
            eax = *(A8 + 0x14);
            ecx = ecx - *(A8 + 0xb0);
            if(eax <= edx) {
                eax = edx;
            }
            *(ebp - 0x14) = eax;
            eax = Ac;
            *(ebp - 0x10) = ecx;
            *(ebp - 0x80) = eax;
            *(ebp - 0x1c) = 0;
            *(ebp - 0x18) = 0;
            L00449590( *(ebp - 0x80), ebp - 0x7c);
            eax = Ac;
            *(ebp + -208) = eax;
            L00449480( *(ebp + -208), ebp + -204);
            L004495F0(Ac, *(ebp - 0x28));
            L004494C0(Ac, edi, ebx);
            eax = ebp + -144;
            *(ebp - 0x24)( *(ebp - 0x6c), 4, *(ebp - 0x68), Ac, ebp - 0x1c, eax, A14);
            L00449400( *(ebp + -208), ebp + -204);
            eax = L00449500( *(ebp - 0x80), ebp - 0x7c);
        }
    }
    if(!( *(ebp - 0x20) & 8)) {
        edx = ebp + -144;
        edi = A8 + 0xbc;
        if(L0044B6F0(edx, edi, A10) != 0) {
            eax = *(A8 + 0xbc);
            ebx = *(A8 + 0xc0) - *(A8 + 0x20);
            *(ebp - 0x2c) = eax;
            *(ebp + -144) = *(ebp + -144) - eax;
            *(ebp + -140) = *(ebp + -140) - ebx;
            *(ebp + -136) = *(ebp + -136) - eax;
            *(ebp + -132) = *(ebp + -132) - ebx;
            ecx = *(A8 + 0xc8) - *(A8 + 0xc0);
            eax = *(A8 + 0x18);
            if(eax <= ecx) {
                eax = ecx;
            }
            *(ebp - 0x1c) = 0;
            *(ebp - 0x18) = 0;
            *(ebp - 0x14) = *(A8 + 0xc4) - *(A8 + 0xbc);
            *(ebp - 0x10) = eax;
            eax = Ac;
            *(ebp + -196) = eax;
            L00449590( *(ebp + -196), ebp + -192);
            *(ebp + -176) = Ac;
            L00449480(Ac, ebp + -172);
            L004495F0(Ac, edi);
            L004494C0(Ac, *(ebp - 0x2c), ebx);
            edx = ebp + -144;
            *(ebp - 0x24)( *(ebp - 0x6c), 5, *(ebp - 0x68), Ac, ebp - 0x1c, edx, A14);
            L00449400( *(ebp + -176), ebp + -172);
            eax = L00449500( *(ebp + -196), ebp + -192);
        }
    }
    if(!( *(ebp - 0x20) & 0x20)) {
        edi = A8 + 0xdc;
        if(L0044B6F0(ebp + -144, edi, A10) != 0) {
            eax = *(ebp - 0x24)( *(ebp - 0x6c), 7, *(ebp - 0x68), Ac, edi, ebp + -144, A14);
        }
    }
    if(!( *(ebp - 0x20) & 0x40)) {
        eax = ebp + -144;
        edi = A8 + 0xec;
        if(L0044B6F0(eax, edi, A10) != 0) {
            eax = *(ebp - 0x24)( *(ebp - 0x6c), 8, *(ebp - 0x68), Ac, edi, ebp + -144, A14);
        }
    }
    if((0xc & *(ebp - 0x20)) == 0xc) {
        ecx = ebp + -144;
        edi = A8 + 0xcc;
        if(L0044B6F0(ecx, edi, A10) != 0) {
            eax = *(ebp - 0x24)( *(ebp - 0x6c), 9, *(ebp - 0x68), Ac, edi, ebp + -144, A14);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00452337 - 0x0045233F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00452337()
{



}

/*	Procedure: 0x0045235B - 0x0045235F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045235B()
{



}

/*	Procedure: 0x00452360 - 0x0045238F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004206D0()
 *		L00421520()
 *		L004621EA()
 */

L00452360(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    *(A8 + 0x5c) = Ac;
    *(A8 + 0x60) = A10;
    return *(A8 + 0x60);
}

/*	Procedure: 0x00452390 - 0x004523BF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004206D0()
 *		L00421520()
 */

L00452390(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    *(A8 + M00000064) = Ac;
    *(A8 + 0x68) = A10;
    return *(A8 + 0x68);
}

/*	Procedure: 0x004523C0 - 0x00452469
 *	Argument size: 20
 *	Local size: 24
 *	Save regs size: 8
 *	Called by:
 *		L00452BD0()
 */

L004523C0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff4;



    *A18 = 0;
    esi = *(A8 + M00000064);
    if(esi == 0) {
        return;
    }
    *(A8 + 0x50) = *(A8 + 0x50) | 0x20;
    Vfffffff4 = esp;
    eax = *esi( *(A8 + 0x68), Ac, A10, A14);
    goto L00452443;
    *(A8 + 0x50) = *(A8 + 0x50) & -33;
    if(!( *(A8 + 0x50) & 0x40)) {
        L004511D0( & A8);
        *A18 = 1;
    }
    eax = L004234F0(0, 0, 0);
    if(Vffffffe8 != 0) {
        (save)-1;
        ecx = *(ebp - 0x20);
        Vffffffe8();
    }
    esp = *(ebp - 0xc);
L00452443:
    *(A8 + 0x50) = *(A8 + 0x50) & -33;
    if(!( *(A8 + 0x50) & 0x40)) {
        eax = L004511D0( & A8);
        *A18 = 1;
    }
    esp = ebp - 8;
}

/*	Procedure: 0x0045246A - 0x00452B72
 *	Argument size: 220
 *	Local size: 116
 *	Save regs size: 12
 */

L0045246A(A8, Ac, A84, A90, A94, A9c, Aa4, Aa8, Aac, Ab0, Ab8, Abc, Ac0, Ac4, Acc, Ad0, Ae0)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A84;
/* unknown */ void  A90;
/* unknown */ void  A94;
/* unknown */ void  A9c;
/* unknown */ void  Aa4;
/* unknown */ void  Aa8;
/* unknown */ void  Aac;
/* unknown */ void  Ab0;
/* unknown */ void  Ab8;
/* unknown */ void  Abc;
/* unknown */ void  Ac0;
/* unknown */ void  Ac4;
/* unknown */ void  Acc;
/* unknown */ void  Ad0;
/* unknown */ void  Ae0;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;
	/* unknown */ void  V64;
	/* unknown */ void  V68;
	/* unknown */ void  V74;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffdd;
	/* unknown */ void  Vffffffde;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;



    ebx = A8;
    esp = esp & -8;
    esi = Ac;
    if(ebx == 0 || *ebx != -38350822) {
        L00429610(65561);
    }
    eax = *(ebx + 0x31) & 0xff;
    if(!(eax & 2)) {
        return;
    }
    eax = L004533F0(ebx, esi + 0x10);
    V68 = eax;
    V1c = eax;
    L004536A0(ebx, eax, & V64, & V20);
    *esp = *esi;
    V0 = *(esi + 4);
    V4 = *(esi + 8);
    V8 = *(esi + 0xc);
    Vc = *(esi + 0x10);
    V10 = *(esi + 0x14);
    V14 = *(esi + 0x18) & 0xff;
    V15 = *(esi + 0x19) & 0xff;
    V16 = *(esi + 0x1a) & 65535;
    Vc = Vc - V64;
    edi = V20;
    V10 = V10 - edi;
    ecx = V68 - 1;
    if(ecx > 8) {
        goto L00452998;
    }
    switch(ecx) {
        case 0:
            goto L00452540;
        case 1:
            goto L00452569;
        case 2:
            goto L00452773;
        case 3:
            goto L00452978;
        case 4:
            goto L00452978;
        case 5:
L00452998:
            esp = ebp - 0xc;
            return;
        case 6:
            goto L00452978;
        case 7:
            goto L00452978;
        case 8:
            goto L00452978;
    }
L00452540:
    if(*(ebx + M00000064) == 0) {
        goto L00452998;
    }
    *(ebx + 0x33) = 1;
    *(ebx + 0x40) = A90;
    esi = esp;
    *(ebx + 0x44) = A94;
    (save)esi;
    (save)9;
    (save)1;
    goto L0045298f;
L00452569:
    if(*(ebx + 0x50) & 1) {
        goto L00452998;
    }
    edi = & A9c;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    Aa4 = *(ebx + 0x1c);
    Aa8 = *(ebx + 0x24);
    Aac = *(ebx + 0x84) - *(ebx + 0x7c);
    edx = *(ebx + 0x14);
    Ab0 = edx;
    edi = ebx + 0x8c;
    eax = L004590c0(edi, & A9c, esi + 0x10);
    A94 = eax;
    if(A94 != ( *(ebx + 0x34) & 0xff)) {
        goto L004525d3;
    }
    esp = ebp - 0xc;
    return;
    *(ebx + 0x34) = Aa4;
    ecx = Aa4 - 1;
    if(ecx > 6) {
        goto L00452750;
    }
    goto ( *(ecx * 4 + 0x478980));
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452620;
    }
    *(ebx + 0x34) = 1;
    goto L00452656;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452620;
    }
    *(ebx + 0x34) = 2;
    goto L004526d0;
    *(ebx + 0x34) = 7;
    L00458EE0(edi, & Aac, esi + 0x10, & Acc);
    *(ebx + 0x36) = ax;
    L00451780(ebx, Acc, *(ebx + 0x20));
    (save)0x12;
    goto L0045274a;
    *(ebx + 0x50) = *(ebx + 0x50) & -137;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452680;
    }
    *(ebx + 0x50) = *(ebx + 0x50) | 0x80;
    (save)0;
    (save)-1;
    (save)ebx;
    L00451b40();
    goto L00452690;
    L00451930(ebx, ~( *(ebx + 0x38) & 65535), 0);
    edx = *(ebx + 0x3c);
    if(edx == 0) {
        goto L004526b0;
    }
    L0042F1C0(edx, 0xc8, 1);
    goto L004526c8;
    *(ebx + 0x3c) = L0042F0B0(0x453d60, ebx, 0xc8, 1);
    (save)0x13;
    goto L0045274a;
    *(ebx + 0x50) = *(ebx + 0x50) & -137;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452700;
    }
    *(ebx + 0x50) = *(ebx + 0x50) | 0x80;
    (save)0;
    (save)1;
    (save)ebx;
    L00451b40();
    goto L00452710;
    L00451930(ebx, *(ebx + 0x38) & 65535, 0);
    eax = *(ebx + 0x3c);
    if(eax == 0) {
        goto L00452730;
    }
    L0042F1C0(eax, 0xc8, 1);
    goto L00452748;
    *(ebx + 0x3c) = L0042F0B0(0x453d60, ebx, 0xc8, 1);
    L0044e610(0x14);
    if(A84 == 0) {
        goto L00452998;
    }
    esi = *(ebx + 0x54);
    if(esi == 0) {
        goto L00452998;
    }
    *esi( *(ebx + 0x58), edi);
    goto L00452998;
L00452773:
    if(*(ebx + 0x50) & 2) {
        goto L00452998;
    }
    edi = & Ab0;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    Ab8 = *(ebx + 0x20);
    Abc = *(ebx + 0x28);
    Ac0 = *(ebx + 0x88) - *(ebx + 0x80);
    eax = *(ebx + 0x18);
    Ac4 = eax;
    edi = ebx + 0x9c;
    Ad0 = L004590c0(edi, & Ab0, esi + 0x10);
    eax = *(ebx + 0x35) & 0xff;
    if(Ad0 != eax) {
        goto L004527e0;
    }
    esp = ebp - 0xc;
    return;
    *(ebx + 0x35) = Ae0;
    edx = Ae0 - 1;
    if(edx > 6) {
        goto L00452960;
    }
    goto ( *(edx * 4 + 0x478964));
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452830;
    }
    *(ebx + 0x35) = 1;
    goto L00452866;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452830;
    }
    *(ebx + 0x35) = 2;
    goto L004528e0;
    *(ebx + 0x35) = 7;
    L00458EE0(edi, & Ac0, esi + 0x10, & Ab8);
    *(ebx + 0x36) = ax;
    L00451780(ebx, *(ebx + 0x1c), Ab8);
    (save)0x12;
    goto L0045295a;
    *(ebx + 0x50) = *(ebx + 0x50) & -137;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452890;
    }
    *(ebx + 0x50) = *(ebx + 0x50) | 0x80;
    (save)-1;
    (save)0;
    (save)ebx;
    L00451b40();
    goto L004528a0;
    esi = ~( *(ebx + 0x38) & 65535);
    L00451930(ebx, 0, esi);
    eax = *(ebx + 0x3c);
    if(eax == 0) {
        goto L004528c0;
    }
    L0042F1C0(eax, 0xc8, 1);
    goto L004528d8;
    *(ebx + 0x3c) = L0042F0B0(0x453d60, ebx, 0xc8, 1);
    (save)0x13;
    goto L0045295a;
    *(ebx + 0x50) = *(ebx + 0x50) & -137;
    if(!( *(esi + 0xc) & 1) && *(esi + 0x18) != 2) {
        goto L00452910;
    }
    *(ebx + 0x50) = *(ebx + 0x50) | 0x80;
    (save)1;
    (save)0;
    (save)ebx;
    L00451b40();
    goto L00452920;
    L00451930(ebx, 0, *(ebx + 0x38) & 65535);
    edx = *(ebx + 0x3c);
    if(edx == 0) {
        goto L00452940;
    }
    L0042F1C0(edx, 0xc8, 1);
    goto L00452958;
    *(ebx + 0x3c) = L0042F0B0(0x453d60, ebx, 0xc8, 1);
    L0044e610(0x14);
    if(Ac0 == 0) {
        goto L00452998;
    }
    esi = *(ebx + 0x54);
    if(esi == 0) {
        goto L00452998;
    }
    *esi( *(ebx + 0x58), edi);
    goto L00452998;
L00452978:
    if(*(ebx + M00000064) == 0) {
        goto L00452998;
    }
    *(ebx + 0x33) = Ac0;
    eax = *(ebx + M00000064)( *(ebx + 0x68), V74, 9, esp);
    goto L00452998;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x2c;
    edi = A8;
    esp = esp & -8;
    esi = Ac;
    if(edi == 0) {
        goto L004529be;
    }
    if(*edi == -38350822) {
        goto L004529c9;
    }
    L00429610(65561);
    *(edi + 0x50) = *(edi + 0x50) & -257;
    if(*(edi + 0x50) & 0x200) {
        goto L004529ea;
    }
    *(edi + 0x50) = *(edi + 0x50) & -513;
    L0042F150(edi + 0x3c);
    L0044E620();
    eax = *(edi + 0x34) & 0xff;
    if(al == 0) {
        goto L00452a67;
    }
    ebx = (al & 0xff) - 1;
    *(edi + 0x34) = 0;
    if(ebx > 5) {
        goto L00452a52;
    }
    goto ( *(ebx * 4 + 0x4789dc));
    L0042F150(edi + 0x3c);
    goto L00452a52;
    L0042F150(edi + 0x3c);
    if(*(edi + 0x50) & 8) {
        goto L00452a52;
    }
    (save)0;
    (save)-1;
    goto L00452a49;
    L0042F150(edi + 0x3c);
    if(*(edi + 0x50) & 8) {
        goto L00452a52;
    }
    L00451b40(edi, 1, 0);
    ebx = *(edi + 0x54);
    if(ebx == 0) {
        goto L00452a67;
    }
    *ebx( *(edi + 0x58), edi + 0x8c);
    eax = *(edi + 0x35) & 0xff;
    if(al == 0) {
        goto L00452add;
    }
    ecx = (al & 0xff) - 1;
    *(edi + 0x35) = 0;
    if(ecx > 5) {
        goto L00452ac8;
    }
    goto ( *(ecx * 4 + 0x4789c4));
    L0042F150(edi + 0x3c);
    goto L00452ac8;
    L0042F150(edi + 0x3c);
    if(*(edi + 0x50) & 8) {
        goto L00452ac8;
    }
    (save)-1;
    goto L00452abd;
    L0042F150(edi + 0x3c);
    if(*(edi + 0x50) & 8) {
        goto L00452ac8;
    }
    L00451b40(edi, 0, 1);
    ebx = *(edi + 0x54);
    if(ebx == 0) {
        goto L00452add;
    }
    *ebx( *(edi + 0x58), edi + 0x9c);
    eax = *(edi + 0x33) & 0xff;
    if(al == 0) {
        goto L00452b6b;
    }
    ebx = al & 0xff;
    *(edi + 0x33) = 0;
    L004536A0(edi, ebx, & Vffffffe4, & Vffffffe8);
    *esp = *esi;
    Vffffffc8 = *(esi + 4);
    Vffffffcc = *(esi + 8);
    Vffffffd0 = *(esi + 0xc);
    Vffffffd4 = *(esi + 0x10);
    Vffffffd8 = *(esi + 0x14);
    Vffffffdc = *(esi + 0x18) & 0xff;
    Vffffffdd = *(esi + 0x19) & 0xff;
    Vffffffde = *(esi + 0x1a) & 65535;
    Vffffffd4 = Vffffffd4 - Vffffffe4;
    Vffffffd8 = Vffffffd8 - Vffffffe8;
    esi = *(edi + M00000064);
    if(esi == 0) {
        goto L00452b6b;
    }
    eax = *esi( *(edi + 0x68), ebx, 0xa, esp);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00452BC9 - 0x00452BCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00452BC9()
{



}

/*	Procedure: 0x00452BD0 - 0x0045301D
 *	Argument size: 8
 *	Local size: 132
 *	Save regs size: 12
 */

L00452BD0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V20;
	/* unknown */ void  V24;
	/* unknown */ void  V2c;
	/* unknown */ void  V30;
	/* unknown */ void  V34;
	/* unknown */ void  V38;
	/* unknown */ void  V40;
	/* unknown */ void  V44;
	/* unknown */ void  V48;
	/* unknown */ void  V4c;
	/* unknown */ void  V50;
	/* unknown */ void  V58;
	/* unknown */ void  V5c;
	/* unknown */ void  V64;
	/* unknown */ void  V6c;
	/* unknown */ void  V70;
	/* unknown */ void  V74;
	/* unknown */ void  V79;
	/* unknown */ void  V7a;
	/* unknown */ void  V7b;
	/* unknown */ void  Vfffffffc;



    ebx = A8;
    esp = esp & -8;
    esi = Ac;
    if(ebx == 0 || *ebx != -38350822) {
        eax = L00429610(65561);
    }
    if(!( *(ebx + 0x31) & 0xff & 2)) {
        return;
    }
    *(ebx + 0x48) = *(esi + 0x10);
    *(ebx + 0x4c) = *(esi + 0x14);
    if(!( *(ebx + 0x50) & 0x100)) {
        eax = *(esi + 0x14) - *(ebx + 0x80);
        edx = *(ebx + 0x44) - eax;
        if(edx <= 0) {
            edx = 0;
        }
        ecx = *(esi + 0x10) - *(ebx + 0x7c);
        edi = *(ebx + 0x40) - ecx;
        if(edi <= 0) {
            edi = 0;
        }
        L00451780(ebx, edi, edx);
    }
    if(*(ebx + 0x35) == 7) {
        edi = & V24;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        V2c = *(ebx + 0x20);
        V30 = *(ebx + 0x28);
        V34 = *(ebx + 0x88) - *(ebx + 0x80);
        V38 = *(ebx + 0x18);
        edx = esi + 0x10;
        esi = ebx + 0x9c;
        eax = L00451780(ebx, *(ebx + 0x1c), L00458FC0(esi, & V24, edx, *(ebx + 0x36)));
        esp = ebp - 0xc;
        return;
    }
    if(*(ebx + 0x34) == 7) {
        edi = & V50;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        *edi = 0;
        edi = edi + 4;
        V58 = *(ebx + 0x1c);
        V5c = *(ebx + 0x24);
        *(esp + M00000064) = *(ebx + 0x84) - *(ebx + 0x7c);
        eax = esi + 0x10;
        V64 = *(ebx + 0x14);
        esi = ebx + 0x8c;
        eax = L00451780(ebx, L00458FC0(esi, & V50, eax, *(ebx + 0x36)), *(ebx + 0x20));
        esp = ebp - 0xc;
        return;
    }
    eax = *(ebx + M00000064);
    V6c = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        return;
    }
    V70 = *(ebx + 0x68);
    *esp = *esi;
    V0 = *(esi + 4);
    V4 = *(esi + 8);
    V8 = *(esi + 0xc);
    Vc = *(esi + 0x10);
    V10 = *(esi + 0x14);
    V14 = *(esi + 0x18) & 0xff;
    V15 = *(esi + 0x19) & 0xff;
    V16 = *(esi + 0x1a) & 65535;
    V74 = L004533F0(ebx, esi + 0x10);
    V44 = *(ebx + 0x33) & 0xff;
    V40 = *(ebx + 0x32) & 0xff;
    if(V44 != 0) {
        eax = V44;
        V48 = V74 == eax ? eax : 0;
        eax = V40;
        if(V48 != eax) {
            if(eax != 0) {
                *(ebx + 0x32) = 0;
                L004536A0(ebx, V40, & V20, & V4c);
                Vc = Vc - V20;
                V10 = V10 - V4c;
                eax = L004523C0(ebx, V40, 0xc, & Vfffffffc, & V7a);
                if(V7a != 0) {
                    esp = ebp - 0xc;
                    return;
                }
            }
            if(V48 != 0) {
                V74 = V48;
                L004536A0(ebx, V74, & V20, & V4c);
                Vc = *(esi + 0x10) - V20;
                V10 = *(esi + 0x14) - V4c;
                eax = L004523C0(ebx, V74, 0xb, & Vfffffffc, & V7b);
                if(V7b != 0) {
                    esp = ebp - 0xc;
                    return;
                }
                *(ebx + 0x32) = V48;
            }
        }
        L004536A0(ebx, V44, & V20, & V4c);
        Vc = *(esi + 0x10) - V20;
        ebx = *(esi + 0x14) - V4c;
        V10 = ebx;
        eax = V6c(V70, V44, 0xd, esp);
        esp = ebp - 0xc;
        return;
    }
    eax = V40;
    if(V74 == eax) {
        if(V74 != 0) {
            L004536A0(ebx, V74, & V20, & V4c);
            esi = V4c;
            Vc = Vc - V20;
            V10 = V10 - esi;
            ebx = esp;
            eax = V6c(V70, V74, 0xd, ebx);
        }
        esp = ebp - 0xc;
        return;
    }
    if(V40 != 0) {
        *(ebx + 0x32) = 0;
        L004536A0(ebx, V40, & V20, & V4c);
        Vc = Vc - V20;
        V10 = V10 - V4c;
        eax = L004523C0(ebx, V40, 0xc, & Vfffffffc, & V79);
        if(V79 != 0) {
            esp = ebp - 0xc;
            return;
        }
    }
    if(V74 != 0) {
        *(ebx + 0x32) = V74;
        L004536A0(ebx, V74, & V20, & V4c);
        Vc = *(esi + 0x10) - V20;
        edx = *(esi + 0x14) - V4c;
        V10 = edx;
        eax = V6c(V70, V74, 0xb, esp);
        esp = ebp - 0xc;
        return;
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0045301E - 0x0045301F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045301E()
{



}

/*	Procedure: 0x00453020 - 0x0045317C
 *	Argument size: 8
 *	Local size: 52
 *	Save regs size: 12
 */

L00453020(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  V0;
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  esi;
	/* unknown */ void  V14;
	/* unknown */ void  V15;
	/* unknown */ void  V16;
	/* unknown */ void  V1c;
	/* unknown */ void  V20;
	/* unknown */ void  V24;
	/* unknown */ void  V2b;



    esp = esp & -8;
    esi = Ac;
    if(A8 == 0 || *A8 != -38350822) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x33) == 1) {
        V2b = 0;
        V1c = *(esi + 0x10);
        eax = *(A8 + 4);
        bl = 0;
        cl = 0;
        if(V1c >= eax) {
            edx = *(esi + 0x14);
            eax = *(A8 + 8);
            if(edx >= eax) {
                ecx = 1 & 0xff;
            }
        }
        if(cl != 0) {
            eax = *(A8 + 0xc);
            if(V1c < eax) {
                bl = 1;
            }
        }
        if(bl != 0) {
            ebx = *(esi + 0x14);
            if(ebx < *(A8 + 0x10)) {
                V2b = 1;
            }
        }
        if(V2b == 0 && *(A8 + 0x34) == 0 && *(A8 + 0x35) == 0 && !( *(A8 + 0x50) & 0x100)) {
            *(A8 + 0x50) = *(A8 + 0x50) & -649;
            L0042F150(A8 + 0x3c);
            eax = L0042F0B0(0x453f10, A8, 0xc8, 1);
            *(A8 + 0x3c) = eax;
            *(A8 + 0x50) = *(A8 + 0x50) | 0x200;
        }
    }
    ebx = *(A8 + 0x32) & 0xff;
    if(ebx == 0) {
        return;
    }
    *(A8 + 0x32) = 0;
    L004536A0(A8, ebx, & V24, & V20);
    *esp = *esi;
    V0 = *(esi + 4);
    V4 = *(esi + 8);
    V8 = *(esi + 0xc);
    Vc = *(esi + 0x10);
    V10 = *(esi + 0x14);
    V14 = *(esi + 0x18) & 0xff;
    V15 = *(esi + 0x19) & 0xff;
    V16 = *(esi + 0x1a) & 65535;
    Vc = Vc - V24;
    V10 = V10 - V20;
    esi = *(A8 + M00000064);
    if(esi != 0) {
        eax = *esi( *(A8 + 0x68), ebx, 0xc, esp);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0045317D - 0x0045317F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045317D()
{



}

/*	Procedure: 0x00453180 - 0x004532DF
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00420C50()
 *		L00421CBC()
 *		L004223CE()
 */

L00453180(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 == 0 || *A8 != -38350822) {
        L00429610(65561);
    }
    ecx = ( *(Ac + 0x14) & 65535) - 0x80;
    if(ecx <= 3) {
        switch(ecx) {
            case 0:
L004531b9:
                eax = L004519b0(A8);
                return 1;
            case 1:
                eax = L004519F0(A8);
                esp = ebp - 0xc;
                return 1;
            case 2:
                eax = L00451b40(A8, 0, -1);
                esp = ebp - 0xc;
                return 1;
            case 3:
                L00451b40(A8, 0, 1);
                esp = ebp - 0xc;
                return 1;
        }
        goto L004531b9;
    }
    eax = *(A8 + 0x2c);
    edx = 0;
    ecx = 0;
    *(ebp - 0x10) = eax;
    if(eax & 8192) {
        goto L00453249;
    }
    Ac + -132 :: 3;
    if(edi = *(A8 + 0x38) & 65535) {
        goto L00453249;
    }
    goto ( *(eax * 4 + 0x478a1c));
    ecx = ~edi;
    goto L00453249;
    ecx = edi;
    goto L00453249;
    edx = ~edi;
    goto L00453249;
    edx = edi;
    if(*(ebp - 0x10) & 16384) {
        goto L004532b6;
    }
    Ac - 0x11 :: 8;
    if(edi = *(A8 + 0x38) & 65535) {
        goto L004532b6;
    }
    goto ( *(eax * 4 + 0x4789f8));
    ecx = ~edi;
    goto L004532b6;
    ecx = edi;
    goto L004532b6;
    edx = ~edi;
    goto L004532b6;
    edx = edi;
    goto L004532b6;
    edx = ~edi;
    goto L004532b6;
    edx = edi;
    goto L004532b6;
    ecx = ~edi;
    edx = edi;
    goto L004532b6;
    edx = ~edi;
    ecx = edi;
    goto L004532b6;
    L00451780(A8, *(A8 + 0x24) >> 1, *(A8 + 0x28) >> 1);
    esp = ebp - 0xc;
    return 1;
    if(edx != 0) {
        goto L004532be;
    }
    if(ecx == 0) {
        goto L004532d3;
    }
    L00451930(A8, edx, ecx);
    esp = ebp - 0xc;
    return 1;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x004532E0 - 0x004533EF
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L004532E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x20;
    ebx = Ac;
    if(A8 == 0) {
        goto L004532fb;
    }
    if(*esi == -38350822) {
        goto L00453306;
    }
    L00429610(65561);
    if(ebx != 0) {
        goto L00453312;
    }
    return;
    *(ebp - 0x28) = *(esi + 0x54);
    if(*(esi + 0x54) != 0) {
        goto L00453324;
    }
    esp = ebp - 0xc;
    return;
    *(ebp - 0x2c) = *ebx;
    edi = *(ebx + 4);
    edx = *(ebx + 8);
    ecx = *(ebx + 0xc);
    if(*(ebp - 0x2c) >= 0) {
        goto L0045333d;
    }
    *(ebp - 0x2c) = 0;
    if(edi >= 0) {
        goto L00453343;
    }
    edi = 0;
    ebx = *(esi + 0x84) - *(esi + 0x7c);
    if(*(esi + 0x14) <= ebx) {
    }
    if(edx <= ebx) {
        goto L0045335b;
    }
    edx = eax;
    eax = *(esi + 0x88) - *(esi + 0x80);
    if(*(esi + 0x18) <= eax) {
    }
    if(ecx <= eax) {
        goto L00453376;
    }
    ecx = ebx;
    *(ebp - 0x24) = *(esi + 0x7c);
    *(ebp - 0x20) = *(esi + 0x80);
    eax = *(ebp - 0x20) - *(esi + 0x20);
    *(ebp - 0x2c) = *(ebp - 0x2c) + *(ebp - 0x24) - *(esi + 0x1c);
    edi = eax;
    ecx = ecx + eax;
    eax = *(ebp - 0x24);
    edx = edx + ebx;
    if(*(ebp - 0x2c) >= eax) {
        goto L004533a2;
    }
    *(ebp - 0x2c) = eax;
    if(edi >= *(ebp - 0x20)) {
        goto L004533aa;
    }
    edi = *(ebp - 0x20);
    if(edx <= *(esi + 0x84)) {
        goto L004533b6;
    }
    edx = eax;
    if(ecx <= *(esi + 0x88)) {
        goto L004533c2;
    }
    ecx = ebx;
    if(*(ebp - 0x2c) >= edx || edi >= ecx) {
        goto L004533e6;
    }
    *(ebp - 0x1c) = *(ebp - 0x2c);
    *(ebp - 0x14) = edx;
    *(ebp - 0x10) = ecx;
    *(ebp - 0x18) = edi;
    *(ebp - 0x28)( *(esi + 0x58), ebp - 0x1c);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004533F0 - 0x0045364F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0045246A()
 *		L00452BD0()
 */

L004533F0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 == 0) {
        goto L0045340b;
    }
    if(*esi == -38350822) {
        goto L00453416;
    }
    L00429610(65561);
    *(ebp - 0xd) = 0;
    *(ebp - 0xe) = 0;
    ecx = *Ac;
    dl = 0;
    if(ecx >= *(esi + 0x7c)) {
        edi = *(Ac + 4);
        if(edi >= *(esi + 0x80)) {
        }
    }
    if(1 == 0 || ecx >= *(esi + 0x84)) {
        goto L00453446;
    }
    *(ebp - 0xe) = 1;
    if(*(ebp - 0xe) == 0) {
        goto L0045345d;
    }
    edx = *(Ac + 4);
    if(edx >= *(esi + 0x88)) {
        goto L0045345d;
    }
    *(ebp - 0xd) = 1;
    if(*(ebp - 0xd) == 0) {
        goto L00453470;
    }
    return 1;
    if(*(esi + 0x2c) & 1 || ecx < *(esi + 0x8c)) {
        goto L004534b1;
    }
    edi = *(Ac + 4);
    if(edi < *(esi + 0x90) || ecx >= *(esi + 0x94)) {
        goto L004534b1;
    }
    edi = *(Ac + 4);
    if(edi >= *(esi + 0x98)) {
        goto L004534b1;
    }
    return 2;
    2;
    if((esp = ebp - 0xc) || ecx < *(esi + 0x9c)) {
        goto L004534f0;
    }
    edi = *(Ac + 4);
    if(edi < *(esi + 0xa0) || ecx >= *(esi + 0xa4)) {
        goto L004534f0;
    }
    edi = *(Ac + 4);
    if(edi >= *(esi + 0xa8)) {
        goto L004534f0;
    }
    return 3;
    0;
    if(esp = ebp - 0xc) {
        goto L00453501;
    }
    return 0;
    0;
    if((esp = ebp - 0xc) || ecx < *(esi + 0xac)) {
        goto L00453540;
    }
    edi = *(Ac + 4);
    if(edi < *(esi + 0xb0) || ecx >= *(esi + 0xb4)) {
        goto L00453540;
    }
    edi = *(Ac + 4);
    if(edi >= *(esi + 0xb8)) {
        goto L00453540;
    }
    return 4;
    0;
    if((esp = ebp - 0xc) || ecx < *(esi + 0xbc)) {
        goto L00453580;
    }
    edi = *(Ac + 4);
    if(edi < *(esi + 0xc0) || ecx >= *(esi + 0xc4)) {
        goto L00453580;
    }
    edi = *(Ac + 4);
    if(edi >= *(esi + 0xc8)) {
        goto L00453580;
    }
    return 5;
    0;
    if((esp = ebp - 0xc) || ecx < *(esi + 0xdc)) {
        goto L004535c0;
    }
    edi = *(Ac + 4);
    if(edi < *(esi + 0xe0) || ecx >= *(esi + 0xe4)) {
        goto L004535c0;
    }
    edi = *(Ac + 4);
    if(edi >= *(esi + 0xe8)) {
        goto L004535c0;
    }
    return 7;
    0;
    if((esp = ebp - 0xc) || ecx < *(esi + 0xec)) {
        goto L00453600;
    }
    edi = *(Ac + 4);
    if(edi < *(esi + 0xf0) || ecx >= *(esi + 0xf4)) {
        goto L00453600;
    }
    edi = *(Ac + 4);
    if(edi >= *(esi + 0xf8)) {
        goto L00453600;
    }
    esp = ebp - 0xc;
    return 8;
    if(8 != 0xc || ecx < *(esi + 0xcc)) {
        goto L00453643;
    }
    eax = *(Ac + 4);
    if(eax < *(esi + 0xd0) || ecx >= *(esi + 0xd4)) {
        goto L00453643;
    }
    eax = *(Ac + 4);
    if(eax >= *(esi + 0xd8)) {
        goto L00453643;
    }
    esp = ebp - 0xc;
    return 9;
    esp = ebp - 0xc;
    return 0;
}

/*	Procedure: 0x00453650 - 0x0045369F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00420D9A()
 *		L00420ED9()
 *		L00421DA9()
 *		L00421EE9()
 *		L00451780()
 */

L00453650(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  edi;



    if(A8 == 0) {
        goto L0045366b;
    }
    if(*edi == -38350822) {
        goto L00453676;
    }
    L00429610(65561);
    if(Ac == 0) {
        goto L00453682;
    }
    *Ac = *(edi + 0x7c) - *(edi + 0x1c);
    if(A10 == 0) {
        goto L00453691;
    }
    *A10 = *(edi + 0x80) - *(edi + 0x20);
    return *A10;
}

/*	Procedure: 0x004536A0 - 0x0045372F
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0045246A()
 *		L00452BD0()
 *		L00453020()
 */

L004536A0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  edi;



    if(A8 == 0) {
        goto L004536bb;
    }
    if(*edi == -38350822) {
        goto L004536c6;
    }
    L00429610(65561);
    if(Ac - 1 > 4) {
        goto L00453710;
    }
    goto ( *(eax * 4 + 0x478a40));
    edx = *(edi + 0x7c);
    ecx = *(edi + 0x80);
    edx = edx - *(edi + 0x1c);
    ecx = ecx - *(edi + 0x20);
    goto L00453714;
    edx = *(edi + 0xac) - *(edi + 0x1c);
    ecx = *(edi + 0xb0);
    goto L00453714;
    ecx = *(edi + 0xc0) - *(edi + 0x20);
    edx = *(edi + 0xbc);
    goto L00453714;
    edx = 0;
    ecx = 0;
    if(A10 == 0) {
        goto L0045371a;
    }
    *A10 = 0;
    if(A14 == 0) {
        goto L00453720;
    }
    *A14 = 0;
}

/*	Procedure: 0x00453730 - 0x00453A03
 *	Argument size: 20
 *	Local size: 24
 *	Save regs size: 16
 *	Called by:
 *		L004510F0()
 *		L00451230()
 */

L00453730(A2c, A30, A34, A38, A3c)
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
/* unknown */ void  A3c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V14;



    esi = A2c;
    eax = *(esi + 0x2c);
    *esp = eax;
    if(eax & 0x80) {
        goto L00453752;
    }
    V14 = 0;
    goto L0045375a;
    V14 = 3;
    edi = *(esi + 4);
    ecx = ( *(esi + 0x30) & 0xff) + V14;
    ebx = *(esi + 8);
    V10 = *(esi + 0xc);
    edx = *(esi + 0x10);
    eax = ecx + ebx;
    ebp = edi;
    *(esi + 0x7c) = edi + ecx;
    *(esi + 0x80) = eax;
    *(esi + 0x84) = V10 - ecx;
    *(esi + 0x88) = edx - ecx;
    if(V14 == 0) {
        goto L004537c7;
    }
    ebp = ebp + V14 - 1;
    ebx = ebx + V14 - 1;
    V10 = V10 - V14 - 1;
    edx = edx - V14 - 1;
    goto L004537d5;
    ebp = ebp - 1;
    ebx = ebx - 1;
    V10 = V10 + 1;
    edx = edx + 1;
    if(ecx = *esp & 1) {
        goto L00453803;
    }
    *(esi + 0x88) = *(esi + 0x88) - 0xf;
    *(esi + 0x8c) = ebp;
    *(esi + 0x90) = edx - 0x10;
    *(esi + 0x94) = V10;
    *(esi + 0x98) = edx;
    if(edi = *esp & 2) {
        goto L00453835;
    }
    *(esi + 0x84) = *(esi + 0x84) - 0xf;
    *(esi + 0x9c) = V10 - 0x10;
    *(esi + 0xa0) = ebx;
    *(esi + 0xa4) = V10;
    *(esi + 0xa8) = edx;
    eax = 3 & *esp;
    if(eax != 3) {
        goto L00453852;
    }
    *(esi + 0x94) = *(esi + 0x94) - 0xf;
    *(esi + 0xa8) = *(esi + 0xa8) - 0xf;
    goto L00453873;
    if(*esp & 0x10) {
        goto L00453873;
    }
    if(edi == 0) {
        goto L00453868;
    }
    *(esi + 0xa8) = *(esi + 0xa8) - 0xf;
    goto L00453873;
    if(ecx == 0) {
        goto L00453873;
    }
    *(esi + 0x94) = *(esi + 0x94) - 0xf;
    if(*esp & 0x400) {
        goto L00453884;
    }
    return;
    A30 = *(esi + 0xfc) & 65535;
    A34 = *(esi + 0xfe) & 65535;
    A3c = *(esi + 0x100) & 65535;
    A2c = *(esi + 0x102) & 65535;
    if(*esp & 4) {
        goto L004538f9;
    }
    *(esi + 0x80) = *(esi + 0x80) + A30 - 1;
    *(esi + 0xac) = ebp + 1;
    *(esi + 0xb0) = ebx;
    *(esi + 0xb4) = A38 - 1;
    edi :: 0;
    if(*(esi + 0xb8) = ebx + A30) {
        goto L004538f9;
    }
    *(esi + 0xb4) = *(esi + 0xb4) - 0xf;
    if(*esp & 8) {
        goto L0045393b;
    }
    *(esi + 0x7c) = *(esi + 0x7c) + A34 - 1;
    *(esi + 0xbc) = ebp;
    *(esi + 0xc0) = ebx + 1;
    edi = ebp + A34;
    *(esi + 0xc4) = edi;
    ecx :: 0;
    if(*(esi + 0xc8) = edx - 1) {
        goto L0045393b;
    }
    *(esi + 0xc8) = *(esi + 0xc8) - 0xf;
    if((0xc & *esp) != 0xc) {
        goto L00453986;
    }
    *(esi + 0xac) = *(esi + 0xac) + A34 - 1;
    *(esi + 0xc0) = *(esi + 0xc0) + A30 - 1;
    *(esi + 0xcc) = ebp;
    *(esi + 0xd0) = ebx;
    *(esi + 0xd4) = ebp + A34;
    *(esi + 0xd8) = ebx + A30;
    if(*esp & 0x20) {
        goto L004539c5;
    }
    *(esi + 0xa0) = *(esi + 0xa0) + A3c - 1;
    *(esi + 0xdc) = A38 - 0x10;
    *(esi + 0xe0) = ebx;
    *(esi + 0xe4) = A38;
    *(esi + 0xe8) = ebx + A3c;
    if(*esp & 0x40) {
        goto L004539fc;
    }
    *(esi + 0x8c) = *(esi + 0x8c) + A2c - 1;
    *(esi + 0xec) = ebp;
    *(esi + 0xf0) = edx - 0x10;
    eax = ebp + A2c;
    *(esi + 0xf4) = eax;
    *(esi + 0xf8) = edx;
    esp = esp + 0x18;
}

/*	Procedure: 0x00453A10 - 0x00453D57
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00451230()
 *		L00451290()
 *		L00451650()
 */

L00453A10(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x2c;
    ebx = *(A8 + 0x84);
    esi = *(A8 + 0x14);
    ebx = ebx - *(A8 + 0x7c);
    if(esi <= ebx) {
        *(ebp - 0x14) = 0;
    } else {
        *(ebp - 0x14) = esi;
        *(ebp - 0x14) = *(ebp - 0x14) - ebx;
    }
    edi = *(A8 + 0x1c);
    if(edi > *(ebp - 0x14)) {
        edi = *(ebp - 0x14);
    }
    eax = *(A8 + 0x88);
    edx = *(A8 + 0x18);
    eax = eax - *(A8 + 0x80);
    if(edx <= eax) {
        *(ebp - 0x10) = 0;
    } else {
        *(ebp - 0x10) = edx;
        *(ebp - 0x10) = *(ebp - 0x10) - eax;
    }
    esi = *(A8 + 0x20);
    if(esi > *(ebp - 0x10)) {
        esi = *(ebp - 0x10);
    }
    *(ebp - 0x1c) = *(A8 + 0x2c);
    eax = *(A8 + 0x31) & 0xff;
    bl = 0;
    dl = 0;
    if(0 == 0 && !( *(ebp - 0x1c) & 0x280) && !(eax & 4)) {
        edx = 1 & 0xff;
    }
    eax = *(A8 + 0x50);
    *(ebp - 0x20) = eax;
    *(ebp - 0x18) = *(ebp - 0x20);
    *(ebp - 0x18) = *(ebp - 0x18) & -24;
    if(dl != 0) {
        *(ebp - 0x18) = *(ebp - 0x18) | 4;
    }
    if(bl != 0 || *(ebp - 0x14) == 0) {
        *(ebp - 0x18) = *(ebp - 0x18) | 1;
    }
    if(bl != 0 || *(ebp - 0x10) == 0) {
        *(ebp - 0x18) = *(ebp - 0x18) | 2;
    }
    if(bl != 0) {
        *(ebp - 0x18) = *(ebp - 0x18) | 0x10;
    }
    *(A8 + 0x50) = *(ebp - 0x18);
    eax = *(A8 + 0x54);
    *(ebp - 0x34) = eax;
    if(eax == 0 || Ac == 0) {
        *(A8 + 0x1c) = edi;
        *(A8 + 0x20) = esi;
        *(A8 + 0x24) = *(ebp - 0x14);
        eax = *(ebp - 0x10);
        *(A8 + 0x28) = eax;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    ebx = *(ebp - 0x20);
    edx = *(ebp - 0x18);
    ebx = ebx & 0x14;
    if((edx & 0x14) != ebx || edi != *(A8 + 0x1c) || esi != *(A8 + 0x20)) {
        *(A8 + 0x1c) = edi;
        *(A8 + 0x20) = esi;
        *(A8 + 0x24) = *(ebp - 0x14);
        *(A8 + 0x28) = *(ebp - 0x10);
        eax = *(ebp - 0x34)( *(A8 + 0x58), A8 + 4);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    *(ebp - 0x38) = 2147483647;
    esi = 2147483647;
    ebx = -2147483648;
    edx = -2147483648;
    if(!( *(ebp - 0x1c) & 1)) {
        *(A8 + 0x24) = *(ebp - 0x14);
    } else {
        edi = *(ebp - 0x20);
        eax = *(ebp - 0x18);
        edi = edi & 1;
        if((eax & 1) != edi || *(ebp - 0x14) != *(A8 + 0x24)) {
            *(A8 + 0x24) = *(ebp - 0x14);
            *(ebp - 0x38) = *(A8 + 0x8c);
            esi = *(A8 + 0x90);
            ebx = *(A8 + 0x94);
            edx = *(A8 + 0x98);
        }
    }
    if(!( *(ebp - 0x1c) & 2)) {
        eax = *(ebp - 0x10);
        *(A8 + 0x28) = eax;
    } else {
        edi = *(ebp - 0x20);
        eax = *(ebp - 0x18);
        edi = edi & 2;
        if((eax & 2) == edi) {
            eax = *(A8 + 0x28);
            if(*(ebp - 0x10) == eax) {
                goto L00453c13;
            }
        }
        *(A8 + 0x28) = *(ebp - 0x10);
        edi = *(A8 + 0x9c);
        if(*(ebp - 0x38) >= edi) {
            *(ebp - 0x38) = edi;
        }
        eax = *(ebp - 0x38);
        eax = *(A8 + 0xa0);
        if(esi >= eax) {
            esi = eax;
        }
        edi = *(A8 + 0xa4);
        if(ebx <= edi) {
            ebx = edi;
        }
        eax = *(A8 + 0xa8);
        if(edx <= eax) {
            edx = eax;
        }
    }
L00453c13:
    if(!( *(ebp - 0x1c) & 0x6c)) {
        edi = *(ebp - 0x20);
        eax = *(ebp - 0x18);
        edi = edi & 0x10;
        eax = eax & 0x10;
        if(eax != edi) {
            if(!( *(ebp - 0x1c) & 4)) {
                eax = *(A8 + 0xac);
                if(*(ebp - 0x38) >= eax) {
                    *(ebp - 0x38) = eax;
                }
                edi = *(A8 + 0xb0);
                eax = *(ebp - 0x38);
                if(esi >= edi) {
                    esi = edi;
                }
                eax = *(A8 + 0xb4);
                if(ebx <= eax) {
                    ebx = eax;
                }
                edi = *(A8 + 0xb8);
                if(edx <= edi) {
                    edx = edi;
                }
            }
            if(!( *(ebp - 0x1c) & 8)) {
                eax = *(A8 + 0xbc);
                if(*(ebp - 0x38) >= eax) {
                    *(ebp - 0x38) = eax;
                }
                edi = *(A8 + 0xc0);
                eax = *(ebp - 0x38);
                if(esi >= edi) {
                    esi = edi;
                }
                eax = *(A8 + 0xc4);
                if(ebx <= eax) {
                    ebx = eax;
                }
                edi = *(A8 + 0xc8);
                if(edx <= edi) {
                    edx = edi;
                }
            }
            if(!( *(ebp - 0x1c) & 0x20)) {
                eax = *(A8 + 0xdc);
                if(*(ebp - 0x38) >= eax) {
                    *(ebp - 0x38) = eax;
                }
                edi = *(A8 + 0xe0);
                eax = *(ebp - 0x38);
                if(esi >= edi) {
                    esi = edi;
                }
                eax = *(A8 + 0xe4);
                if(ebx <= eax) {
                    ebx = eax;
                }
                edi = *(A8 + 0xe8);
                if(edx <= edi) {
                    edx = edi;
                }
            }
            if(!( *(ebp - 0x1c) & 0x40)) {
                eax = *(A8 + 0xec);
                if(*(ebp - 0x38) >= eax) {
                    *(ebp - 0x38) = eax;
                }
                edi = *(A8 + 0xf0);
                eax = *(ebp - 0x38);
                if(esi >= edi) {
                    esi = edi;
                }
                eax = *(A8 + 0xf4);
                if(ebx <= eax) {
                    ebx = eax;
                }
                edi = *(A8 + 0xf8);
                if(edx <= edi) {
                    edx = edi;
                }
            }
        }
    }
    if(ebx > *(ebp - 0x38) && edx > esi) {
        *(ebp - 0x30) = *(ebp - 0x38);
        *(ebp - 0x24) = edx;
        *(ebp - 0x2c) = esi;
        *(ebp - 0x28) = ebx;
        eax = *(ebp - 0x34)( *(A8 + 0x58), ebp - 0x30);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00453D58 - 0x00453FAF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00453D58(A8)
/* unknown */ void  A8;
{



    edx = *(A8 + 0x34) & 0xff;
    if(dl != 0) {
        eax = (dl & 0xff) - 1;
        if(eax > 5) {
            goto L00453f03;
        }
        switch(eax) {
            case 0:
                goto L00453d89;
            case 1:
                goto L00453dd4;
            case 2:
                goto L00453d89;
            case 3:
                goto L00453dd4;
            case 4:
                *(A8 + 0x50) = *(A8 + 0x50) | 8;
                (save)0;
                (save)-1;
                goto L00453ef7;
            case 5:
                *(A8 + 0x50) = *(A8 + 0x50) | 8;
                (save)0;
                (save)1;
                goto L00453ef7;
        }
L00453d89:
        if(*(A8 + 0x50) & 8) {
            goto L00453da5;
        }
        *(A8 + 0x50) = *(A8 + 0x50) | 8;
        L0042F1C0( *(A8 + 0x3c), 0x23, 1);
        if(*(A8 + 0x50) & 0x80) {
            goto L00453dc0;
        }
        L00451b40(A8, -1, 0);
        goto L00453f03;
        L00451930(A8, ~( *(A8 + 0x38) & 65535), 0);
        goto L00453f00;
L00453dd4:
        if(*(A8 + 0x50) & 8) {
            goto L00453df0;
        }
        *(A8 + 0x50) = *(A8 + 0x50) | 8;
        L0042F1C0( *(A8 + 0x3c), 0x23, 1);
        if(*(A8 + 0x50) & 0x80) {
            goto L00453e08;
        }
        (save)0;
        (save)1;
        (save)A8;
        L00451b40();
        goto L00453f00;
        L00451930(A8, *(A8 + 0x38) & 65535, 0);
        goto L00453f00;
    }
    edx = *(A8 + 0x35) & 0xff;
    if(dl != 0) {
        ecx = (dl & 0xff) - 1;
        if(ecx <= 5) {
            goto ( *(ecx * 4 + 0x478a58));
            if(*(A8 + 0x50) & 8) {
                goto L00453e72;
            }
            *(A8 + 0x50) = *(A8 + 0x50) | 8;
            L0042F1C0( *(A8 + 0x3c), 0x23, 1);
            if(*(A8 + 0x50) & 0x80) {
                goto L00453e87;
            }
            (save)-1;
            (save)0;
            (save)A8;
            L00451b40();
            goto L00453f00;
            L00451930(A8, 0, ~( *(A8 + 0x38) & 65535));
            goto L00453f00;
            if(*(A8 + 0x50) & 8) {
                goto L00453eb4;
            }
            *(A8 + 0x50) = *(A8 + 0x50) | 8;
            L0042F1C0( *(A8 + 0x3c), 0x23, 1);
            if(*(A8 + 0x50) & 0x80) {
                goto L00453ed0;
            }
            (save)1;
            (save)0;
            (save)A8;
            L00451b40();
            goto L00453f00;
            L00451930(A8, 0, *(A8 + 0x38) & 65535);
            goto L00453f00;
            *(A8 + 0x50) = *(A8 + 0x50) | 8;
            (save)-1;
            (save)0;
            (save)A8;
            L00451b40();
            goto L00453f00;
            *(A8 + 0x50) = *(A8 + 0x50) | 8;
            L00451b40(A8, 0, 1);
        }
    }
L00453f03:
    return;
    (save)ebp;
    ebp = esp;
    (save)A8;
    (save)esi;
    (save)edi;
    if(*(A8 + 0x50) & 8) {
        goto L00453f35;
    }
    *(A8 + 0x50) = *(A8 + 0x50) | 8;
    L0042F1C0( *(A8 + 0x3c), 0x23, 1);
    edi = *(A8 + 4);
    eax = *(A8 + 0x48);
    ecx = 0;
    esi = 0;
    edx = *(A8 + 0x4c);
    if(eax >= edi) {
        goto L00453f50;
    }
    ecx = ~(edi - eax);
    goto L00453f5b;
    if(eax < *(A8 + 0xc)) {
        goto L00453f5b;
    }
    ecx = eax - edi;
    if(edx >= *(A8 + 8)) {
        goto L00453f70;
    }
    esi = ~(eax - edx);
    goto L00453f7b;
    if(edx >= *(A8 + 0x10)) {
    }
L00453f7b:
    edx = edx - eax;
    esi = esi >> 0x1f;
    eax = 1431655766;
    asm("imul edx");
    eax = 1431655766;
    esi = esi + edx;
    (save)esi;
    esi = ecx;
    asm("imul edx");
    (save)(esi >> 0x1f) + edx;
    (save)A8;
    L00451930();
    esp = esp + 0xc;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00453FB0 - 0x004545F3
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0041B8B0()
 */

L00453FB0(A4, A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    ecx = Ac;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)ebp;
    esp = esp - 0x28;
    *esp = *ecx;
    Vffffffec = *(ecx + 4);
    esi = A14;
    ebp = A18;
    ebx = *(ecx + 8);
    edx = *(ecx + 0xc);
    if(*esp <= 16384) {
        goto L00453fe5;
    }
    *esp = 16384;
    if(*esp >= -16384) {
        goto L00453ff5;
    }
    *esp = -16384;
    if(Vffffffec <= 16384) {
        goto L00454007;
    }
    Vffffffec = 16384;
    if(Vffffffec >= -16384) {
        goto L00454019;
    }
    Vffffffec = -16384;
    if(ebx > 16384) {
    }
    if(16384 >= -16384) {
        goto L00454033;
    }
    ebx = -16384;
    if(edx > 16384) {
    }
    if(16384 >= -16384) {
        goto L0045404d;
    }
    edx = -16384;
    if(-16384 > *esp) {
        goto L00454056;
    }
    edi = 0;
    goto L0045405b;
    edi = ebx - *esp;
    eax = A10;
    ecx = *eax;
    Vffffffd0 = ecx;
    ecx = Vffffffd0 + *(eax + 8) + 0x20;
    if(edi >= ecx) {
        goto L00454074;
    }
    ebx = *esp + ecx;
    if(edi <= 0x1000) {
        goto L00454085;
    }
    ebx = *esp + 0x1000;
    if(edx > Vffffffec) {
        goto L00454095;
    }
    Vffffffe8 = 0;
    goto L004540a1;
    Vffffffe8 = edx;
    Vffffffe8 = Vffffffe8 - Vffffffec;
    eax = A10;
    ecx = *(eax + 4);
    Vffffffd4 = ecx;
    edi = Vffffffd4 + *(eax + 0xc) + 0x10;
    if(Vffffffe8 >= edi) {
        goto L004540c0;
    }
    edx = Vffffffec + edi;
    if(Vffffffe8 <= 0x1000) {
        goto L004540d4;
    }
    edx = Vffffffec + 0x1000;
    eax = A8;
    Vffffffe4 = *eax;
    Vffffffe4 = Vffffffe4 + 0xa;
    Vffffffdc = *(eax + 4);
    Vffffffdc = Vffffffdc + 0xa;
    Vffffffe8 = *(eax + 8);
    Vffffffe8 = Vffffffe8 - 0xa;
    Vffffffe0 = *(eax + 0xc);
    Vffffffe0 = Vffffffe0 - 0xa;
    if(ebx >= Vffffffe4) {
        goto L0045411c;
    }
    ebx = ebx - *esp;
    eax = Vffffffe4;
    *esp = eax;
    *esp = *esp - ebx;
    ebx = eax;
    if(edx >= Vffffffdc) {
        goto L00454134;
    }
    edx = edx - Vffffffec;
    eax = Vffffffdc;
    Vffffffec = eax;
    Vffffffec = Vffffffec - edx;
    edx = eax;
    eax = Vffffffe8;
    if(*esp <= eax) {
        goto L00454145;
    }
    ebx = ebx - *esp + eax;
    *esp = eax;
    eax = Vffffffe0;
    if(Vffffffec <= eax) {
        goto L00454159;
    }
    edx = edx - Vffffffec + eax;
    Vffffffec = eax;
    if(eax = (A4 & -134217728) - 134217728) {
        goto L004541c6;
    }
    if(eax = eax - 134217728) {
        goto L00454247;
    }
    if(eax = eax - 134217728) {
        goto L004542a8;
    }
    if(eax = eax - 134217728) {
        goto L004542d6;
    }
    if(eax = eax - 134217728) {
        goto L00454310;
    }
    if(eax = eax - 134217728) {
        goto L00454370;
    }
    if(eax = eax - 134217728) {
        goto L00454392;
    }
    if(eax = eax - 134217728) {
        goto L004543b5;
    }
    if(eax = eax - 134217728) {
        goto L004543e0;
    }
    goto L00454405;
    if(ebx <= Vffffffe8) {
        goto L004541dd;
    }
    edi = ebx - *esp;
    eax = Vffffffe8;
    *esp = eax;
    *esp = *esp - edi;
    ebx = eax;
    if(edx <= Vffffffe0) {
        goto L004541f7;
    }
    ecx = edx - Vffffffec;
    eax = Vffffffe0;
    Vffffffec = eax;
    Vffffffec = Vffffffec - ecx;
    edx = eax;
    eax = Vffffffe4;
    if(*esp >= eax) {
        goto L00454208;
    }
    ebx = ebx - *esp + eax;
    *esp = eax;
    eax = Vffffffdc;
    if(Vffffffec >= eax) {
        goto L0045421c;
    }
    edx = edx - Vffffffec + eax;
    Vffffffec = eax;
    if(A4 & 8) {
        goto L00454405;
    }
    if(ebx <= Vffffffe8) {
        goto L00454234;
    }
    ebx = Vffffffe8;
    if(edx <= Vffffffe0) {
        goto L00454405;
    }
    edx = Vffffffe0;
    goto L00454405;
    ecx = ebx - *esp;
    *esp = Vffffffe4;
    *esp = *esp + Vffffffe8;
    *esp = *esp - ecx;
    *esp :: -2147483648;
    asm("sbb dword [esp],-0x1");
    edx = edx - Vffffffec;
    *esp = *esp >> 1;
    ebx = *esp + ecx;
    Vffffffec = Vffffffdc;
    Vffffffec = Vffffffec + Vffffffe0;
    Vffffffec = Vffffffec - edx;
    Vffffffec :: -2147483648;
    asm("sbb dword [esp+0x24],-0x1");
    Vffffffec = Vffffffec >> 1;
    edx = Vffffffec + edx;
    goto L00454405;
    ebx = ebx - *esp;
    *esp = Vffffffe4;
    *esp = *esp + Vffffffe8;
    *esp = *esp - ebx;
    *esp :: -2147483648;
    asm("sbb dword [esp],-0x1");
    *esp = *esp >> 1;
    ebx = *esp + ebx;
    goto L00454405;
    edi = edx - Vffffffec;
    Vffffffec = Vffffffdc;
    Vffffffec = Vffffffec + Vffffffe0;
    Vffffffec = Vffffffec - edi;
    Vffffffec :: -2147483648;
    asm("sbb dword [esp+0x24],-0x1");
    Vffffffec = Vffffffec >> 1;
    edx = Vffffffec + edi;
    goto L00454405;
    ecx = ebx - *esp;
    *esp = Vffffffe4;
    *esp = *esp + Vffffffe8;
    *esp = *esp - ecx;
    *esp :: -2147483648;
    asm("sbb dword [esp],-0x1");
    *esp = *esp >> 1;
    ebx = *esp + ecx;
    ecx = edx - Vffffffec;
    edx = Vffffffdc + Vffffffe0 - ecx;
    Vffffffec = edx;
    Vffffffec = Vffffffec >> 0x1f;
    eax = 1431655766;
    asm("imul edx");
    Vffffffec = Vffffffec + edx;
    edx = Vffffffec + ecx;
    goto L00454405;
    ebx = ebx - *esp;
    edx = edx - Vffffffec;
    eax = Vffffffe4;
    edi = ebx + eax;
    *esp = eax;
    eax = Vffffffdc;
    ecx = edx + eax;
    ebx = edi;
    Vffffffec = eax;
    edx = ecx;
    goto L00454405;
    edx = edx - Vffffffec;
    edi = ebx - *esp;
    ebx = Vffffffe8;
    *esp = ebx;
    eax = Vffffffdc;
    *esp = *esp - edi;
    Vffffffec = eax;
    edx = Vffffffec + edx;
    goto L00454405;
    eax = Vffffffe4;
    ecx = ebx - *esp;
    edi = edx - Vffffffec;
    edx = Vffffffe0;
    *esp = eax;
    ebx = ecx + *esp;
    Vffffffec = edx;
    Vffffffec = Vffffffec - edi;
    goto L00454405;
    ecx = ebx - *esp;
    edi = edx - Vffffffec;
    ebx = Vffffffe8;
    *esp = ebx;
    edx = Vffffffe0;
    *esp = *esp - ecx;
    Vffffffec = edx;
    Vffffffec = Vffffffec - edi;
    if(!(A4 & 0x100) && esi != 0) {
        Vffffffe4 = ebx;
        Vffffffe4 = Vffffffe4 - *esp;
        if(Vffffffe4 <= 0xc8) {
            goto L00454438;
        }
        Vffffffe4 = 0xc8;
        Vffffffd8 = edx;
        Vffffffd8 = Vffffffd8 - Vffffffec;
        if(Vffffffd8 <= 0xc8) {
            goto L00454456;
        }
        Vffffffd8 = 0xc8;
        Vffffffdc = A4;
        Vffffffcc = 0;
        Vffffffdc = Vffffffdc & 8;
        edi = 0;
        if(ebp > 0) {
            ecx = *esp;
            eax = Vffffffec;
            if(ecx != *esi || eax != *(esi + 4)) {
                goto L00454518;
            }
            *esp = *esp + Vffffffd0;
            eax = Vffffffd4;
            edi = ebx;
            ecx = edx;
            Vffffffec = Vffffffec + eax;
            ebx = ebx + Vffffffd0;
            edx = edx + eax;
            if(Vffffffdc == 0) {
                goto L004544c8;
            }
            if(ebx <= Vffffffe8) {
                goto L004544be;
            }
            ebx = Vffffffe8;
            if(edx <= Vffffffe0) {
                goto L004544c8;
            }
            edx = Vffffffe0;
            if(ebx - *esp < Vffffffe4 || edx - Vffffffec < Vffffffd8 || *esp > Vffffffe8) {
                goto L004544f2;
            }
            if(Vffffffec <= Vffffffe0) {
                goto L00454507;
            }
            *esp = *esp - Vffffffd0;
            Vffffffec = Vffffffec - Vffffffd4;
            ebx = edi;
            edx = ecx;
            goto L00454523;
            Vffffffcc = Vffffffcc + 1;
            if(Vffffffcc != 8) {
                goto L00454470;
                if(edi + 1 < ebp) {
                    goto L00454481;
                }
            }
        }
    }
L00454523:
    if(A1c == 0) {
        goto L0045454c;
    }
    *A1c = *esp;
    *(A1c + 4) = Vffffffec;
    *(A1c + 8) = ebx;
    *(A1c + 0xc) = edx;
    if(A20 == 0) {
        goto L00454594;
    }
    ebp = *esp + *A10;
    *A20 = ebp;
    *(A20 + 4) = Vffffffec + *(A10 + 4);
    edi = ebx - *(A10 + 8);
    *(A20 + 8) = edi;
    esi = edx - *(A10 + 0xc);
    eax = A20;
    *(eax + 0xc) = esi;
    esp = esp + 0x28;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    esp = esp - 4;
    eax = *(ebp + 0xc);
    ecx = M0048102c;
    *(ebp - 8) = ecx;
    ebx = 0;
    if(*(eax + 0x10) == 0xa) {
        goto L004545c8;
    }
    ebx = L00425490(ecx, *(eax + 0x24));
    L00423980(ebp - 8);
    M0048102c = 0;
    L0041daf0(ebx);
    if(al == 0) {
        goto L004545ee;
    }
    eax = L0041D1C0(ebx);
    esp = ebp - 4;
    (restore)ebx;
    (restore)ebp;
}

/*	Procedure: 0x00454600 - 0x0045472D
 *	Argument size: 0
 *	Local size: 48
 *	Save regs size: 12
 *	Called by:
 *		L0041F14C()
 */

L00454600()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V2c;



    esp = esp & -8;
    ebx = & V2c;
    if(M0048102c != 0) {
        L00423980(0x48102c);
    }
    (save)0;
    edi = L0041DB20(0);
    *(ebx - 0x28) = edi;
    esi = L00423850(0x4545a0, 0, 1);
    *(ebx - 0x2c) = esi;
    L00424EF0(esi, 0, 0x481054, 262144, 0, 0);
    L00425140(esi);
    if(edi != 0) {
        *(ebx - 0x24) = *(edi + 4);
        edi = edi + 8;
        if(!( *(ebx - 0x24) = *(ebx - 0x24) - 1)) {
            do {
                if(*(edi + 0x26) != 1 || *(edi + 0x27) != 0) {
                    L00425440(esi, L00424EF0(esi, 0, *(edi + 0x28), 0, 0, 0), *edi);
                }
                edi = edi + 0x2c;
            } while(*(ebx - 0x24) = *(ebx - 0x24) - 1);
        }
        L004257C0(esi, 2, -1);
    } else {
        L00424EF0(esi, 0, 0x478a90, 262144, 0, 0);
    }
    L00434150(ebx - 0x20, 0x20);
    L0042F740(ebx - 0x10);
    L00424930(esi, ebx - 0x20, 0, 5);
    edx = ebx - 0x2c;
    *(ebx - 0x2c) = 0;
    M0048102c = esi;
    L00423980(edx);
    return L0042E3E0(ebx - 0x28);
}

/*	Procedure: 0x0045472E - 0x0045472F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045472E()
{



}

/*	Procedure: 0x00454730 - 0x004547A3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421520()
 *		L00423850()
 */

L00454730(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0) {
        L00429610(65538);
    }
    eax = L0042E3A0(0xc8);
    *(eax + 4) = *A8;
    *(eax + 8) = *(A8 + 4);
    *(eax + 0xc) = *(A8 + 8);
    *(eax + 0x10) = *(A8 + 0xc);
    *(eax + 0x18) = Ac;
    *(eax + 0xc4) = 1;
    *(eax + 0x28) = -1;
    *(eax + 0x24) = *(eax + 0x28);
    *(eax + 0x20) = *(eax + 0x24);
    *(eax + 0x1c) = *(eax + 0x20);
    *(eax + 0xc0) = -1;
    *eax = -2061389103;
}

/*	Procedure: 0x004547A4 - 0x004547AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004547A4()
{



}

/*	Procedure: 0x004547B0 - 0x004548DA
 *	Argument size: 4
 *	Local size: 56
 *	Save regs size: 12
 *	Called by:
 *		L00421520()
 *		L00421B68()
 *		L00423850()
 *		L00423980()
 */

L004547B0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    ebx = A8;
    esi = *ebx;
    *(ebp - 0x44) = esi;
    if(esi == 0) {
        return;
    }
    *ebx = 0;
    eax = *(ebp - 0x44);
    if(*eax != -2061389103) {
        esp = ebp - 0xc;
        return;
    }
    edi = *(ebp - 0x44);
    edx = *(edi + 0x3c);
    ebx = edi;
    *(ebp - 0x40) = edx;
    ecx = ebx;
    esi = *(ebx + 0x40);
    *(ecx + 0x3c) = 0;
    *( *(ebp - 0x44) + 0x40) = 0;
    *( *(ebp - 0x44) + 0x44) = 0;
    if(*( *(ebp - 0x44) + 0x80) != 0) {
        ebx = 0;
        if(esi <= 0) {
            goto L0045486a;
        }
        do {
            Vfffffff0 = esp;
            eax = *(ebp - 0x44);
            *(eax + 0x80)( *(eax + 0x84), *( *(ebp - 0x40) + ebx * 4), ebx);
L00454863:
            ebx = ebx + 1;
        } while(ebx < esi);
        goto L0045486a;
        if(Vffffffe4 != 0) {
            (save)-1;
            ecx = Vffffffdc;
            Vffffffe4();
        }
        esp = *(ebp - 0x10);
        goto L00454863;
    }
L0045486a:
    L0042E3E0(ebp - 0x40);
    edi = *( *(ebp - 0x44) + 0x78);
    if(edi != 0) {
        Vffffffd8 = esp;
        *edi( *( *(ebp - 0x44) + 0x7c));
        goto L004548a3;
        if(Vffffffcc != 0) {
            (save)-1;
            ecx = *(ebp - 0x3c);
            Vffffffcc();
        }
        esp = *(ebp - 0x28);
    }
L004548a3:
    *( *(ebp - 0x44)) = 0;
    L00423980( *(ebp - 0x44) + 0xbc);
    L0042E3E0( *(ebp - 0x44) + 0x30);
    eax = L0042E3E0(ebp - 0x44);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004548DB - 0x004548DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004548DB()
{



}

/*	Procedure: 0x004548E0 - 0x0045492E
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00423B40()
 *		L00423D50()
 */

L004548E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    *(A8 + 4) = *Ac;
    *(A8 + 8) = *(Ac + 4);
    *(A8 + 0xc) = *(Ac + 8);
    eax = *(Ac + 0xc);
    *(A8 + 0x10) = eax;
    return *(A8 + 0x10);
}

/*	Procedure: 0x0045492F - 0x0045492F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045492F()
{



}

/*	Procedure: 0x00454930 - 0x00454966
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00423B40()
 *		L00454A20()
 *		L00454BE0()
 */

L00454930(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    eax = *(A8 + 0x34);
    eax = *(A8 + 0x14) * *(A8 + 0x14);
    if(!( *(A8 + 0x18) & 0x200)) {
        eax = eax + 1;
    }
}

/*	Procedure: 0x00454967 - 0x0045496F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454967()
{



}

/*	Procedure: 0x00454970 - 0x00454996
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00454970(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    return *(A8 + 0x14);
}

/*	Procedure: 0x00454997 - 0x0045499F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454997()
{



}

/*	Procedure: 0x004549A0 - 0x00454A10
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00421520()
 */

L004549A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    bl = Ac;
    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    bl = 0;
    if(*(A8 + 0xc4) == 0) {
        return 0;
    }
    *(A8 + 0xc4) = bl;
    if(*(A8 + 0x48) != 0) {
        (save)ebp - 0x18;
        (restore)ecx;
        if(L00455490(A8) != 0) {
            eax = *(A8 + 0x48)( *(A8 + 0x4c), ebp - 0x18);
        }
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00454A11 - 0x00454A1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454A11()
{



}

/*	Procedure: 0x00454A20 - 0x00454BD1
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00425050()
 *		L004258E0()
 *		L00462720()
 */

L00454A20(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 0x58;
    edi = Ac;
    esi = A18;
    if(ebx == 0 || *ebx != -2061389103) {
        L00429610(65561);
    }
    if(A14 == 0) {
        ebx = *(ebx + 0x34);
        if(edi > ebx) {
            edi = ebx;
        }
        esp = ebp - 0xc;
        return edi;
    }
    if(esi > 1048576) {
        L00429610(65550);
    }
    if(*(ebx + 0x34) == 0) {
        *(ebx + 0x14) = esi;
    } else {
        if(*(ebx + 0x14) != esi) {
            L00429610(65540);
        }
    }
    if(A10 != 0) {
        if(*(ebx + 0x40) == 0 && *(ebx + 0x34) != 0) {
            L00429610(65538);
        }
        edi = L00429960(ebx + 0x30, edi, A14, 0);
        *(ebp - 0x40) = esp;
        L00429B10(ebx + 0x3c, edi, A10, A14);
        goto L00454b2c;
        L004299E0(esi, edi, A14);
        L004234F0(0, 0, 0);
        if(*(ebp - 0x4c) != 0) {
            (save)-1;
            ecx = *(ebp - 0x54);
            *(ebp - 0x4c)();
        }
        esp = *(ebp - 0x40);
    } else {
        if(*(ebx + 0x40) != 0) {
            L00429610(65538);
        }
        edi = L00429960(ebx + 0x30, edi, A14, 0);
    }
L00454b2c:
    ecx = *(ebx + 0xc0);
    if(ecx != -1 && ecx >= edi) {
        *(ebx + 0xc0) = ecx + A14;
    }
    if(*(ebx + 0x48) != 0) {
        edx = edi;
        edx = *(ebx + 0x14) * *(ebx + 0x14);
        eax = *(ebx + 0x10);
        edx = edx + *(ebx + 8);
        if(edx < eax) {
            ecx = *(ebx + 4);
            esi = *(ebx + 0xc);
            *(ebp - M00000064) = ecx;
            *(ebp - 0x60) = edx;
            *(ebp - 0x5c) = esi;
            *(ebp - 0x58) = eax;
            *(ebp - 0x10) = esp;
            *(ebx + 0x48)( *(ebx + 0x4c), ebp - M00000064);
            goto L00454b93;
            if(*(ebp - 0x1c) != 0) {
                (save)-1;
                ecx = *(ebp - 0x24);
                *(ebp - 0x1c)();
            }
            esp = *(ebp - 0x10);
        }
    }
L00454b93:
    if(*(ebx + 0xa8) != 0) {
        *(ebp - 0x28) = esp;
        *(ebx + 0xa8)( *(ebx + 0xac), L00454930(ebx));
        goto L00454bc8;
        if(*(ebp - 0x34) != 0) {
            ecx = *(ebp - 0x3c);
            *(ebp - 0x34)(-1);
        }
        esp = *(ebp - 0x28);
    }
L00454bc8:
    esp = ebp - 0xc;
    return edi;
}

/*	Procedure: 0x00454BD2 - 0x00454BDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454BD2()
{



}

/*	Procedure: 0x00454BE0 - 0x00454DCC
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00424F30()
 *		L00462320()
 *		L00462720()
 */

L00454BE0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x5c;
    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    esi = *(A8 + 0x34);
    ecx = esi;
    if(Ac >= ecx) {
        return 0;
    }
    edx = Ac + A10;
    if(edx > esi || edx < Ac) {
        eax = Ac;
        A10 = ecx;
        A10 = A10 - eax;
    }
    if(A10 == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    if(*(A8 + 0x80) != 0) {
        edx = *(A8 + 0x40);
        if(Ac >= edx) {
            goto L00454ca1;
        }
        edi = *(A8 + 0x3c);
        *(ebp - 0x68) = Ac;
        *(ebp - 0x68) = *(ebp - 0x68) + A10;
        if(*(ebp - 0x68) > edx) {
            *(ebp - 0x68) = edx;
        }
        esi = Ac;
        if(esi >= *(ebp - 0x68)) {
            goto L00454ca1;
        }
        do {
            *(ebp - 0x50) = esp;
            *(A8 + 0x80)( *(A8 + 0x84), *(edi + esi * 4), esi);
L00454c99:
            esi = esi + 1;
        } while(esi < *(ebp - 0x68));
        goto L00454ca1;
        if(*(ebp - 0x5c) != 0) {
            (save)-1;
            ecx = *(ebp - M00000064);
            *(ebp - 0x5c)();
        }
        esp = *(ebp - 0x50);
        goto L00454c99;
    }
L00454ca1:
    edx = *(A8 + 0x30);
    ecx = *(A8 + 0x2c);
    *(ebp - 0x68) = Ac;
    *(ebp - 0x68) = *(ebp - 0x68) + A10;
    edi = *(ebp - 0x68);
    esi = Ac;
    do {
        if(!( *(edx + esi) & 0xff & 1)) {
            ecx = ecx - 1;
        }
        esi = esi + 1;
    } while(esi < edi);
    *(A8 + 0x2c) = ecx;
    L004299E0(A8 + 0x30, Ac, A10);
    L00429CD0(A8 + 0x3c, Ac, A10);
    eax = *(A8 + 0xc0);
    if(eax != -1) {
        ecx = eax;
        if(ecx >= Ac && ecx < *(ebp - 0x68)) {
            *(A8 + 0xc0) = -1;
            eax = L00423980(A8 + 0xbc);
        } else {
            if(ecx > Ac) {
                eax = eax - A10;
                *(A8 + 0xc0) = eax;
            }
        }
    }
    if(*(A8 + 0x48) != 0) {
        esi = Ac;
        esi = *(A8 + 0x14) * *(A8 + 0x14);
        edx = *(A8 + 0x10);
        esi = esi + *(A8 + 8);
        if(esi < edx) {
            eax = *(A8 + 0xc);
            *(ebp - 0x4c) = *(A8 + 4);
            *(ebp - 0x48) = esi;
            *(ebp - 0x44) = eax;
            *(ebp - 0x40) = edx;
            *(ebp - 0x10) = esp;
            eax = *(A8 + 0x48)( *(A8 + 0x4c), ebp - 0x4c);
            goto L00454d89;
            if(*(ebp - 0x1c) != 0) {
                (save)-1;
                ecx = *(ebp - 0x24);
                eax = *(ebp - 0x1c)();
            }
            esp = *(ebp - 0x10);
        }
    }
L00454d89:
    if(*(A8 + 0xa8) != 0) {
        *(ebp - 0x28) = esp;
        eax = *(A8 + 0xa8)( *(A8 + 0xac), L00454930(A8));
        goto L00454dc3;
        if(*(ebp - 0x34) != 0) {
            ecx = *(ebp - 0x3c);
            *(ebp - 0x34)(-1);
        }
        esp = *(ebp - 0x28);
    }
L00454dc3:
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00454DCD - 0x00454DCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454DCD()
{



}

/*	Procedure: 0x00454DD0 - 0x00454DF6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00462320()
 *		L00462720()
 */

L00454DD0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    return *(A8 + 0x34);
}

/*	Procedure: 0x00454DF7 - 0x00454DFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454DF7()
{



}

/*	Procedure: 0x00454E00 - 0x00454E38
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00464908()
 */

L00454E00(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    eax = Ac < *(A8 + 0x40) ? *( *(A8 + 0x3c) + Ac * 4) : 0;
}

/*	Procedure: 0x00454E39 - 0x00454E3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454E39()
{



}

/*	Procedure: 0x00454E40 - 0x00454E74
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00462620()
 */

L00454E40(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = *(A8 + 0x40);
    }
    return *(A8 + 0x3c);
}

/*	Procedure: 0x00454E75 - 0x00454E7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454E75()
{



}

/*	Procedure: 0x00454E80 - 0x00454F0B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00455B1A()
 *		L0045643E()
 *		L00456900()
 *		L004569F0()
 *		L00456A30()
 */

L00454E80(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    if(Ac >= *(A8 + 0x34)) {
        eax = L00429610(65548);
    }
    edx = *(A8 + 0x30) + Ac;
    A10 :: 0;
    if(!(ecx = *edx & 0xff)) {
        if(!(ecx & 1)) {
            return 0;
        }
        ecx = ecx | 1;
        *(A8 + 0x2c) = *(A8 + 0x2c) + 1;
    } else {
        if(!(ecx & 1)) {
            esp = ebp - 8;
            return 0;
        }
        ecx = ecx & -2;
        *(A8 + 0x2c) = *(A8 + 0x2c) - 1;
    }
    *edx = cl;
    eax = L00455510(A8, Ac);
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00454F0C - 0x00454F0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454F0C()
{



}

/*	Procedure: 0x00454F10 - 0x00454F5D
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454F10()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    esi = *(ebp + 8);
    ebx = *(ebp + 0xc);
    if(esi == 0 || *esi != -2061389103) {
        eax = L00429610(65561);
    }
    if(ebx < *(esi + 0x34)) {
        eax = *( *(esi + 0x30) + ebx) & 0xff;
        edx = 0;
    } else {
        edx = 0;
    }
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00454F5E - 0x00454F5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00454F5E()
{



}

/*	Procedure: 0x00454F60 - 0x0045509D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00455C00()
 *		L00456670()
 *		L00462620()
 */

L00454F60(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x1c;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    if(Ac >= *(A8 + 0x34)) {
        L00429610(65548);
    }
    eax = *(A8 + 0x2c);
    esi = *(A8 + 0x30);
    *(ebp - 0x10) = eax;
    dl = 0;
    *(ebp - 0x28) = 0;
    ebx = 0;
    eax = 0;
    if(Ac > 0) {
        do {
            if(!( *(esi + eax) & 0xff & 1)) {
                *(esi + eax) = cl & 0xfe;
                *(ebp - 0x10) = *(ebp - 0x10) - 1;
                if(dl == 0) {
                    dl = 1;
                    *(ebp - 0x28) = eax;
                }
                ebx = eax;
            }
            eax = eax + 1;
        } while(eax < Ac);
    }
    if(!( *(esi + Ac) & 0xff & 1)) {
        *(esi + Ac) = *(esi + Ac) | 1;
        *(ebp - 0x10) = *(ebp - 0x10) + 1;
        if(dl == 0) {
            dl = 1;
            *(ebp - 0x28) = Ac;
        }
        ebx = Ac;
    }
    *(ebp - 0x24) = *(A8 + 0x34);
    eax = Ac + 1;
    do {
        if(!( *(esi + eax) & 0xff & 1)) {
            *(esi + eax) = cl & 0xfe;
            *(ebp - 0x10) = *(ebp - 0x10) - 1;
            if(dl == 0) {
                dl = 1;
                *(ebp - 0x28) = eax;
            }
            ebx = eax;
        }
        eax = eax + 1;
    } while(eax < *(ebp - 0x24));
    if(dl == 0) {
        return 0;
    }
    eax = *(ebp - 0x10);
    *(A8 + 0x2c) = eax;
    if(*(A8 + 0x48) != 0 && *(ebp - 0x28) <= ebx) {
        *(ebp - 0x20) = *(A8 + 4);
        *(ebp - 0x18) = *(A8 + 0xc);
        edx = *(A8 + 0x14);
        esi = *(ebp - 0x28);
        esi = edx * edx;
        eax = ebp - 0x20;
        ecx = ebx + 1;
        ecx = edx * edx;
        *(ebp - 0x1c) = esi + *(A8 + 8);
        *(ebp - 0x14) = ecx + *(A8 + 8);
        eax = *(A8 + 0x48)( *(A8 + 0x4c), eax);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045509E - 0x0045509F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045509E()
{



}

/*	Procedure: 0x004550A0 - 0x00455200
 *	Argument size: 12
 *	Local size: 28
 *	Save regs size: 12
 */

L004550A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = Ac;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    ecx = *(A8 + 0x34);
    eax = ecx;
    Vffffffec = ecx;
    if(ebx >= eax) {
        return 0;
    }
    ecx = ebx + A10;
    if(ecx > Vffffffec || ecx < ebx) {
        A10 = eax;
        A10 = A10 - ebx;
    }
    eax = A8;
    ecx = *(eax + 0x2c);
    edx = *(eax + 0x30);
    Vfffffff0 = ecx;
    cl = 0;
    edi = 0;
    esi = 0;
    *(ebp - 0x28) = 0;
    if(ebx > 0) {
        do {
            eax = *(edx + esi) & 0xff;
            if(!(eax & 1)) {
                al = al & 0xfe;
                *(edx + esi) = al;
                Vfffffff0 = Vfffffff0 - 1;
                if(cl == 0) {
                    cl = 1;
                    *(ebp - 0x28) = esi;
                }
                edi = esi;
            }
            esi = esi + 1;
        } while(esi < ebx);
    }
    esi = ebx + A10;
    do {
        eax = *(edx + ebx) & 0xff;
        if(!(eax & 1)) {
            al = al | 1;
            *(edx + ebx) = al;
            Vfffffff0 = Vfffffff0 + 1;
            if(cl == 0) {
                cl = 1;
                *(ebp - 0x28) = ebx;
            }
            edi = ebx;
        }
        ebx = ebx + 1;
    } while(ebx < esi);
    ebx = esi;
    if(esi < Vffffffec) {
        do {
            eax = *(edx + ebx) & 0xff;
            if(!(eax & 1)) {
                al = al & 0xfe;
                *(edx + ebx) = al;
                Vfffffff0 = Vfffffff0 - 1;
                if(cl == 0) {
                    cl = 1;
                    *(ebp - 0x28) = ebx;
                }
                edi = ebx;
            }
            ebx = ebx + 1;
        } while(ebx < Vffffffec);
    }
    if(cl == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    *(A8 + 0x2c) = Vfffffff0;
    eax = A8;
    if(*(eax + 0x48) != 0 && *(ebp - 0x28) <= edi) {
        *(ebp - 0x24) = *(eax + 4);
        eax = A8;
        Vffffffe4 = *(eax + 0xc);
        ecx = *(eax + 0x14);
        edx = *(ebp - 0x28);
        edx = ecx * ecx;
        ebx = edi + 1;
        ebx = ecx * ecx;
        *(ebp - 0x20) = edx + *(eax + 8);
        ebx = ebx + *(eax + 8);
        Vffffffe8 = ebx;
        eax = A8;
        eax = *(eax + 0x48)( *(eax + 0x4c), ebp - 0x24);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00455201 - 0x0045520F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455201()
{



}

/*	Procedure: 0x00455239 - 0x0045523F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455239()
{



}

/*	Procedure: 0x00455240 - 0x00455383
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00423B40()
 *		L00455390()
 *		L00456670()
 */

L00455240(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esp = esp - 0x20;
    ebx = Ac;
    esi = A10;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    edx = *(A8 + 0x34);
    eax = edx;
    if(ebx >= eax) {
        return 0;
    }
    ecx = esi + ebx;
    if(ecx > edx || ecx < ebx) {
        esi = eax - ebx;
    }
    eax = *(A8 + 0x2c);
    edx = *(A8 + 0x30);
    *(ebp - 0x28) = eax;
    *(ebp - 0x2c) = ebx;
    *(ebp - 0x2c) = *(ebp - 0x2c) + esi;
    *(ebp - 0x20) = 0;
    *(ebp - 0x24) = 0;
    cl = 0;
    if(A14 != 0) {
        do {
            eax = *(edx + ebx) & 0xff;
            if(!(eax & 1)) {
                al = al | 1;
                *(edx + ebx) = al;
                *(ebp - 0x28) = *(ebp - 0x28) + 1;
                if(cl == 0) {
                    cl = 1;
                    *(ebp - 0x20) = ebx;
                }
                *(ebp - 0x24) = ebx;
            }
            ebx = ebx + 1;
        } while(ebx < *(ebp - 0x2c));
    } else {
        do {
            eax = *(edx + ebx) & 0xff;
            if(!(eax & 1)) {
                al = al & 0xfe;
                *(edx + ebx) = al;
                *(ebp - 0x28) = *(ebp - 0x28) - 1;
                if(cl == 0) {
                    cl = 1;
                    *(ebp - 0x20) = ebx;
                }
                *(ebp - 0x24) = ebx;
            }
            ebx = ebx + 1;
        } while(ebx < *(ebp - 0x2c));
    }
    if(cl == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = *(ebp - 0x28);
    *(A8 + 0x2c) = eax;
    if(*(A8 + 0x48) != 0) {
        eax = *(ebp - 0x24);
        if(*(ebp - 0x20) <= eax) {
            *(ebp - 0x1c) = *(A8 + 4);
            *(ebp - 0x14) = *(A8 + 0xc);
            esi = *(A8 + 0x14);
            ebx = *(ebp - 0x20);
            ebx = esi * esi;
            eax = ebp - 0x1c;
            *(ebp - 0x18) = ebx + *(A8 + 8);
            edx = *(ebp - 0x24) + 1;
            *(ebp - 0x10) = esi * esi + *(A8 + 8);
            eax = *(A8 + 0x48)( *(A8 + 0x4c), eax);
        }
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00455384 - 0x0045538F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455384()
{



}

/*	Procedure: 0x00455390 - 0x004553C0
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 */

L00455390(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    eax = A10;
    if(ebx > eax) {
        edx = ebx;
        ebx = eax;
        eax = edx;
    }
    edx = eax + 1;
    return L00455240(A8, ebx, edx - ebx, A14 & 0xff);
}

/*	Procedure: 0x004553C1 - 0x004553CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004553C1()
{



}

/*	Procedure: 0x004553D0 - 0x00455423
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00455490()
 *		L00456670()
 */

L004553D0(A8)
/* unknown */ void  A8;
{



    (save)esi;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    edx = *(A8 + 0x34);
    eax = 0;
    esi = *(A8 + 0x30);
    if(edx > 0) {
        do {
            if(!( *(esi + eax) & 0xff & 1)) {
                goto L0045540c;
            }
            eax = eax + 1;
        } while(eax < edx);
        goto L0045541a;
L0045540c:
        esp = ebp - 8;
        (restore)esi;
        return;
    }
L0045541a:
    esp = ebp - 8;
    (restore)esi;
    return eax | -1;
}

/*	Procedure: 0x00455424 - 0x0045542F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455424()
{



}

/*	Procedure: 0x00455430 - 0x00455486
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00455490()
 */

L00455430(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    ebx = A8;
    (save)esi;
    if(ebx == 0 || *ebx != -2061389103) {
        eax = L00429610(65561);
    }
    edx = *(ebx + 0x34);
    ecx = *(ebx + 0x30);
    esi = edx - 1;
    if(!(ebx = edx + ecx)) {
        do {
            ebx = ebx - 1;
            eax = *ebx & 0xff;
            if(!(eax & 1)) {
                goto L0045546d;
            }
        } while(esi = esi - 1);
        goto L0045547d;
L0045546d:
        esp = ebp - 8;
        eax = ebx;
        (restore)esi;
        return eax - ecx;
    }
L0045547d:
    esp = ebp - 8;
    (restore)esi;
    return eax | -1;
}

/*	Procedure: 0x00455487 - 0x0045548F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455487()
{



}

/*	Procedure: 0x00455490 - 0x00455505
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004549A0()
 */

L00455490(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    esi = A8;
    (save)edi;
    eax = L004553D0(esi);
    edi = eax;
    if(edi == -1) {
        *(Ac + 0xc) = 0;
        *(Ac + 8) = *(Ac + 0xc);
        *(Ac + 4) = *(Ac + 8);
        esi = *(Ac + 4);
        *Ac = esi;
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    eax = L00455430(esi);
    *Ac = *(esi + 4);
    *(Ac + 8) = *(esi + 0xc);
    edx = *(esi + 0x14);
    ecx = edi;
    ecx = edx * edx;
    eax = eax + 1;
    eax = edx * edx;
    *(Ac + 4) = ecx + *(esi + 8);
    eax = eax + *(esi + 8);
    *(Ac + 0xc) = eax;
    esp = ebp - 0xc;
    (restore)edi;
    return 1;
}

/*	Procedure: 0x00455506 - 0x0045550F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455506()
{



}

/*	Procedure: 0x00455510 - 0x00455585
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004252A0()
 *		L00425340()
 *		L004253D0()
 *		L00454E80()
 */

L00455510(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    if(Ac >= *(A8 + 0x34)) {
        return 0;
    }
    if(*(A8 + 0x48) == 0) {
        esp = ebp - 8;
        return 1;
    }
    *(ebp - 0x18) = *(A8 + 4);
    *(ebp - 0x10) = *(A8 + 0xc);
    ecx = *(A8 + 0x14);
    edx = Ac;
    edx = ecx * ecx + *(A8 + 8);
    *(ebp - 0x14) = edx;
    edx = *(ebp - 0x14) + ecx;
    *(ebp - 0xc) = edx;
    eax = *(A8 + 0x48)( *(A8 + 0x4c), ebp - 0x18);
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x00455586 - 0x0045558F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455586()
{



}

/*	Procedure: 0x00455590 - 0x00455639
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004257C0()
 */

L00455590(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    esp = esp - 0x10;
    ebx = A10;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    eax = *(A8 + 0x34);
    if(Ac >= eax) {
        return 0;
    }
    if(ebx + Ac > eax) {
        ebx = eax - Ac;
    }
    if(ebx == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    if(*(A8 + 0x48) == 0) {
        esp = ebp - 0xc;
        return 1;
    }
    *(ebp - 0x1c) = *(A8 + 4);
    *(ebp - 0x14) = *(A8 + 0xc);
    ecx = *(A8 + 0x14);
    eax = Ac;
    eax = ecx * ecx;
    edx = ebx;
    edx = ecx * ecx;
    ecx = ebp - 0x1c;
    eax = eax + *(A8 + 8);
    *(ebp - 0x18) = eax;
    *(ebp - 0x10) = edx + *(ebp - 0x18);
    eax = *(A8 + 0x48)( *(A8 + 0x4c), ecx);
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045563A - 0x0045563F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045563A()
{



}

/*	Procedure: 0x00455640 - 0x0045569B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00455700()
 *		L00456900()
 */

L00455640(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    if(Ac >= *(A8 + 0x34)) {
        L00429610(65548);
    }
    *A10 = *(A8 + 4);
    *(A10 + 8) = *(A8 + 0xc);
    edx = *(A8 + 0x14);
    eax = Ac;
    eax = edx * edx + *(A8 + 8);
    *(A10 + 4) = eax;
    eax = *(A10 + 4) + edx;
    *(A10 + 0xc) = eax;
    return *(A10 + 0xc);
}

/*	Procedure: 0x0045569C - 0x0045569F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045569C()
{



}

/*	Procedure: 0x004556A0 - 0x004556FE
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00456540()
 *		L00456900()
 */

L004556A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    eax = *Ac;
    if(eax >= *(A8 + 4) && eax < *(A8 + 0xc)) {
        edx = *(Ac + 4) - *(A8 + 8);
        if(edx >= 0) {
            ecx = *(A8 + 0x34);
            if(ecx != 0) {
                eax = edx;
                edx = 0;
                *(A8 + 0x14) = *(A8 + 0x14) / *(A8 + 0x14);
                edx = *(A8 + 0x14) % *(A8 + 0x14);
                if(eax < ecx) {
                    return;
                }
            }
        }
    }
    esp = ebp - 8;
    return eax | -1;
}

/*	Procedure: 0x004556FF - 0x004556FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004556FF()
{



}

/*	Procedure: 0x00455700 - 0x00455754
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00456670()
 *		L00462620()
 */

L00455700(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    if(Ac < *(A8 + 0x34) && *(A8 + 0x60) != 0) {
        L00455640(A8, Ac, ebp - 0x18);
        eax = *(A8 + 0x60)( *(A8 + M00000064), ebp - 0x18, A10);
    }
}

/*	Procedure: 0x00455755 - 0x0045575F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455755()
{



}

/*	Procedure: 0x00455760 - 0x0045578F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421520()
 *		L00423850()
 */

L00455760(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0x48) = Ac;
    *(A8 + 0x4c) = A10;
    return *(A8 + 0x4c);
}

/*	Procedure: 0x00455790 - 0x004557BF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421520()
 *		L00423850()
 *		L004621EA()
 */

L00455790(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0x50) = Ac;
    *(A8 + 0x54) = A10;
    return *(A8 + 0x54);
}

/*	Procedure: 0x004557C0 - 0x004557EF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421520()
 *		L00423850()
 */

L004557C0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0x58) = Ac;
    *(A8 + 0x5c) = A10;
    return *(A8 + 0x5c);
}

/*	Procedure: 0x004557F0 - 0x0045581F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421520()
 */

L004557F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0x60) = Ac;
    *(A8 + M00000064) = A10;
    return *(A8 + M00000064);
}

/*	Procedure: 0x00455820 - 0x0045584F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004621EA()
 */

L00455820(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0x68) = Ac;
    *(A8 + 0x6c) = A10;
    return *(A8 + 0x6c);
}

/*	Procedure: 0x00455850 - 0x0045587F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421520()
 */

L00455850(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0x70) = Ac;
    *(A8 + 0x74) = A10;
    return *(A8 + 0x74);
}

/*	Procedure: 0x00455880 - 0x004558AF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004621EA()
 */

L00455880(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0x78) = Ac;
    *(A8 + 0x7c) = A10;
    return *(A8 + 0x7c);
}

/*	Procedure: 0x004558B0 - 0x004558E5
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0042198B()
 */

L004558B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0xa0) = Ac;
    *(A8 + 0xa4) = A10;
    return *(A8 + 0xa4);
}

/*	Procedure: 0x004558E6 - 0x004558EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004558E6()
{



}

/*	Procedure: 0x004558F0 - 0x00455925
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421520()
 */

L004558F0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0xa8) = Ac;
    *(A8 + 0xac) = A10;
    return *(A8 + 0xac);
}

/*	Procedure: 0x00455926 - 0x0045592F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455926()
{



}

/*	Procedure: 0x00455930 - 0x00455ABA
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00421F89()
 *		L00423E40()
 */

L00455930(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x30;
    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    if(Ac == 0 || A10 == 0) {
        return;
    }
    *(ebp - 0x30) = *(A8 + 0x50);
    *(ebp - 0x34) = *(A8 + 0x54);
    eax = *(A8 + 0x34);
    *(ebp - 0x3c) = eax;
    if(*(ebp - 0x30) == 0 || eax == 0) {
        esp = ebp - 0xc;
        return;
    }
    *(ebp - 0x18) = *(A8 + 0x14);
    *(ebp - 0x38) = *(A8 + 0x30);
    *(ebp - 0x2c) = *(A8 + 0xc4) != 0 ? 0x100 : 0;
    edi = *(A10 + 4);
    eax = *(A8 + 8);
    *(ebp - 0x10) = eax;
    if(!( *(A8 + 0x18) & 0x200)) {
        ecx = *(ebp - 0x3c);
        if(edi == *(ebp - 0x18) * *(ebp - 0x18) + eax) {
            edi = edi - 1;
        }
    }
    if(edi > *(ebp - 0x10)) {
        edx = 0;
        eax = edi - *(ebp - 0x10);
        *(ebp - 0x18) = *(ebp - 0x18) / *(ebp - 0x18);
        edx = *(ebp - 0x18) % *(ebp - 0x18);
        ebx = eax;
        if(ebx < *(ebp - 0x3c)) {
            goto L00455a02;
        }
        esp = ebp - 0xc;
        return;
    }
    ebx = 0;
L00455a02:
    edx = *(A8 + 0x10);
    ecx = *(A10 + 0xc);
    if(ecx > edx) {
        ecx = edx;
    }
    eax = *(ebp - 0x10);
    edx = 0;
    *(ebp - 0x14) = ecx;
    *(ebp - 0x14) = *(ebp - 0x14) - eax;
    eax = *(ebp - 0x14);
    *(ebp - 0x18) = *(ebp - 0x18) / *(ebp - 0x18);
    edx = *(ebp - 0x18) % *(ebp - 0x18);
    *(ebp - 0x14) = eax;
    eax = *(ebp - 0x3c);
    if(*(ebp - 0x14) >= eax) {
        *(ebp - 0x14) = eax;
        *(ebp - 0x14) = *(ebp - 0x14) - 1;
    }
    *(ebp - 0x28) = *(A8 + 4);
    *(ebp - 0x20) = *(A8 + 0xc);
    eax = ebx;
    *(ebp - 0x3c) = *(ebp - 0x18) * *(ebp - 0x18);
    *(ebp - 0x3c) = *(ebp - 0x3c) + *(ebp - 0x10);
    *(ebp - 0x10) = *(ebp - 0x3c);
    eax = *(ebp - 0x18);
    *(ebp - 0x10) = *(ebp - 0x10) + eax;
    do {
        *(ebp - 0x24) = *(ebp - 0x3c);
        eax = *(ebp - 0x10);
        edx = ebx;
        *(ebp - 0x1c) = eax;
        edi = edx >= *(A8 + 0x40) ? 0 : *( *(A8 + 0x3c) + edx * 4);
        *(ebp - 0x30)( *(ebp - 0x34), edi, edx, *( *(ebp - 0x38) + ebx) & 0xff | *(ebp - 0x2c), Ac, ebp - 0x28, A10);
        eax = *(ebp - 0x18);
        ebx = ebx + 1;
        *(ebp - 0x3c) = *(ebp - 0x3c) + eax;
        *(ebp - 0x10) = *(ebp - 0x10) + eax;
    } while(ebx <= *(ebp - 0x14));
    esp = ebp - 0xc;
}

/*	Procedure: 0x00455ABB - 0x00455ABF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455ABB()
{



}

/*	Procedure: 0x00455AC0 - 0x00455B19
 *	Argument size: 16
 *	Local size: 44
 *	Save regs size: 8
 *	Called by:
 *		L0045643E()
 *		L00456540()
 *		L00456600()
 *		L00456670()
 */

L00455AC0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;



    esi = *(A8 + 0x58);
    if(esi == 0) {
        return;
    }
    L00434150(ebp - 0x34, 0x2c);
    *(ebp - 0x34) = *(A8 + 0x5c);
    *(ebp - 0x30) = A8;
    Vffffffdc = Ac;
    Vffffffe0 = A10;
    Vffffffe4 = A14;
    eax = *esi( *(A8 + 0x5c), ebp - 0x34);
    esp = ebp - 8;
}

/*	Procedure: 0x00455B1A - 0x00455BE3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00455B1A(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = A8 + 0xbc;
    (save)edi;
    esp = esp - 0x30;
    eax = L00423980(ecx);
    edi = *(A8 + 0xc0);
    *(A8 + 0xc0) = -1;
    if(!( *(A8 + 0x18) & 4) && edi < *(A8 + 0x34) && *(A8 + 0x2c) == 1) {
        eax = L00454E80(A8, edi, 0);
    }
    if(*(Ac + 0x10) == 0xa) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    eax = *(A8 + 0x58);
    *(ebp - 0x10) = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    L00434150(ebp - 0x3c, 0x2c);
    *(ebp - 0x3c) = *(A8 + 0x5c);
    *(ebp - 0x38) = A8;
    *(ebp - 0x30) = *(Ac + 0xc);
    *(ebp - 0x2c) = 6;
    *(ebp - 0x28) = edi;
    *(ebp - 0x24) = *(Ac + 0x18);
    *(ebp - 0x20) = *(Ac + 0x24);
    *(ebp - 0x18) = *(Ac + 0x24);
    edx = *(Ac + 0x28);
    *(ebp - 0x14) = edx;
    eax = *(ebp - 0x10)( *(A8 + 0x5c), ebp - 0x3c);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00455BE4 - 0x00455BEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455BE4()
{



}

/*	Procedure: 0x00455BF1 - 0x00455BFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00455BF1()
{



}

/*	Procedure: 0x00455C00 - 0x00455DDF
 *	Argument size: 70
 *	Local size: 36
 *	Save regs size: 12
 *	Called by:
 *		L00456540()
 */

L00455C00(A8, Ac, A10, A34, A38, A3c, A40, A44, A48, A49, A4a)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A34;
/* unknown */ void  A38;
/* unknown */ void  A3c;
/* unknown */ void  A40;
/* unknown */ void  A44;
/* unknown */ void  A48;
/* unknown */ void  A49;
/* unknown */ void  A4a;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = A8;
    esp = esp & -8;
    edi = Ac;
    edx = A10;
    if(eax == 0) {
        return 0;
    }
    ecx = *(eax + 0x18);
    esi = *(eax + 0x34);
    if(!(ecx & 0x400)) {
        esp = ebp - 0xc;
        return 0;
    }
    bl = 0;
    if(!(ecx & 8)) {
        if(edi >= esi) {
            goto L00455dd3;
        }
        L00454F60(eax, edi);
        bl = al;
        goto L00455dd3;
    }
    if(*(eax + 0xc6) == 0) {
        goto L00455dd3;
    }
    ecx = ( *(eax + 0xc5) & 0xff) - 1;
    if(ecx > 6) {
        goto L00455dd3;
    }
    switch(ecx) {
        case 0:
            goto L00455c89;
        case 1:
            goto L00455ca1;
        case 2:
            goto L00455cbc;
        case 3:
            goto L00455cd7;
        case 4:
            goto L00455d02;
        case 5:
L00455dd3:
            esp = ebp - 0xc;
            return bl;
        case 6:
            goto L00455db8;
    }
L00455c89:
    if(edi >= esi) {
        goto L00455dd3;
    }
    bl = L00454F60(eax, edi);
    goto L00455dd3;
L00455ca1:
    if(edi >= esi) {
        goto L00455dd3;
    }
    bl = L00454E80(eax, edi, 1);
    goto L00455dd3;
L00455cbc:
    if(edi >= esi) {
        goto L00455dd3;
    }
    bl = L00454E80(eax, edi, 0);
    goto L00455dd3;
L00455cd7:
    edx = *(eax + 0x28);
    if(edx >= esi || edi >= esi) {
        goto L00455dd3;
    }
    if(edx <= esi) {
        goto L00455cf0;
    }
    bl = L00455210(eax, esi, edi);
    goto L00455dd3;
L00455d02:
    if(*(eax + 0x1c) >= esi) {
        goto L00455dd3;
    }
    edi = *(eax + 0xb0);
    ecx = *(edx + 0x10);
    if(ecx <= edi) {
        goto L00455d20;
    }
    esi = ecx - edi;
    goto L00455d24;
    if(edi - ecx <= 3) {
        ecx = *(eax + 0xb4);
        esi = *(edx + 0x14);
        if(esi <= ecx) {
            goto L00455d40;
        }
        edi = esi - ecx;
        goto L00455d44;
        edi = ecx - esi;
        if(edi <= 3) {
            goto L00455dd3;
        }
    }
    *(eax + 0xc5) = 0;
    *esp = *edx;
    A34 = *(edx + 4);
    A38 = *(edx + 8);
    A3c = *(edx + 0xc);
    A40 = *(edx + 0x10);
    A44 = *(edx + 0x14);
    ecx = *(edx + 0x18) & 0xff;
    A48 = cl;
    A49 = *(edx + 0x19) & 0xff;
    A4a = *(edx + 0x1a) & 65535;
    A40 = *(eax + 0xb0);
    A44 = *(eax + 0xb4);
    esi = esp;
    (save)esi;
    (save) *(eax + 0x1c);
    (save)eax;
    eax = L00455bf0();
    goto L00455dd0;
L00455db8:
    edx = *(eax + 0x1c);
    if(edx >= esi) {
        goto L00455dd3;
    }
    L00454E80(eax, edx, 0);
    goto L00455dd3;
}

/*	Procedure: 0x00455DE0 - 0x00455E24
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00456540()
 *		L00456600()
 */

L00455DE0(A8)
/* unknown */ void  A8;
{



    if(*(A8 + 0x18) & 8) {
        goto L00455e02;
    }
    return L00455240(A8, 0, -1, 0);
    if(*(A8 + 0xc5) != 7) {
        goto L00455e1f;
    }
    edx = *(A8 + 0x1c);
    if(edx >= *(A8 + 0x34)) {
        goto L00455e1f;
    }
    eax = L00454E80(A8, edx, 0);
    esp = ebp;
    return 0;
}

/*	Procedure: 0x0045643E - 0x004564FA
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 */

L0045643E(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0xc6) = 0;
    edi = *(A8 + 0x1c);
    *(A8 + 0x1c) = -1;
    eax = *(A8 + 0x18);
    *(ebp - 0x10) = eax;
    ecx = *(A8 + 0x34);
    if(!(eax & 8)) {
        edi = *(A8 + 0x20);
        if(edi < ecx) {
            eax = L00455AC0(A8, 1, edi, *(Ac + 0xc));
        }
        return;
    }
    *(A8 + 0x28) = -1;
    *(A8 + 0xc5) = 0;
    if(( *(A8 + 0xc5) & 0xff) == 7) {
        if(edi < ecx && L00454E80(A8, edi, 0) != 0 && !( *(ebp - 0x10) & 4)) {
            eax = L00455AC0(A8, 1, edi, *(Ac + 0xc));
        }
        esp = ebp - 0xc;
        return;
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x004564FB - 0x004564FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004564FB()
{



}

/*	Procedure: 0x00456500 - 0x00456535
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L00456500(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0xc7) = 1;
    return L00456540(A8, Ac);
}

/*	Procedure: 0x00456536 - 0x0045653F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456536()
{



}

/*	Procedure: 0x00456540 - 0x004565F2
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00456500()
 */

L00456540(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    (save)edi;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    (save)Ac + 0x10;
    eax = L004556A0(A8);
    edi = eax;
    edx = *(A8 + 0x20);
    bl = 0;
    (restore)ecx;
    if(edi == edx) {
        if(edi != -1) {
            bl = L00455C00(A8, edi, Ac);
        }
    } else {
        if(edx != -1) {
            *(A8 + 0x20) = -1;
            (save)Ac;
            (save)edx;
            bl = L00455DE0(A8);
        }
        if(edi != -1) {
            eax = L00455C00(A8, edi, Ac);
            ebx = bl & 0xff;
            *(A8 + 0x20) = edi;
            bl = 0;
        }
    }
    if(!( *(A8 + 0x18) & 0x80) && bl != 0) {
        eax = L00455AC0(A8, 3, -1, *(Ac + 0xc));
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x004565F3 - 0x004565FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004565F3()
{



}

/*	Procedure: 0x00456600 - 0x00456666
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00456600(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    *(A8 + 0xc7) = 0;
    edx = *(A8 + 0x20);
    if(edx != -1) {
        *(A8 + 0x20) = -1;
        (save)Ac;
        (save)edx;
        eax = L00455DE0(A8);
        if(!( *(A8 + 0x18) & 0x80) && al != 0) {
            eax = L00455AC0(A8, 3, -1, *(Ac + 0xc));
        }
    }
}

/*	Procedure: 0x00456667 - 0x0045666F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456667()
{



}

/*	Procedure: 0x00456670 - 0x004568B8
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00421CBC()
 */

L00456670(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  edi;



    esp = esp - 4;
    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    edi = *(A8 + 0x18);
    if(!(edi & 0x400)) {
        return;
    }
    if(!(edx = ( *(Ac + 0x14) & 65535) - 0x20) && !(edx = edx - 0x51)) {
        if(!(edx = edx - 0xf)) {
            if(edx = edx - 1) {
                goto L004567a7;
            }
            if(!(edx = edx - 3)) {
                if(edx = edx - 1) {
                    goto L00456740;
                }
                if(edx = edx - 1) {
                    goto L004566f1;
                }
                if(edx = edx - 1) {
                    goto L00456740;
                }
                goto L00456800;
            }
L004566f1:
            if(!( *(Ac + 0xc) & 0x11)) {
                if(*(A8 + 0x34) == 0) {
                    goto L00456870;
                }
                eax = 0;
            } else {
                eax = L004553D0(A8);
                if(eax == -1) {
                    if(*(A8 + 0x34) == 0) {
                        goto L00456870;
                    }
                    eax = 0;
                } else {
                    if(eax == 0) {
                        goto L00456870;
                    }
                    eax = eax - 1;
                    goto L00456878;
L00456740:
                    if(!( *(Ac + 0xc) & 0x11)) {
                        ecx = *(A8 + 0x34);
                        eax = ecx;
                        if(ecx == 0) {
                            goto L00456870;
                        }
                        eax = eax - 1;
                    } else {
                        eax = L004553D0(A8);
                        if(eax == -1) {
                            if(*(A8 + 0x34) == 0) {
                                goto L00456870;
                            }
                            eax = 0;
                        } else {
                            if(eax == *(A8 + 0x34) - 1) {
                                goto L00456870;
                            }
                            eax = eax + 1;
                        }
                    }
                }
            }
        } else {
            if(*(A8 + 0x34) == 0) {
                goto L00456870;
            }
            eax = 0;
            goto L00456878;
L004567a7:
            ecx = *(A8 + 0x34);
            eax = ecx;
            if(ecx == 0) {
                goto L00456870;
            }
            eax = eax - 1;
        }
    } else {
        if(!(edi & 0x10c)) {
            eax = !(edi & 5) ? L004553D0(A8) : eax | -1;
            eax = L00455AC0(A8, 7, eax, *(Ac + 0xc));
            esp = ebp - 0xc;
            return;
L00456800:
            if(!(edi & 1) && L00450C40(Ac, 0x61, 0x20) != 0) {
                if(L00455240(A8, 0, -1, 1) != 0 && !(edi & 0x80)) {
                    eax = L00455AC0(A8, 3, -1, *(Ac + 0xc));
                }
                esp = ebp - 0xc;
                return;
            }
            edi = *(A8 + 0xa0);
            if(edi != 0) {
                eax = *edi( *(A8 + 0xa4), Ac);
            }
            esp = ebp - 0xc;
            return;
        }
L00456870:
        esp = ebp - 0xc;
        return;
    }
L00456878:
    *(ebp - 0x10) = eax;
    (save)eax;
    (restore)ecx;
    if(L00454F60(A8) != 0) {
        eax = L00455700(A8, *(ebp - 0x10), 0xc0);
        if(!(edi & 0x80)) {
            eax = L00455AC0(A8, 3, -1, *(Ac + 0xc));
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x004568B9 - 0x004568BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004568B9()
{



}

/*	Procedure: 0x004568C0 - 0x004568FC
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L004568C0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    *(A8 + 0xc5) = 0;
    *(A8 + 0x24) = -1;
    return L00456900(A8, Ac);
}

/*	Procedure: 0x004568FD - 0x004568FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004568FD()
{



}

/*	Procedure: 0x00456900 - 0x004569ED
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00421DA9()
 *		L004568C0()
 */

L00456900(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    esp = esp - 0x14;
    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    eax = *(A8 + 0x88);
    *(ebp - 0x10) = eax;
    if(eax == 0) {
        return 0;
    }
    ebx = L004556A0(A8, Ac + 0x10);
    ecx = *(A8 + 0x24);
    edi = ebx;
    *(A8 + 0x24) = edi;
    if(ebx != ecx && ecx < *(A8 + 0x34)) {
        L00454E80(A8, ecx, 0);
    }
    if(ebx != -1) {
        L00455640(A8, edi, ebp - 0x20);
        *(ebp - 0x10)( *(A8 + 0x8c), edi, ebp - 0x20, Ac);
        bl = al;
        eax = L00454E80(A8, edi, bl & 0xff);
        if(bl != 0) {
            esp = ebp - 0xc;
            return 1;
        }
    }
    *(A8 + 0x24) = -1;
    *(ebp - 0x14) = 0;
    eax = *(ebp - 0x14);
    edi = eax;
    *(ebp - 0x18) = eax;
    ecx = edi;
    edx = ebp - 0x20;
    *(ebp - 0x1c) = edi;
    *(ebp - 0x20) = ecx;
    eax = *(ebp - 0x10)( *(A8 + 0x8c), -1, edx, Ac);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004569EE - 0x004569EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004569EE()
{



}

/*	Procedure: 0x004569F0 - 0x00456A2E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L004569F0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -2061389103) {
        L00429610(65561);
    }
    eax = *(A8 + 0x24);
    *(A8 + 0x24) = -1;
    if(eax < *(A8 + 0x34)) {
        eax = L00454E80(A8, eax, 0);
    }
}

/*	Procedure: 0x00456A2F - 0x00456A2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456A2F()
{



}

/*	Procedure: 0x00456A30 - 0x00456A9D
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00421EE9()
 */

L00456A30(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)esi;
    (save)edi;
    if(A8 == 0 || *A8 != -2061389103) {
        eax = L00429610(65561);
    }
    edi = *(A8 + 0x24);
    *(A8 + 0x24) = -1;
    if(edi < *(A8 + 0x34)) {
        eax = L00454E80(A8, edi, 0);
    } else {
        edi = edi | -1;
    }
    esi = *(A8 + 0x90);
    if(esi == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 0;
    }
    eax = *esi( *(A8 + 0x94), edi, Ac);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00456A9E - 0x00456A9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456A9E()
{



}

/*	Procedure: 0x00456AA0 - 0x00456AD1
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00421CEC()
 */

L00456AA0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != -2061389103) {
        L00429610(65561);
    }
    eax = *(ebx + 0xb8);
    ecx = *(ebp + 0xc);
    esp = ebp - 4;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00456AD2 - 0x00456ADF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456AD2()
{



}

/*	Procedure: 0x00456AE0 - 0x00456B0D
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456AE0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    ebx = *(ebp + 8);
    if(ebx == 0 || *ebx != -2061389103) {
        eax = L00429610(65561);
    }
    *(ebx + 0xc7) :: 0;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00456B0E - 0x00456C36
 *	Argument size: 16
 *	Local size: 32
 *	Save regs size: 12
 */

L00456B0E(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    if(Ac == 0) {
        Ac = 16384;
    }
    if(A8 == 0 || Ac < 0x200) {
        L00429610(65538);
    }
    eax = Ac;
    *(ebp - 0x28) = eax;
    *(ebp - 0x28) = *(ebp - 0x28) >> 5;
    edi = *(ebp - 0x28) * 4 + 0x80;
    esi = eax + edi + 0xfff & -4096;
    eax = L0042E310(esi);
    *(ebp - 0x2c) = eax;
    L00434150( *(ebp - 0x2c), 0x80);
    eax = *(ebp - 0x2c) - -128;
    *( *(ebp - 0x2c) + 0x20) = eax;
    ecx = *(ebp - 0x2c);
    *(ecx + 0x28) = *(ebp - 0x28);
    edx = *(ebp - 0x2c);
    *(edx + 0x1c) = *(ebp - 0x2c) + edi;
    eax = *(edx + 0x1c);
    *( *(ebp - 0x2c) + 0x14) = eax;
    ecx = *(ebp - 0x2c);
    *(ecx + 0x18) = esi - edi;
    esi = *(ebp - 0x2c) + 4;
    *esi = *A8;
    *(esi + 4) = *(A8 + 4);
    *(esi + 8) = *(A8 + 8);
    *(esi + 0xc) = *(A8 + 0xc);
    eax = *(ebp - 0x2c);
    *(eax + 0x3c) = A10;
    edx = *(ebp - 0x2c);
    *(edx + 0x40) = A14;
    *( *(ebp - 0x2c) + 0x74) = 5;
    Vfffffff0 = esp;
    L0044BE30(5);
    *( *(ebp - 0x2c) + 0x78) = ax;
    goto L00456c23;
    L0042E3E0(ebp - 0x2c);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        ecx = *(ebp - 0x24);
        Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L00456c23:
    *( *(ebp - 0x2c)) = 1885096884;
    return *(ebp - 0x2c);
}

/*	Procedure: 0x00456C37 - 0x00456C3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456C37()
{



}

/*	Procedure: 0x00456C73 - 0x00456C7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456C73()
{



}

/*	Procedure: 0x00456C80 - 0x00456CBF
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00456C80(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != 1885096884) {
        L00429610(65561);
    }
    *(A8 + 4) = *Ac;
    *(A8 + 8) = *(Ac + 4);
    *(A8 + 0xc) = *(Ac + 8);
    eax = *(Ac + 0xc);
    *(A8 + 0x10) = eax;
    return *(A8 + 0x10);
}

/*	Procedure: 0x00456CC0 - 0x00456CF6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00456CC0(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 1885096884) {
        L00429610(65561);
    }
    ecx = *(A8 + 0x24);
    if(ecx == 0) {
        ecx = 1;
    }
    eax = *(A8 + 0x78) & 65535;
    esp = ebp - 4;
    return ecx * ecx;
}

/*	Procedure: 0x00456CF7 - 0x00456CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00456CF7()
{



}

/*	Procedure: 0x00456D00 - 0x004573E3
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0042244E()
 */

L00456D00(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 0x5c;
    esi = A10;
    if(ebx == 0 || *ebx != 1885096884) {
        eax = L00429610(65561);
    }
    if(Ac == 0) {
        return;
    }
    eax = *(ebx + 8);
    *(ebp - 0x10) = eax;
    eax = *(ebx + 4);
    *(ebp - 0x54) = eax;
    eax = *(ebx + 0xc);
    *(ebp - 0x48) = eax;
    eax = *(ebx + 0x78) & 65535;
    *(ebp - 0x2c) = eax;
    eax = *(ebx + 0x24);
    *(ebp - 0x3c) = eax;
    eax = *(esi + 4);
    if(eax > *(ebp - 0x10)) {
        ecx = eax - *(ebp - 0x10);
        eax = ecx;
        edx = 0;
        *(ebp - 0x2c) = *(ebp - 0x2c) / *(ebp - 0x2c);
        edx = *(ebp - 0x2c) % *(ebp - 0x2c);
        ecx = eax;
    } else {
        ecx = 0;
    }
    *(ebp - 0x24) = ecx;
    if(ecx >= *(ebp - 0x3c)) {
        esp = ebp - 0xc;
        return;
    }
    edx = *(esi + 0xc);
    if(edx > *(ebp - 0x10)) {
        edi = edx - *(ebp - 0x10);
        esi = *(ebp - 0x2c) - 1 + edi;
        eax = esi;
        edx = 0;
        *(ebp - 0x2c) = *(ebp - 0x2c) / *(ebp - 0x2c);
        edx = *(ebp - 0x2c) % *(ebp - 0x2c);
        esi = eax;
    } else {
        esi = 0;
    }
    *(ebp - 0x44) = esi;
    if(esi >= *(ebp - 0x3c)) {
        *(ebp - 0x44) = *(ebp - 0x3c);
        *(ebp - 0x44) = *(ebp - 0x44) - 1;
    }
    eax = ecx;
    eax = *(ebp - 0x2c) * *(ebp - 0x2c);
    *(ebp - 0x28) = eax;
    eax = *(ebp - 0x10);
    *(ebp - 0x28) = *(ebp - 0x28) + eax;
    eax = *(ebp - 0x54);
    *(ebp - 0x20) = eax;
    eax = *(ebp - 0x48);
    *(ebp - 0x18) = eax;
    *(ebp - M00000064) = *(ebx + 0x20);
    eax = L004496D0(Ac, 0xb);
    eax = *(ebx + 0x74);
    *(ebp - 0x34) = eax;
    eax = *(ebx + 0x2c);
    *(ebp - 0x10) = eax;
    eax = *(ebx + 0x34);
    *(ebp - 0x50) = eax;
    eax = *(ebx + 0x30);
    *(ebp - 0x38) = eax;
    eax = *(ebx + 0x38);
    *(ebp - 0x40) = eax;
    eax = *(ebp - 0x50);
    if(*(ebp - 0x10) == eax) {
        eax = *(ebp - 0x40);
        if(*(ebp - 0x38) == eax) {
            *(ebp - 0x40) = 0;
            eax = *(ebp - 0x40);
            *(ebp - 0x38) = eax;
            *(ebp - 0x50) = eax;
            *(ebp - 0x10) = eax;
            goto L00456fe4;
L00456fd0:
            while(1) {
                eax = *(ebp - 0x44);
                if(*(ebp - 0x24) > eax) {
                    break;
                }
                eax = *(ebp - M00000064);
                esi = *(eax + *(ebp - 0x24) * 4);
                ebx = *esi & 0xff;
                edx = *(esi + 1) & 0xff;
                eax = *(ebp - 0x28);
                *(ebp - 0x1c) = eax;
                eax = *(ebp - 0x1c) + *(ebp - 0x2c);
                ebx = ebx << 8;
                *(ebp - 0x14) = eax;
                eax = *(ebp - 0x10);
                ebx = ebx | edx;
                esi = esi + 2;
                if(*(ebp - 0x24) >= eax) {
                    eax = *(ebp - 0x50);
                    if(*(ebp - 0x24) <= eax) {
                        goto L00456e6d;
                    }
                }
                eax = L0044A4D0(Ac, *(ebp - 0x34), ebp - 0x20, esi, ebx, 3);
                goto L00456fc6;
L00456e6d:
                eax = *(ebp - 0x10);
                *(ebp - 0x65) = 0;
                if(*(ebp - 0x24) != eax) {
                    eax = *(ebp - 0x50);
                    if(*(ebp - 0x24) != eax) {
                        edi = 0;
                        goto L00456ea9;
                    }
                    eax = *(ebp - 0x40);
                    edi = 0;
                    *(ebp - 0x30) = eax;
                } else {
                    eax = *(ebp - 0x50);
                    if(*(ebp - 0x24) != eax) {
                        edi = *(ebp - 0x38);
L00456ea9:
                        *(ebp - 0x30) = ebx;
                        *(ebp - 0x65) = 1;
                    } else {
                        eax = *(ebp - 0x40);
                        edi = *(ebp - 0x38);
                        *(ebp - 0x30) = eax;
                    }
                }
                if(edi > ebx) {
                    edi = ebx;
                }
                if(*(ebp - 0x30) > ebx) {
                    *(ebp - 0x30) = ebx;
                }
                eax = L0044A4D0(Ac, *(ebp - 0x34), ebp - 0x20, esi, edi, 3);
                eax = L0044BCD0( *(ebp - 0x34), esi, edi);
                *(ebp - 0x60) = eax;
                eax = *(ebp - 0x30);
                *(ebp - 0x4c) = eax;
                *(ebp - 0x4c) = *(ebp - 0x4c) - edi;
                *(ebp - 0x58) = esi;
                *(ebp - 0x58) = *(ebp - 0x58) + edi;
                eax = L0044BCD0( *(ebp - 0x34), *(ebp - 0x58), *(ebp - 0x4c));
                edi = *(ebp - 0x3c) + *(ebp - 0x60);
                *(ebp - 0x5c) = eax;
                *(ebp - 0x20) = edi;
                eax = *(ebp - 0x30) != ebx || *(ebp - 0x65) == 0 ? *(ebp - 0x5c) + edi : *(ebp - 0x48);
                *(ebp - 0x18) = eax;
                L004496D0(Ac, 0xc);
                L0044A0D0(Ac, ebp - 0x20);
                L004496D0(Ac, 0xd);
                eax = L0044A4D0(Ac, *(ebp - 0x34), ebp - 0x20, *(ebp - 0x58), *(ebp - 0x4c), 3);
                eax = *(ebp - 0x5c) + edi;
                *(ebp - 0x20) = eax;
                *(ebp - 0x18) = *(ebp - 0x48);
                L004496D0(Ac, 0xb);
                edx = esi;
                esi = ebp - 0x20;
                eax = L0044A4D0(Ac, *(ebp - 0x34), esi, edx + *(ebp - 0x30), ebx - *(ebp - 0x30), 3);
                eax = *(ebp - 0x54);
                *(ebp - 0x20) = eax;
L00456fc6:
                eax = *(ebp - 0x2c);
                *(ebp - 0x24) = *(ebp - 0x24) + 1;
                *(ebp - 0x28) = *(ebp - 0x28) + eax;
            }
            esp = ebp - 0xc;
            return;
        }
    }
L00456fe4:
    eax = *(ebp - 0x54);
    *(ebp - 0x3c) = eax;
    goto L00456fd0;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    ebx = A8;
    esp = esp - 0x14c;
    esi = A10;
    if(ebx == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(*ebx != 1885096884) {
        esp = ebp - 0xc;
        return;
    }
    if(A18 == 0) {
        esp = ebp - 0xc;
        return;
    }
    if(esi > 0x40) {
        esi = 0x40;
    }
    *(ebp + -272) = 2;
    *(ebp + -272) = *(ebp + -272) + L00437370(ebp + -266, 0x20, 12352);
    eax = *(ebp + -272);
    *(ebp + eax + -268) = 0x20;
    *(ebp + eax + -267) = 0x5b;
    *(ebp + -272) = *(ebp + -272) + 2;
    *(ebp + -272) = *(ebp + -272) + L004342A0(ebp + -268 + *(ebp + -272), Ac, esi);
    eax = *(ebp + -272);
    *(ebp + -276) = eax;
    *(ebp + -276) = *(ebp + -276) + 2;
    *(ebp + eax + -268) = 0x5d;
    *(ebp + eax + -267) = 0x20;
    *(ebp + -276) = *(ebp + -276) + A18;
    if(*(ebp + -276) > 0x200) {
        A18 = 0x200;
        *(ebp + -276) = 0x200;
        A18 = A18 - *(ebp + -272) + 2;
    }
    *(ebp + -267) = *(ebp + -276) - 2;
    *(ebp + -268) = *(ebp + -267) >> 8;
    ecx = *(ebx + 0x1c);
    *(ebp + -288) = ecx;
    *(ebp + -284) = ecx;
    eax = *(ebp + -276);
    *(ebp + -284) = *(ebp + -284) + eax;
    esi = *(ebx + 0x14);
    edi = esi + *(ebx + 0x18);
    *(ebp + -344) = edi;
    if(*(ebp + -284) > edi) {
        *(ebp + -284) = esi;
        *(ebp + -344) = ecx;
        *(ebp + -288) = esi;
        *(ebp + -284) = *(ebp + -284) + eax;
    }
    *(ebp + -292) = *(ebx + 0x24);
    eax = *(ebx + 0x20);
    ecx = eax;
    *(ebp + -280) = eax;
    *(ebp + -296) = *(ebp + -292);
    *(ebp + -296) = *(ebp + -296) << 2;
    *(ebp + -296) = *(ebp + -296) + ecx;
    if(ecx < *(ebp + -296)) {
        *(ebp + -340) = *(ebp + -284);
        edi = *(ebp + -288);
L004571a0:
        esi = *ecx;
        eax = ( *esi & 0xff) << 8;
        eax = (eax | *(esi + 1) & 0xff) + esi + 2;
        if(eax >= *(ebp + -340)) {
            eax = *(ebp + -340);
        }
        edx = esi;
        if(edx <= edi) {
            edx = edi;
        }
        if(edx < eax) {
            goto L004571d5;
        }
        if(esi >= *(ebp + -344)) {
L004571d5:
            ecx = ecx + 4;
            if(ecx < *(ebp + -296)) {
                goto L004571a0;
            }
        }
    }
    if(ecx == *(ebp + -280) && *(ebp + -292) >= *(ebx + 0x28)) {
        ecx = ecx + 4;
    }
    eax = ecx - *(ebp + -280);
    asm("cdq");
    esi = eax + (edx & 3) >> 2;
    if(esi != 0) {
        L004342A0( *(ebp + -280), ecx, *(ebp + -296) - ecx);
        *(ebp + -292) = *(ebp + -292) - esi;
        eax = *(ebx + 0x2c);
        edx = eax;
        if(eax < esi) {
            edx = 0;
            *(ebx + 0x30) = 0;
        } else {
            edx = edx - esi;
        }
        *(ebx + 0x2c) = edx;
        eax = *(ebx + 0x34);
        edi = eax;
        if(eax < esi) {
            edi = 0;
            *(ebx + 0x38) = 0;
        } else {
            edi = edi - esi;
        }
        *(ebx + 0x34) = edi;
        ecx = *(ebx + 0x54);
        edx = ecx;
        if(ecx < esi) {
            edx = 0;
            *(ebx + 0x58) = 0;
        } else {
            edx = edx - esi;
        }
        *(ebx + 0x54) = edx;
        eax = *(ebx + 0x5c);
        edi = eax;
        if(eax < esi) {
            edi = 0;
            *(ebx + 0x60) = 0;
        } else {
            edi = edi - esi;
        }
        *(ebx + 0x5c) = edi;
        edx = *(ebx + M00000064);
        eax = edx;
        if(edx < esi) {
            eax = 0;
            *(ebx + 0x68) = 0;
        } else {
            eax = eax - esi;
        }
        *(ebx + M00000064) = eax;
        ecx = *(ebx + 0x6c);
        edi = ecx;
        if(ecx < esi) {
            edi = 0;
            *(ebx + 0x70) = 0;
        } else {
            edi = edi - esi;
        }
        *(ebx + 0x6c) = edi;
    }
    eax = *(ebp + -280);
    ecx = *(ebp + -292);
    *(eax + ecx * 4) = *(ebp + -288);
    eax = *(ebp + -272) + 2;
    L004342A0( *(ebp + -288), ebp + -268, eax);
    L004342A0( *(ebp + -272) + 2 + *(ebp + -288), A14, A18);
    eax = *(ebp + -276) - 2;
    esi = *(ebp + -288) + 2;
    edi = 0;
    if(eax > 0) {
L00457350:
        edx = *(esi + edi) & 0xff;
        if(edx == 0xd || edx == 0xa) {
            *(esi + edi) = 0x20;
        }
        edi = edi + 1;
        if(edi < eax) {
            goto L00457350;
        }
    }
    *(ebx + 0x1c) = *(ebp + -284);
    eax = *(ebp + -292) + 1;
    *(ebx + 0x24) = eax;
    *(ebp + -316) = esp;
    if(*(ebx + 0x3c) != 0) {
        *(ebp + -312) = *(ebx + 4);
        *(ebp + -308) = *(ebx + 8);
        *(ebp + -304) = *(ebx + 0xc);
        eax = *(ebx + 0x10);
        *(ebp + -300) = eax;
        eax = *(ebx + 0x3c)( *(ebx + 0x40), ebp + -312);
        goto L004573dc;
        if(*(ebp + -328) != 0) {
            ecx = *(ebp + -336);
            eax = *(ebp + -328)(-1);
        }
        esp = *(ebp + -316);
    }
L004573dc:
    esp = ebp - 0xc;
}

/*	Procedure: 0x004573E4 - 0x004573EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004573E4()
{



}

/*	Procedure: 0x004573F0 - 0x004574D8
 *	Argument size: 24
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L004574E0()
 */

L004573F0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = A8;
    esi = Ac;
    edx = A14;
    *(ebp - 0x10) = *(edi + 0x74);
    esi :: edx;
    if(!(ecx = *(edi + 0x78) & 65535)) {
        eax = A18;
        if(A10 == eax) {
            *(A1c + 0xc) = 0;
            *(A1c + 8) = *(A1c + 0xc);
            *(A1c + 4) = *(A1c + 8);
            *A1c = *(A1c + 4);
        } else {
            edx = esi;
            edx = ecx * ecx + *(edi + 8);
            *(A1c + 4) = edx;
            *(A1c + 0xc) = *(A1c + 4) + ecx;
            esi = *( *(edi + 0x20) + esi * 4);
            ecx = ( *esi & 0xff) << 8;
            ecx = ecx | *(esi + 1) & 0xff;
            esi = esi + 2;
            if(A10 > ecx) {
                A10 = ecx;
            }
            if(A18 > ecx) {
                A18 = ecx;
            }
            edi = *(edi + 4);
            *A1c = L0044BCD0( *(ebp - 0x10), esi, A10) + edi;
            eax = L0044BCD0( *(ebp - 0x10), esi, A18) + edi;
            *(A1c + 8) = eax;
        }
    } else {
        if(A18 == 0 && edx != 0) {
            edx = edx - 1;
        }
        *A1c = *(edi + 4);
        *(A1c + 8) = *(edi + 0xc);
        eax = *(edi + 8);
        edi = esi;
        *(A1c + 4) = ecx * ecx + eax;
        edi = edx + 1;
        *(A1c + 0xc) = ecx * ecx + eax;
    }
}

/*	Procedure: 0x004574D9 - 0x004574DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004574D9()
{



}

/*	Procedure: 0x004574E0 - 0x0045768A
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00457690()
 *		L004579D0()
 *		L00457AE0()
 */

L004574E0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    ebx = Ac;
    esp = esp - 0x28;
    if(ebx <= A14) {
        if(ebx != A14) {
            goto L00457515;
        }
        eax = A18;
        if(A10 <= eax) {
            goto L00457515;
        }
    }
    eax = ebx;
    ebx = A14;
    A14 = eax;
    eax = A18;
    A10 = eax;
    A18 = A10;
L00457515:
    edx = *(A8 + 0x24);
    if(edx == 0) {
        return 0;
    }
    if(ebx >= edx) {
        ebx = edx;
        A10 = 0;
    } else {
        edi = *( *(A8 + 0x20) + ebx * 4);
        eax = ( *edi & 0xff) << 8;
        eax = eax | *(edi + 1) & 0xff;
        if(A10 > eax) {
            A10 = eax;
        }
    }
    if(A14 >= edx) {
        A14 = edx;
        A18 = 0;
    } else {
        edi = *( *(A8 + 0x20) + A14 * 4);
        edx = ( *edi & 0xff) << 8;
        edx = edx | *(edi + 1) & 0xff;
        if(A18 > edx) {
            A18 = edx;
        }
    }
    *(ebp - 0x34) = *(A8 + 0x2c);
    eax = *(A8 + 0x30);
    *(ebp - 0x10) = eax;
    ecx = *(A8 + 0x34);
    edx = *(A8 + 0x38);
    if(ebx == *(ebp - 0x34) && A14 == ecx && A10 == eax && A18 == edx) {
        esp = ebp - 0xc;
        return 0;
    }
    *(A8 + 0x2c) = ebx;
    *(A8 + 0x30) = A10;
    *(A8 + 0x34) = A14;
    *(A8 + 0x38) = A18;
    if(*(ebp - 0x34) > ebx || *(ebp - 0x34) == ebx && *(ebp - 0x10) > A10) {
        eax = *(ebp - 0x34);
        edi = *(ebp - 0x10);
        *(ebp - 0x34) = ebx;
        ebx = eax;
        *(ebp - 0x10) = A10;
        A10 = edi;
    }
    if(ecx > A14 || ecx == A14 && edx > A18) {
        edi = ecx;
        eax = edx;
        ecx = A14;
        edx = A18;
        A14 = edi;
        A18 = eax;
    }
    if(ecx > ebx || ecx == ebx && edx > A10) {
        edi = ecx;
        eax = edx;
        ecx = ebx;
        edx = A10;
        ebx = edi;
        A10 = eax;
    }
    L004573F0(A8, *(ebp - 0x34), *(ebp - 0x10), ecx, edx, ebp - 0x20);
    L004573F0(A8, ebx, A10, A14, A18, ebp - 0x30);
    ecx = ebp - 0x20;
    eax = ebp - 0x30;
    eax = L0044B770(ecx, ecx, eax);
    ebx = *(A8 + 0x10);
    if(*(ebp - 0x14) > ebx) {
        *(ebp - 0x14) = ebx;
    }
    edi = *(A8 + 0x3c);
    if(edi != 0) {
        eax = *edi( *(A8 + 0x40), ebp - 0x20);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045768B - 0x0045768F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045768B()
{



}

/*	Procedure: 0x00457690 - 0x0045770E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004223FC()
 */

L00457690(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 1885096884) {
        L00429610(65561);
    }
    if(L004574E0(A8, 0, 0, 0, 0) != 0) {
        *(A8 + 0x50) = 0;
        *(A8 + 0x48) = *(A8 + 0x50);
        *(A8 + 0x4c) = 0;
        *(A8 + 0x58) = 0;
        *(A8 + 0x54) = *(A8 + 0x58);
        *(A8 + 0x60) = 0;
        eax = *(A8 + 0x60);
        *(A8 + 0x5c) = eax;
        *(A8 + 0x68) = 0;
        *(A8 + M00000064) = *(A8 + 0x68);
        *(A8 + 0x70) = 0;
        *(A8 + 0x6c) = *(A8 + 0x70);
    }
}

/*	Procedure: 0x0045770F - 0x0045770F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045770F()
{



}

/*	Procedure: 0x00457710 - 0x004577A2
 *	Argument size: 12
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L004579D0()
 */

L00457710(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = *(A8 + 0x24);
    edi = A10;
    *(ebp - 0x14) = eax;
    if(eax == 0) {
        *edi = 0;
        return 0;
    }
    esi = *(Ac + 4) - *(A8 + 8);
    if(esi <= 0) {
        esi = 0;
    } else {
        *(ebp - 0x10) = *(A8 + 0x78) & 65535;
        eax = esi;
        edx = 0;
        *(ebp - 0x10) = *(ebp - 0x10) / *(ebp - 0x10);
        edx = *(ebp - 0x10) % *(ebp - 0x10);
        esi = eax;
        if(esi >= *(ebp - 0x14)) {
            esi = *(ebp - 0x14) - 1;
        }
    }
    *edi = esi;
    esi = *( *(A8 + 0x20) + esi * 4);
    edx = ( *esi & 0xff) << 8;
    eax = *(esi + 1) & 0xff;
    edi = *Ac - *(A8 + 4);
    edx = edx | eax;
    esi = esi + 2;
    if(edi < 0) {
        edi = 0;
    }
    eax = L0044BE90( *(A8 + 0x74), esi, edx, edi);
    esp = ebp - 0xc;
}

/*	Procedure: 0x004577A3 - 0x004577AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004577A3()
{



}

/*	Procedure: 0x0045791C - 0x00457947
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L0045791C(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != 1885096884) {
        eax = L00429610(65561);
    }
    *(A8 + 0x7c) = 0;
}

/*	Procedure: 0x00457948 - 0x0045798F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L00457948(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != 1885096884) {
        L00429610(65561);
    }
    L0042F720();
    *(A8 + 0x7a) = ax;
    L0042F5F0(2);
    return L004579D0(A8, Ac);
}

/*	Procedure: 0x00457990 - 0x004579C9
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 */

L00457990(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != 1885096884) {
        L00429610(65561);
    }
    L0042F5F0( *(A8 + 0x7a) & 65535);
    return L004579D0(A8, Ac);
}

/*	Procedure: 0x004579CA - 0x004579CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004579CA()
{



}

/*	Procedure: 0x004579D0 - 0x00457AD3
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00457948()
 *		L00457990()
 */

L004579D0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x14;
    if(A8 == 0 || *A8 != 1885096884) {
        eax = L00429610(65561);
    }
    if(*(A8 + 0x7c) != 0) {
        ecx = ebp - 0x20;
        *(ebp - 0x10) = L00457710(A8, Ac + 0x10, ecx);
        eax = *(A8 + 0x50);
        if(eax != 0) {
            esi = *(ebp - 0x20);
            ecx = *(A8 + 0x24);
            if(esi >= ecx) {
                esi = ecx - 1;
            }
            if(eax > 1) {
                edi = esi;
                esi = esi + 1;
                *(ebp - 0x18) = 0;
                *(ebp - 0x14) = 0;
            } else {
                eax = *( *(A8 + 0x20) + esi * 4);
                edx = ebp - 0x14;
                ecx = *(eax + 1) & 0xff;
                edx = ( *eax & 0xff) << 8 | ecx;
                L00428030(eax + 2, edx, *(ebp - 0x10), ebp - 0x18, edx);
                *(ebp - 0x14) = *(ebp - 0x14) + *(ebp - 0x18);
                edi = esi;
            }
            ecx = *(A8 + M00000064);
            edx = *(ebp - 0x20);
            eax = *(A8 + 0x68);
            if(edx > ecx || edx == ecx && *(ebp - 0x10) > eax) {
                *(A8 + 0x5c) = ecx;
                *(A8 + 0x60) = *(A8 + 0x68);
                *(ebp - 0x20) = esi;
                *(ebp - 0x10) = *(ebp - 0x14);
            } else {
                *(ebp - 0x10) = *(ebp - 0x18);
                *(ebp - 0x20) = edi;
                *(A8 + 0x5c) = *(A8 + 0x6c);
                *(A8 + 0x60) = *(A8 + 0x70);
            }
        }
        eax = L004574E0(A8, *(A8 + 0x5c), *(A8 + 0x60), *(ebp - 0x20), *(ebp - 0x10));
    }
}

/*	Procedure: 0x00457AD4 - 0x00457ADF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00457AD4()
{



}

/*	Procedure: 0x00457AE0 - 0x00457D71
 *	Argument size: 8
 *	Local size: 28
 *	Save regs size: 12
 *	Called by:
 *		L004223CE()
 */

L00457AE0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = Ac;
    if(A8 == 0 || *A8 != 1885096884) {
        L00429610(65561);
    }
    L00450C40(ebx, 0x63, 0x20);
    if(al != 0) {
        eax = A8;
        ecx = *(eax + 0x2c);
        Vffffffe8 = ecx;
        edx = *(eax + 0x24);
        if(Vffffffe8 >= edx) {
            return;
        }
        ecx = *(A8 + 0x34);
        eax = ecx;
        *(ebp - 0x20) = ecx;
        Vfffffff0 = eax;
        if(eax >= edx) {
            Vfffffff0 = edx;
            Vfffffff0 = Vfffffff0 - 1;
        }
        *(ebp - 0x28) = *(A8 + 0x20);
        ecx = Vffffffe8;
        eax = Vfffffff0;
        edi = 0;
        if(ecx <= eax) {
            Vffffffec = eax;
            Vffffffec = Vffffffec - 8;
            if(eax - ecx + 1 > 8) {
                do {
                    ebx = *( *(ebp - 0x28) + ecx * 4);
                    edx = *(ebx + 1) & 0xff;
                    edi = edi + (( *ebx & 0xff) << 8 | edx);
                    esi = *( *(ebp - 0x28) + ecx * 4 + 4);
                    eax = *(esi + 1) & 0xff;
                    ebx = ( *esi & 0xff) << 8 | eax;
                    esi = *( *(ebp - 0x28) + ecx * 4 + 8);
                    edi = edi + 1 + ebx;
                    ebx = *(esi + 1) & 0xff;
                    edx = *esi & 0xff;
                    esi = *( *(ebp - 0x28) + ecx * 4 + 0xc);
                    edx = edx << 8 | ebx;
                    edi = edi + 1 + edx;
                    edx = *(esi + 1) & 0xff;
                    eax = ( *esi & 0xff) << 8 | edx;
                    edi = edi + 1 + eax;
                    esi = *( *(ebp - 0x28) + ecx * 4 + 0x10);
                    eax = *(esi + 1) & 0xff;
                    ebx = ( *esi & 0xff) << 8 | eax;
                    esi = *( *(ebp - 0x28) + ecx * 4 + 0x14);
                    edi = edi + 1 + ebx;
                    ebx = *(esi + 1) & 0xff;
                    edx = *esi & 0xff;
                    esi = *( *(ebp - 0x28) + ecx * 4 + 0x18);
                    edx = edx << 8 | ebx;
                    edi = edi + 1 + edx;
                    eax = ( *esi & 0xff) << 8;
                    eax = eax | *(esi + 1) & 0xff;
                    edi = edi + 1 + eax;
                    esi = *( *(ebp - 0x28) + ecx * 4 + 0x1c);
                    edi = edi + 1;
                    ebx = ( *esi & 0xff) << 8;
                    eax = *(esi + 1) & 0xff;
                    edi = edi + (ebx | eax);
                    ecx = ecx + 8;
                    edi = edi + 1;
                } while(ecx <= Vffffffec);
            }
            do {
                eax = *(ebp - 0x28);
                esi = *(eax + ecx * 4);
                edx = ( *esi & 0xff) << 8;
                edi = edi + (edx | *(esi + 1) & 0xff);
                ecx = ecx + 1;
                edi = edi + 1;
            } while(ecx <= Vfffffff0);
        }
        if(edi == 0) {
            esp = ebp - 0xc;
            return;
        }
        eax = L0042E310(edi + 4);
        Vffffffec = eax;
        *(ebp - 0x24) = eax;
        esi = *(ebp - 0x24);
        Vffffffe4 = Vffffffe8;
        if(Vffffffe8 <= Vfffffff0) {
            do {
                eax = *(ebp - 0x28);
                edx = *(eax + Vffffffe4 * 4);
                ebx = ( *edx & 0xff) << 8;
                ecx = *(edx + 1) & 0xff;
                eax = *(ebp - 0x20);
                ebx = ebx | ecx;
                edx = edx + 2;
                if(Vffffffe4 == eax) {
                    eax = *(A8 + 0x38);
                    if(eax < ebx) {
                        ebx = eax;
                    }
                    if(ebx == 0) {
                        break;
                    }
                }
                if(Vffffffe4 == Vffffffe8) {
                    ecx = *(A8 + 0x30);
                    if(ecx > ebx) {
                        ecx = ebx;
                    }
                    edx = edx + ecx;
                    ebx = ebx - ecx;
                }
                L004342A0(esi, edx, ebx);
                esi = esi + ebx;
                *esi = 0xa;
                Vffffffe4 = Vffffffe4 + 1;
                esi = esi + 1;
            } while(Vffffffe4 <= Vfffffff0);
        }
        if(*(A8 + 0x38) != 0) {
            esi = esi - 1;
        }
        ebx = esi - Vffffffec;
        if(ebx > edi + 4) {
            L00429610(65546);
        }
        (save)0;
        L0042F3B0(Vffffffec, ebx);
        eax = L0042E3E0(ebp - 0x24);
    } else {
        if(L00450C40(ebx, 0x61, 0x20) != 0) {
            eax = A8;
            eax = L004574E0(eax, 0, 0, *(eax + 0x24), 0);
        }
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x00457D72 - 0x00457D7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00457D72()
{



}

/*	Procedure: 0x00457D8C - 0x00457D9B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00457D8C()
{



    return L00457DB0();
}

/*	Procedure: 0x00457D9C - 0x00457D9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00457D9C()
{



}

/*	Procedure: 0x00457DA0 - 0x00457DAF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00423570()
 */

L00457DA0(A4)
/* unknown */ void  A4;
{



    M00486c88 = A4;
    return M00486c88;
}

/*	Procedure: 0x00457DB0 - 0x00457DBC
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004227D0()
 *		L00457D8C()
 *		L00457DE0()
 */

L00457DB0()
{



    return *L00486c88();
}

/*	Procedure: 0x00457DBD - 0x00457DBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00457DBD()
{



}

/*	Procedure: 0x00457DC0 - 0x00457DCF
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00423570()
 */

L00457DC0(A4)
/* unknown */ void  A4;
{



    M00486c8c = A4;
    return M00486c8c;
}

/*	Procedure: 0x00457DD0 - 0x00457DDC
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004229B0()
 *		L00423190()
 */

L00457DD0()
{



    return *L00486c8c();
}

/*	Procedure: 0x00457DDD - 0x00457DDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00457DDD()
{



}

/*	Procedure: 0x00457DE0 - 0x00457F5F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L00457DE0(A8, Ac, A10)
/* unknown */ void  * A8;
/* unknown */ void  * Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  * ebx;



    eax = A10;
    (save)esi;
    (save)A8;
    *eax = 0;
    if(Ac == 0) {
        esp = ebp - 0xc;
        (restore)A8;
        (restore)esi;
        return 1;
    }
    esi = A8;
    if(IsBadReadPtr(A8, 1) != 0 || IsBadReadPtr(Ac, 1) != 0) {
        L00457DB0();
    }
    eax = Ac;
    if(*eax == 0x50) {
        if(*(eax + 2) == 0x58) {
            ebx = *A8 & 0xff;
            if(bl == 0x50) {
                goto L00457e41;
            }
            if(bl == 0x2a) {
L00457e41:
                esp = ebp - 0xc;
                (restore)A8;
                (restore)esi;
                return 1;
            }
        }
        ebx = Ac;
    }
    ecx = *A8 - 0x21;
    if(ecx <= 9) {
        switch(ecx) {
            case 0:
                goto L00457e69;
            case 1:
                goto L00457f24;
            case 2:
                goto L00457f24;
            case 3:
                goto L00457f24;
            case 4:
                goto L00457f24;
            case 5:
                goto L00457f24;
            case 6:
                goto L00457f24;
            case 7:
                goto L00457f24;
            case 8:
                goto L00457f24;
            case 9:
                goto L00457e69;
        }
L00457e69:
        eax = ebx;
        ecx = *esi & 0xff;
        eax = *eax & 0xff;
        ebx = ebx + 1;
        esi = esi + 1;
        if(cl == al) {
            goto L00457e87;
        }
        esp = ebp - 0xc;
        (restore)A8;
        (restore)esi;
        return 0;
        edx = ebx;
        ecx = *esi & 0xff;
        eax = *edx & 0xff;
        ebx = ebx + 1;
        if(cl != al) {
            goto L00457ed1;
        }
        edx = esi;
        esi = esi + 1;
        if(*edx != 0x21) {
            goto L00457e87;
        }
        ebx = *esi & 0xff;
        ecx = 0;
        if(bl != 0x21) {
L00457eaa:
            eax = bl;
            esi = esi + 1;
            ecx = eax;
            ebx = *esi & 0xff;
            ecx = ecx - 0x30;
            if(bl != 0x21) {
                goto L00457eaa;
            }
        }
        eax = A10;
        *eax = ecx;
        esp = ebp - 0xc;
        (restore)A8;
        (restore)esi;
        return 1;
        ebx = esi;
        esi = esi + 1;
        if(*ebx != 0x21) {
            goto L00457ed1;
        }
L00457edb:
        edx = esi;
        esi = esi + 1;
        if(*edx != 0x21) {
            goto L00457edb;
        }
        if(*esi != 0) {
            goto L00457ef4;
        }
        esp = ebp - 0xc;
        (restore)A8;
        (restore)esi;
        return 0;
        ebx = Ac + 1;
        goto L00457e87;
        ecx = *(ebx + 1);
        eax = *(esi + 1);
        ecx = ecx - 0x41;
        eax = eax - 0x41;
        ecx = !ecx;
        esi = esi + 2;
        ebx = ebx + 2;
        if(!(ecx & eax)) {
            esp = ebp - 0xc;
            (restore)A8;
            (restore)esi;
            return 0;
        }
    }
L00457f24:
    if(( *esi & 0xff) != 0x50 && dl != 0x51) {
        goto L00457f4b;
    }
    if(dl == *ebx) {
        goto L00457f00;
    }
    goto L00457f4b;
    if(al != 0) {
        goto L00457f45;
    }
    esp = ebp - 0xc;
    (restore)A8;
    (restore)esi;
    return 1;
    esi = esi + 1;
    ebx = ebx + 1;
    if(( *esi & 0xff) == *ebx) {
        goto L00457f37;
    }
    esp = ebp - 0xc;
    (restore)A8;
    (restore)esi;
    return 0;
}

/*	Procedure: 0x00457F60 - 0x00457F7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00423570()
 */

L00457F60()
{



    (restore)ecx;
    (restore)eax;
    *eax = ebx;
    *(eax + 4) = esi;
    *(eax + 8) = edi;
    *(eax + 0xc) = esp;
    *(eax + 0x10) = ebp;
    *(eax + 0x14) = ecx;
    (save)0;
    (save)ecx;
    return 0;
}

/*	Procedure: 0x00457F80 - 0x00457F9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042354B()
 */

L00457F80()
{



    (restore)ecx;
    (restore)edx;
    (restore)eax;
    ebx = *edx;
    esi = *(edx + 4);
    edi = *(edx + 8);
    esp = *(edx + 0xc);
    ebp = *(edx + 0x10);
    if(eax == 0) {
    }
    (save)eax + 1;
    (save) *(edx + 0x14);
    return eax + 1;
}

/*	Procedure: 0x00457FA0 - 0x00457FD1
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		__entry_point__()
 */

L00457FA0(A8)
/* unknown */ void  A8;
{



    eax = A8;
    (save)ebx;
    (save)esi;
    if(eax != 0) {
        goto L00457fb3;
    }
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    return;
    ebx = *(eax + 4);
    ebx :: 0;
    if(!(esi = eax + 4)) {
L00457fc0:
        eax = *ebx();
        if(*(esi + 4) != 0) {
            goto L00457fc0;
        }
    }
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00457FE0 - 0x00458021
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 */

L00457FE0()
{
	/* unknown */ void  ebx;



    asm("pushf");
    (restore)eax;
    edx = eax;
    (save)eax ^ 2097152;
    asm("popf");
    asm("pushf");
    (restore)eax;
    eax = eax ^ edx;
    != ? 0x457ff6 : ;
    edx = 0;
    return edx;
    eax = 0;
    asm("cpuid");
    ebx = ebx ^ ecx ^ edx;
    asm("bswap ebx");
    if(ebx != 1197100357) {
        eax = 1;
        asm("cpuid");
    } else {
        eax = -2147483647;
        asm("cpuid");
    }
    edx = edx & -2038398976;
    return edx;
}

/*	Procedure: 0x00458022 - 0x0045802F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00458022()
{



}

/*	Procedure: 0x00458030 - 0x00458212
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004592B0()
 */

L00458030(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ecx = A10;
    esp = esp - 0x24;
    ebx = Ac;
    edx = M00481000;
    if(!(ecx & 2)) {
        eax = *(edx + 0x268);
        ecx = *(edx + 0x270);
        *(ebp - 0x30) = eax;
        edi = *(edx + 0x264);
        *(ebp - 0x14) = edi;
        eax = *(edx + 0x26c);
    } else {
        if(!(ecx & 1)) {
            ecx = *(edx + 0x200);
            if(A14 != 0) {
                *(ebp - 0x30) = *(edx + 0x234);
                edi = *(edx + 0x230);
                *(ebp - 0x14) = edi;
                eax = *(edx + 0x238);
            } else {
                *(ebp - 0x30) = *(edx + 0x218);
                edi = *(edx + 0x214);
                *(ebp - 0x14) = edi;
                eax = *(edx + 0x21c);
            }
        } else {
            ecx = *(edx + 0x200);
            if(A14 != 0) {
                *(ebp - 0x30) = *(edx + 0x228);
                edi = *(edx + 0x224);
                *(ebp - 0x14) = edi;
                eax = *(edx + 0x22c);
            } else {
                *(ebp - 0x30) = *(edx + 0x208);
                edi = *(edx + 0x204);
                *(ebp - 0x14) = edi;
                eax = *(edx + 0x20c);
            }
        }
    }
    *(ebp - 0x18) = eax;
    *(ebp - 0x10) = *ebx;
    *(ebp - 0x28) = *(ebx + 4);
    *(ebp - 0x2c) = *(ebx + 8);
    esi = *(ebx + 0xc);
    L004496A0(A8, ecx);
    L0044A150(A8, ebx, 1);
    L004496A0(A8, *(ebp - 0x30));
    *(ebp - 0x1c) = *(ebp - 0x2c);
    *(ebp - 0x1c) = *(ebp - 0x1c) - 2;
    *(ebp - 0x20) = *(ebp - 0x28);
    *(ebp - 0x20) = *(ebp - 0x20) + 2;
    *(ebp - 0x24) = *(ebp - 0x10);
    *(ebp - 0x24) = *(ebp - 0x24) + 2;
    ebx = esi - 2;
    L0044A090(A8, *(ebp - 0x24), *(ebp - 0x20), *(ebp - 0x1c), ebx);
    esi = *(ebp - 0x28) + 1;
    0;
    *(ebp - 0x10) = *(ebp - 0x10) + 1;
    L00449E20(A8, *(ebp - 0x10), esi, edi);
    L004497A0(A8, *(ebp - 0x24), esi, *(ebp - 0x1c), *(ebp - 0x14));
    L00449E20(A8, *(ebp - 0x1c), esi, *(ebp - 0x30));
    L00449E20(A8, *(ebp - 0x10), ebx, *(ebp - 0x30));
    L004497A0(A8, *(ebp - 0x24), ebx, *(ebp - 0x2c) - 1, *(ebp - 0x18));
    L00449990(A8, *(ebp - 0x10), *(ebp - 0x20), ebx, *(ebp - 0x14));
    return L00449990(A8, *(ebp - 0x1c), *(ebp - 0x20), ebx, *(ebp - 0x18));
}

/*	Procedure: 0x00458213 - 0x0045821F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00458213()
{



}

/*	Procedure: 0x004582BD - 0x0045835C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L004582BD(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = Ac;
    (save)A10;
    (save)esi;
    (save)edi;
    eax = *ecx;
    edx = *(ecx + 4);
    edi = *(ecx + 8) - eax;
    esi = *(ecx + 0xc);
    edi = edi - 7;
    edi :: -2147483648;
    asm("sbb edi,-0x1");
    esi = esi - edx;
    edi = (edi >> 1) + eax;
    esi = esi - 4;
    esi :: -2147483648;
    asm("sbb esi,-0x1");
    esi = (esi >> 1) + edx;
    eax = edi + 5;
    edx = edi + 3;
    L004497A0(A8, edx, esi, eax, A10);
    ecx = edi + 6;
    eax = esi + 1;
    L004497A0(A8, edi + 2, eax, ecx, A10);
    ecx = edi + 7;
    eax = esi + 2;
    L004497A0(A8, edi + 1, eax, ecx, A10);
    ecx = edi + 8;
    eax = L004497A0(A8, edi, esi + 3, ecx, A10);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)A10;
}

/*	Procedure: 0x0045835D - 0x004583FC
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L0045835D(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = Ac;
    (save)A10;
    (save)esi;
    (save)edi;
    eax = *ecx;
    edx = *(ecx + 4);
    edi = *(ecx + 8) - eax;
    esi = *(ecx + 0xc);
    edi = edi - 4;
    edi :: -2147483648;
    asm("sbb edi,-0x1");
    esi = esi - edx;
    edi = (edi >> 1) + eax;
    esi = esi - 7;
    esi :: -2147483648;
    asm("sbb esi,-0x1");
    esi = (esi >> 1) + edx;
    eax = esi + 8;
    edx = edi + 3;
    L00449990(A8, edx, esi, eax, A10);
    ecx = esi + 7;
    eax = esi + 1;
    L00449990(A8, edi + 2, eax, ecx, A10);
    ecx = esi + 6;
    eax = esi + 2;
    L00449990(A8, edi + 1, eax, ecx, A10);
    ecx = esi + 5;
    eax = L00449990(A8, edi, esi + 3, ecx, A10);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)A10;
}

/*	Procedure: 0x004583FD - 0x0045849C
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L004583FD(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = Ac;
    (save)A10;
    (save)esi;
    (save)edi;
    eax = *ecx;
    edx = *(ecx + 4);
    edi = *(ecx + 8) - eax;
    esi = *(ecx + 0xc);
    edi = edi - 4;
    edi :: -2147483648;
    asm("sbb edi,-0x1");
    esi = esi - edx;
    edi = (edi >> 1) + eax;
    esi = esi - 7;
    esi :: -2147483648;
    asm("sbb esi,-0x1");
    esi = (esi >> 1) + edx;
    eax = esi + 8;
    L00449990(A8, edi, esi, eax, A10);
    edx = esi + 7;
    ecx = esi + 1;
    L00449990(A8, edi + 1, ecx, edx, A10);
    edx = esi + 6;
    ecx = esi + 2;
    L00449990(A8, edi + 2, ecx, edx, A10);
    edx = esi + 5;
    ecx = esi + 3;
    eax = L00449990(A8, edi + 3, ecx, edx, A10);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)A10;
}

/*	Procedure: 0x0045849D - 0x0045849F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045849D()
{



}

/*	Procedure: 0x004584A0 - 0x004585C9
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004592B0()
 */

L004584A0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    edx = A10;
    esp = esp - 0x38;
    ecx = M00481000;
    if(!(edx & 2)) {
        *(ebp - 0x38) = *(ecx + 0x264);
        *(ebp - 0x34) = *(ecx + 0x268);
        *(ebp - 0x30) = *(ecx + 0x264);
        *(ebp - 0x2c) = *(ecx + 0x26c);
    } else {
        if(!(edx & 1)) {
            *(ebp - 0x38) = *(ecx + 0x230);
            *(ebp - 0x34) = *(ecx + 0x234);
            *(ebp - 0x30) = *(ecx + 0x230);
            *(ebp - 0x2c) = *(ecx + 0x238);
        } else {
            *(ebp - 0x38) = *(ecx + 0x224);
            *(ebp - 0x34) = *(ecx + 0x228);
            *(ebp - 0x30) = *(ecx + 0x224);
            *(ebp - 0x2c) = *(ecx + 0x22c);
        }
    }
    *(ebp - 0x1c) = 8;
    *(ebp - 0x20) = *(ebp - 0x1c);
    *(ebp - 0x18) = 2;
    *(ebp - 0x14) = 2;
    *(ebp - 0x10) = 4;
    *(ebp - 0xc) = 0;
    edx = A14 != 0 ? 0x486c90 : 0x486ca0;
    *(ebp - 8) = edx;
    *(ebp - 4) = ebp - 0x38;
    ecx = *(Ac + 0xc) + *(Ac + 4);
    edx = *Ac;
    ecx = ecx - 8;
    ecx :: -2147483648;
    asm("sbb ecx,-0x1");
    edx = edx + *(Ac + 8);
    ecx = ecx >> 1;
    edx = edx - 8;
    edx :: -2147483648;
    asm("sbb edx,-0x1");
    *(ebp - 0x28) = edx >> 1;
    *(ebp - 0x24) = ecx;
    ecx = ebp - 0x20;
    (save)0;
    return L0044B0C0(A8, ebp - 0x28, ecx, 0, 8, 8);
}

/*	Procedure: 0x004585CA - 0x0045879D
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L004585CA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A10;
    esp = esp - 0x28;
    edx = M00481000;
    if(!(esi & 2)) {
        eax = *(edx + 0x264);
        edi = *(edx + 0x270);
        *(ebp - 0x24) = eax;
        *(ebp - 0x28) = eax;
        eax = *(edx + 0x26c);
        esi = *(edx + 0x268);
        *(ebp - 0x14) = eax;
        *(ebp - 0x20) = eax;
    } else {
        if(!(esi & 1)) {
            eax = *(edx + 0x250);
            edi = *(edx + 0x200);
            *(ebp - 0x24) = eax;
            *(ebp - 0x28) = *(edx + 0x254);
            eax = *(edx + 0x25c);
            esi = *(edx + 0x258);
            *(ebp - 0x20) = eax;
            eax = *(edx + 0x260);
        } else {
            eax = *(edx + 0x23c);
            edi = *(edx + 0x200);
            *(ebp - 0x24) = eax;
            *(ebp - 0x28) = *(edx + 0x240);
            eax = *(edx + 0x248);
            esi = *(edx + 0x244);
            *(ebp - 0x20) = eax;
            eax = *(edx + 0x24c);
        }
        *(ebp - 0x14) = eax;
    }
    *(ebp - 0x18) = *Ac;
    *(ebp - 0x34) = *(Ac + 4);
    *(ebp - 0x30) = *(Ac + 0xc);
    eax = *(Ac + 8);
    *(ebp - 0x10) = eax;
    ebx = *(ebp - 0x18);
    L004497A0(A8, ebx, *(ebp - 0x34), eax, edi);
    L004497A0(A8, ebx, *(ebp - 0x30) - 1, *(ebp - 0x10), edi);
    L004496A0(A8, esi);
    *(ebp - 0x1c) = *(ebp - 0x30);
    *(ebp - 0x1c) = *(ebp - 0x1c) - 3;
    L0044A090(A8, *(ebp - 0x18) + 3, *(ebp - 0x34) + 3, *(ebp - 0x10), *(ebp - 0x1c));
    eax = *(ebp - 0x34);
    ebx = *(ebp - 0x18) + 1;
    *(ebp - 0x2c) = eax;
    *(ebp - 0x2c) = *(ebp - 0x2c) + 1;
    L004497A0(A8, ebx, *(ebp - 0x2c), *(ebp - 0x10), *(ebp - 0x14));
    esi = *(ebp - 0x18);
    eax = *(ebp - 0x34);
    esi = esi + 2;
    *(ebp - 0x34) = eax;
    *(ebp - 0x34) = *(ebp - 0x34) + 2;
    L004497A0(A8, esi, *(ebp - 0x34), *(ebp - 0x10), *(ebp - 0x20));
    L004497A0(A8, esi, *(ebp - 0x1c), *(ebp - 0x10), *(ebp - 0x28));
    edi = *(ebp - 0x30) - 2;
    L004497A0(A8, ebx, edi, *(ebp - 0x10), *(ebp - 0x24));
    L00449990(A8, ebx, *(ebp - 0x2c), edi, *(ebp - 0x14));
    return L00449990(A8, esi, *(ebp - 0x34), *(ebp - 0x1c), *(ebp - 0x20));
}

/*	Procedure: 0x0045879E - 0x0045896D
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L0045879E(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A10;
    esp = esp - 0x28;
    edx = M00481000;
    if(!(ebx & 2)) {
        eax = *(edx + 0x264);
        esi = *(edx + 0x270);
        *(ebp - 0x1c) = eax;
        *(ebp - 0x30) = eax;
        eax = *(edx + 0x26c);
        ebx = *(edx + 0x268);
        *(ebp - 0x14) = eax;
        *(ebp - 0x18) = eax;
    } else {
        if(!(ebx & 1)) {
            eax = *(edx + 0x250);
            esi = *(edx + 0x200);
            *(ebp - 0x1c) = eax;
            *(ebp - 0x30) = *(edx + 0x254);
            eax = *(edx + 0x25c);
            ebx = *(edx + 0x258);
            *(ebp - 0x18) = eax;
            eax = *(edx + 0x260);
        } else {
            eax = *(edx + 0x23c);
            esi = *(edx + 0x200);
            *(ebp - 0x1c) = eax;
            *(ebp - 0x30) = *(edx + 0x240);
            eax = *(edx + 0x248);
            ebx = *(edx + 0x244);
            *(ebp - 0x18) = eax;
            eax = *(edx + 0x24c);
        }
        *(ebp - 0x14) = eax;
    }
    *(ebp - 0x24) = *Ac;
    *(ebp - 0x28) = *(Ac + 4);
    *(ebp - 0x34) = *(Ac + 8);
    eax = *(Ac + 0xc);
    *(ebp - 0x10) = eax;
    edi = *(ebp - 0x28);
    L00449990(A8, *(ebp - 0x24), edi, eax, esi);
    L00449990(A8, *(ebp - 0x34) - 1, edi, *(ebp - 0x10), esi);
    L004496A0(A8, ebx);
    *(ebp - 0x20) = *(ebp - 0x34);
    *(ebp - 0x20) = *(ebp - 0x20) - 3;
    L0044A090(A8, *(ebp - 0x24) + 3, *(ebp - 0x28) + 3, *(ebp - 0x20), *(ebp - 0x10));
    eax = *(ebp - 0x34);
    edi = *(ebp - 0x28);
    *(ebp - 0x34) = eax;
    eax = *(ebp - 0x24);
    edi = edi + 1;
    *(ebp - 0x34) = *(ebp - 0x34) - 2;
    *(ebp - 0x2c) = eax;
    *(ebp - 0x2c) = *(ebp - 0x2c) + 1;
    L004497A0(A8, *(ebp - 0x2c), edi, *(ebp - 0x34), *(ebp - 0x14));
    ebx = *(ebp - 0x28);
    esi = *(ebp - 0x24);
    ebx = ebx + 2;
    esi = esi + 2;
    L004497A0(A8, esi, ebx, *(ebp - 0x20), *(ebp - 0x18));
    L00449990(A8, *(ebp - 0x2c), edi, *(ebp - 0x10), *(ebp - 0x14));
    L00449990(A8, esi, ebx, *(ebp - 0x10), *(ebp - 0x18));
    L00449990(A8, *(ebp - 0x20), ebx, *(ebp - 0x10), *(ebp - 0x30));
    return L00449990(A8, *(ebp - 0x34), edi, *(ebp - 0x10), *(ebp - 0x1c));
}

/*	Procedure: 0x0045896E - 0x0045896F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045896E()
{



}

/*	Procedure: 0x00458970 - 0x00458EDF
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00458EE0()
 *		L00458FC0()
 *		L004590BA()
 *		L004592B0()
 */

L00458970(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;



    esi = A8;
    (save)edi;
    esp = esp - 0x24;
    if(L0045FC70(esi, Ac, A10) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    *(ebp - 0x28) = *esi;
    *(ebp - 0x2c) = *(esi + 4);
    edi = *(esi + 8);
    edx = *(esi + 0xc);
    eax = edx;
    ecx = edi;
    eax = eax - *(ebp - 0x2c);
    ecx = ecx - *(ebp - 0x28);
    if(ecx > eax) {
        *(A10 + 0x70) = 1;
        esi = *(ebp - 0x2c) + 0x10;
        if(*(ebp - 0x28) > edi || ecx < 0x1f) {
            eax = L00434150(A10, 0x74);
            *(A10 + 0x70) = 1;
            esp = ebp - 0xc;
            (restore)edi;
            return;
        }
        if(ecx < 0x81) {
            *(ebp - 0x24) = *(ebp - 0x28);
            *(ebp - 0x24) = *(ebp - 0x24) + 0xf;
            *(ebp - 0x20) = edi;
            *(ebp - 0x20) = *(ebp - 0x20) - 0xf;
            *(A10 + 0x3c) = 0;
            *(A10 + 0x38) = *(A10 + 0x3c);
            *(A10 + 0x34) = *(A10 + 0x38);
            *(A10 + 0x30) = *(A10 + 0x34);
            *(A10 + 0x2c) = 0;
            *(A10 + 0x28) = *(A10 + 0x2c);
            *(A10 + 0x24) = *(A10 + 0x28);
            *(A10 + 0x20) = *(A10 + 0x24);
        } else {
            eax = *(ebp - 0x28);
            *(ebp - 0x24) = eax;
            eax = *(ebp - 0x24) + 0xf;
            *(ebp - 0x24) = *(ebp - 0x24) + 0x1e;
            edx = edi - 0x1f;
            *(ebp - 0x20) = edi;
            *(ebp - 0x20) = *(ebp - 0x20) - 0x1e;
            *(A10 + 0x30) = eax;
            eax = eax + 0x10;
            ecx = *(ebp - 0x2c);
            *(A10 + 0x34) = ecx;
            *(A10 + 0x38) = eax;
            eax = esi;
            *(A10 + 0x3c) = eax;
            *(A10 + 0x20) = edx;
            *(A10 + 0x24) = ecx;
            *(A10 + 0x28) = edx + 0x10;
            *(A10 + 0x2c) = eax;
        }
        *A10 = *(ebp - 0x28);
        *(A10 + 4) = *(ebp - 0x2c);
        *(A10 + 8) = *(ebp - 0x28) + 0x10;
        *(A10 + 0xc) = esi;
        *(A10 + 0x10) = edi - 0x10;
        *(A10 + 0x14) = *(ebp - 0x2c);
        *(A10 + 0x18) = edi;
        *(A10 + 0x1c) = esi;
        ecx = *(ebp - 0x20) - *(ebp - 0x24);
        if(ecx < 0x22) {
            *(A10 + 0x40) = *(ebp - 0x24);
            *(A10 + 0x44) = *(ebp - 0x2c);
            *(A10 + 0x48) = *(ebp - 0x20);
            *(A10 + 0x4c) = esi;
            *(A10 + 0x5c) = 0;
            *(A10 + 0x58) = *(A10 + 0x5c);
            eax = *(A10 + 0x58);
            *(A10 + 0x54) = eax;
            *(A10 + 0x50) = *(A10 + 0x54);
            *(A10 + 0x6c) = 0;
            *(A10 + 0x68) = *(A10 + 0x6c);
            *(A10 + M00000064) = *(A10 + 0x68);
            *(A10 + 0x60) = *(A10 + M00000064);
        } else {
            eax = Ac;
            edi = *(eax + 0x14);
            edx = *(eax + 0x10);
            if(edx < edi) {
                *(ebp - 0x14) = edi;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = edx;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = ecx;
                *(ebp - 0x10) = 0;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x14);
                asm("fmulp st1");
                *(ebp - 0x14) = st0;
                *(ebp - 0x28) = *(ebp - 0x14);
                eax = *(ebp - 0x10);
                asm("fst dword [ebp-0x1c]");
                (fsave) *(ebp - 0x14);
                asm("fsubp st1");
                *(ebp - 0x18) = ((frestore));
                edi = *(ebp - 0x18);
                if(*(ebp - 0x1c) < 0) {
                    edi = edi + 2147483647;
                    asm("sbb dword [ebp-0x28],+0x0");
                    asm("sbb eax,+0x0");
                } else {
                    *(ebp - 0x28) = *(ebp - 0x28) + (edi :: 0 > 0 & 0xff);
                    asm("adc eax,+0x0");
                }
            } else {
                *(ebp - 0x28) = ecx;
            }
            if(*(ebp - 0x28) < 0x11) {
                *(ebp - 0x28) = 0x11;
            }
            eax = Ac;
            edi = *(eax + 0xc);
            edx = *(eax + 8);
            if(edx < edi) {
                *(ebp - 0x14) = edi;
                edi = edx;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = edi;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = ecx - *(ebp - 0x28);
                *(ebp - 0x10) = 0;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x14);
                asm("fmulp st1");
                *(ebp - 0x14) = st0;
                eax = *(ebp - 0x14);
                edx = *(ebp - 0x10);
                asm("fst dword [ebp-0x1c]");
                (fsave) *(ebp - 0x14);
                asm("fsubp st1");
                *(ebp - 0x18) = ((frestore));
                edi = *(ebp - 0x18);
                if(*(ebp - 0x1c) < 0) {
                    edi = edi + 2147483647;
                    asm("sbb eax,+0x0");
                    asm("sbb edx,+0x0");
                } else {
                    eax = eax + (edi :: 0 > 0 & 0xff);
                    asm("adc edx,+0x0");
                }
            } else {
                eax = ecx - *(ebp - 0x28);
            }
            edx = *(ebp - 0x24) + eax;
            *(A10 + 0x40) = *(ebp - 0x24);
            *(A10 + 0x44) = *(ebp - 0x2c);
            *(A10 + 0x48) = edx + 1;
            *(A10 + 0x4c) = esi;
            ecx = edx + *(ebp - 0x28);
            *(A10 + 0x50) = ecx - 1;
            *(A10 + 0x54) = *(ebp - 0x2c);
            *(A10 + 0x58) = *(ebp - 0x20);
            *(A10 + 0x5c) = esi;
            *(A10 + 0x60) = edx;
            eax = *(ebp - 0x2c);
            *(A10 + M00000064) = eax;
            *(A10 + 0x68) = ecx;
            *(A10 + 0x6c) = esi;
        }
    } else {
        *(A10 + 0x70) = 0;
        esi = *(ebp - 0x28) + 0x10;
        if(*(ebp - 0x2c) > edx || eax < 0x1f) {
            eax = L00434150(A10, 0x74);
            esp = ebp - 0xc;
            (restore)edi;
            return;
        }
        if(eax < 0x81) {
            *(ebp - 0x24) = *(ebp - 0x2c);
            *(ebp - 0x24) = *(ebp - 0x24) + 0xf;
            *(ebp - 0x20) = edx;
            *(ebp - 0x20) = *(ebp - 0x20) - 0xf;
            *(A10 + 0x3c) = 0;
            *(A10 + 0x38) = *(A10 + 0x3c);
            *(A10 + 0x34) = *(A10 + 0x38);
            *(A10 + 0x30) = *(A10 + 0x34);
            *(A10 + 0x2c) = 0;
            *(A10 + 0x28) = *(A10 + 0x2c);
            *(A10 + 0x24) = *(A10 + 0x28);
            *(A10 + 0x20) = *(A10 + 0x24);
        } else {
            eax = *(ebp - 0x2c);
            edi = eax + 0xf;
            ecx = *(ebp - 0x28);
            *(ebp - 0x24) = eax;
            *(ebp - 0x24) = *(ebp - 0x24) + 0x1e;
            eax = esi;
            *(ebp - 0x20) = edx;
            *(ebp - 0x20) = *(ebp - 0x20) - 0x1e;
            *(A10 + 0x30) = ecx;
            *(A10 + 0x34) = edi;
            *(A10 + 0x38) = eax;
            *(A10 + 0x3c) = edi + 0x10;
            edi = edx - 0x1f;
            *(A10 + 0x20) = ecx;
            *(A10 + 0x24) = edi;
            *(A10 + 0x28) = eax;
            *(A10 + 0x2c) = *(A10 + 0x24) + 0x10;
        }
        *A10 = *(ebp - 0x28);
        *(A10 + 4) = *(ebp - 0x2c);
        *(A10 + 8) = esi;
        *(A10 + 0xc) = *(ebp - 0x2c) + 0x10;
        *(A10 + 0x10) = *(ebp - 0x28);
        *(A10 + 0x14) = edx - 0x10;
        *(A10 + 0x18) = esi;
        *(A10 + 0x1c) = edx;
        ecx = *(ebp - 0x20) - *(ebp - 0x24);
        if(ecx < 0x22) {
            *(A10 + 0x40) = *(ebp - 0x28);
            *(A10 + 0x44) = *(ebp - 0x24);
            *(A10 + 0x48) = esi;
            *(A10 + 0x4c) = *(ebp - 0x20);
            *(A10 + 0x5c) = 0;
            *(A10 + 0x58) = *(A10 + 0x5c);
            eax = *(A10 + 0x58);
            *(A10 + 0x54) = eax;
            *(A10 + 0x50) = *(A10 + 0x54);
            *(A10 + 0x6c) = 0;
            *(A10 + 0x68) = *(A10 + 0x6c);
            *(A10 + M00000064) = *(A10 + 0x68);
            *(A10 + 0x60) = *(A10 + M00000064);
        } else {
            eax = Ac;
            edi = *(eax + 0x14);
            edx = *(eax + 0x10);
            if(edx < edi) {
                *(ebp - 0x14) = edi;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = edx;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = ecx;
                *(ebp - 0x10) = 0;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x14);
                asm("fmulp st1");
                *(ebp - 0x14) = st0;
                *(ebp - 0x2c) = *(ebp - 0x14);
                eax = *(ebp - 0x10);
                asm("fst dword [ebp-0x1c]");
                (fsave) *(ebp - 0x14);
                asm("fsubp st1");
                *(ebp - 0x18) = ((frestore));
                edi = *(ebp - 0x18);
                if(*(ebp - 0x1c) < 0) {
                    edi = edi + 2147483647;
                    asm("sbb dword [ebp-0x2c],+0x0");
                    asm("sbb eax,+0x0");
                } else {
                    *(ebp - 0x2c) = *(ebp - 0x2c) + (edi :: 0 > 0 & 0xff);
                    asm("adc eax,+0x0");
                }
            } else {
                *(ebp - 0x2c) = ecx;
            }
            if(*(ebp - 0x2c) < 0x11) {
                *(ebp - 0x2c) = 0x11;
            }
            eax = Ac;
            edi = *(eax + 0xc);
            edx = *(eax + 8);
            if(edx < edi) {
                *(ebp - 0x14) = edi;
                edi = edx;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = edi;
                *(ebp - 0x10) = 0;
                (fsave) *(ebp - 0x14);
                *(ebp - 0x14) = ecx - *(ebp - 0x2c);
                *(ebp - 0x10) = 0;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x14);
                asm("fmulp st1");
                *(ebp - 0x14) = st0;
                eax = *(ebp - 0x14);
                edx = *(ebp - 0x10);
                asm("fst dword [ebp-0x1c]");
                (fsave) *(ebp - 0x14);
                asm("fsubp st1");
                *(ebp - 0x18) = ((frestore));
                edi = *(ebp - 0x18);
                if(*(ebp - 0x1c) < 0) {
                    edi = edi + 2147483647;
                    asm("sbb eax,+0x0");
                    asm("sbb edx,+0x0");
                } else {
                    eax = eax + (edi :: 0 > 0 & 0xff);
                    asm("adc edx,+0x0");
                }
            } else {
                eax = ecx - *(ebp - 0x2c);
            }
            edx = *(ebp - 0x24) + eax;
            *(A10 + 0x40) = *(ebp - 0x28);
            *(A10 + 0x44) = *(ebp - 0x24);
            *(A10 + 0x48) = esi;
            *(A10 + 0x4c) = edx + 1;
            *(A10 + 0x50) = *(ebp - 0x28);
            ecx = edx + *(ebp - 0x2c);
            *(A10 + 0x54) = ecx - 1;
            *(A10 + 0x58) = esi;
            *(A10 + 0x5c) = *(ebp - 0x20);
            eax = *(ebp - 0x28);
            *(A10 + 0x60) = eax;
            *(A10 + M00000064) = edx;
            *(A10 + 0x68) = esi;
            *(A10 + 0x6c) = ecx;
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00458EE0 - 0x00458FBD
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 */

L00458EE0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    eax = ebp - 0x80;
    (save)edi;
    esp = esp - 0x74;
    L00458970(A8, Ac, eax);
    if(*(ebp - 0x10) != 0) {
        if(A14 != 0) {
            ecx = *A10;
            if(ecx >= *(ebp - 0x20)) {
                if(ecx >= *(ebp - 0x18)) {
                    goto L00458f21;
                }
                *A14 = *(Ac + 8);
            } else {
L00458f21:
                edi = *(ebp - 0x18) - *(ebp - 0x20);
                edi :: -2147483648;
                asm("sbb edi,-0x1");
                edi = edi >> 1;
                *A14 = L00458FC0(A8, Ac, A10, edi);
                esp = ebp - 0xc;
                eax = edi;
                (restore)edi;
                return;
            }
        }
        eax = *A10 - *(ebp - 0x20);
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    if(A14 != 0) {
        edx = *(A10 + 4);
        if(edx >= *(ebp - 0x1c) && edx < *(ebp - 0x14)) {
            *A14 = *(Ac + 8);
        } else {
            edi = *(ebp - 0x14) - *(ebp - 0x1c);
            edi :: -2147483648;
            asm("sbb edi,-0x1");
            edi = edi >> 1;
            *A14 = L00458FC0(A8, Ac, A10, edi);
            esp = ebp - 0xc;
            eax = edi;
            (restore)edi;
            return;
        }
    }
    eax = *(A10 + 4) - *(ebp - 0x1c);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00458FBE - 0x00458FBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00458FBE()
{



}

/*	Procedure: 0x00458FC0 - 0x004590B9
 *	Argument size: 16
 *	Local size: 148
 *	Save regs size: 12
 *	Called by:
 *		L00452BD0()
 *		L00458EE0()
 */

L00458FC0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vffffff70;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff80;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    esi = A10;
    L00458970(A8, Ac, & Vffffff80);
    if(Vfffffff0 != 0) {
        eax = Vffffffd8 - Vffffffe8 - Vffffffe0;
        ecx = Vffffffc0;
        edx = *esi;
    } else {
        eax = Vffffffdc - Vffffffec - Vffffffe4;
        ecx = Vffffffc4;
        edx = *(esi + 4);
    }
    edx = edx - A14;
    if(edx < ecx) {
        edx = ecx;
    }
    if(edx > eax) {
        edx = eax;
    }
    Vffffff70 = eax - ecx;
    (fsave)Vffffff70;
    Vffffff70 = edx - ecx;
    Vffffff74 = *(Ac + 0xc);
    (fsave)Vffffff70;
    Vffffff78 = 0;
    asm("fdivrp st1");
    (fsave)Vffffff74;
    asm("fmulp st1");
    (fsave)((frestore)) + M00486cb0;
    Vffffff74 = st0;
    asm("fst dword [ebp+0xffffff64]");
    (fsave)Vffffff74;
    asm("fsubp st1");
    *(ebp + -152) = ((frestore));
    eax = Vffffff74;
    esi = Vffffff78;
    edx = *(ebp + -152);
    if(*(ebp + -156) < 0) {
        edx = edx + 2147483647;
        asm("sbb eax,+0x0");
        asm("sbb esi,+0x0");
    } else {
        eax = eax + (edx :: 0 > 0 & 0xff);
        asm("adc esi,+0x0");
    }
}

/*	Procedure: 0x004590BA - 0x004592A9
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 */

L004590BA(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = ebp - 0x80;
    (save)esi;
    (save)edi;
    esp = esp - 0x7c;
    L00458970(A8, Ac, ecx);
    *(ebp + -132) = *(ebp - 0x78);
    eax = *(ebp - 0x80);
    dl = 0;
    if(*(ebp + -132) > eax) {
        edi = *(ebp - 0x74);
        if(edi > *(ebp - 0x7c)) {
            edx = 1 & 0xff;
        }
    }
    if(dl != 0) {
        *(ebp + -133) = 0;
        esi = *A10;
        cl = 0;
        dl = 0;
        if(esi >= *(ebp - 0x80)) {
            edi = *(A10 + 4);
            if(edi >= *(ebp - 0x7c)) {
                edx = 1 & 0xff;
            }
        }
        if(dl != 0 && esi < *(ebp + -132)) {
            cl = 1;
        }
        if(cl != 0) {
            edi = *(A10 + 4);
            if(edi < *(ebp - 0x74)) {
                *(ebp + -133) = 1;
            }
        }
        if(*(ebp + -133) != 0) {
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            return 1;
        }
        if(esi >= *(ebp - 0x70)) {
            ecx = *(A10 + 4);
            if(ecx >= *(ebp - 0x6c) && esi < *(ebp - 0x68)) {
                edi = *(A10 + 4);
                if(edi < *(ebp - M00000064)) {
                    esp = ebp - 0xc;
                    (restore)edi;
                    (restore)esi;
                    return 2;
                }
            }
        }
        if(esi >= *(ebp - 0x60)) {
            ecx = *(A10 + 4);
            if(ecx >= *(ebp - 0x5c) && esi < *(ebp - 0x58)) {
                edi = *(A10 + 4);
                if(edi < *(ebp - 0x54)) {
                    esp = ebp - 0xc;
                    (restore)edi;
                    (restore)esi;
                    return 3;
                }
            }
        }
        if(esi >= *(ebp - 0x50)) {
            ecx = *(A10 + 4);
            if(ecx >= *(ebp - 0x4c) && esi < *(ebp - 0x48)) {
                edi = *(A10 + 4);
                if(edi < *(ebp - 0x44)) {
                    esp = ebp - 0xc;
                    (restore)edi;
                    (restore)esi;
                    return 4;
                }
            }
        }
        eax = *(ebp - 0x20);
        edx = *(ebp - 0x18);
        cl = 0;
        *(ebp + -132) = eax;
        if(edx > eax) {
            edi = *(ebp - 0x14);
            if(edi > *(ebp - 0x1c)) {
                ecx = 1 & 0xff;
            }
        }
        if(cl != 0) {
            if(esi >= *(ebp - 0x40)) {
                ecx = *(A10 + 4);
                if(ecx >= *(ebp - 0x3c) && esi < *(ebp - 0x38)) {
                    ecx = *(A10 + 4);
                    if(ecx < *(ebp - 0x34)) {
                        esp = ebp - 0xc;
                        (restore)edi;
                        (restore)esi;
                        return 5;
                    }
                }
            }
            if(esi >= *(ebp - 0x30)) {
                ecx = *(A10 + 4);
                if(ecx >= *(ebp - 0x2c) && esi < *(ebp - 0x28)) {
                    ecx = *(A10 + 4);
                    if(ecx < *(ebp - 0x24)) {
                        esp = ebp - 0xc;
                        (restore)edi;
                        (restore)esi;
                        return 6;
                    }
                }
            }
            if(esi >= *(ebp + -132)) {
                ecx = *(A10 + 4);
                if(ecx >= *(ebp - 0x1c) && esi < edx) {
                    ecx = *(A10 + 4);
                    if(ecx < *(ebp - 0x14)) {
                        esp = ebp - 0xc;
                        (restore)edi;
                        (restore)esi;
                        return 7;
                    }
                }
            }
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return 0;
}

/*	Procedure: 0x004592AA - 0x004592AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004592AA()
{



}

/*	Procedure: 0x004592B0 - 0x004595CA
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00423E40()
 *		L00451C10()
 */

L004592B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = Ac;
    (save)edi;
    esp = esp - 0x88;
    esi = A10;
    if(L0045EF60(A8, ebx, esi) != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    L00458970(ebx, esi, ebp + -136);
    *(ebp + -140) = *(ebp - 0x18) & 0xff;
    *(ebp - 0x10) = *esi;
    *(ebp - 0x14) = *(esi + 4);
    edx = *(ebp - 0x80);
    if(edx > *(ebp + -136)) {
        eax = *(ebp - 0x7c);
        if(eax > *(ebp + -132)) {
            goto L00459333;
        }
    }
    eax = L00458030(A8, ebx, *(ebp - 0x10), 0);
    goto L004595c0;
L00459333:
    edi = M00481000;
    *(ebp + -144) = *(edi + 0x220);
    eax = !( *(ebp - 0x10) & 2) ? *(edi + 0x274) : !( *(ebp - 0x10) & 1) ? *(ebp + -144) : *(edi + 0x210);
    ecx = *(ebp - 0x40);
    *(ebp + -148) = eax;
    if(ecx > *(ebp - 0x48)) {
        eax = *(ebp - 0x3c);
        if(eax > *(ebp - 0x44)) {
            esi = *(ebp - 0x14) == 5 ? 1 : *(ebp - 0x10);
            edi = *(ebp + -140) != 0 ? 0x4585d0 : 0x4587a0;
            *edi(A8, ebp - 0x48, esi);
        }
    }
    ebx = *(ebp - 0x30);
    if(ebx > *(ebp - 0x38)) {
        edx = *(ebp - 0x2c);
        if(edx > *(ebp - 0x34)) {
            esi = *(ebp - 0x14) == 6 ? 1 : *(ebp - 0x10);
            edi = *(ebp + -140) != 0 ? 0x4585d0 : 0x4587a0;
            *edi(A8, ebp - 0x38, esi);
        }
    }
    if(*(ebp - 0x14) == 1) {
        ecx = 1;
        esi = *(ebp + -144);
    } else {
        ecx = *(ebp - 0x10);
        esi = *(ebp + -148);
    }
    L00458030(A8, ebp + -136, ecx, 0);
    ebx = *(ebp + -140) != 0 ? 0x458360 : 0x4582c0;
    *ebx(A8, ebp + -136, esi);
    if(*(ebp - 0x14) == 2) {
        eax = 1;
        esi = *(ebp + -144);
    } else {
        eax = *(ebp - 0x10);
        esi = *(ebp + -148);
    }
    edi = ebp - 0x78;
    L00458030(A8, edi, eax, 0);
    ebx = *(ebp + -140) != 0 ? 0x458400 : 0x458220;
    eax = *ebx(A8, edi, esi);
    ecx = *(ebp - 0x60);
    if(ecx > *(ebp - 0x68)) {
        eax = *(ebp - 0x5c);
        if(eax > *(ebp - M00000064)) {
            if(*(ebp - 0x14) == 3) {
                ebx = 1;
                esi = *(ebp + -144);
            } else {
                ebx = *(ebp - 0x10);
                esi = *(ebp + -148);
            }
            edi = ebp - 0x68;
            L00458030(A8, edi, ebx, 0);
            ebx = *(ebp + -140) != 0 ? 0x458360 : 0x4582c0;
            eax = *ebx(A8, edi, esi);
        }
    }
    ecx = *(ebp - 0x50);
    if(ecx > *(ebp - 0x58)) {
        eax = *(ebp - 0x4c);
        if(eax > *(ebp - 0x54)) {
            if(*(ebp - 0x14) == 4) {
                esi = 1;
            } else {
                eax = *(ebp + -148);
                esi = *(ebp - 0x10);
                *(ebp + -144) = eax;
            }
            ebx = ebp - 0x58;
            L00458030(A8, ebx, esi, 0);
            edi = *(ebp + -140) != 0 ? 0x458400 : 0x458220;
            eax = *edi(A8, ebx, *(ebp + -144));
        }
    }
    ecx = *(ebp - 0x20);
    if(ecx > *(ebp - 0x28)) {
        eax = *(ebp - 0x1c);
        if(eax > *(ebp - 0x24)) {
            if(*(ebp - 0x14) == 7) {
                *(ebp - 0x10) = 1;
            }
            L00458030(A8, ebp - 0x28, *(ebp - 0x10), 1);
            L004584A0(A8, esi, *(ebp - 0x10), *(ebp + -140) & 0xff);
L004595c0:
        }
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x004595CB - 0x004595CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004595CB()
{



}

/*	Procedure: 0x004595D0 - 0x00459EBF
 *	Argument size: 604
 *	Local size: 584
 *	Save regs size: 16
 *	Called by:
 *		L00459F70()
 */

L004595D0(A25c, A260, A264, A268, A26c, A45c, A468, A46c, A470, A474, A48c, A490, A494, A498, A49c, A4b4)
/* unknown */ void  A25c;
/* unknown */ void  A260;
/* unknown */ void  A264;
/* unknown */ void  A268;
/* unknown */ void  A26c;
/* unknown */ void  A45c;
/* unknown */ void  A468;
/* unknown */ void  A46c;
/* unknown */ void  A470;
/* unknown */ void  A474;
/* unknown */ void  A48c;
/* unknown */ void  A490;
/* unknown */ void  A494;
/* unknown */ void  A498;
/* unknown */ void  A49c;
/* unknown */ void  A4b4;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  V204;
	/* unknown */ void  V208;
	/* unknown */ void  V20c;
	/* unknown */ void  V210;
	/* unknown */ void  V214;
	/* unknown */ void  V218;
	/* unknown */ void  V21c;
	/* unknown */ void  V220;
	/* unknown */ void  V224;
	/* unknown */ void  V228;
	/* unknown */ void  V22a;
	/* unknown */ void  V22b;
	/* unknown */ void  V22c;
	/* unknown */ void  V22d;
	/* unknown */ void  V22e;
	/* unknown */ void  V22f;
	/* unknown */ void  V230;
	/* unknown */ void  V234;
	/* unknown */ void  V238;
	/* unknown */ void  V23c;
	/* unknown */ void  V240;
	/* unknown */ void  V244;



    ecx = A260;
    if(A25c == 0 || A26c == 0) {
        return 0;
    }
    edi = & V220;
    esi = A268;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    *edi = 0;
    edi = edi + 4;
    edi = ecx;
    V23c = ecx;
    V23c = V23c + A264;
    V238 = 0;
    if(edi < V23c) {
        V208 = & V204;
        edx = *edi & 0xff;
        edi = edi + 1;
        if(dl != 0) {
            ecx = dl & 0xff;
            if(ecx != 0x25) {
                goto L00459db6;
            }
            V240 = V220;
            V244 = V224;
            V234 = V228 & 0xff;
            V20c = V22a & 0xff;
            V204 = V22b & 0xff;
            V210 = V22c & 0xff;
            *esp = V22d & 0xff;
            V218 = V22e & 0xff;
            V214 = V22f & 0xff;
            edi :: V23c;
            if(V21c = V230 & 0xff) {
                goto L00459766;
            }
L00459707:
            edx = *edi & 0xff;
            edi = edi + 1;
            if(dl != 0) {
                ecx = dl & 0xff;
                if(ecx == 0x2d) {
                    V20c = 1;
                } else {
                    if(ecx == 0x2b) {
                        V204 = 1;
                    } else {
                        if(ecx == 0x20) {
                            V234 = 0x20;
                        } else {
                            if(ecx == 0x23) {
                                V210 = 1;
                            } else {
                                if(ecx != 0x30) {
                                    goto L00459766;
                                }
                                *esp = 1;
                            }
                        }
                    }
                }
                if(edi < V23c) {
                    goto L00459707;
                }
L00459766:
                if(ecx != 0x2a) {
                    goto L004597f3;
                }
                A25c = A25c + 4;
                ecx = *(A25c - 4);
                V240 = ecx;
                if(ecx < 0) {
                    V240 = ~V240;
                    V20c = 1;
                    eax = V240;
                }
                if(edi < V23c) {
                    edx = *edi & 0xff;
                    edi = edi + 1;
                    if(dl != 0) {
                        goto L00459800;
L004597c0:
                        edi :: A494;
                        if(!(A498 = A498 + A498 * 4 + A498 + A498 * 4 + eax - 0x30)) {
                            edx = *edi & 0xff;
                            edi = edi + 1;
                            if(dl != 0) {
L004597f3:
                                eax = dl & 0xff;
                                if(eax >= 0x30 && eax <= 0x39) {
                                    goto L004597c0;
                                }
L00459800:
                                if((dl & 0xff) != 0x2e) {
                                    goto L004598c5;
                                }
                                if(edi < V23c) {
                                    edx = *edi & 0xff;
                                    edi = edi + 1;
                                    if(dl != 0) {
                                        if((dl & 0xff) != 0x2a) {
                                            goto L004598a6;
                                        }
                                        A25c = A25c + 4;
                                        V244 = *(A25c - 4);
                                        if(edi < V23c) {
                                            edx = *edi & 0xff;
                                            edi = edi + 1;
                                            if(dl != 0) {
                                                goto L004598b3;
L00459865:
                                                ecx = V244;
                                                V244 = ecx + ecx * 4 + ecx + ecx * 4;
                                                V244 = V244 + ebx - 0x30;
                                                eax = V244;
                                                if(edi < V23c) {
                                                    edx = *edi & 0xff;
                                                    edi = edi + 1;
                                                    if(dl != 0) {
L004598a6:
                                                        ebx = dl & 0xff;
                                                        if(ebx >= 0x30 && ebx <= 0x39) {
                                                            goto L00459865;
                                                        }
L004598b3:
                                                        if(V244 >= 0) {
                                                            V218 = 1;
                                                        }
L004598c5:
                                                        ebx = V208;
                                                        if(V20c != 0) {
                                                            *esp = 0;
                                                        }
L004598e0:
                                                        ecx = (dl & 0xff) - 0x25;
                                                        if(ecx <= 0x53) {
                                                            switch(ecx) {
                                                                case 0:
                                                                    goto L00459db6;
                                                                case 1:
                                                                    goto L00459eab;
                                                                case 2:
                                                                    goto L00459eab;
                                                                case 3:
                                                                    goto L00459eab;
                                                                case 4:
                                                                    goto L00459eab;
                                                                case 5:
                                                                    goto L00459eab;
                                                                case 6:
                                                                    goto L00459eab;
                                                                case 7:
                                                                    goto L00459eab;
                                                                case 8:
                                                                    goto L00459eab;
                                                                case 9:
                                                                    goto L00459eab;
                                                                case 0xa:
                                                                    goto L00459eab;
                                                                case 0xb:
                                                                    goto L00459eab;
                                                                case 0xc:
                                                                    goto L00459eab;
                                                                case 0xd:
                                                                    goto L00459eab;
                                                                case 0xe:
                                                                    goto L00459eab;
                                                                case 0xf:
                                                                    goto L00459eab;
                                                                case 0x10:
                                                                    goto L00459eab;
                                                                case 0x11:
                                                                    goto L00459eab;
                                                                case 0x12:
                                                                    goto L00459eab;
                                                                case 0x13:
                                                                    goto L00459eab;
                                                                case 0x14:
                                                                    goto L00459eab;
                                                                case 0x15:
                                                                    goto L00459eab;
                                                                case 0x16:
                                                                    goto L00459eab;
                                                                case 0x17:
                                                                    goto L00459eab;
                                                                case 0x18:
                                                                    goto L00459eab;
                                                                case 0x19:
                                                                    goto L00459eab;
                                                                case 0x1a:
                                                                    goto L00459eab;
                                                                case 0x1b:
                                                                    goto L00459eab;
                                                                case 0x1c:
                                                                    goto L00459eab;
                                                                case 0x1d:
                                                                    goto L00459eab;
                                                                case 0x1e:
                                                                    goto L00459eab;
                                                                case 0x1f:
                                                                    goto L00459eab;
                                                                case 0x20:
                                                                    goto L00459eab;
                                                                case 0x21:
                                                                    goto L00459eab;
                                                                case 0x22:
                                                                    goto L00459eab;
                                                                case 0x23:
                                                                    goto L00459eab;
                                                                case 0x24:
                                                                    goto L00459eab;
                                                                case 0x25:
                                                                    goto L00459eab;
                                                                case 0x26:
                                                                    goto L00459eab;
                                                                case 0x27:
                                                                    goto L00459940;
                                                                case 0x28:
                                                                    goto L00459eab;
                                                                case 0x29:
                                                                    goto L00459eab;
                                                                case 0x2a:
                                                                    goto L00459eab;
                                                                case 0x2b:
                                                                    goto L00459eab;
                                                                case 0x2c:
                                                                    goto L00459eab;
                                                                case 0x2d:
                                                                    goto L00459eab;
                                                                case 0x2e:
                                                                    goto L00459eab;
                                                                case 0x2f:
                                                                    goto L00459eab;
                                                                case 0x30:
                                                                    goto L00459eab;
                                                                case 0x31:
                                                                    goto L00459eab;
                                                                case 0x32:
                                                                    goto L00459eab;
                                                                case 0x33:
L00459b7c:
                                                                    A48c = "0123456789ABCDEF";
                                                                    goto L00459b94;
                                                                case 0x34:
                                                                    goto L00459eab;
                                                                case 0x35:
                                                                    goto L00459eab;
                                                                case 0x36:
                                                                    goto L00459eab;
                                                                case 0x37:
                                                                    goto L00459eab;
                                                                case 0x38:
                                                                    goto L00459eab;
                                                                case 0x39:
                                                                    goto L00459eab;
                                                                case 0x3a:
                                                                    goto L00459eab;
                                                                case 0x3b:
                                                                    goto L00459eab;
                                                                case 0x3c:
                                                                    goto L00459eab;
                                                                case 0x3d:
                                                                    goto L00459eab;
                                                                case 0x3e:
                                                                    A4b4 = A4b4 + 4;
                                                                    ebx = ebx - 1;
                                                                    edx = *(A4b4 - 4) & 0xff;
                                                                    *ebx = dl;
                                                                    *esp = 1;
                                                                    goto L00459de0;
                                                                case 0x3f:
                                                                    goto L0045995d;
                                                                case 0x40:
                                                                    goto L00459eab;
                                                                case 0x41:
                                                                    goto L00459eab;
                                                                case 0x42:
                                                                    goto L00459eab;
                                                                case 0x43:
                                                                    goto L004598f6;
                                                                case 0x44:
                                                                    goto L0045995d;
                                                                case 0x45:
                                                                    goto L00459eab;
                                                                case 0x46:
                                                                    goto L00459eab;
                                                                case 0x47:
                                                                    goto L0045991b;
                                                                case 0x48:
                                                                    goto L00459eab;
                                                                case 0x49:
                                                                    goto L00459d62;
                                                                case 0x4a:
                                                                    goto L00459aa9;
                                                                case 0x4b:
                                                                    A474 = 1;
                                                                    A470 = A474;
                                                                    A49c = 8;
                                                                    goto L00459b7c;
                                                                case 0x4c:
                                                                    goto L00459eab;
                                                                case 0x4d:
                                                                    goto L00459eab;
                                                                case 0x4e:
                                                                    goto L00459c9c;
                                                                case 0x4f:
                                                                    goto L00459eab;
                                                                case 0x50:
                                                                    goto L004599aa;
                                                                case 0x51:
                                                                    goto L00459eab;
                                                                case 0x52:
                                                                    goto L00459eab;
                                                                case 0x53:
                                                                    goto L00459b89;
                                                            }
L004598f6:
                                                            A46c = 1;
                                                            if(edi < A494) {
                                                                edx = *edi & 0xff;
                                                                edi = edi + 1;
                                                                if(dl != 0) {
                                                                    goto L004598e0;
L0045991b:
                                                                    A474 = 1;
                                                                    if(edi < A494) {
                                                                        edx = *edi & 0xff;
                                                                        edi = edi + 1;
                                                                        if(dl != 0) {
                                                                            goto L004598e0;
L00459940:
                                                                            if(edi < A494) {
                                                                                edx = *edi & 0xff;
                                                                                edi = edi + 1;
                                                                                if(dl != 0) {
                                                                                    goto L004598e0;
L0045995d:
                                                                                    if(A474 != 0) {
                                                                                    }
                                                                                    A4b4 = A4b4 + 4;
                                                                                    ebp = *(A4b4 - 4);
                                                                                    if(A46c == 0) {
                                                                                        goto L00459986;
                                                                                    }
                                                                                    ebp = bp;
                                                                                    if(ebp >= 0) {
                                                                                        goto L00459996;
                                                                                    }
                                                                                    ebp = ~ebp;
                                                                                    A48c = 0x2d;
                                                                                    goto L004599dd;
                                                                                    if(A45c == 0) {
                                                                                        goto L004599dd;
                                                                                    }
                                                                                    A48c = 0x2b;
                                                                                    goto L004599dd;
L004599aa:
                                                                                    if(A474 != 0) {
                                                                                    }
                                                                                    A4b4 = A4b4 + 4;
                                                                                    ebp = *(A4b4 - 4);
                                                                                    if(A46c == 0) {
                                                                                        goto L004599d5;
                                                                                    }
                                                                                    ebp = bp & 65535;
                                                                                    A48c = 0;
                                                                                    if(A470 != 0) {
                                                                                        goto L00459a22;
                                                                                    }
                                                                                    if(*esp == 0) {
                                                                                        goto L00459a0d;
                                                                                    }
                                                                                    A49c = A498;
                                                                                    if(A48c == 0) {
                                                                                        goto L00459a0d;
                                                                                    }
                                                                                    A49c = A49c - 1;
                                                                                    if(A49c >= 1) {
                                                                                        goto L00459a22;
                                                                                    }
                                                                                    A49c = 1;
                                                                                    *esp = 0;
                                                                                    if(ebp == 0) {
                                                                                        goto L00459a5d;
                                                                                    }
L00459a30:
                                                                                    ecx = ebp;
                                                                                    ebx = ebx - 1;
                                                                                    eax = -858993459;
                                                                                    asm("mul ecx");
                                                                                    eax = -858993459;
                                                                                    edx = (edx >> 3) * 0xa;
                                                                                    ecx = ecx - edx;
                                                                                    asm("mul ebp");
                                                                                    cl = cl + 0x30;
                                                                                    *ebx = cl;
                                                                                    *esp = *esp + 1;
                                                                                    if(edx >> 3 != 0) {
                                                                                        goto L00459a30;
                                                                                    }
                                                                                    if(*esp < A49c) {
L00459a70:
                                                                                        ebx = ebx - 1;
                                                                                        *ebx = 0x30;
                                                                                        *esp = *esp + 1;
                                                                                        if(*esp < A49c) {
                                                                                            goto L00459a70;
                                                                                        }
                                                                                    }
                                                                                    if(A48c == 0) {
                                                                                        goto L00459de0;
                                                                                    }
                                                                                    ebx = ebx - 1;
                                                                                    *ebx = A48c;
                                                                                    *esp = *esp + 1;
                                                                                    goto L00459de0;
L00459aa9:
                                                                                    if(A474 != 0) {
                                                                                    }
                                                                                    A4b4 = A4b4 + 4;
                                                                                    ecx = *(A4b4 - 4);
                                                                                    if(A46c == 0) {
                                                                                        goto L00459ad2;
                                                                                    }
                                                                                    ecx = cx & 65535;
                                                                                    if(A470 != 0) {
                                                                                        goto L00459b05;
                                                                                    }
                                                                                    if(*esp == 0) {
                                                                                        goto L00459af0;
                                                                                    }
                                                                                    A49c = A498;
                                                                                    if(A49c >= 1) {
                                                                                        goto L00459b05;
                                                                                    }
                                                                                    A49c = 1;
                                                                                    *esp = 0;
                                                                                    if(ecx != 0) {
                                                                                        al = (cl & 7) + 0x30;
                                                                                        ebx = ebx - 1;
                                                                                        *ebx = al;
                                                                                        *esp = *esp + 1;
                                                                                        if(ecx >> 3 != 0) {
                                                                                            goto L00459b10;
                                                                                        }
                                                                                    }
                                                                                    if(A468 == 0 || *esp == 0 || *ebx == 0x30) {
                                                                                        goto L00459b4a;
                                                                                    }
L00459b40:
                                                                                    ebx = ebx - 1;
                                                                                    *ebx = 0x30;
                                                                                    *esp = *esp + 1;
                                                                                    if(*esp < A49c) {
                                                                                        goto L00459b40;
                                                                                    }
                                                                                    goto L00459de0;
L00459b89:
                                                                                    A48c = "0123456789abcdef";
                                                                                    if(A474 != 0) {
                                                                                    }
                                                                                    A4b4 = A4b4 + 4;
                                                                                    ebp = *(A4b4 - 4);
                                                                                    if(A46c == 0) {
                                                                                        goto L00459bbd;
                                                                                    }
                                                                                    ebp = bp & 65535;
                                                                                    if(A470 != 0) {
                                                                                        goto L00459c02;
                                                                                    }
                                                                                    if(*esp == 0) {
                                                                                        goto L00459bed;
                                                                                    }
                                                                                    A49c = A498;
                                                                                    if(A468 == 0) {
                                                                                        goto L00459bed;
                                                                                    }
                                                                                    A49c = A49c - 2;
                                                                                    if(A49c >= 1) {
                                                                                        goto L00459c02;
                                                                                    }
                                                                                    A49c = 1;
                                                                                    *esp = 0;
                                                                                    if(ebp == 0) {
                                                                                        goto L00459c30;
                                                                                    }
                                                                                    ecx = ebp & 0xf;
                                                                                    ebx = ebx - 1;
                                                                                    ecx = *(A48c + ecx) & 0xff;
                                                                                    *ebx = cl;
                                                                                    *esp = *esp + 1;
                                                                                    if(ebp >> 4 != 0) {
                                                                                        goto L00459c10;
                                                                                    }
                                                                                    if(*esp < A49c) {
L00459c40:
                                                                                        ebx = ebx - 1;
                                                                                        *ebx = 0x30;
                                                                                        *esp = *esp + 1;
                                                                                        if(*esp < A49c) {
                                                                                            goto L00459c40;
                                                                                        }
                                                                                    }
                                                                                    if(A468 == 0) {
                                                                                        goto L00459de0;
                                                                                    }
                                                                                    ebx = ebx - 1;
                                                                                    *ebx = dl;
                                                                                    ebx = ebx - 1;
                                                                                    *ebx = 0x30;
                                                                                    *esp = *esp + 2;
                                                                                    goto L00459de0;
L00459c9c:
                                                                                    A4b4 = A4b4 + 4;
                                                                                    ebx = *(A4b4 - 4);
                                                                                    if(A468 == 0) {
                                                                                        goto L00459ce7;
                                                                                    }
                                                                                    *esp = *ebx & 0xff;
                                                                                    ebx = ebx + 1;
                                                                                    if(A470 == 0) {
                                                                                        goto L00459de0;
                                                                                    }
                                                                                    eax = A49c;
                                                                                    if(*esp <= eax) {
                                                                                        goto L00459de0;
                                                                                    }
                                                                                    *esp = eax;
                                                                                    goto L00459de0;
                                                                                    if(A470 == 0) {
                                                                                        goto L00459d33;
                                                                                    }
                                                                                    *esp = 0;
                                                                                    if(ebx == 0) {
                                                                                        goto L00459de0;
                                                                                    }
                                                                                    edx = ebx;
                                                                                    eax = edx;
                                                                                    edx = edx + 1;
                                                                                    if(*eax == 0 || *esp == A49c) {
                                                                                        goto L00459de0;
                                                                                    }
                                                                                    ecx = edx;
                                                                                    *esp = *esp + 1;
                                                                                    edx = edx + 1;
                                                                                    if(*ecx != 0) {
                                                                                        goto L00459d10;
                                                                                    }
                                                                                    goto L00459de0;
                                                                                    *esp = 0;
                                                                                    if(ebx == 0) {
                                                                                        goto L00459de0;
                                                                                    }
                                                                                    ebp = ebx;
                                                                                    edx = ebp;
                                                                                    ebp = ebp + 1;
                                                                                    if(*edx == 0) {
                                                                                        goto L00459de0;
                                                                                    }
L00459d52:
                                                                                    eax = ebp;
                                                                                    *esp = *esp + 1;
                                                                                    ebp = ebp + 1;
                                                                                    if(*eax != 0) {
                                                                                        goto L00459d52;
                                                                                    }
                                                                                    goto L00459de0;
L00459d62:
                                                                                    A4b4 = A4b4 + 4;
                                                                                    ebx = *(A4b4 - 4);
                                                                                    if(A46c == 0) {
                                                                                        goto L00459d90;
                                                                                    }
                                                                                    *ebx = A490;
                                                                                    goto L00459e9e;
                                                                                    if(A474 == 0) {
                                                                                        goto L00459da8;
                                                                                    }
                                                                                    *ebx = A490;
                                                                                    goto L00459e9e;
                                                                                    *ebx = A490;
                                                                                    goto L00459e9e;
L00459db6:
                                                                                    *esi = dl;
                                                                                    V238 = V238 + 1;
                                                                                    esi = esi + 1;
                                                                                    if(V238 != A26c) {
                                                                                        goto L00459e9e;
                                                                                        if(*esp >= V240 || V20c != 0) {
                                                                                            goto L00459e2c;
                                                                                        }
L00459df6:
                                                                                        *esi = 0x20;
                                                                                        V238 = V238 + 1;
                                                                                        esi = esi + 1;
                                                                                        if(V238 != A26c) {
                                                                                            V240 = V240 - 1;
                                                                                            if(*esp < V240) {
                                                                                                goto L00459df6;
                                                                                            }
L00459e2c:
                                                                                            ebp = 0;
                                                                                            if(*esp <= 0) {
                                                                                                goto L00459e5f;
                                                                                            }
                                                                                            *esi = *ebx & 0xff;
                                                                                            V238 = V238 + 1;
                                                                                            ebx = ebx + 1;
                                                                                            esi = esi + 1;
                                                                                            if(V238 != A26c) {
                                                                                                if(1 < *esp) {
                                                                                                    goto L00459e34;
                                                                                                }
                                                                                                if(*esp >= V240) {
                                                                                                    goto L00459e9e;
                                                                                                }
L00459e70:
                                                                                                *esi = 0x20;
                                                                                                V238 = V238 + 1;
                                                                                                esi = esi + 1;
                                                                                                if(V238 != A26c) {
                                                                                                    *esp = *esp + 1;
                                                                                                    if(*esp < V240) {
                                                                                                        goto L00459e70;
                                                                                                    }
L00459e9e:
                                                                                                    if(edi < V23c) {
                                                                                                        goto L00459654;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L00459eab:
    esp = esp + 0x248;
    return V238;
}

/*	Procedure: 0x00459EC0 - 0x00459EF4
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004291F0()
 *		L00429350()
 *		L00436FB0()
 */

L00459EC0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    ecx = & A10;
    eax = & A14 - ecx + 3;
    asm("cdq");
    return L004595D0(ecx + (eax + (edx & 3) >> 2) * 4, A10, 32767, A8, Ac);
}

/*	Procedure: 0x00459F00 - 0x00459F68
 *	Argument size: 4
 *	Local size: 24
 *	Save regs size: 4
 *	Called by:
 *		L0042F750()
 */

L00459F00(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff8;



    Vfffffff8 = esp;
    (save)0;
    eax = L00439CA0(1, 3, "\rDebug Message", A8, 0);
    ecx = M004811b0;
    if(ecx != 0) {
        edx = A8 != 0 ? *A8 & 0xff : 0;
        eax = L00449150(ecx, A8 + 1, edx, 0);
        goto L00459f63;
        eax = L00447040();
        if(Vffffffec != 0) {
            ecx = *(ebp - 0x1c);
            Vffffffec(-1);
        }
        esp = *(ebp - 8);
    }
L00459f63:
}

/*	Procedure: 0x00459F69 - 0x00459F6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00459F69()
{



}

/*	Procedure: 0x00459F70 - 0x00459FF0
 *	Argument size: 8
 *	Local size: 280
 *	Save regs size: 4
 *	Called by:
 *		L00429440()
 */

L00459F70(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffeec;
	/* unknown */ void  Vfffffef8;
	/* unknown */ void  Vfffffefc;
	/* unknown */ void  Vfffffefd;



    ebx = & A8;
    ecx = & Vfffffefd;
    eax = & Ac - ebx + 3;
    asm("cdq");
    Vfffffef8 = esp;
    L004595D0(ebx + (eax + (edx & 3) >> 2) * 4, A8, 32767, ecx, 0xff);
    Vfffffefc = al;
    eax = L0042F750( & Vfffffefc);
    goto L00459feb;
    eax = L00447040();
    if(Vfffffeec != 0) {
        ecx = *(ebp + -284);
        eax = Vfffffeec(-1);
    }
    esp = *(ebp + -264);
L00459feb:
}

/*	Procedure: 0x00459FF1 - 0x00459FFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00459FF1()
{



}

/*	Procedure: 0x0045A000 - 0x0045A05B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0045A060()
 *		L0045A0A0()
 */

L0045A000()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    eax = GlobalAlloc(0x40, 0x1000);
    esi = eax;
    if(esi == 0) {
        return L0042F750(0x479068);
    }
    ebx = 0xa9;
    < ? L0045a055 : ;
    do {
        (save)esi;
        eax = L0042A0D0(0x486cd0);
        esi = esi + 0x18;
        (restore)ecx;
    } while(ebx = ebx - 1);
    esp = ebp - 8;
}

/*	Procedure: 0x0045A05C - 0x0045A05F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045A05C()
{



}

/*	Procedure: 0x0045A060 - 0x0045A095
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00432450()
 */

L0045A060()
{
	/* unknown */ void  ebp;



    ebp = esp;
    if(M00486cf0 != 0) {
        return;
    }
    M00486cf0 = 1;
    InitializeCriticalSection(M00486cb8);
    L0045A000();
    eax = GetCurrentThreadId();
    M00486cf4 = eax;
    return M00486cf4;
}

/*	Procedure: 0x0045A096 - 0x0045A09F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045A096()
{



}

/*	Procedure: 0x0045A0A0 - 0x0045A132
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00433B2A()
 */

L0045A0A0(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    EnterCriticalSection(M00486cb8);
    eax = L0042A110(0x486cd0);
    ecx = eax;
    if(eax == 0) {
        L0045A000();
        eax = L0042A110(0x486cd0);
        ecx = eax;
        if(eax == 0) {
            return LeaveCriticalSection(M00486cb8);
        }
    }
    *(ecx + 4) = A8;
    *(ecx + 8) = Ac;
    *(ecx + 0xc) = A10;
    *(ecx + 0x10) = A14;
    *(ecx + 0x14) = A18;
    L0042A0D0(0x486ce0, ecx);
    LeaveCriticalSection(M00486cb8);
    return PostThreadMessageW(M00486cf4, 0x4a0, 0, 0);
}

/*	Procedure: 0x0045A133 - 0x0045A13F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045A133()
{



}

/*	Procedure: 0x0045A140 - 0x0045A195
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042A430()
 *		L0042BA50()
 *		L0042BF80()
 *		L0042E010()
 *		L0042ECF0()
 *		L00433B90()
 */

L0045A140()
{



    (save)ebx;
    if(M00486cf0 == 0) {
        esp = ebp - 4;
        (restore)ebx;
        return;
    }
    EnterCriticalSection(M00486cb8);
    bl = 0;
    eax = LeaveCriticalSection(M00486cb8);
    if(bl != 0) {
        PostThreadMessageW(M00486cf4, 0x4a0, 0, 0);
    }
    esp = ebp - 4;
    (restore)ebx;
}

/*	Procedure: 0x0045A196 - 0x0045A19F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045A196()
{



}

/*	Procedure: 0x0045A1A0 - 0x0045A266
 *	Argument size: 0
 *	Local size: 24
 *	Save regs size: 8
 *	Called by:
 *		L0042E5B0()
 */

L0045A1A0()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vfffffff4;



    EnterCriticalSection(M00486cb8);
    ebx = M00486ce0;
    M00486ce0 = 0;
    M00486ce4 = 0;
    M00486cec = 0;
    eax = LeaveCriticalSection(M00486cb8);
    if(ebx == 0) {
        return;
    }
    esi = ebx;
    if(ebx != 0) {
        do {
            Vfffffff4 = esp;
            *(esi + 4)( *(esi + 8), *(esi + 0xc), *(esi + 0x10), *(esi + 0x14));
L0045a223:
            esi = *esi;
        } while(esi != 0);
        goto L0045a229;
        if(Vffffffe8 != 0) {
            (save)-1;
            ecx = *(ebp - 0x20);
            Vffffffe8();
        }
        esp = *(ebp - 0xc);
        goto L0045a223;
    }
L0045a229:
    EnterCriticalSection(M00486cb8);
    ecx = ebx;
    do {
        ebx = *ecx;
        L0042A0A0(0x486cd0, ecx);
        ecx = ebx;
    } while(ebx != 0);
    esp = ebp - 8;
    return LeaveCriticalSection(M00486cb8);
}

/*	Procedure: 0x0045A267 - 0x0045A26F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045A267()
{



}

/*	Procedure: 0x0045A270 - 0x0045A366
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0042E5B0()
 */

L0045A270()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    eax = M004811b4;
    esp = esp - 0x1c;
    if(eax == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    if(M004811c4 != 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    M004811c4 = eax;
    M004811c8 = M004811b8;
    M004811d0 = M004811c0;
    M004811b4 = 0;
    M004811b8 = 0;
    M004811c0 = 0;
    *(ebp - 0x10) = 0x4811c4;
    esi = 0x4811b4;
L0045a2f0:
    while(1) {
        eax = L0042A110( *(ebp - 0x10));
        edi = eax;
        if(edi == 0) {
            goto L0045a355;
        }
        if(*(edi + 4) != 1452120084) {
            break;
        }
        if(*(edi + 0x11) == 0) {
            *(edi + 0x10) = 0;
        } else {
            L0042A0D0(esi, edi);
        }
        *(ebp - 0x14) = esp;
        *(edi + 8)( *(edi + 0xc), edi);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return 0;
    eax = *(ebp - 0x1c);
    ebx = eax;
    L00429560(eax);
    if(*(ebp - 0x20) != 0) {
        ecx = *(ebp - 0x28);
        *(ebp - 0x20)(-1);
    }
    esp = *(ebp - 0x14);
    goto L0045a2f0;
L0045a355:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x0045A367 - 0x0045A36F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045A367()
{



}

/*	Procedure: 0x0045A370 - 0x0045C843
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0045C8D0()
 *		L0045C9A0()
 */

L0045A370(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{
	/* unknown */ void  Vffffff68;
	/* unknown */ void  Vffffff6c;
	/* unknown */ void  Vffffff70;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff7c;
	/* unknown */ void  Vffffff80;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff88;
	/* unknown */ void  Vffffff8c;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffff9c;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    edx = A8;
    eax = A4;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)ebp;
    esp = esp - 0x8c;
    Vffffff80 = *eax;
    Vffffff74 = *(eax + 4);
    Vffffff88 = *(eax + 8);
    Vffffff84 = *(eax + 0xc);
    Vffffff98 = *(eax + 0x10);
    ebx = *edx;
    Vffffff7c = ebx;
    Vffffff7c = Vffffff7c << 8;
    Vffffff7c = Vffffff7c & 16711680;
    ebp = ebx;
    eax = ebx;
    ebx = ebx << 0x18;
    Vffffff7c = Vffffff7c | eax >> 0x18;
    Vffffff7c = Vffffff7c | ebp >> 8 & 65280;
    Vffffff7c = Vffffff7c | ebx;
    esi = *(edx + 4);
    Vffffffe8 = esi;
    Vffffffe8 = Vffffffe8 << 8;
    Vffffffe8 = Vffffffe8 & 16711680;
    edi = esi;
    ecx = esi;
    esi = esi << 0x18;
    Vffffffe8 = Vffffffe8 | ecx >> 0x18;
    Vffffffe8 = Vffffffe8 | edi >> 8 & 65280;
    Vffffffe8 = Vffffffe8 | esi;
    eax = *(edx + 8);
    Vffffffec = eax;
    Vffffffec = Vffffffec << 8;
    Vffffffec = Vffffffec & 16711680;
    ebx = eax;
    ebp = eax;
    eax = eax << 0x18;
    Vffffffec = Vffffffec | ebp >> 0x18;
    Vffffffec = Vffffffec | ebx >> 8 & 65280;
    Vffffffec = Vffffffec | eax;
    ecx = *(edx + 0xc);
    Vffffffb8 = ecx;
    Vffffffb8 = Vffffffb8 << 8;
    Vffffffb8 = Vffffffb8 & 16711680;
    esi = ecx;
    edi = ecx;
    ecx = ecx << 0x18;
    Vffffffb8 = Vffffffb8 | edi >> 0x18;
    Vffffffb8 = Vffffffb8 | esi >> 8 & 65280;
    Vffffffb8 = Vffffffb8 | ecx;
    ebp = *(edx + 0x10);
    Vffffffbc = ebp;
    Vffffffbc = Vffffffbc << 8;
    Vffffffbc = Vffffffbc & 16711680;
    eax = ebp;
    ebx = ebp;
    ebp = ebp << 0x18;
    Vffffffbc = Vffffffbc | ebx >> 0x18;
    Vffffffbc = Vffffffbc | eax >> 8 & 65280;
    Vffffffbc = Vffffffbc | ebp;
    edi = *(edx + 0x14);
    Vffffffc0 = edi;
    Vffffffc0 = Vffffffc0 << 8;
    Vffffffc0 = Vffffffc0 & 16711680;
    ecx = edi;
    esi = edi;
    edi = edi << 0x18;
    Vffffffc0 = Vffffffc0 | esi >> 0x18;
    Vffffffc0 = Vffffffc0 | ecx >> 8 & 65280;
    Vffffffc0 = Vffffffc0 | edi;
    ebx = *(edx + 0x18);
    Vffffffb4 = ebx;
    Vffffffb4 = Vffffffb4 << 8;
    Vffffffb4 = Vffffffb4 & 16711680;
    ebp = ebx;
    eax = ebx;
    ebx = ebx << 0x18;
    Vffffffb4 = Vffffffb4 | eax >> 0x18;
    Vffffffb4 = Vffffffb4 | ebp >> 8 & 65280;
    Vffffffb4 = Vffffffb4 | ebx;
    esi = *(edx + 0x1c);
    Vffffff9c = esi;
    Vffffff9c = Vffffff9c << 8;
    Vffffff9c = Vffffff9c & 16711680;
    edi = esi;
    ecx = esi;
    esi = esi << 0x18;
    Vffffff9c = Vffffff9c | ecx >> 0x18;
    Vffffff9c = Vffffff9c | edi >> 8 & 65280;
    Vffffff9c = Vffffff9c | esi;
    eax = *(edx + 0x20);
    Vffffffac = eax;
    Vffffffac = Vffffffac << 8;
    Vffffffac = Vffffffac & 16711680;
    ebx = eax;
    ebp = eax;
    eax = eax << 0x18;
    Vffffffac = Vffffffac | ebp >> 0x18;
    Vffffffac = Vffffffac | ebx >> 8 & 65280;
    Vffffffac = Vffffffac | eax;
    ecx = *(edx + 0x24);
    Vffffffb0 = ecx;
    Vffffffb0 = Vffffffb0 << 8;
    Vffffffb0 = Vffffffb0 & 16711680;
    esi = ecx;
    edi = ecx;
    ecx = ecx << 0x18;
    Vffffffb0 = Vffffffb0 | edi >> 0x18;
    Vffffffb0 = Vffffffb0 | esi >> 8 & 65280;
    Vffffffb0 = Vffffffb0 | ecx;
    ebp = *(edx + 0x28);
    Vffffffd0 = ebp;
    Vffffffd0 = Vffffffd0 << 8;
    Vffffffd0 = Vffffffd0 & 16711680;
    eax = ebp;
    ebx = ebp;
    ebp = ebp << 0x18;
    Vffffffd0 = Vffffffd0 | ebx >> 0x18;
    Vffffffd0 = Vffffffd0 | eax >> 8 & 65280;
    Vffffffd0 = Vffffffd0 | ebp;
    edi = *(edx + 0x2c);
    Vffffffd4 = edi;
    Vffffffd4 = Vffffffd4 << 8;
    Vffffffd4 = Vffffffd4 & 16711680;
    ecx = edi;
    esi = edi;
    edi = edi << 0x18;
    Vffffffd4 = Vffffffd4 | esi >> 0x18;
    Vffffffd4 = Vffffffd4 | ecx >> 8 & 65280;
    Vffffffd4 = Vffffffd4 | edi;
    ebx = *(edx + 0x30);
    Vffffffd8 = ebx;
    Vffffffd8 = Vffffffd8 << 8;
    Vffffffd8 = Vffffffd8 & 16711680;
    ebp = ebx;
    eax = ebx;
    ebx = ebx << 0x18;
    Vffffffd8 = Vffffffd8 | eax >> 0x18;
    Vffffffd8 = Vffffffd8 | ebp >> 8 & 65280;
    Vffffffd8 = Vffffffd8 | ebx;
    esi = *(edx + 0x34);
    Vffffffdc = esi;
    Vffffffdc = Vffffffdc << 8;
    Vffffffdc = Vffffffdc & 16711680;
    edi = esi;
    ecx = esi;
    esi = esi << 0x18;
    Vffffffdc = Vffffffdc | ecx >> 0x18;
    Vffffffdc = Vffffffdc | edi >> 8 & 65280;
    Vffffffdc = Vffffffdc | esi;
    eax = *(edx + 0x38);
    Vffffffe0 = eax;
    Vffffffe0 = Vffffffe0 << 8;
    Vffffffe0 = Vffffffe0 & 16711680;
    ebx = eax;
    ebp = eax;
    eax = eax << 0x18;
    Vffffffe0 = Vffffffe0 | ebp >> 0x18;
    Vffffffe0 = Vffffffe0 | ebx >> 8 & 65280;
    Vffffffe0 = Vffffffe0 | eax;
    ecx = *(edx + 0x3c);
    Vffffffe4 = ecx;
    Vffffffe4 = Vffffffe4 << 8;
    Vffffffe4 = Vffffffe4 & 16711680;
    esi = ecx;
    edi = ecx;
    ecx = ecx << 0x18;
    Vffffffe4 = Vffffffe4 | edi >> 0x18;
    Vffffffe4 = Vffffffe4 | esi >> 8 & 65280;
    Vffffffe4 = Vffffffe4 | ecx;
    Vffffff98 = Vffffff98 + (Vffffff80 >> 0x1b | Vffffff80 << 5) + ((Vffffff88 ^ Vffffff84) & Vffffff74 ^ Vffffff84) + 1518500249 + Vffffff7c;
    edi = Vffffff74;
    Vffffff74 = Vffffff74 << 0x1e;
    edi = edi >> 2 | Vffffff74;
    ebp = (edi ^ Vffffff88) & Vffffff80 ^ Vffffff88;
    Vffffff84 = Vffffff84 + (Vffffff98 >> 0x1b | Vffffff98 << 5) + ebp + 1518500249 + Vffffffe8;
    ebx = Vffffff80;
    Vffffff80 = Vffffff80 << 0x1e;
    ebx = ebx >> 2 | Vffffff80;
    Vffffff78 = ebx;
    ecx = (ebx ^ edi) & Vffffff98 ^ edi;
    Vffffff88 = Vffffff88 + (Vffffff84 >> 0x1b | Vffffff84 << 5) + ecx + 1518500249 + Vffffffec;
    ebp = Vffffff98;
    Vffffff98 = Vffffff98 << 0x1e;
    ebp = ebp >> 2 | Vffffff98;
    Vffffff90 = ebp;
    ecx = Vffffff84;
    esi = (ebp ^ ebx) & Vffffff84 ^ ebx;
    edx = edi;
    Vffffff84 = Vffffff84 << 0x1e;
    edx = edx + (Vffffff88 >> 0x1b | Vffffff88 << 5) + esi + 1518500249 + Vffffffb8;
    ecx = ecx >> 2 | Vffffff84;
    Vffffffcc = ecx;
    eax = (ecx ^ ebp) & Vffffff88 ^ ebp;
    edi = edx << 5;
    Vffffff78 = Vffffff78 + (edx >> 0x1b | edi) + eax + 1518500249 + Vffffffbc;
    esi = Vffffff88;
    Vffffff88 = Vffffff88 << 0x1e;
    esi = esi >> 2 | Vffffff88;
    Vffffff74 = esi;
    ebx = (esi ^ ecx) & edx ^ ecx;
    ebp = (Vffffff78 >> 0x1b | Vffffff78 << 5) + ebx;
    eax = edx;
    edx = edx << 0x1e;
    Vffffff90 = Vffffff90 + ebp + 1518500249 + Vffffffc0;
    eax = eax >> 2 | edx;
    edx = (eax ^ esi) & Vffffff78 ^ esi;
    Vffffffcc = Vffffffcc + (Vffffff90 >> 0x1b | Vffffff90 << 5) + edx + 1518500249 + Vffffffb4;
    ebx = Vffffff78;
    Vffffff78 = Vffffff78 << 0x1e;
    ebx = ebx >> 2 | Vffffff78;
    Vffffff80 = ebx;
    ebp = (ebx ^ eax) & Vffffff90 ^ eax;
    Vffffff74 = Vffffff74 + (Vffffffcc >> 0x1b | Vffffffcc << 5) + ebp + 1518500249 + Vffffff9c;
    edx = Vffffff90;
    Vffffff90 = Vffffff90 << 0x1e;
    edx = edx >> 2 | Vffffff90;
    Vffffff84 = edx;
    ebp = Vffffffcc;
    ecx = (edx ^ ebx) & Vffffffcc ^ ebx;
    edi = eax;
    edi = edi + (Vffffff74 >> 0x1b | Vffffff74 << 5) + ecx + 1518500249 + Vffffffac;
    Vffffffcc = Vffffffcc << 0x1e;
    ebp = ebp >> 2 | Vffffffcc;
    Vffffffcc = ebp;
    esi = (ebp ^ edx) & Vffffff74 ^ edx;
    eax = edi << 5;
    Vffffff80 = Vffffff80 + (edi >> 0x1b | eax) + esi + 1518500249 + Vffffffb0;
    ecx = Vffffff74;
    Vffffff74 = Vffffff74 << 0x1e;
    ecx = ecx >> 2 | Vffffff74;
    Vffffff74 = ecx;
    ebx = (ecx ^ ebp) & edi ^ ebp;
    Vffffff84 = Vffffff84 + (Vffffff80 >> 0x1b | Vffffff80 << 5) + ebx + 1518500249 + Vffffffd0;
    esi = edi;
    edi = edi << 0x1e;
    esi = esi >> 2 | edi;
    edx = (esi ^ ecx) & Vffffff80 ^ ecx;
    Vffffffcc = Vffffffcc + (Vffffff84 >> 0x1b | Vffffff84 << 5) + edx + 1518500249 + Vffffffd4;
    ebx = Vffffff80;
    Vffffff80 = Vffffff80 << 0x1e;
    ebx = ebx >> 2 | Vffffff80;
    Vffffff80 = ebx;
    ebp = (ebx ^ esi) & Vffffff84 ^ esi;
    Vffffff74 = Vffffff74 + (Vffffffcc >> 0x1b | Vffffffcc << 5) + ebp + 1518500249 + Vffffffd8;
    edx = Vffffff84;
    Vffffff84 = Vffffff84 << 0x1e;
    edx = edx >> 2 | Vffffff84;
    Vffffff84 = edx;
    ebp = Vffffffcc;
    ecx = (edx ^ ebx) & Vffffffcc ^ ebx;
    eax = esi;
    Vffffffcc = Vffffffcc << 0x1e;
    eax = eax + (Vffffff74 >> 0x1b | Vffffff74 << 5) + ecx + 1518500249 + Vffffffdc;
    ebp = ebp >> 2 | Vffffffcc;
    Vffffff88 = ebp;
    edi = (ebp ^ edx) & Vffffff74 ^ edx;
    esi = eax << 5;
    Vffffff80 = Vffffff80 + (eax >> 0x1b | esi) + edi + 1518500249 + Vffffffe0;
    ecx = Vffffff74;
    Vffffff74 = Vffffff74 << 0x1e;
    ecx = ecx >> 2 | Vffffff74;
    Vffffff78 = ecx;
    ebx = (ecx ^ ebp) & eax ^ ebp;
    Vffffff84 = Vffffff84 + (Vffffff80 >> 0x1b | Vffffff80 << 5) + ebx + 1518500249 + Vffffffe4;
    edi = eax;
    eax = eax << 0x1e;
    edi = edi >> 2 | eax;
    Vffffff7c = Vffffff7c ^ Vffffffec;
    Vffffff7c = Vffffff7c ^ Vffffffac;
    Vffffff7c = Vffffff7c ^ Vffffffdc;
    Vffffff90 = Vffffff7c;
    Vffffff90 = Vffffff90 >> 0x1f;
    Vffffff7c = Vffffff7c << 1;
    Vffffff90 = Vffffff90 | Vffffff7c;
    edx = (edi ^ ecx) & Vffffff80 ^ ecx;
    Vffffff88 = Vffffff88 + (Vffffff84 >> 0x1b | Vffffff84 << 5) + edx + 1518500249 + Vffffff90;
    ebx = Vffffff80;
    Vffffff80 = Vffffff80 << 0x1e;
    ebx = ebx >> 2 | Vffffff80;
    Vffffff7c = ebx;
    Vffffffe8 = Vffffffe8 ^ Vffffffb8;
    Vffffffe8 = Vffffffe8 ^ Vffffffb0;
    Vffffffe8 = Vffffffe8 ^ Vffffffe0;
    *(esp + M00000064) = Vffffffe8;
    *(esp + M00000064) = *(esp + M00000064) >> 0x1f;
    Vffffffe8 = Vffffffe8 << 1;
    *(esp + M00000064) = *(esp + M00000064) | Vffffffe8;
    edx = *(esp + M00000064);
    ebp = (ebx ^ edi) & Vffffff84 ^ edi;
    Vffffff78 = Vffffff78 + (Vffffff88 >> 0x1b | Vffffff88 << 5) + ebp + 1518500249 + edx;
    edx = Vffffff84;
    Vffffff84 = Vffffff84 << 0x1e;
    edx = edx >> 2 | Vffffff84;
    Vffffffe8 = edx;
    Vffffffec = Vffffffec ^ Vffffffbc;
    Vffffffec = Vffffffec ^ Vffffffd0;
    Vffffffec = Vffffffec ^ Vffffffe4;
    Vffffffc4 = Vffffffec;
    Vffffffc4 = Vffffffc4 >> 0x1f;
    Vffffffec = Vffffffec << 1;
    Vffffffc4 = Vffffffc4 | Vffffffec;
    ecx = (edx ^ ebx) & Vffffff88 ^ ebx;
    esi = edi;
    esi = esi + (Vffffff78 >> 0x1b | Vffffff78 << 5) + ecx + 1518500249 + Vffffffc4;
    ebp = Vffffff88;
    Vffffff88 = Vffffff88 << 0x1e;
    ebp = ebp >> 2 | Vffffff88;
    Vffffffec = ebp;
    Vffffffb8 = Vffffffb8 ^ Vffffffc0;
    Vffffffb8 = Vffffffb8 ^ Vffffffd4;
    Vffffffb8 = Vffffffb8 ^ Vffffff90;
    Vffffffa0 = Vffffffb8;
    Vffffffa0 = Vffffffa0 >> 0x1f;
    Vffffffb8 = Vffffffb8 << 1;
    Vffffffa0 = Vffffffa0 | Vffffffb8;
    edi = (ebp ^ edx) & Vffffff78 ^ edx;
    eax = esi << 5;
    Vffffff7c = Vffffff7c + (esi >> 0x1b | eax) + edi + 1518500249 + Vffffffa0;
    ecx = Vffffff78;
    Vffffff78 = Vffffff78 << 0x1e;
    ecx = ecx >> 2 | Vffffff78;
    Vffffff88 = ecx;
    Vffffffbc = Vffffffbc ^ Vffffffb4;
    Vffffffbc = Vffffffbc ^ Vffffffd8;
    Vffffffbc = Vffffffbc ^ *(esp + M00000064);
    Vffffffa4 = Vffffffbc;
    Vffffffa4 = Vffffffa4 >> 0x1f;
    Vffffffbc = Vffffffbc << 1;
    Vffffffa4 = Vffffffa4 | Vffffffbc;
    edx = esi ^ ecx ^ ebp;
    Vffffffe8 = Vffffffe8 + (Vffffff7c >> 0x1b | Vffffff7c << 5) + edx + 1859775393 + Vffffffa4;
    Vffffffc0 = Vffffffc0 ^ Vffffff9c;
    Vffffffc0 = Vffffffc0 ^ Vffffffdc;
    Vffffffc0 = Vffffffc0 ^ Vffffffc4;
    Vffffffa8 = Vffffffc0;
    Vffffffa8 = Vffffffa8 >> 0x1f;
    Vffffffc0 = Vffffffc0 << 1;
    Vffffffa8 = Vffffffa8 | Vffffffc0;
    edi = esi;
    esi = esi << 0x1e;
    edi = edi >> 2 | esi;
    ebp = Vffffff7c ^ edi ^ ecx;
    Vffffffec = Vffffffec + (Vffffffe8 >> 0x1b | Vffffffe8 << 5) + ebp + 1859775393 + Vffffffa8;
    edx = Vffffff7c;
    Vffffff7c = Vffffff7c << 0x1e;
    edx = edx >> 2 | Vffffff7c;
    Vffffffb8 = edx;
    Vffffffb4 = Vffffffb4 ^ Vffffffac;
    Vffffffb4 = Vffffffb4 ^ Vffffffe0;
    Vffffffb4 = Vffffffb4 ^ Vffffffa0;
    Vffffff7c = Vffffffb4;
    Vffffff7c = Vffffff7c >> 0x1f;
    Vffffffb4 = Vffffffb4 << 1;
    Vffffff7c = Vffffff7c | Vffffffb4;
    ecx = Vffffffe8 ^ edx ^ edi;
    Vffffff88 = Vffffff88 + (Vffffffec >> 0x1b | Vffffffec << 5) + ecx + 1859775393 + Vffffff7c;
    ebp = Vffffffe8;
    Vffffffe8 = Vffffffe8 << 0x1e;
    ebp = ebp >> 2 | Vffffffe8;
    Vffffff78 = ebp;
    Vffffff9c = Vffffff9c ^ Vffffffb0;
    Vffffff9c = Vffffff9c ^ Vffffffe4;
    Vffffff9c = Vffffff9c ^ Vffffffa4;
    Vffffffe8 = Vffffff9c;
    Vffffffe8 = Vffffffe8 >> 0x1f;
    Vffffff9c = Vffffff9c << 1;
    Vffffffe8 = Vffffffe8 | Vffffff9c;
    esi = Vffffffec ^ ebp ^ edx;
    ebx = edi;
    ebx = ebx + (Vffffff88 >> 0x1b | Vffffff88 << 5) + esi + 1859775393 + Vffffffe8;
    ecx = Vffffffec;
    Vffffffec = Vffffffec << 0x1e;
    ecx = ecx >> 2 | Vffffffec;
    Vffffffbc = ecx;
    Vffffffac = Vffffffac ^ Vffffffd0;
    Vffffffac = Vffffffac ^ Vffffff90;
    Vffffffac = Vffffffac ^ Vffffffa8;
    Vffffffec = Vffffffac;
    Vffffffec = Vffffffec >> 0x1f;
    Vffffffac = Vffffffac << 1;
    Vffffffec = Vffffffec | Vffffffac;
    edi = Vffffff88 ^ ecx ^ ebp;
    eax = ebx << 5;
    Vffffffb8 = Vffffffb8 + (ebx >> 0x1b | eax) + edi + 1859775393 + Vffffffec;
    esi = Vffffff88;
    Vffffff88 = Vffffff88 << 0x1e;
    esi = esi >> 2 | Vffffff88;
    Vffffffc0 = esi;
    Vffffffb0 = Vffffffb0 ^ Vffffffd4;
    Vffffffb0 = Vffffffb0 ^ *(esp + M00000064);
    Vffffffb0 = Vffffffb0 ^ Vffffff7c;
    Vffffff94 = Vffffffb0;
    Vffffff94 = Vffffff94 >> 0x1f;
    Vffffffb0 = Vffffffb0 << 1;
    Vffffff94 = Vffffff94 | Vffffffb0;
    ebp = ebx ^ esi ^ ecx;
    Vffffff78 = Vffffff78 + (Vffffffb8 >> 0x1b | Vffffffb8 << 5) + ebp + 1859775393 + Vffffff94;
    Vffffffd0 = Vffffffd0 ^ Vffffffd8;
    Vffffffd0 = Vffffffd0 ^ Vffffffc4;
    Vffffffd0 = Vffffffd0 ^ Vffffffe8;
    Vffffff8c = Vffffffd0;
    Vffffff8c = Vffffff8c >> 0x1f;
    Vffffffd0 = Vffffffd0 << 1;
    Vffffff8c = Vffffff8c | Vffffffd0;
    edi = ebx;
    ebx = ebx << 0x1e;
    edi = edi >> 2 | ebx;
    ecx = Vffffffb8 ^ edi ^ esi;
    Vffffffbc = Vffffffbc + (Vffffff78 >> 0x1b | Vffffff78 << 5) + ecx + 1859775393 + Vffffff8c;
    ebp = Vffffffb8;
    Vffffffb8 = Vffffffb8 << 0x1e;
    ebp = ebp >> 2 | Vffffffb8;
    Vffffffb4 = ebp;
    Vffffffd4 = Vffffffd4 ^ Vffffffdc;
    Vffffffd4 = Vffffffd4 ^ Vffffffa0;
    Vffffffd4 = Vffffffd4 ^ Vffffffec;
    Vffffffb8 = Vffffffd4;
    Vffffffb8 = Vffffffb8 >> 0x1f;
    Vffffffd4 = Vffffffd4 << 1;
    Vffffffb8 = Vffffffb8 | Vffffffd4;
    esi = Vffffff78 ^ ebp ^ edi;
    Vffffffc0 = Vffffffc0 + (Vffffffbc >> 0x1b | Vffffffbc << 5) + esi + 1859775393 + Vffffffb8;
    ecx = Vffffff78;
    Vffffff78 = Vffffff78 << 0x1e;
    ecx = ecx >> 2 | Vffffff78;
    Vffffff9c = ecx;
    Vffffffd8 = Vffffffd8 ^ Vffffffe0;
    Vffffffd8 = Vffffffd8 ^ Vffffffa4;
    Vffffffd8 = Vffffffd8 ^ Vffffff94;
    Vffffff70 = Vffffffd8;
    Vffffff70 = Vffffff70 >> 0x1f;
    Vffffffd8 = Vffffffd8 << 1;
    Vffffff70 = Vffffff70 | Vffffffd8;
    ebx = Vffffffbc ^ ecx ^ ebp;
    edx = edi;
    edx = edx + (Vffffffc0 >> 0x1b | Vffffffc0 << 5) + ebx + 1859775393 + Vffffff70;
    esi = Vffffffbc;
    Vffffffbc = Vffffffbc << 0x1e;
    esi = esi >> 2 | Vffffffbc;
    Vffffffac = esi;
    Vffffffdc = Vffffffdc ^ Vffffffe4;
    Vffffffdc = Vffffffdc ^ Vffffffa8;
    Vffffffdc = Vffffffdc ^ Vffffff8c;
    Vffffffbc = Vffffffdc;
    Vffffffbc = Vffffffbc >> 0x1f;
    Vffffffdc = Vffffffdc << 1;
    Vffffffbc = Vffffffbc | Vffffffdc;
    edi = Vffffffc0 ^ esi ^ ecx;
    eax = edx << 5;
    Vffffffb4 = Vffffffb4 + (edx >> 0x1b | eax) + edi + 1859775393 + Vffffffbc;
    ebx = Vffffffc0;
    Vffffffc0 = Vffffffc0 << 0x1e;
    ebx = ebx >> 2 | Vffffffc0;
    Vffffffb0 = ebx;
    Vffffffe0 = Vffffffe0 ^ Vffffff90;
    Vffffffe0 = Vffffffe0 ^ Vffffff7c;
    Vffffffe0 = Vffffffe0 ^ Vffffffb8;
    Vffffffc0 = Vffffffe0;
    Vffffffc0 = Vffffffc0 >> 0x1f;
    Vffffffe0 = Vffffffe0 << 1;
    Vffffffc0 = Vffffffc0 | Vffffffe0;
    ecx = edx ^ ebx ^ esi;
    Vffffff9c = Vffffff9c + (Vffffffb4 >> 0x1b | Vffffffb4 << 5) + ecx + 1859775393 + Vffffffc0;
    Vffffffe4 = Vffffffe4 ^ *(esp + M00000064);
    Vffffffe4 = Vffffffe4 ^ Vffffffe8;
    Vffffffe4 = Vffffffe4 ^ Vffffff70;
    Vffffff98 = Vffffffe4;
    Vffffff98 = Vffffff98 >> 0x1f;
    Vffffffe4 = Vffffffe4 << 1;
    Vffffff98 = Vffffff98 | Vffffffe4;
    edi = edx;
    edx = edx << 0x1e;
    edi = edi >> 2 | edx;
    esi = Vffffffb4 ^ edi ^ ebx;
    Vffffffac = Vffffffac + (Vffffff9c >> 0x1b | Vffffff9c << 5) + esi + 1859775393 + Vffffff98;
    ecx = Vffffffb4;
    Vffffffb4 = Vffffffb4 << 0x1e;
    ecx = ecx >> 2 | Vffffffb4;
    Vffffffd0 = ecx;
    Vffffff90 = Vffffff90 ^ Vffffffc4;
    Vffffff90 = Vffffff90 ^ Vffffffec;
    Vffffff90 = Vffffff90 ^ Vffffffbc;
    Vffffffb4 = Vffffff90;
    Vffffffb4 = Vffffffb4 >> 0x1f;
    Vffffff90 = Vffffff90 << 1;
    Vffffffb4 = Vffffffb4 | Vffffff90;
    esi = Vffffff9c ^ ecx ^ edi;
    Vffffffb0 = Vffffffb0 + (Vffffffac >> 0x1b | Vffffffac << 5) + esi + 1859775393 + Vffffffb4;
    edx = Vffffff9c;
    Vffffff9c = Vffffff9c << 0x1e;
    edx = edx >> 2 | Vffffff9c;
    Vffffffd4 = edx;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffffa0;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffff94;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffffc0;
    Vffffff9c = *(esp + M00000064);
    Vffffff9c = Vffffff9c >> 0x1f;
    *(esp + M00000064) = *(esp + M00000064) << 1;
    Vffffff9c = Vffffff9c | *(esp + M00000064);
    ebx = Vffffffac ^ edx ^ ecx;
    ebp = edi;
    ebp = ebp + (Vffffffb0 >> 0x1b | Vffffffb0 << 5) + ebx + 1859775393 + Vffffff9c;
    esi = Vffffffac;
    Vffffffac = Vffffffac << 0x1e;
    esi = esi >> 2 | Vffffffac;
    Vffffffd8 = esi;
    Vffffffc4 = Vffffffc4 ^ Vffffffa4;
    Vffffffc4 = Vffffffc4 ^ Vffffff8c;
    Vffffffc4 = Vffffffc4 ^ Vffffff98;
    Vffffffac = Vffffffc4;
    Vffffffac = Vffffffac >> 0x1f;
    Vffffffc4 = Vffffffc4 << 1;
    Vffffffac = Vffffffac | Vffffffc4;
    edi = Vffffffb0 ^ esi ^ edx;
    eax = ebp << 5;
    Vffffffd0 = Vffffffd0 + (ebp >> 0x1b | eax) + edi + 1859775393 + Vffffffac;
    ebx = Vffffffb0;
    Vffffffb0 = Vffffffb0 << 0x1e;
    ebx = ebx >> 2 | Vffffffb0;
    Vffffffdc = ebx;
    Vffffffa0 = Vffffffa0 ^ Vffffffa8;
    Vffffffa0 = Vffffffa0 ^ Vffffffb8;
    Vffffffa0 = Vffffffa0 ^ Vffffffb4;
    Vffffffb0 = Vffffffa0;
    Vffffffb0 = Vffffffb0 >> 0x1f;
    Vffffffa0 = Vffffffa0 << 1;
    Vffffffb0 = Vffffffb0 | Vffffffa0;
    edx = ebp ^ ebx ^ esi;
    Vffffffd4 = Vffffffd4 + (Vffffffd0 >> 0x1b | Vffffffd0 << 5) + edx + 1859775393 + Vffffffb0;
    Vffffffa4 = Vffffffa4 ^ Vffffff7c;
    Vffffffa4 = Vffffffa4 ^ Vffffff70;
    Vffffffa4 = Vffffffa4 ^ Vffffff9c;
    Vffffffcc = Vffffffa4;
    Vffffffcc = Vffffffcc >> 0x1f;
    Vffffffa4 = Vffffffa4 << 1;
    Vffffffcc = Vffffffcc | Vffffffa4;
    edi = ebp;
    ebp = ebp << 0x1e;
    edi = edi >> 2 | ebp;
    esi = Vffffffd0 ^ edi ^ ebx;
    Vffffffd8 = Vffffffd8 + (Vffffffd4 >> 0x1b | Vffffffd4 << 5) + esi + 1859775393 + Vffffffcc;
    edx = Vffffffd0;
    Vffffffd0 = Vffffffd0 << 0x1e;
    edx = edx >> 2 | Vffffffd0;
    Vffffffe0 = edx;
    Vffffffa8 = Vffffffa8 ^ Vffffffe8;
    Vffffffa8 = Vffffffa8 ^ Vffffffbc;
    Vffffffa8 = Vffffffa8 ^ Vffffffac;
    Vffffffd0 = Vffffffa8;
    Vffffffd0 = Vffffffd0 >> 0x1f;
    Vffffffa8 = Vffffffa8 << 1;
    Vffffffd0 = Vffffffd0 | Vffffffa8;
    ebx = Vffffffd4 ^ edx ^ edi;
    Vffffffdc = Vffffffdc + (Vffffffd8 >> 0x1b | Vffffffd8 << 5) + ebx + 1859775393 + Vffffffd0;
    esi = Vffffffd4;
    Vffffffd4 = Vffffffd4 << 0x1e;
    esi = esi >> 2 | Vffffffd4;
    Vffffffe4 = esi;
    Vffffff7c = Vffffff7c ^ Vffffffec;
    Vffffff7c = Vffffff7c ^ Vffffffc0;
    Vffffff7c = Vffffff7c ^ Vffffffb0;
    Vffffffd4 = Vffffff7c;
    Vffffffd4 = Vffffffd4 >> 0x1f;
    Vffffff7c = Vffffff7c << 1;
    Vffffffd4 = Vffffffd4 | Vffffff7c;
    ecx = edi;
    edi = Vffffffd8 ^ esi ^ edx;
    ecx = ecx + (Vffffffdc >> 0x1b | Vffffffdc << 5) + edi + 1859775393 + Vffffffd4;
    ebx = Vffffffd8;
    Vffffffd8 = Vffffffd8 << 0x1e;
    ebx = ebx >> 2 | Vffffffd8;
    Vffffff90 = ebx;
    Vffffffe8 = Vffffffe8 ^ Vffffff94;
    Vffffffe8 = Vffffffe8 ^ Vffffff98;
    Vffffffe8 = Vffffffe8 ^ Vffffffcc;
    Vffffffd8 = Vffffffe8;
    Vffffffd8 = Vffffffd8 >> 0x1f;
    Vffffffe8 = Vffffffe8 << 1;
    Vffffffd8 = Vffffffd8 | Vffffffe8;
    ebp = Vffffffdc ^ ebx ^ esi;
    eax = ecx << 5;
    Vffffffe0 = Vffffffe0 + (ecx >> 0x1b | eax) + ebp + 1859775393 + Vffffffd8;
    edi = Vffffffdc;
    Vffffffdc = Vffffffdc << 0x1e;
    edi = edi >> 2 | Vffffffdc;
    *(esp + M00000064) = edi;
    Vffffffec = Vffffffec ^ Vffffff8c;
    Vffffffec = Vffffffec ^ Vffffffb4;
    Vffffffec = Vffffffec ^ Vffffffd0;
    Vffffffdc = Vffffffec;
    Vffffffdc = Vffffffdc >> 0x1f;
    Vffffffec = Vffffffec << 1;
    Vffffffdc = Vffffffdc | Vffffffec;
    Vffffff7c = Vffffffdc;
    ebp = (ecx | edi) & ebx;
    ebp = ebp | ecx & edi;
    Vffffffe4 = Vffffffe4 + (Vffffffe0 >> 0x1b | Vffffffe0 << 5) + ebp + -1894007588 + Vffffff7c;
    edx = ecx;
    ecx = ecx << 0x1e;
    edx = edx >> 2 | ecx;
    Vffffffc4 = edx;
    Vffffff94 = Vffffff94 ^ Vffffffb8;
    Vffffff94 = Vffffff94 ^ Vffffff9c;
    Vffffff94 = Vffffff94 ^ Vffffffd4;
    Vffffff68 = Vffffff94;
    Vffffff68 = Vffffff68 >> 0x1f;
    Vffffff94 = Vffffff94 << 1;
    Vffffff68 = Vffffff68 | Vffffff94;
    ebp = Vffffffe0 & edx;
    ebx = Vffffffe0 | edx;
    ebx = ebx & edi | ebp;
    Vffffff90 = Vffffff90 + (Vffffffe4 >> 0x1b | Vffffffe4 << 5) + ebx + -1894007588 + Vffffff68;
    esi = Vffffffe0;
    Vffffffe0 = Vffffffe0 << 0x1e;
    esi = esi >> 2 | Vffffffe0;
    Vffffffa0 = esi;
    Vffffff8c = Vffffff8c ^ Vffffff70;
    Vffffff8c = Vffffff8c ^ Vffffffac;
    Vffffff8c = Vffffff8c ^ Vffffffd8;
    Vffffffe0 = Vffffff8c;
    Vffffffe0 = Vffffffe0 >> 0x1f;
    Vffffff8c = Vffffff8c << 1;
    Vffffffe0 = Vffffffe0 | Vffffff8c;
    ebx = Vffffffe4 & esi;
    edi = Vffffffe4 | esi;
    edi = edi & edx | ebx;
    *(esp + M00000064) = *(esp + M00000064) + (Vffffff90 >> 0x1b | Vffffff90 << 5) + edi + -1894007588 + Vffffffe0;
    ebp = Vffffffe4;
    Vffffffe4 = Vffffffe4 << 0x1e;
    ebp = ebp >> 2 | Vffffffe4;
    Vffffffa4 = ebp;
    Vffffffb8 = Vffffffb8 ^ Vffffffbc;
    Vffffffb8 = Vffffffb8 ^ Vffffffb0;
    Vffffffb8 = Vffffffb8 ^ Vffffffdc;
    Vffffffe4 = Vffffffb8;
    Vffffffe4 = Vffffffe4 >> 0x1f;
    Vffffffb8 = Vffffffb8 << 1;
    Vffffffe4 = Vffffffe4 | Vffffffb8;
    ecx = *(esp + M00000064);
    eax = *(esp + M00000064);
    edi = Vffffff90 & ebp;
    edx = Vffffff90 | ebp;
    ecx = ecx << 5;
    edx = edx & esi | edi;
    Vffffffc4 = Vffffffc4 + (eax >> 0x1b | ecx) + edx + -1894007588 + Vffffffe4;
    ebx = Vffffff90;
    Vffffff90 = Vffffff90 << 0x1e;
    ebx = ebx >> 2 | Vffffff90;
    Vffffffa8 = ebx;
    Vffffff70 = Vffffff70 ^ Vffffffc0;
    Vffffff70 = Vffffff70 ^ Vffffffcc;
    Vffffff70 = Vffffff70 ^ Vffffff68;
    Vffffff6c = Vffffff70;
    Vffffff6c = Vffffff6c >> 0x1f;
    Vffffff70 = Vffffff70 << 1;
    Vffffff6c = Vffffff6c | Vffffff70;
    esi = *(esp + M00000064);
    edx = *(esp + M00000064);
    edx = edx & ebx;
    esi = esi | ebx;
    esi = esi & ebp | edx;
    Vffffffa0 = Vffffffa0 + (Vffffffc4 >> 0x1b | Vffffffc4 << 5) + esi + -1894007588 + Vffffff6c;
    edi = *(esp + M00000064);
    *(esp + M00000064) = *(esp + M00000064) << 0x1e;
    edi = edi >> 2 | *(esp + M00000064);
    Vffffff7c = edi;
    Vffffffbc = Vffffffbc ^ Vffffff98;
    Vffffffbc = Vffffffbc ^ Vffffffd0;
    Vffffffbc = Vffffffbc ^ Vffffffe0;
    *(esp + M00000064) = Vffffffbc;
    *(esp + M00000064) = *(esp + M00000064) >> 0x1f;
    Vffffffbc = Vffffffbc << 1;
    *(esp + M00000064) = *(esp + M00000064) | Vffffffbc;
    edx = *(esp + M00000064);
    esi = Vffffffc4 & edi;
    ebp = Vffffffc4 | edi;
    ebp = ebp & ebx | esi;
    Vffffffa4 = Vffffffa4 + (Vffffffa0 >> 0x1b | Vffffffa0 << 5) + ebp + -1894007588 + edx;
    edx = Vffffffc4;
    Vffffffc4 = Vffffffc4 << 0x1e;
    edx = edx >> 2 | Vffffffc4;
    Vffffffe8 = edx;
    Vffffffc0 = Vffffffc0 ^ Vffffffb4;
    Vffffffc0 = Vffffffc0 ^ Vffffffd4;
    Vffffffc0 = Vffffffc0 ^ Vffffffe4;
    Vffffffc4 = Vffffffc0;
    Vffffffc4 = Vffffffc4 >> 0x1f;
    Vffffffc0 = Vffffffc0 << 1;
    Vffffffc4 = Vffffffc4 | Vffffffc0;
    ebp = Vffffffa0 & edx;
    ebx = Vffffffa0 | edx;
    ebx = ebx & edi | ebp;
    Vffffffa8 = Vffffffa8 + (Vffffffa4 >> 0x1b | Vffffffa4 << 5) + ebx + -1894007588 + Vffffffc4;
    esi = Vffffffa0;
    Vffffffa0 = Vffffffa0 << 0x1e;
    esi = esi >> 2 | Vffffffa0;
    Vffffffec = esi;
    Vffffff98 = Vffffff98 ^ Vffffff9c;
    Vffffff98 = Vffffff98 ^ Vffffffd8;
    Vffffff98 = Vffffff98 ^ Vffffff6c;
    Vffffffa0 = Vffffff98;
    Vffffffa0 = Vffffffa0 >> 0x1f;
    Vffffff98 = Vffffff98 << 1;
    Vffffffa0 = Vffffffa0 | Vffffff98;
    ebx = Vffffffa4 & esi;
    ecx = Vffffffa4 | esi;
    ecx = ecx & edx | ebx;
    Vffffff7c = Vffffff7c + (Vffffffa8 >> 0x1b | Vffffffa8 << 5) + ecx + -1894007588 + Vffffffa0;
    ebp = Vffffffa4;
    Vffffffa4 = Vffffffa4 << 0x1e;
    ebp = ebp >> 2 | Vffffffa4;
    Vffffff94 = ebp;
    Vffffffb4 = Vffffffb4 ^ Vffffffac;
    Vffffffb4 = Vffffffb4 ^ Vffffffdc;
    Vffffffb4 = Vffffffb4 ^ *(esp + M00000064);
    Vffffffa4 = Vffffffb4;
    Vffffffa4 = Vffffffa4 >> 0x1f;
    Vffffffb4 = Vffffffb4 << 1;
    Vffffffa4 = Vffffffa4 | Vffffffb4;
    ecx = Vffffffa8 & ebp;
    edi = Vffffffa8 | ebp;
    edi = edi & esi | ecx;
    Vffffffe8 = Vffffffe8 + (Vffffff7c >> 0x1b | Vffffff7c << 5) + edi + -1894007588 + Vffffffa4;
    ebx = Vffffffa8;
    Vffffffa8 = Vffffffa8 << 0x1e;
    ebx = ebx >> 2 | Vffffffa8;
    Vffffff8c = ebx;
    Vffffff9c = Vffffff9c ^ Vffffffb0;
    Vffffff9c = Vffffff9c ^ Vffffff68;
    Vffffff9c = Vffffff9c ^ Vffffffc4;
    Vffffffa8 = Vffffff9c;
    Vffffffa8 = Vffffffa8 >> 0x1f;
    Vffffff9c = Vffffff9c << 1;
    Vffffffa8 = Vffffffa8 | Vffffff9c;
    edi = Vffffff7c & ebx;
    edx = Vffffff7c | ebx;
    edx = edx & ebp | edi;
    Vffffffec = Vffffffec + (Vffffffe8 >> 0x1b | Vffffffe8 << 5) + edx + -1894007588 + Vffffffa8;
    ecx = Vffffff7c;
    Vffffff7c = Vffffff7c << 0x1e;
    ecx = ecx >> 2 | Vffffff7c;
    Vffffffb8 = ecx;
    Vffffffac = Vffffffac ^ Vffffffcc;
    Vffffffac = Vffffffac ^ Vffffffe0;
    Vffffffac = Vffffffac ^ Vffffffa0;
    *esp = Vffffffac;
    *esp = *esp >> 0x1f;
    Vffffffac = Vffffffac << 1;
    *esp = *esp | Vffffffac;
    edi = *esp;
    edx = Vffffffe8 & ecx;
    esi = Vffffffe8 | ecx;
    esi = esi & ebx | edx;
    Vffffff94 = Vffffff94 + (Vffffffec >> 0x1b | Vffffffec << 5) + esi + -1894007588 + edi;
    edi = Vffffffe8;
    Vffffffe8 = Vffffffe8 << 0x1e;
    edi = edi >> 2 | Vffffffe8;
    Vffffff70 = edi;
    Vffffffb0 = Vffffffb0 ^ Vffffffd0;
    Vffffffb0 = Vffffffb0 ^ Vffffffe4;
    Vffffffb0 = Vffffffb0 ^ Vffffffa4;
    Vffffffe8 = Vffffffb0;
    Vffffffe8 = Vffffffe8 >> 0x1f;
    Vffffffb0 = Vffffffb0 << 1;
    Vffffffe8 = Vffffffe8 | Vffffffb0;
    esi = Vffffffec & edi;
    ebp = Vffffffec | edi;
    ebp = ebp & ecx | esi;
    Vffffff8c = Vffffff8c + (Vffffff94 >> 0x1b | Vffffff94 << 5) + ebp + -1894007588 + Vffffffe8;
    edx = Vffffffec;
    Vffffffec = Vffffffec << 0x1e;
    edx = edx >> 2 | Vffffffec;
    Vffffffbc = edx;
    Vffffffcc = Vffffffcc ^ Vffffffd4;
    Vffffffcc = Vffffffcc ^ Vffffff6c;
    Vffffffcc = Vffffffcc ^ Vffffffa8;
    Vffffffec = Vffffffcc;
    Vffffffec = Vffffffec >> 0x1f;
    Vffffffcc = Vffffffcc << 1;
    Vffffffec = Vffffffec | Vffffffcc;
    ebp = Vffffff94 & edx;
    ebx = Vffffff94 | edx;
    ebx = ebx & edi | ebp;
    Vffffffb8 = Vffffffb8 + (Vffffff8c >> 0x1b | Vffffff8c << 5) + ebx + -1894007588 + Vffffffec;
    esi = Vffffff94;
    Vffffff94 = Vffffff94 << 0x1e;
    esi = esi >> 2 | Vffffff94;
    Vffffffc0 = esi;
    Vffffffd0 = Vffffffd0 ^ Vffffffd8;
    Vffffffd0 = Vffffffd0 ^ *(esp + M00000064);
    Vffffffd0 = Vffffffd0 ^ *esp;
    Vffffff94 = Vffffffd0;
    Vffffff94 = Vffffff94 >> 0x1f;
    Vffffffd0 = Vffffffd0 << 1;
    Vffffff94 = Vffffff94 | Vffffffd0;
    ebx = Vffffff8c & esi;
    ecx = Vffffff8c | esi;
    ecx = ecx & edx | ebx;
    Vffffff70 = Vffffff70 + (Vffffffb8 >> 0x1b | Vffffffb8 << 5) + ecx + -1894007588 + Vffffff94;
    ebp = Vffffff8c;
    Vffffff8c = Vffffff8c << 0x1e;
    ebp = ebp >> 2 | Vffffff8c;
    Vffffff98 = ebp;
    Vffffffd4 = Vffffffd4 ^ Vffffffdc;
    Vffffffd4 = Vffffffd4 ^ Vffffffc4;
    Vffffffd4 = Vffffffd4 ^ Vffffffe8;
    Vffffffd0 = Vffffffd4;
    Vffffffd0 = Vffffffd0 >> 0x1f;
    Vffffffd4 = Vffffffd4 << 1;
    Vffffffd0 = Vffffffd0 | Vffffffd4;
    ecx = Vffffffb8 & ebp;
    edi = Vffffffb8 | ebp;
    edi = edi & esi | ecx;
    Vffffffbc = Vffffffbc + (Vffffff70 >> 0x1b | Vffffff70 << 5) + edi + -1894007588 + Vffffffd0;
    ebx = Vffffffb8;
    Vffffffb8 = Vffffffb8 << 0x1e;
    ebx = ebx >> 2 | Vffffffb8;
    Vffffffb4 = ebx;
    Vffffffd8 = Vffffffd8 ^ Vffffff68;
    Vffffffd8 = Vffffffd8 ^ Vffffffa0;
    Vffffffd8 = Vffffffd8 ^ Vffffffec;
    Vffffffd4 = Vffffffd8;
    Vffffffd4 = Vffffffd4 >> 0x1f;
    Vffffffd8 = Vffffffd8 << 1;
    Vffffffd4 = Vffffffd4 | Vffffffd8;
    edi = Vffffff70 & ebx;
    edx = Vffffff70 | ebx;
    edx = edx & ebp | edi;
    Vffffffc0 = Vffffffc0 + (Vffffffbc >> 0x1b | Vffffffbc << 5) + edx + -1894007588 + Vffffffd4;
    ecx = Vffffff70;
    Vffffff70 = Vffffff70 << 0x1e;
    ecx = ecx >> 2 | Vffffff70;
    Vffffff9c = ecx;
    Vffffffdc = Vffffffdc ^ Vffffffe0;
    Vffffffdc = Vffffffdc ^ Vffffffa4;
    Vffffffdc = Vffffffdc ^ Vffffff94;
    Vffffffd8 = Vffffffdc;
    Vffffffd8 = Vffffffd8 >> 0x1f;
    Vffffffdc = Vffffffdc << 1;
    Vffffffd8 = Vffffffd8 | Vffffffdc;
    edx = Vffffffbc & ecx;
    esi = Vffffffbc | ecx;
    esi = esi & ebx | edx;
    Vffffff98 = Vffffff98 + (Vffffffc0 >> 0x1b | Vffffffc0 << 5) + esi + -1894007588 + Vffffffd8;
    edi = Vffffffbc;
    Vffffffbc = Vffffffbc << 0x1e;
    edi = edi >> 2 | Vffffffbc;
    Vffffffac = edi;
    Vffffff68 = Vffffff68 ^ Vffffffe4;
    Vffffff68 = Vffffff68 ^ Vffffffa8;
    Vffffff68 = Vffffff68 ^ Vffffffd0;
    Vffffffdc = Vffffff68;
    Vffffffdc = Vffffffdc >> 0x1f;
    Vffffff68 = Vffffff68 << 1;
    Vffffffdc = Vffffffdc | Vffffff68;
    esi = Vffffffc0 & edi;
    ebp = Vffffffc0 | edi;
    ebp = ebp & ecx | esi;
    Vffffffb4 = Vffffffb4 + (Vffffff98 >> 0x1b | Vffffff98 << 5) + ebp + -1894007588 + Vffffffdc;
    edx = Vffffffc0;
    Vffffffc0 = Vffffffc0 << 0x1e;
    edx = edx >> 2 | Vffffffc0;
    Vffffffb0 = edx;
    Vffffffe0 = Vffffffe0 ^ Vffffff6c;
    Vffffffe0 = Vffffffe0 ^ *esp;
    Vffffffe0 = Vffffffe0 ^ Vffffffd4;
    Vffffff68 = Vffffffe0;
    Vffffff68 = Vffffff68 >> 0x1f;
    Vffffffe0 = Vffffffe0 << 1;
    Vffffff68 = Vffffff68 | Vffffffe0;
    ebp = Vffffff98 & edx;
    ecx = Vffffff98 | edx;
    ecx = ecx & edi | ebp;
    Vffffff9c = Vffffff9c + (Vffffffb4 >> 0x1b | Vffffffb4 << 5) + ecx + -1894007588 + Vffffff68;
    esi = Vffffff98;
    Vffffff98 = Vffffff98 << 0x1e;
    esi = esi >> 2 | Vffffff98;
    Vffffffcc = esi;
    Vffffffe4 = Vffffffe4 ^ *(esp + M00000064);
    Vffffffe4 = Vffffffe4 ^ Vffffffe8;
    Vffffffe4 = Vffffffe4 ^ Vffffffd8;
    Vffffffe0 = Vffffffe4;
    Vffffffe0 = Vffffffe0 >> 0x1f;
    Vffffffe4 = Vffffffe4 << 1;
    Vffffffe0 = Vffffffe0 | Vffffffe4;
    ecx = Vffffffb4 & esi;
    eax = Vffffffb4 | esi;
    eax = eax & edx | ecx;
    Vffffffac = Vffffffac + (Vffffff9c >> 0x1b | Vffffff9c << 5) + eax + -1894007588 + Vffffffe0;
    ebp = Vffffffb4;
    Vffffffb4 = Vffffffb4 << 0x1e;
    ebp = ebp >> 2 | Vffffffb4;
    Vffffff6c = Vffffff6c ^ Vffffffc4;
    Vffffff6c = Vffffff6c ^ Vffffffec;
    Vffffff6c = Vffffff6c ^ Vffffffdc;
    Vffffffe4 = Vffffff6c;
    Vffffffe4 = Vffffffe4 >> 0x1f;
    Vffffff6c = Vffffff6c << 1;
    Vffffffe4 = Vffffffe4 | Vffffff6c;
    eax = Vffffff9c ^ ebp ^ esi;
    Vffffffb0 = Vffffffb0 + (Vffffffac >> 0x1b | Vffffffac << 5) + eax + -899497514 + Vffffffe4;
    ecx = Vffffff9c;
    Vffffff9c = Vffffff9c << 0x1e;
    ecx = ecx >> 2 | Vffffff9c;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffffa0;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffff94;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffff68;
    Vffffff6c = *(esp + M00000064);
    Vffffff6c = Vffffff6c >> 0x1f;
    *(esp + M00000064) = *(esp + M00000064) << 1;
    Vffffff6c = Vffffff6c | *(esp + M00000064);
    Vffffff7c = Vffffff6c;
    eax = Vffffffac ^ ecx ^ ebp;
    Vffffffcc = Vffffffcc + (Vffffffb0 >> 0x1b | Vffffffb0 << 5) + eax + -899497514 + Vffffff7c;
    edx = Vffffffac;
    Vffffffac = Vffffffac << 0x1e;
    edx = edx >> 2 | Vffffffac;
    Vffffffc4 = Vffffffc4 ^ Vffffffa4;
    Vffffffc4 = Vffffffc4 ^ Vffffffd0;
    Vffffffc4 = Vffffffc4 ^ Vffffffe0;
    *(esp + M00000064) = Vffffffc4;
    *(esp + M00000064) = *(esp + M00000064) >> 0x1f;
    Vffffffc4 = Vffffffc4 << 1;
    *(esp + M00000064) = *(esp + M00000064) | Vffffffc4;
    Vffffff7c = *(esp + M00000064);
    ebx = ebp;
    ebp = (Vffffffcc >> 0x1b | Vffffffcc << 5) + (Vffffffb0 ^ edx ^ ecx);
    edi = ecx;
    ecx = Vffffffb0;
    ebx = ebx + ebp + -899497514 + Vffffff7c;
    Vffffffb0 = Vffffffb0 << 0x1e;
    ecx = ecx >> 2 | Vffffffb0;
    Vffffff8c = ecx;
    Vffffffa0 = Vffffffa0 ^ Vffffffa8;
    Vffffffa0 = Vffffffa0 ^ Vffffffd4;
    Vffffffa0 = Vffffffa0 ^ Vffffffe4;
    Vffffffc4 = Vffffffa0;
    Vffffffc4 = Vffffffc4 >> 0x1f;
    Vffffffa0 = Vffffffa0 << 1;
    Vffffffc4 = Vffffffc4 | Vffffffa0;
    Vffffff7c = Vffffffc4;
    ebp = ebx << 5;
    eax = ebx >> 0x1b | ebp;
    eax = eax + (Vffffffcc ^ ecx ^ edx);
    ebp = Vffffffcc;
    edi = edi + eax + -899497514 + Vffffff7c;
    Vffffffcc = Vffffffcc << 0x1e;
    ebp = ebp >> 2 | Vffffffcc;
    Vffffffa0 = ebp;
    Vffffffa4 = Vffffffa4 ^ *esp;
    Vffffffa4 = Vffffffa4 ^ Vffffffd8;
    Vffffffa4 = Vffffffa4 ^ Vffffff6c;
    Vffffff74 = Vffffffa4;
    Vffffff74 = Vffffff74 >> 0x1f;
    Vffffffa4 = Vffffffa4 << 1;
    Vffffff74 = Vffffff74 | Vffffffa4;
    Vffffff7c = Vffffff74;
    esi = edx;
    edx = edi << 5;
    eax = edi >> 0x1b | edx;
    esi = esi + eax + (ebx ^ ebp ^ ecx) + -899497514 + Vffffff7c;
    Vffffffa8 = Vffffffa8 ^ Vffffffe8;
    Vffffffa8 = Vffffffa8 ^ Vffffffdc;
    Vffffffa8 = Vffffffa8 ^ *(esp + M00000064);
    Vffffff80 = Vffffffa8;
    Vffffff80 = Vffffff80 >> 0x1f;
    Vffffffa8 = Vffffffa8 << 1;
    Vffffff80 = Vffffff80 | Vffffffa8;
    Vffffff7c = Vffffff80;
    edx = ebx;
    ebx = ebx << 0x1e;
    edx = edx >> 2 | ebx;
    ebx = esi << 5;
    eax = esi >> 0x1b | ebx;
    Vffffff8c = Vffffff8c + eax + (edi ^ edx ^ ebp) + -899497514 + Vffffff7c;
    *esp = *esp ^ Vffffffec;
    *esp = *esp ^ Vffffff68;
    *esp = *esp ^ Vffffffc4;
    Vffffffcc = *esp;
    Vffffffcc = Vffffffcc >> 0x1f;
    *esp = *esp << 1;
    Vffffffcc = Vffffffcc | *esp;
    Vffffff7c = Vffffffcc;
    ebp = edi;
    edi = edi << 0x1e;
    ebp = ebp >> 2 | edi;
    Vffffffa0 = Vffffffa0 + (Vffffff8c >> 0x1b | Vffffff8c << 5) + (esi ^ ebp ^ edx) + -899497514 + Vffffff7c;
    Vffffffe8 = Vffffffe8 ^ Vffffff94;
    Vffffffe8 = Vffffffe8 ^ Vffffffe0;
    Vffffffe8 = Vffffffe8 ^ Vffffff74;
    Vffffff98 = Vffffffe8;
    Vffffff98 = Vffffff98 >> 0x1f;
    Vffffffe8 = Vffffffe8 << 1;
    Vffffff98 = Vffffff98 | Vffffffe8;
    Vffffff7c = Vffffff98;
    ecx = edx;
    edi = esi;
    esi = esi << 0x1e;
    edi = edi >> 2 | esi;
    eax = (Vffffffa0 >> 0x1b | Vffffffa0 << 5) + (Vffffff8c ^ edi ^ ebp);
    edx = Vffffff8c;
    ecx = ecx + eax + -899497514 + Vffffff7c;
    Vffffff8c = Vffffff8c << 0x1e;
    edx = edx >> 2 | Vffffff8c;
    Vffffffa4 = edx;
    Vffffffec = Vffffffec ^ Vffffffd0;
    Vffffffec = Vffffffec ^ Vffffffe4;
    Vffffffec = Vffffffec ^ Vffffff80;
    Vffffff84 = Vffffffec;
    Vffffff84 = Vffffff84 >> 0x1f;
    Vffffffec = Vffffffec << 1;
    Vffffff84 = Vffffff84 | Vffffffec;
    Vffffff7c = Vffffff84;
    eax = ecx << 5;
    ebx = ebp;
    ebp = ecx >> 0x1b | eax;
    ebp = ebp + (Vffffffa0 ^ edx ^ edi);
    esi = edi;
    edi = Vffffffa0;
    ebx = ebx + ebp + -899497514 + Vffffff7c;
    Vffffffa0 = Vffffffa0 << 0x1e;
    edi = edi >> 2 | Vffffffa0;
    Vffffffa8 = edi;
    Vffffff94 = Vffffff94 ^ Vffffffd4;
    Vffffff94 = Vffffff94 ^ Vffffff6c;
    Vffffff94 = Vffffff94 ^ Vffffffcc;
    Vffffff88 = Vffffff94;
    Vffffff88 = Vffffff88 >> 0x1f;
    Vffffff94 = Vffffff94 << 1;
    Vffffff88 = Vffffff88 | Vffffff94;
    Vffffff7c = Vffffff88;
    ebp = ebx << 5;
    eax = ebx >> 0x1b | ebp;
    esi = esi + eax + (ecx ^ edi ^ edx) + -899497514 + Vffffff7c;
    Vffffffd0 = Vffffffd0 ^ Vffffffd8;
    Vffffffd0 = Vffffffd0 ^ *(esp + M00000064);
    Vffffffd0 = Vffffffd0 ^ Vffffff98;
    Vffffff78 = Vffffffd0;
    Vffffff78 = Vffffff78 >> 0x1f;
    Vffffffd0 = Vffffffd0 << 1;
    Vffffff78 = Vffffff78 | Vffffffd0;
    Vffffff7c = Vffffff78;
    edx = ecx;
    ecx = ecx << 0x1e;
    edx = edx >> 2 | ecx;
    ecx = esi << 5;
    eax = esi >> 0x1b | ecx;
    Vffffffa4 = Vffffffa4 + eax + (ebx ^ edx ^ edi) + -899497514 + Vffffff7c;
    Vffffffd4 = Vffffffd4 ^ Vffffffdc;
    Vffffffd4 = Vffffffd4 ^ Vffffffc4;
    Vffffffd4 = Vffffffd4 ^ Vffffff84;
    Vffffff90 = Vffffffd4;
    Vffffff90 = Vffffff90 >> 0x1f;
    Vffffffd4 = Vffffffd4 << 1;
    Vffffff90 = Vffffff90 | Vffffffd4;
    Vffffff7c = Vffffff90;
    ecx = ebx;
    ebx = ebx << 0x1e;
    ecx = ecx >> 2 | ebx;
    Vffffffa8 = Vffffffa8 + (Vffffffa4 >> 0x1b | Vffffffa4 << 5) + (esi ^ ecx ^ edx) + -899497514 + Vffffff7c;
    edi = esi;
    esi = esi << 0x1e;
    edi = edi >> 2 | esi;
    *esp = edi;
    Vffffffd8 = Vffffffd8 ^ Vffffff68;
    Vffffffd8 = Vffffffd8 ^ Vffffff74;
    Vffffffd8 = Vffffffd8 ^ Vffffff88;
    ebp = edx;
    edx = Vffffffd8;
    Vffffffd8 = Vffffffd8 << 1;
    eax = (Vffffffa8 >> 0x1b | Vffffffa8 << 5) + (Vffffffa4 ^ edi ^ ecx);
    esi = Vffffffa4;
    edx = edx >> 0x1f | Vffffffd8;
    Vffffffa4 = Vffffffa4 << 0x1e;
    ebp = ebp + eax + -899497514 + edx;
    esi = esi >> 2 | Vffffffa4;
    Vffffffe8 = esi;
    Vffffffdc = Vffffffdc ^ Vffffffe0;
    Vffffffdc = Vffffffdc ^ Vffffff80;
    Vffffffdc = Vffffffdc ^ Vffffff78;
    Vffffff94 = Vffffffdc;
    Vffffff94 = Vffffff94 >> 0x1f;
    Vffffffdc = Vffffffdc << 1;
    Vffffff94 = Vffffff94 | Vffffffdc;
    Vffffff7c = Vffffff94;
    ebx = ecx;
    ecx = ebp << 5;
    eax = ebp >> 0x1b | ecx;
    eax = eax + (Vffffffa8 ^ esi ^ edi);
    ecx = Vffffffa8;
    ebx = ebx + eax + -899497514 + Vffffff7c;
    Vffffffa8 = Vffffffa8 << 0x1e;
    ecx = ecx >> 2 | Vffffffa8;
    Vffffffec = ecx;
    Vffffff68 = Vffffff68 ^ Vffffffe4;
    Vffffff68 = Vffffff68 ^ Vffffffcc;
    Vffffff68 = Vffffff68 ^ Vffffff90;
    Vffffff8c = Vffffff68;
    Vffffff8c = Vffffff8c >> 0x1f;
    Vffffff68 = Vffffff68 << 1;
    Vffffff8c = Vffffff8c | Vffffff68;
    Vffffff7c = Vffffff8c;
    edi = ebx << 5;
    eax = ebx >> 0x1b | edi;
    *esp = *esp + eax + (ebp ^ ecx ^ esi) + -899497514 + Vffffff7c;
    Vffffffe0 = Vffffffe0 ^ Vffffff6c;
    Vffffffe0 = Vffffffe0 ^ Vffffff98;
    Vffffffe0 = Vffffffe0 ^ edx;
    Vffffff70 = Vffffffe0;
    Vffffff70 = Vffffff70 >> 0x1f;
    Vffffffe0 = Vffffffe0 << 1;
    Vffffff70 = Vffffff70 | Vffffffe0;
    Vffffff7c = Vffffff70;
    edx = *esp << 5;
    esi = ebp;
    ebp = ebp << 0x1e;
    esi = esi >> 2 | ebp;
    ebp = *esp;
    eax = ebx ^ esi ^ ecx;
    Vffffffe8 = Vffffffe8 + (ebp >> 0x1b | edx) + eax + -899497514 + Vffffff7c;
    ebp = ebx;
    ebx = ebx << 0x1e;
    ebp = ebp >> 2 | ebx;
    Vffffffcc = ebp;
    Vffffffe4 = Vffffffe4 ^ *(esp + M00000064);
    Vffffffe4 = Vffffffe4 ^ Vffffff84;
    Vffffffe4 = Vffffffe4 ^ Vffffff94;
    ecx = Vffffffe4;
    Vffffffe4 = Vffffffe4 << 1;
    ebx = *esp;
    ebx = ebx ^ ebp ^ esi;
    edx = (Vffffffe8 >> 0x1b | Vffffffe8 << 5) + ebx;
    ecx = ecx >> 0x1f | Vffffffe4;
    Vffffffec = Vffffffec + edx + -899497514 + ecx;
    edx = *esp;
    *esp = *esp << 0x1e;
    edx = edx >> 2 | *esp;
    Vffffff98 = edx;
    Vffffff6c = Vffffff6c ^ Vffffffc4;
    Vffffff6c = Vffffff6c ^ Vffffff88;
    Vffffff6c = Vffffff6c ^ Vffffff8c;
    eax = Vffffff6c;
    Vffffff6c = Vffffff6c << 1;
    edi = esi;
    ebx = Vffffffe8 ^ edx ^ ebp;
    ebp = Vffffffe8;
    esi = (Vffffffec >> 0x1b | Vffffffec << 5) + ebx + -899497514;
    Vffffffe8 = Vffffffe8 << 0x1e;
    edi = edi + (eax >> 0x1f | Vffffff6c) + esi;
    ebp = ebp >> 2 | Vffffffe8;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffff74;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffff78;
    *(esp + M00000064) = *(esp + M00000064) ^ Vffffff70;
    ebx = *(esp + M00000064);
    *(esp + M00000064) = *(esp + M00000064) << 1;
    esi = edi << 5;
    eax = edi >> 0x1b | esi;
    eax = eax + (Vffffffec ^ ebp ^ edx) + -899497514;
    Vffffffcc = Vffffffcc + (ebx >> 0x1f | *(esp + M00000064)) + eax;
    esi = Vffffffec;
    Vffffffec = Vffffffec << 0x1e;
    esi = esi >> 2 | Vffffffec;
    Vffffffc4 = Vffffffc4 ^ Vffffff80;
    Vffffffc4 = Vffffffc4 ^ Vffffff90;
    Vffffffc4 = Vffffffc4 ^ ecx;
    edx = Vffffffc4;
    Vffffffc4 = Vffffffc4 << 1;
    eax = edi ^ esi ^ ebp;
    ecx = (Vffffffcc >> 0x1b | Vffffffcc << 5) + eax + -899497514;
    Vffffff98 = Vffffff98 + (edx >> 0x1f | Vffffffc4) + ecx;
    *A4 = *A4 + Vffffff98;
    *(A4 + 4) = *(A4 + 4) + Vffffffcc;
    edx = edi;
    edi = edi << 0x1e;
    *(A4 + 8) = *(A4 + 8) + (edx >> 2 | edi);
    *(A4 + 0xc) = *(A4 + 0xc) + esi;
    eax = A4;
    *(eax + 0x10) = *(eax + 0x10) + ebp;
    esp = esp + 0x8c;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0045C844 - 0x0045C84F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045C844()
{



}

/*	Procedure: 0x0045C850 - 0x0045C883
 *	Argument size: -116
 *	Local size: 128
 *	Save regs size: 0
 *	Called by:
 *		L004304A0()
 *		L004353E0()
 */

L0045C850(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  Vffffff80;



    L0045C890( & Vffffff80);
    L0045C8D0( & Vffffff80, A8, Ac);
    return L0045C9A0( & Vffffff80, A10);
}

/*	Procedure: 0x0045C884 - 0x0045C88F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045C884()
{



}

/*	Procedure: 0x0045C890 - 0x0045C8C4
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00442070()
 *		L0045C850()
 */

L0045C890(A4)
/* unknown */ void  A4;
{



    *A4 = 1732584193;
    *(A4 + 4) = -271733879;
    *(A4 + 8) = -1732584194;
    *(A4 + 0xc) = 271733878;
    *(A4 + 0x10) = -1009589776;
    *(A4 + 0x14) = 0;
    *(A4 + 0x58) = 0;
}

/*	Procedure: 0x0045C8C5 - 0x0045C8CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045C8C5()
{



}

/*	Procedure: 0x0045C8D0 - 0x0045C99D
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00442070()
 *		L0045C850()
 *		L0045C9A0()
 */

L0045C8D0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = Ac;
    esi = A10;
    if(*(A8 + 0x58) == 0x40) {
        eax = L0045A370(A8, A8 + 0x18);
        *(A8 + 0x58) = 0;
        *(A8 + 0x14) = *(A8 + 0x14) + 1;
    }
    if(ebx == 0) {
        return;
    }
    if(*(A8 + 0x58) != 0) {
        while(esi != 0 && *(A8 + 0x58) < 0x40) {
            ecx = *(A8 + 0x58);
            *(A8 + 0x58) = *(A8 + 0x58) + 1;
            eax = *ebx & 0xff;
            ebx = ebx + 1;
            *(A8 + ecx + 0x18) = al;
            esi = esi - 1;
        }
        if(*(A8 + 0x58) == 0x40) {
            eax = L0045A370(A8, A8 + 0x18);
            *(A8 + 0x58) = 0;
            *(A8 + 0x14) = *(A8 + 0x14) + 1;
        }
        if(esi == 0) {
            esp = ebp - 0xc;
            return;
        }
    }
    while(esi >= 0x40) {
        eax = L0045A370(A8, ebx);
        *(A8 + 0x58) = 0;
        *(A8 + 0x14) = *(A8 + 0x14) + 1;
        esi = esi - 0x40;
        ebx = ebx + 0x40;
    }
    while(esi != 0 && *(A8 + 0x58) < 0x40) {
        ecx = *(A8 + 0x58);
        *(A8 + 0x58) = *(A8 + 0x58) + 1;
        eax = *ebx & 0xff;
        ebx = ebx + 1;
        *(A8 + ecx + 0x18) = al;
        esi = esi - 1;
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0045C99E - 0x0045C99F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045C99E()
{



}

/*	Procedure: 0x0045C9A0 - 0x0045CBFA
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L00442070()
 *		L0045C850()
 */

L0045C9A0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    L0045C8D0(A8, 0, 0);
    *(ebp - 0x10) = 0;
    eax = *(A8 + 0x14);
    ebx = eax << 6;
    if(ebx < eax) {
        *(ebp - 0x10) = *(ebp - 0x10) + 1;
    }
    *(ebp - 0x10) = *(ebp - 0x10) + (eax >> 0x1a);
    ecx = ebx;
    eax = *(A8 + 0x58);
    ebx = ebx + eax;
    if(ebx < ecx) {
        *(ebp - 0x10) = *(ebp - 0x10) + 1;
    }
    edx = ebx;
    ebx = ebx * 8;
    if(ebx < edx) {
        *(ebp - 0x10) = *(ebp - 0x10) + 1;
    }
    *(ebp - 0x10) = *(ebp - 0x10) + (edx >> 0x1d);
    if(eax < 0x38) {
        edx = *(A8 + 0x58);
        *(A8 + 0x58) = *(A8 + 0x58) + 1;
        *(A8 + edx + 0x18) = 0x80;
        do {
            ecx = *(A8 + 0x58);
            *(A8 + 0x58) = *(A8 + 0x58) + 1;
            *(A8 + ecx + 0x18) = 0;
        } while(*(A8 + 0x58) < 0x38);
    } else {
        edx = *(A8 + 0x58);
        *(A8 + 0x58) = *(A8 + 0x58) + 1;
        *(A8 + edx + 0x18) = 0x80;
        do {
            ecx = *(A8 + 0x58);
            *(A8 + 0x58) = *(A8 + 0x58) + 1;
            *(A8 + ecx + 0x18) = 0;
        } while(*(A8 + 0x58) < 0x40);
        L0045C8D0(A8, 0, 0);
        eax = A8 + 0x18;
        *eax = 0;
        *(eax + 4) = 0;
        *(eax + 8) = 0;
        *(eax + 0xc) = 0;
        *(eax + 0x10) = 0;
        *(eax + 0x14) = 0;
        *(eax + 0x18) = 0;
        *(eax + 0x1c) = 0;
        *(eax + 0x20) = 0;
        *(eax + 0x24) = 0;
        *(eax + 0x28) = 0;
        *(eax + 0x2c) = 0;
        *(eax + 0x30) = 0;
        *(eax + 0x34) = 0;
    }
    edx = *(ebp - 0x10) >> 0x18;
    *(A8 + 0x50) = dl;
    ecx = *(ebp - 0x10) >> 0x10;
    *(A8 + 0x51) = cl;
    *(A8 + 0x52) = *(ebp - 0x10) >> 8;
    al = *(ebp - 0x10);
    *(A8 + 0x53) = al;
    *(A8 + 0x54) = ebx >> 0x18;
    edx = A8 + 0x18;
    *(A8 + 0x55) = ebx >> 0x10;
    *(A8 + 0x56) = ebx >> 8;
    *(A8 + 0x57) = bl;
    L0045A370(A8, edx);
    ecx = *A8;
    ebx = ecx << 8 & 16711680;
    ebx = ebx | ecx >> 0x18;
    edx = ecx;
    ecx = ecx << 0x18;
    *Ac = ebx | edx >> 8 & 65280 | ecx;
    ebx = *(A8 + 4);
    eax = ebx << 8 & 16711680;
    eax = eax | ebx >> 0x18;
    ecx = ebx;
    ebx = ebx << 0x18;
    *(Ac + 4) = eax | ecx >> 8 & 65280 | ebx;
    eax = *(A8 + 8);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    ebx = eax;
    eax = eax << 0x18;
    *(Ac + 8) = edx | ebx >> 8 & 65280 | eax;
    edx = *(A8 + 0xc);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    eax = edx;
    edx = edx << 0x18;
    *(Ac + 0xc) = ecx | eax >> 8 & 65280 | edx;
    ecx = *(A8 + 0x10);
    ebx = ecx << 8 & 16711680;
    eax = ecx;
    edx = ecx;
    ebx = ebx | eax >> 0x18;
    ebx = ebx | edx >> 8 & 65280;
    *(Ac + 0x10) = ebx | ecx << 0x18;
    return L00434270(A8, 0x5c);
}

/*	Procedure: 0x0045CBFB - 0x0045CBFB
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045CBFB()
{



}

/*	Procedure: 0x0045CBFC - 0x0045CC01
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432350()
 *		L00432610()
 *		L00432D40()
 *		L00432F20()
 *		L00433200()
 */

L0045CBFC()
{



    goto ( *L004a0524);
}

/*	Procedure: 0x0045CC02 - 0x0045CC07
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0043243B()
 */

L0045CC02()
{



    goto ( *L004a0528);
}

/*	Procedure: 0x0045CC08 - 0x0045CC0D
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432450()
 */

L0045CC08()
{



    goto ( *L004a052c);
}

/*	Procedure: 0x0045CC0E - 0x0045CC13
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004325A0()
 */

L0045CC0E()
{



    goto ( *L004a0530);
}

/*	Procedure: 0x0045CC14 - 0x0045CC19
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432610()
 */

L0045CC14()
{



    goto ( *L004a0534);
}

/*	Procedure: 0x0045CC1A - 0x0045CC1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432610()
 *		L00432D40()
 */

L0045CC1A()
{



    goto ( *L004a0538);
}

/*	Procedure: 0x0045CC20 - 0x0045CC25
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432760()
 *		L00432B90()
 *		L00432C00()
 *		L00432D40()
 *		L00432F60()
 */

L0045CC20()
{



    goto ( *L004a053c);
}

/*	Procedure: 0x0045CC26 - 0x0045CC2B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432760()
 *		L00432D40()
 */

L0045CC26()
{



    goto ( *L004a0540);
}

/*	Procedure: 0x0045CC2C - 0x0045CC31
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432760()
 *		L00432B90()
 */

L0045CC2C()
{



    goto ( *L004a0544);
}

/*	Procedure: 0x0045CC32 - 0x0045CC37
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004328E0()
 */

L0045CC32()
{



    goto ( *L004a0548);
}

/*	Procedure: 0x0045CC38 - 0x0045CC3D
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004328E0()
 */

L0045CC38()
{



    goto ( *L004a054c);
}

/*	Procedure: 0x0045CC3E - 0x0045CC49
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00433580()
 */

L0045CC3E()
{



    goto ( *L004a0550);
    goto ( *L004a0554);
}

/*	Procedure: 0x0045CC4A - 0x0045CC4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432C80()
 */

L0045CC4A()
{



    goto ( *L004a0558);
}

/*	Procedure: 0x0045CC50 - 0x0045CC55
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432C80()
 */

L0045CC50()
{



    goto ( *L004a055c);
}

/*	Procedure: 0x0045CC56 - 0x0045CC5B
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432D40()
 */

L0045CC56()
{



    goto ( *L004a0560);
}

/*	Procedure: 0x0045CC5C - 0x0045CC61
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00432F60()
 *		L00433030()
 *		L00433130()
 */

L0045CC5C()
{



    goto ( *L004a0564);
}

/*	Procedure: 0x0045CC62 - 0x0045CC67
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00433200()
 */

L0045CC62()
{



    goto ( *L004a0568);
}

/*	Procedure: 0x0045CC68 - 0x0045CC6D
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00433200()
 */

L0045CC68()
{



    goto ( *L004a056c);
}

/*	Procedure: 0x0045CC6E - 0x0045CC73
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00433580()
 */

L0045CC6E()
{



    goto ( *L004a0570);
}

/*	Procedure: 0x0045CC80 - 0x0045CCCF
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0045CEF0()
 *		L0045D260()
 */

L0045CC80(Ac, A10)
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    (save)Ac;
    (save)ebp;
    ebp = *(Ac + 8);
    ebx = *(Ac + 0xc) & 65535;
    edx = 0;
    eax = A10 - ebp;
    ebx = ebx / ebx;
    edx = ebx % ebx;
    edx = *(Ac + 0x1c) & 65535;
    *(A10 + 4) = dx;
    *(A10 + 6) = 65535;
    ecx = eax;
    *(Ac + 0x1c) = cx;
    if(dx == -1) {
        *(Ac + 0x1a) = cx;
    } else {
        eax = dx & 65535;
        eax = ebx * ebx;
        *(ebp + eax + 6) = cx;
    }
    (restore)ebp;
    (restore)Ac;
}

/*	Procedure: 0x0045CCD0 - 0x0045CD2F
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0045CEF0()
 *		L0045D100()
 *		L0045D260()
 */

L0045CCD0(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    eax = A4;
    (save)ebx;
    (save)esi;
    (save)A8;
    (save)ebp;
    edx = *(A8 + 4) & 65535;
    ebp = *(eax + 8);
    ebx = *(eax + 0xc) & 65535;
    ecx = *(A8 + 6) & 65535;
    *(A8 + 6) = 65535;
    dx :: -1;
    if(!( *(A8 + 4) = *(A8 + 6) & 65535)) {
        *(eax + 0x1a) = cx;
    } else {
        esi = dx & 65535;
        *(ebp + ebx * ebx + 6) = cx;
    }
    if(cx == -1) {
        *(eax + 0x1c) = dx;
    } else {
        eax = cx & 65535;
        eax = ebx * ebx;
        *(ebp + eax + 4) = dx;
    }
    (restore)ebp;
    (restore)A8;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0045CD30 - 0x0045CEA4
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004389E0()
 */

L0045CD30(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 8;
    if(A8 == 0 || A8 >= 65535 || Ac >= 65535 || A10 == 0 || A10 >= 65535) {
        L00429610(65538);
    }
    *(ebp - 0x10) = A8;
    *(ebp - 0x10) = *(ebp - 0x10) + 3;
    *(ebp - 0x10) = *(ebp - 0x10) & -4;
    *(ebp - 0x10) = *(ebp - 0x10) + 8;
    esi = (Ac + 3 & -4) + *(ebp - 0x10);
    if(esi >= 65535) {
        L00429610(65538);
    }
    eax = A10;
    edx = eax;
    edx = esi * esi;
    *(ebp - 0x14) = eax;
    *(ebp - 0x14) = *(ebp - 0x14) << 1;
    *(ebp - 0x14) = *(ebp - 0x14) + 3;
    *(ebp - 0x14) = *(ebp - 0x14) & -4;
    ebx = L0042E3A0(edx + *(ebp - 0x14) + 0x24);
    ecx = ebx + 0x24;
    edi = ecx + *(ebp - 0x14);
    *(ebx + 4) = ecx;
    *(ebx + 8) = edi;
    *(ebx + 0xc) = si;
    *(ebx + 0xe) = A8;
    *(ebx + 0x10) = Ac;
    *(ebx + 0x12) = *(ebp - 0x10);
    *(ebx + 0x14) = A10;
    *(ebx + 0x1a) = 65535;
    *(ebx + 0x1c) = 65535;
    L00433F80(ecx, A10, 65535);
    edx = 1;
    if(A10 > 1) {
        ecx = A10 - 8;
        if(A10 - 1 > 8) {
            do {
                *(edi + 2) = dx;
                edi = edi + esi;
                eax = edx + 1;
                *(edi + 2) = ax;
                edi = edi + esi;
                eax = eax + 1;
                *(edi + 2) = ax;
                edi = edi + esi;
                eax = eax + 1;
                *(edi + 2) = ax;
                edi = edi + esi;
                eax = eax + 1;
                *(edi + 2) = ax;
                edi = edi + esi;
                eax = eax + 1;
                *(edi + 2) = ax;
                edi = edi + esi;
                eax = eax + 1;
                *(edi + 2) = ax;
                edi = edi + esi;
                eax = eax + 1;
                edx = edx + 8;
                *(edi + 2) = ax;
                edi = edi + esi;
            } while(edx < ecx);
        }
        do {
            *(edi + 2) = dx;
            edx = edx + 1;
            edi = edi + esi;
        } while(edx < A10);
    }
    *(edi + 2) = 65535;
    *ebx = -1247474631;
    esp = ebp - 0xc;
    return ebx;
}

/*	Procedure: 0x0045CEA5 - 0x0045CEAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045CEA5()
{



}

/*	Procedure: 0x0045CEB0 - 0x0045CEE2
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004389E0()
 */

L0045CEB0(A8)
/* unknown */ void  A8;
{



    eax = A8;
    ecx = *eax;
    if(ecx == 0) {
        return;
    }
    if(*ecx != -1247474631) {
        *eax = 0;
        esp = ebp;
        return;
    }
    *ecx = 0;
    eax = L0042E3E0(eax);
    esp = ebp;
}

/*	Procedure: 0x0045CEE3 - 0x0045CEEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045CEE3()
{



}

/*	Procedure: 0x0045CEF0 - 0x0045D0F7
 *	Argument size: 16
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L00438A50()
 */

L0045CEF0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(A8 == 0 || *A8 != -1247474631) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    eax = *(A8 + 0x10) & 65535;
    *(ebp - 0x1c) = eax;
    if(eax != 0 && A10 == 0) {
        L00429610(65538);
    }
    eax = A8;
    Vfffffff0 = *(eax + 8);
    Vffffffec = *(eax + 0xc) & 65535;
    edi = *(A8 + 0x18) & 65535;
    if(di == -1) {
        for(edi = *(A8 + 0x1a) & 65535; 1; edi = *(esi + 6) & 65535) {
            if(di == -1) {
                L0042F750(0x479110);
                L00429610(65551);
            }
            esi = di & 65535;
            esi = Vffffffec * Vffffffec + Vfffffff0;
            if(*esi & 65535 & 1) {
                break;
            }
        }
        L0045CCD0(A8, esi);
        L00435000(esi + 8, *(A8 + 0xe) & 65535, 0x100);
        ebx = eax;
        eax = ebx;
        edx = 0;
        *(ebp - 0x20) = (( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) % ( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) & 65535) + (( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) % ( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) & 65535);
        *(ebp - 0x20) = *(ebp - 0x20) + *(A8 + 4);
        ebx = *( *(ebp - 0x20)) & 65535;
        for(*(ebp - 0x18) = 0; 1; *(ebp - 0x18) = eax) {
            if(bx == -1) {
                L00429610(65546);
            }
            eax = bx & 65535;
            eax = Vffffffec * Vffffffec + Vfffffff0;
            eax :: esi;
            if(!(ebx = *(eax + 2) & 65535)) {
                break;
            }
        }
        if(*(ebp - 0x18) != 0) {
            *( *(ebp - 0x18) + 2) = bx;
        } else {
            *( *(ebp - 0x20)) = bx;
        }
    } else {
        esi = di & 65535;
        esi = Vffffffec * Vffffffec + Vfffffff0;
        *(A8 + 0x18) = *(esi + 2) & 65535;
        *(A8 + 0x16) = *(A8 + 0x16) + 1;
    }
    edx = A14 != 0 ? 1 : 0;
    *esi = dx;
    L004342A0(esi + 8, Ac, *(A8 + 0xe) & 65535);
    L004342A0(( *(A8 + 0x12) & 65535) + esi, A10, *(ebp - 0x1c));
    eax = L00435000(Ac, *(A8 + 0xe) & 65535, 0x100);
    edx = 0;
    edx = (( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) % ( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) & 65535) + (( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) % ( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) & 65535) + *(A8 + 4);
    *(esi + 2) = *edx & 65535;
    *edx = di;
    (save)esi;
    L0045CC80(A8);
    eax = di & 65535;
    (restore)ecx;
}

/*	Procedure: 0x0045D0F8 - 0x0045D0FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045D0F8()
{



}

/*	Procedure: 0x0045D100 - 0x0045D251
 *	Argument size: 8
 *	Local size: 24
 *	Save regs size: 12
 *	Called by:
 *		L00438A50()
 */

L0045D100(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(A8 == 0 || Ac == 0) {
        return eax | -1;
    }
    eax = A8;
    if(*eax != -1247474631) {
        esp = ebp - 0xc;
        return eax | -1;
    }
    eax = A8;
    *(ebp - 0x20) = *(eax + 8);
    Vffffffe8 = *(eax + 0xc) & 65535;
    eax = *(A8 + 0xe) & 65535;
    *(ebp - 0x1c) = eax;
    ebx = L00435000(Ac, *(ebp - 0x1c), 0x100);
    eax = ebx;
    edx = 0;
    ebx = ( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535) % ( *(A8 + 0x14) & 65535) / ( *(A8 + 0x14) & 65535);
    Vfffffff0 = (bx & 65535) + (bx & 65535);
    Vfffffff0 = Vfffffff0 + *(A8 + 4);
    eax = Vfffffff0;
    edi = *eax & 65535;
    Vffffffec = 0;
    *(ebp - 0x24) = 0;
    if(di != -1) {
        do {
            esi = di & 65535;
            esi = Vffffffe8 * Vffffffe8 + *(ebp - 0x20);
            ecx = esi + 8;
            ebx = *(esi + 2) & 65535;
            if(L00434380(ecx, Ac, *(ebp - 0x1c)) != 0) {
                goto L0045d1c4;
            }
            Vffffffec = esi;
            edi = ebx;
        } while(bx != -1);
        goto L0045d1eb;
L0045d1c4:
        *(ebp - 0x24) = esi;
        if(Vffffffec != 0) {
            eax = Vffffffec;
            *(eax + 2) = bx;
        } else {
            eax = Vfffffff0;
            *eax = bx;
        }
    }
L0045d1eb:
    if(*(ebp - 0x24) == 0) {
        esp = ebp - 0xc;
        return eax | -1;
    }
    L0045CCD0(A8, *(ebp - 0x24));
    *( *(ebp - 0x24)) = 0;
    *( *(ebp - 0x24) + 2) = *(A8 + 0x18) & 65535;
    *(A8 + 0x18) = di;
    L00434150( *(ebp - 0x24) + 8, Vffffffe8 - 8);
    *(A8 + 0x16) = *(A8 + 0x16) - 1;
    esp = ebp - 0xc;
    return di & 65535;
}

/*	Procedure: 0x0045D252 - 0x0045D25F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045D252()
{



}

/*	Procedure: 0x0045D260 - 0x0045D353
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L00438A50()
 */

L0045D260(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0xc;
    if(A8 == 0 || *A8 != -1247474631) {
        A10 = L00429610(65561);
    }
    if(Ac != 0) {
        edi = L00435000(Ac, *(A8 + 0xe) & 65535, 0x100);
        esi = *(A8 + 0x14) & 65535;
        A10 = edi;
        edx = 0;
        edx = esi / esi % esi / esi;
        ecx = *(A8 + 4);
        edi = edx;
        edi = *(ecx + (di & 65535) * 2) & 65535;
        *(ebp - 0x14) = *(A8 + 8);
        *(ebp - 0x18) = *(A8 + 0xc) & 65535;
        A10 = *(A8 + 0xe) & 65535;
        *(ebp - 0x10) = A10;
        if(di == -1) {
            goto L0045d33a;
        }
        do {
            esi = di & 65535;
            esi = *(ebp - 0x18) * *(ebp - 0x18) + *(ebp - 0x14);
            if(L00434380(esi + 8, Ac, *(ebp - 0x10)) != 0) {
                goto L0045d2f6;
            }
L0045d330:
            edi = *(esi + 2) & 65535;
        } while(di != -1);
        goto L0045d33a;
L0045d2f6:
        L0045CCD0(A8, esi);
        (save)esi;
        L0045CC80(A8);
        (restore)ecx;
        if(A14 != 0) {
            *esi = *esi | 1;
        }
        if(A10 != 0) {
            ecx = ( *(A8 + 0x12) & 65535) + esi;
            *A10 = ecx;
        }
        esp = ebp - 0xc;
        return di & 65535;
        goto L0045d330;
    }
L0045d33a:
    if(A10 != 0) {
        *A10 = 0;
    }
    esp = ebp - 0xc;
    return A10 | -1;
}

/*	Procedure: 0x0045D354 - 0x0045D35F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045D354()
{



}

/*	Procedure: 0x0045D360 - 0x0045D389
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004389E0()
 */

L0045D360(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    if(A8 == 0 || *A8 != -1247474631) {
        L00429610(65561);
    }
    *(A8 + 0x20) = Ac;
    return *(A8 + 0x20);
}

/*	Procedure: 0x0045D38A - 0x0045D38F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045D38A()
{



}

/*	Procedure: 0x0045D390 - 0x0045D3B6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00438A50()
 */

L0045D390(A8)
/* unknown */ void  A8;
{



    if(A8 == 0 || *A8 != -1247474631) {
        L00429610(65561);
    }
    return *(A8 + 0x20);
}

/*	Procedure: 0x0045D3B7 - 0x0045D3BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045D3B7()
{



}

/*	Procedure: 0x0045D4AB - 0x0045D4AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045D4AB()
{



}

/*	Procedure: 0x0045D4B0 - 0x0045D7D1
 *	Argument size: 8
 *	Local size: 20
 *	Save regs size: 12
 *	Called by:
 *		L0045D7E0()
 */

L0045D4B0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(Ac < 0x88) {
L0045d4c2:
        eax = L00429610(65546);
    }
    Vfffffff0 = A8;
    edx = *Vfffffff0;
    esi = edx << 8 & 16711680;
    ebx = edx;
    edi = edx;
    ebx = ebx >> 0x18;
    esi = esi | ebx;
    edi = edi >> 8 & 65280;
    esi = esi | edi;
    esi = esi | edx << 0x18;
    if(esi != 625492304) {
        eax = L00429610(65545);
    }
    eax = *(Vfffffff0 + 4) & 65535;
    ecx = eax << 8;
    if((ecx | eax >> 8) != 1) {
        eax = L00429610(65544);
    }
    ebx = 4;
    if(!(esi = Vfffffff0 + 0x2c)) {
L0045d540:
        edi = *esi;
        edx = edi << 8 & 16711680;
        ecx = edi >> 0x18;
        edx = edx | ecx;
        ecx = *(esi + 4);
        eax = edi;
        edi = edi << 0x18;
        eax = eax >> 8 & 65280;
        edx = edx | eax;
        eax = ecx << 8;
        edx = edx | edi;
        eax = eax & 16711680;
        edi = ecx >> 0x18;
        eax = eax | edi;
        edi = ecx >> 8 & 65280;
        eax = eax | edi;
        ecx = ecx << 0x18;
        eax = eax | ecx;
        if(edx > Ac || eax > Ac) {
            goto L0045d4c2;
        }
        edi = eax + edx;
        if(edi > Ac || edx & 3) {
            goto L0045d4c2;
        }
        esi = esi + 8;
        if(ebx = ebx - 1) {
            goto L0045d540;
        }
    }
    eax = *(Vfffffff0 + 0x34);
    ecx = eax << 8 & 16711680;
    edi = eax >> 0x18;
    ecx = ecx | edi;
    esi = eax;
    eax = eax << 0x18;
    ecx = ecx | esi >> 8 & 65280 | eax;
    eax = Vfffffff0;
    edx = *(eax + 0x38);
    ebx = edx;
    *(ebp - 0x20) = edx;
    edi = edx;
    ebx = ebx >> 8 & 65280;
    *(ebp - 0x20) = *(ebp - 0x20) << 8;
    *(ebp - 0x20) = *(ebp - 0x20) & 16711680;
    *(ebp - 0x20) = *(ebp - 0x20) | edi >> 0x18;
    *(ebp - 0x20) = *(ebp - 0x20) | ebx;
    if(!( *(ebp - 0x20) = *(ebp - 0x20) | edx << 0x18)) {
        if(*(ebp - 0x20) < 0x840) {
            goto L0045d4c2;
        }
        Vffffffec = eax;
        Vffffffec = Vffffffec + ecx;
        *(ebp - 0x18) = Vffffffec;
        *(ebp - 0x18) = *(ebp - 0x18) + 0x40;
        *(ebp - 0x1c) = 0x200;
        if(!( *(ebp - 0x1c) = *(ebp - 0x1c) - 1)) {
            eax = *( *(ebp - 0x18));
            edi = eax << 8 & 16711680;
            esi = eax;
            ebx = eax;
            edi = edi | esi >> 0x18;
            edi = edi | ebx >> 8 & 65280;
            if(!(edi = edi | eax << 0x18)) {
                if(edi > *(ebp - 0x20) || edi + 0x14 > *(ebp - 0x20)) {
                    goto L0045d4c2;
                }
                esi = Vffffffec + edi;
                ecx = *esi & 65535;
                ebx = ecx;
                eax = *(esi + 2) & 65535;
                ebx = ebx << 8;
                ecx = ecx >> 8;
                edx = eax;
                ebx = ebx | ecx;
                edx = edx << 8;
                edx = edx | eax >> 8;
                ebx = bx & 65535;
                ebx :: 0;
                if((edx = dx & 65535) || edx == 0 || ebx > 16384 || edx > 16384) {
                    goto L0045d4c2;
                }
                ecx = ( *(esi + 5) & 0xff) - 1;
                if(ecx > 7) {
                    goto L0045d4c2;
                }
                switch(ecx) {
                    case 0:
L0045d6f9:
                        ecx = (ebx + 0x1f & -32) >> 3;
                        goto L0045d71f;
                    case 1:
                        ecx = (ebx + 0xf & -16) >> 2;
                        goto L0045d71f;
                    case 2:
                        goto L0045d4c2;
                    case 3:
                        ecx = (ebx + 7 & -8) >> 1;
                        goto L0045d71f;
                    case 4:
                        goto L0045d4c2;
                    case 5:
                        goto L0045d4c2;
                    case 6:
                        goto L0045d4c2;
                    case 7:
                        goto L0045d719;
                }
                goto L0045d6f9;
L0045d719:
                ecx = ebx + 3 & -4;
                eax = *(esi + 4) & 0xff & 0xf;
                if(eax > 8) {
                    goto L0045d4c2;
                }
                goto ( *(eax * 4 + 0x4791f4));
                eax = 0;
                goto L0045d755;
                eax = (ebx + 0xf & -16) >> 2;
                goto L0045d755;
                eax = (ebx + 7 & -8) >> 1;
                goto L0045d755;
                ebx = ebx + 3 & -4;
                ebx = edx * edx;
                ecx = edx * edx;
                ecx = ecx + ebx + (( *(esi + 6) & 0xff) + 1) * 4 + 0x14;
                if(ecx > *(ebp - 0x20) || ecx + edi > *(ebp - 0x20)) {
                    goto L0045d4c2;
                }
            }
            *(ebp - 0x18) = *(ebp - 0x18) + 4;
            if(*(ebp - 0x1c) = *(ebp - 0x1c) - 1) {
                goto L0045d650;
            }
        }
    }
    eax = *(Vfffffff0 + 0x40);
    esi = eax << 8 & 16711680;
    edx = eax;
    ebx = eax;
    esi = esi | edx >> 0x18;
    esi = esi | ebx >> 8 & 65280;
    eax = eax << 0x18;
    if(esi = esi | eax) {
        goto L0045d7ca;
    }
    if(esi < 0x330) {
        goto L0045d4c2;
    }
}

/*	Procedure: 0x0045D7E0 - 0x0045D9F2
 *	Argument size: 8
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0043C000()
 */

L0045D7E0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    edi = *L00486D34;
    edx = edi;
    *(ebp - 0x10) = edi;
    eax = edi >> 0x18;
    edx = edx >> 8 & 65280;
    *(ebp - 0x10) = *(ebp - 0x10) << 8;
    *(ebp - 0x10) = *(ebp - 0x10) & 16711680;
    *(ebp - 0x10) = *(ebp - 0x10) | eax;
    *(ebp - 0x10) = *(ebp - 0x10) | edx;
    *(ebp - 0x10) = *(ebp - 0x10) | edi << 0x18;
    *(ebp - 0x10) = *(ebp - 0x10) + 0x486cf8;
    ecx = *L00486D38;
    esi = ecx << 8 & 16711680;
    eax = ecx;
    edx = ecx;
    esi = esi | eax >> 0x18;
    esi = esi | edx >> 8 & 65280;
    esi = esi | ecx << 0x18;
    esi = esi >> 2;
    if(A8 != 0) {
        L0045D4B0(A8, Ac);
        edi = *(A8 + 0x38);
        eax = edi << 8 & 16711680;
        eax = eax | edi >> 0x18;
        eax = eax | edi >> 8 & 65280;
        if(!(eax = eax | edi << 0x18)) {
            edx = *(A8 + 0x34);
            ecx = edx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            ecx = ecx | edx >> 8 & 65280;
            ecx = (ecx | edx << 0x18) + A8;
        } else {
            ecx = 0;
        }
        M00481010 = ecx;
        M00481014 = eax;
        edi = *(A8 + 0x48);
        edx = edi << 8 & 16711680;
        eax = edi;
        ecx = edi;
        edx = edx | eax >> 0x18;
        edx = edx | ecx >> 8 & 65280;
        if(!(edx = edx | edi << 0x18)) {
            edi = *(A8 + 0x44);
            eax = edi << 8 & 16711680;
            eax = eax | edi >> 0x18;
            eax = eax | edi >> 8 & 65280;
            eax = (eax | edi << 0x18) + A8;
        } else {
            eax = 0;
        }
        M00481008 = eax;
        M0048100c = edx;
        ecx = *(A8 + 0x40);
        edi = ecx << 8 & 16711680;
        edx = ecx;
        eax = ecx;
        edi = edi | edx >> 0x18;
        edi = edi | eax >> 8 & 65280;
        if(edi = edi | ecx << 0x18) {
            goto L0045d9d8;
        }
        ecx = *(A8 + 0x3c);
        esi = ecx << 8 & 16711680;
        esi = esi | ecx >> 0x18;
        eax = ecx;
        ecx = ecx << 0x18;
        M00481000 = (esi | eax >> 8 & 65280 | ecx) + A8;
        esi = *(A8 + 0x40);
        edx = esi << 8 & 16711680;
        eax = esi;
        ecx = esi;
        edx = edx | eax >> 0x18;
        edx = edx | ecx >> 8 & 65280;
        M00481004 = (edx | esi << 0x18) >> 2;
    } else {
        M00481010 = 0;
        M00481014 = 0;
        M00481008 = 0;
        M0048100c = 0;
L0045d9d8:
        M00481000 = *(ebp - 0x10);
        M00481004 = esi;
    }
    return L0041F810();
}

/*	Procedure: 0x0045D9F3 - 0x0045D9FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045D9F3()
{



}

/*	Procedure: 0x0045DA00 - 0x0045DA94
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0045DCA0()
 *		L0045E0E0()
 *		L0045E3A0()
 *		L0045E430()
 *		L00460660()
 */

L0045DA00(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    (save)A8;
    (save)ebp;
    edx = *A4 & 65535;
    ebp = edx;
    edx = edx >> 8;
    ebp = (ebp << 8 | edx) & 65535;
    *A8 = ebp;
    ecx = *(A4 + 2) & 65535;
    edx = ecx << 8;
    *(A8 + 4) = (edx | ecx >> 8) & 65535;
    edx = *(A4 + 5) & 0xff;
    *(A8 + 8) = edx;
    edx = *(A8 + 8) - 1;
    if(edx > 3) {
        goto L0045da66;
    }
    switch(edx) {
        case 0:
L0045da46:
            edx = (ebp + 0x1f & -32) >> 3;
            goto L0045da6c;
        case 1:
            edx = (ebp + 0xf & -16) >> 2;
            goto L0045da6c;
        case 2:
L0045da66:
            *(A8 + 0xc) = ebp + 3 & -4;
            ecx = ( *(A4 + 6) & 0xff) + 1;
            *(A8 + 0x10) = ecx;
            *(A8 + 0x14) = 0;
            edx = A4 + 0x14;
            *(A8 + 0x1c) = edx;
            *(A8 + 0x18) = edx + ecx * 4;
            (restore)ebp;
            (restore)A8;
            return;
        case 3:
            edx = (ebp + 7 & -8) >> 1;
            goto L0045da6c;
    }
    goto L0045da46;
}

/*	Procedure: 0x0045DAA0 - 0x0045DB03
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0045DCA0()
 *		L0045E0E0()
 */

L0045DAA0(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    eax = A14;
    (save)edi;
    esi = A10;
    ebx = A20;
    if(Ac >= eax) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    edi = ebx + A24;
    do {
        eax = L004497A0(A8, Ac, esi, A14, L00466830(A18, A1c, ebx));
        ebx = ebx + 1;
        esi = esi + 1;
    } while(ebx < edi);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0045DB04 - 0x0045DB0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045DB04()
{



}

/*	Procedure: 0x0045DB10 - 0x0045DB97
 *	Argument size: 36
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0045DCA0()
 *		L0045E0E0()
 */

L0045DB10(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = A14;
    esp = esp - 8;
    edi = A10;
    esi = A20;
    if(Ac >= eax) {
        return;
    }
    eax = A18;
    ecx = *(eax + 0x10);
    ebx = *(eax + 0x1c);
    *(ebp - 0x10) = ecx;
    *(ebp - 0x14) = esi;
    eax = A24;
    *(ebp - 0x14) = *(ebp - 0x14) + eax;
    do {
        eax = L00466760(A18, A1c, esi);
        if(eax != A28) {
            ecx = eax >= *(ebp - 0x10) ? 0 : *(ebx + eax * 4);
            eax = L004497A0(A8, Ac, edi, A14, ecx);
        }
        esi = esi + 1;
        edi = edi + 1;
    } while(esi < *(ebp - 0x14));
    esp = ebp - 0xc;
}

/*	Procedure: 0x0045DB98 - 0x0045DB9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045DB98()
{



}

/*	Procedure: 0x0045DBA0 - 0x0045DC03
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0045DCA0()
 */

L0045DBA0(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    eax = A14;
    (save)edi;
    esi = Ac;
    ebx = A1c;
    if(A10 >= eax) {
        esp = ebp - 0xc;
        (restore)edi;
        return;
    }
    edi = ebx + A24;
    do {
        eax = L00449990(A8, esi, A10, A14, L00466830(A18, ebx, A20));
        ebx = ebx + 1;
        esi = esi + 1;
    } while(ebx < edi);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0045DC04 - 0x0045DC0F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045DC04()
{



}

/*	Procedure: 0x0045DC10 - 0x0045DC97
 *	Argument size: 36
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0045DCA0()
 */

L0045DC10(A8, Ac, A10, A14, A18, A1c, A20, A24, A28)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = A14;
    esp = esp - 8;
    edi = Ac;
    esi = A1c;
    if(A10 >= eax) {
        return;
    }
    eax = A18;
    ecx = *(eax + 0x10);
    ebx = *(eax + 0x1c);
    *(ebp - 0x10) = ecx;
    *(ebp - 0x14) = esi;
    eax = A24;
    *(ebp - 0x14) = *(ebp - 0x14) + eax;
    do {
        eax = L00466760(A18, esi, A20);
        if(eax != A28) {
            ecx = eax >= *(ebp - 0x10) ? 0 : *(ebx + eax * 4);
            eax = L00449990(A8, edi, A10, A14, ecx);
        }
        esi = esi + 1;
        edi = edi + 1;
    } while(esi < *(ebp - 0x14));
    esp = ebp - 0xc;
}

/*	Procedure: 0x0045DC98 - 0x0045DC9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045DC98()
{



}

/*	Procedure: 0x0045DCA0 - 0x0045E0D7
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0045E4B0()
 *		L0045E790()
 *		L0045E8D0()
 *		L0045EC20()
 *		L0045ED00()
 *		L00460660()
 *		L00460810()
 */

L0045DCA0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = ebp + -132;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0xa4;
    edi = A10;
    esi = Ac;
    L0045DA00(edi, ecx);
    *(ebp - 0x30) = *(edi + 0xc) & 0xff;
    *(ebp - 0x28) = *(edi + 0xe) & 0xff;
    *(ebp - 0x2c) = *(edi + 0xd) & 0xff;
    *(ebp - 0x24) = *(edi + 0xf) & 0xff;
    *(ebp - 0x34) = *esi;
    *(ebp - 0x4c) = *(esi + 4);
    *(ebp - 0x10) = *(esi + 8);
    *(ebp - 0x14) = *(esi + 0xc);
    eax = *(ebp - 0x34);
    *(ebp - 0x40) = eax;
    *(ebp + -176) = *(ebp - 0x40);
    eax = *(ebp - 0x4c);
    *(ebp - 0x1c) = eax;
    *(ebp + -172) = *(ebp - 0x1c);
    *(ebp - 0x5c) = 0;
    *(ebp - 0x58) = 0;
    *(ebp - 0x10) = *(ebp - 0x10) - *(ebp - 0x28);
    *(ebp - M00000064) = *(ebp - 0x10);
    *(ebp - 0x60) = *(ebp - 0x1c);
    *(ebp - 0x3c) = *(ebp + -132);
    *(ebp - 0x3c) = *(ebp - 0x3c) - *(ebp - 0x28);
    *(ebp - 0x54) = *(ebp - 0x3c);
    *(ebp - 0x50) = 0;
    *(ebp + -168) = *(ebp - 0x40);
    *(ebp - 0x14) = *(ebp - 0x14) - *(ebp - 0x24);
    *(ebp + -164) = *(ebp - 0x14);
    *(ebp + -160) = 0;
    *(ebp - 0x38) = *(ebp - 0x80);
    *(ebp - 0x38) = *(ebp - 0x38) - *(ebp - 0x24);
    *(ebp + -156) = *(ebp - 0x38);
    *(ebp + -144) = *(ebp - 0x10);
    *(ebp + -140) = *(ebp - 0x14);
    *(ebp + -152) = *(ebp - 0x3c);
    *(ebp + -148) = *(ebp - 0x38);
    if(!( *(edi + 4) & 0xff & 1)) {
        *(ebp + -136) = *(edi + 7) & 0xff;
        eax = *(ebp - 0x30);
        ebx = *(ebp + -136) & 0xff;
        esi = *(ebp - 0x2c);
        ebx = ebx << 0x18 | 1;
        *(ebp - 0x20) = eax;
        edx = ebp - 0x5c;
        ecx = ebp + -132;
        (save)0;
        L0044B2E0(A8, ebp + -176, ecx, edx, eax, esi, ebx);
        *(ebp - 0x48) = *(ebp + -136);
        *(ebp - 0x44) = *(ebp - 0x2c);
        eax = *(ebp - 0x30);
        edi = *(ebp - 0x34) + eax;
        *(ebp - 0x18) = eax;
        L0045DB10(A8, edi, *(ebp - 0x1c), *(ebp - 0x10), ebp + -132, eax, 0, *(ebp - 0x44), *(ebp - 0x48));
        eax = *(ebp - 0x28);
        *(ebp - 0x34) = eax;
        ecx = ebp - 0x54;
        edx = ebp - M00000064;
        (save)0;
        L0044B2E0(A8, edx, ebp + -132, ecx, eax, esi, ebx);
        esi = *(ebp - 0x4c) + *(ebp - 0x2c);
        L0045DC10(A8, *(ebp - 0x40), esi, *(ebp - 0x14), ebp + -132, 0, *(ebp - 0x44), *(ebp - 0x18), *(ebp - 0x48));
        eax = L00466760(ebp + -132, *(ebp - 0x18), *(ebp - 0x44));
        if(eax != *(ebp + -136)) {
            ecx = eax < *(ebp - 0x74) ? *( *(ebp - 0x68) + eax * 4) : 0;
            L004496A0(A8, ecx);
            L0044A090(A8, edi, esi, *(ebp - 0x10), *(ebp - 0x14));
        }
        L0045DC10(A8, *(ebp - 0x10), esi, *(ebp - 0x14), ebp + -132, *(ebp - 0x3c), *(ebp - 0x44), *(ebp - 0x28), *(ebp - 0x48));
        esi = *(ebp - 0x24);
        edx = ebp + -160;
        eax = ebp + -132;
        (save)0;
        L0044B2E0(A8, ebp + -168, eax, edx, *(ebp - 0x20), esi, ebx);
        L0045DB10(A8, edi, *(ebp - 0x14), *(ebp - 0x10), ebp + -132, *(ebp - 0x18), *(ebp - 0x38), *(ebp - 0x24), *(ebp - 0x48));
        eax = ebp + -152;
        ecx = ebp + -132;
        (save)0;
        eax = L0044B2E0(A8, ebp + -144, ecx, eax, *(ebp - 0x34), esi, ebx);
    } else {
        eax = *(ebp - 0x30);
        ebx = *(ebp - 0x2c);
        *(ebp - 0x18) = eax;
        ecx = ebp + -132;
        edx = ebp + -176;
        (save)0;
        L0044B0C0(A8, edx, ecx, ebp - 0x5c, eax, ebx);
        eax = *(ebp - 0x30);
        esi = *(ebp - 0x34) + eax;
        *(ebp - 0x20) = eax;
        edi = *(ebp - 0x2c);
        L0045DAA0(A8, esi, *(ebp - 0x1c), *(ebp - 0x10), ebp + -132, eax, 0, edi);
        eax = *(ebp - 0x28);
        *(ebp - 0x1c) = eax;
        ecx = ebp - 0x54;
        edx = ebp + -132;
        (save)0;
        L0044B0C0(A8, ebp - M00000064, edx, ecx, eax, ebx);
        ebx = *(ebp - 0x4c) + *(ebp - 0x2c);
        L0045DBA0(A8, *(ebp - 0x40), ebx, *(ebp - 0x14), ebp + -132, 0, edi, *(ebp - 0x20));
        L004496A0(A8, L00466830(ebp + -132, *(ebp - 0x20), edi));
        L0044A090(A8, esi, ebx, *(ebp - 0x10), *(ebp - 0x14));
        L0045DBA0(A8, *(ebp - 0x10), ebx, *(ebp - 0x14), ebp + -132, *(ebp - 0x3c), edi, *(ebp - 0x28));
        ebx = *(ebp - 0x24);
        eax = ebp + -160;
        edx = ebp + -132;
        (save)0;
        L0044B0C0(A8, ebp + -168, edx, eax, *(ebp - 0x18), ebx);
        L0045DAA0(A8, esi, *(ebp - 0x14), *(ebp - 0x10), ebp + -132, *(ebp - 0x20), *(ebp - 0x38), *(ebp - 0x24));
        eax = ebp + -152;
        edx = ebp + -132;
        (save)0;
        eax = L0044B0C0(A8, ebp + -144, edx, eax, *(ebp - 0x1c), ebx);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0045E0D8 - 0x0045E0DF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E0D8()
{



}

/*	Procedure: 0x0045E0E0 - 0x0045E234
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0045EF60()
 *		L00460660()
 */

L0045E0E0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = A10;
    ecx = ebp - M00000064;
    (save)edi;
    esp = esp - 0x58;
    esi = Ac;
    L0045DA00(ebx, ecx);
    *(ebp - 0x10) = *(ebx + 0xc) & 0xff;
    *(ebp - 0x14) = *(ebx + 0xe) & 0xff;
    *(ebp - 0x1c) = *esi;
    edi = *(esi + 4);
    eax = *(ebp - 0x60);
    esi = *(esi + 8);
    *(ebp - 0x18) = eax;
    *(ebp - 0x3c) = *(ebp - 0x1c);
    *(ebp - 0x38) = edi;
    *(ebp - 0x24) = 0;
    *(ebp - 0x20) = 0;
    esi = esi - *(ebp - 0x14);
    *(ebp - 0x34) = esi;
    *(ebp - 0x30) = edi;
    *(ebp - 0x2c) = *(ebp - M00000064) - *(ebp - 0x14);
    *(ebp - 0x28) = 0;
    if(!( *(ebx + 4) & 0xff & 1)) {
        *(ebp - 0x40) = *(ebx + 7) & 0xff;
        eax = *(ebp - 0x18);
        ebx = ( *(ebp - 0x40) & 0xff) << 0x18 | 1;
        *(ebp - 0x44) = eax;
        ecx = ebp - 0x24;
        edx = ebp - 0x3c;
        (save)0;
        L0044B2E0(A8, edx, ebp - M00000064, ecx, *(ebp - 0x10), eax, ebx);
        L0045DB10(A8, *(ebp - 0x1c) + *(ebp - 0x10), edi, esi, ebp - M00000064, *(ebp - 0x10), 0, *(ebp - 0x18), *(ebp - 0x40));
        edx = ebp - 0x2c;
        esi = ebp - M00000064;
        (save)0;
        eax = L0044B2E0(A8, ebp - 0x34, esi, edx, *(ebp - 0x14), *(ebp - 0x44), ebx);
    } else {
        ebx = *(ebp - 0x18);
        ecx = ebp - 0x24;
        eax = ebp - M00000064;
        (save)0;
        L0044B0C0(A8, ebp - 0x3c, eax, ecx, *(ebp - 0x10), ebx);
        L0045DAA0(A8, *(ebp - 0x1c) + *(ebp - 0x10), edi, esi, ebp - M00000064, *(ebp - 0x10), 0, *(ebp - 0x18));
        edx = ebp - 0x2c;
        ecx = ebp - M00000064;
        (save)0;
        eax = L0044B0C0(A8, ebp - 0x34, ecx, edx, *(ebp - 0x14), ebx);
    }
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0045E235 - 0x0045E23F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E235()
{



}

/*	Procedure: 0x0045E39E - 0x0045E39F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E39E()
{



}

/*	Procedure: 0x0045E3A0 - 0x0045E421
 *	Argument size: 16
 *	Local size: 40
 *	Save regs size: 8
 *	Called by:
 *		L0045E8D0()
 *		L00460810()
 *		L00460D40()
 */

L0045E3A0(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;



    eax = ebp - 0x30;
    L0045DA00(A14, eax);
    Vfffffff0 = Ac;
    Vfffffff4 = A10;
    if(!( *(A14 + 4) & 0xff & 1)) {
        (save)0;
        ecx = ( *(A14 + 7) & 0xff) << 0x18 | 1;
        eax = ebp - 0x30;
        eax = L0044B2E0(A8, & Vfffffff0, eax, 0, *(ebp - 0x30), *(ebp - 0x2c), ecx);
    } else {
        ecx = ebp - 0x30;
        (save)0;
        eax = L0044B0C0(A8, & Vfffffff0, ecx, 0, *(ebp - 0x30), *(ebp - 0x2c));
    }
}

/*	Procedure: 0x0045E422 - 0x0045E42F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E422()
{



}

/*	Procedure: 0x0045E430 - 0x0045E4A7
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044CAF0()
 */

L0045E430(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = M00481010;
    esp = esp - 0x20;
    if(ebx != 0 && A10 == 2) {
        eax = *(ebx + 0x44);
        ecx = eax << 8 & 16711680;
        ecx = ecx | eax >> 0x18;
        ecx = ecx | eax >> 8 & 65280;
        eax = eax << 0x18;
        if(!(ecx = ecx | eax)) {
            edx = ebp - 0x24;
            L0045DA00(ecx + ebx, edx);
            eax = L0044A2F0(A8, Ac, ebp - 0x24);
            esp = ebp - 4;
            return 1;
        }
    }
    esp = ebp - 4;
    return 0;
}

/*	Procedure: 0x0045E4A8 - 0x0045E4AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E4A8()
{



}

/*	Procedure: 0x0045E4B0 - 0x0045E59B
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0044D9D0()
 */

L0045E4B0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    ecx = M00481010;
    (save)edi;
    if(ecx == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    edi = *A10;
    edi = !(edi & 0x20) ? !(edi & 2) ? 0x17 : !(edi & 1) ? 0x16 : 0x15 : !(edi & 2) ? 0xb : !(edi & 1) ? 0xa : 9;
    eax = *(ecx + edi * 4 + 0x40);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edx = edx | eax >> 8 & 65280;
    eax = eax << 0x18;
    if(!(edx = edx | eax)) {
        esp = ebp - 0xc;
        (restore)edi;
        return 0;
    }
    edi = edx + ecx;
    L0045DCA0(A8, Ac, edi);
    L004496A0(A8, *(edi + 8));
    eax = L0044A4D0(A8, *(A10 + 4), Ac, *(A10 + 8), *(A10 + 0xc), 0x30);
    esp = ebp - 0xc;
    (restore)edi;
    return 1;
}

/*	Procedure: 0x0045E59C - 0x0045E59F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E59C()
{



}

/*	Procedure: 0x0045E5A0 - 0x0045E743
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044E050()
 */

L0045E5A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    edx = M00481010;
    esp = esp - 0x20;
    ecx = Ac;
    if(edx == 0) {
        return 0;
    }
    esi = *A10 & 0x3b;
    if(esi <= 0x32) {
        switch(esi) {
            case 0:
                goto L0045e651;
            case 1:
                esi = 0x2a;
                goto L0045e656;
            case 2:
                esi = 0x2b;
                goto L0045e656;
            case 3:
                goto L0045e651;
            case 4:
                goto L0045e651;
            case 5:
                goto L0045e651;
            case 6:
                goto L0045e651;
            case 7:
                goto L0045e651;
            case 8:
                esi = 0x2d;
                goto L0045e656;
            case 9:
                esi = 0x2e;
                goto L0045e656;
            case 0xa:
                esi = 0x2f;
                goto L0045e656;
            case 0xb:
                goto L0045e651;
            case 0xc:
                goto L0045e651;
            case 0xd:
                goto L0045e651;
            case 0xe:
                goto L0045e651;
            case 0xf:
                goto L0045e651;
            case 0x10:
                esi = 0x31;
                goto L0045e656;
            case 0x11:
                esi = 0x32;
                goto L0045e656;
            case 0x12:
                esi = 0x33;
                goto L0045e656;
            case 0x13:
                goto L0045e651;
            case 0x14:
                goto L0045e651;
            case 0x15:
                goto L0045e651;
            case 0x16:
                goto L0045e651;
            case 0x17:
                goto L0045e651;
            case 0x18:
                goto L0045e651;
            case 0x19:
                goto L0045e651;
            case 0x1a:
                goto L0045e651;
            case 0x1b:
                goto L0045e651;
            case 0x1c:
                goto L0045e651;
            case 0x1d:
                goto L0045e651;
            case 0x1e:
                goto L0045e651;
            case 0x1f:
                goto L0045e651;
            case 0x20:
                esi = 0x35;
                goto L0045e656;
            case 0x21:
                esi = 0x36;
                goto L0045e656;
            case 0x22:
                esi = 0x37;
                goto L0045e656;
            case 0x23:
                goto L0045e651;
            case 0x24:
                goto L0045e651;
            case 0x25:
                goto L0045e651;
            case 0x26:
                goto L0045e651;
            case 0x27:
                goto L0045e651;
            case 0x28:
                esi = 0x39;
                goto L0045e656;
            case 0x29:
                esi = 0x3a;
                goto L0045e656;
            case 0x2a:
                esi = 0x3b;
                goto L0045e656;
            case 0x2b:
                goto L0045e651;
            case 0x2c:
                goto L0045e651;
            case 0x2d:
                goto L0045e651;
            case 0x2e:
                goto L0045e651;
            case 0x2f:
                goto L0045e651;
            case 0x30:
                esi = 0x3d;
                goto L0045e656;
            case 0x31:
                esi = 0x3e;
                goto L0045e656;
            case 0x32:
                esi = 0x3f;
                goto L0045e656;
        }
    }
L0045e651:
    ebx = *(edx + 0xe4);
    eax = ebx << 8 & 16711680;
    eax = eax | ebx >> 0x18;
    eax = eax | ebx >> 8 & 65280;
    if(eax = eax | ebx << 0x18) {
        goto L0045e690;
    }
    esp = ebp - 0xc;
    return 0;
    esi = edx;
    eax = *ecx;
    edx = *(esi + 2) & 65535;
    ebx = *esi & 65535;
    *(ebp - 0x10) = eax;
    *(ebp - 0x14) = *(ecx + 4);
    *(ebp - 0x1c) = *(ecx + 8);
    eax = *(ecx + 0xc);
    *(ebp - 0x18) = eax;
    ecx = *(ebp - 0x18);
    eax = edx;
    edx = edx >> 8;
    eax = eax << 8 | edx;
    (save)esi;
    ecx = ecx + *(ebp - 0x14);
    ecx = ecx - (ax & 65535);
    ecx :: -2147483648;
    asm("sbb ecx,-0x1");
    (save)ecx >> 1;
    (save) *(ebp - 0x10) + 2;
    (save)A8;
    L0045E3A0();
    esp = esp + 0x10;
    L004496A0(A8, *(esi + 8));
    eax = *(ebp - 0x10) + 2;
    edx = ebx << 8;
    edx = ((edx | ebx >> 8) & 65535) + eax;
    eax = *(ebp - 0x14);
    edx = edx + 4;
    *(ebp - 0x28) = eax;
    *(ebp - 0x2c) = edx;
    *(ebp - 0x24) = *(ebp - 0x1c);
    eax = *(ebp - 0x18);
    *(ebp - 0x20) = eax;
    eax = L0044A4D0(A8, *(A10 + 4), ebp - 0x2c, *(A10 + 8), *(A10 + 0xc), 0x21);
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045E750 - 0x0045E782
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0044E300()
 */

L0045E750(Ac, A14)
/* unknown */ void  Ac;
/* unknown */ void  A14;
{



    if(M00481010 == 0) {
        return 0;
    }
    *A14 = *Ac;
    eax = *(Ac + 4);
    *(A14 + 4) = eax;
    *(A14 + 8) = *(Ac + 8);
    *(A14 + 0xc) = *(Ac + 0xc);
    return 1;
}

/*	Procedure: 0x0045E783 - 0x0045E78F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E783()
{



}

/*	Procedure: 0x0045E790 - 0x0045E8C2
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044D8B0()
 */

L0045E790(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  edi;



    ecx = M00481010;
    esp = esp - 0x34;
    if(ecx == 0) {
        return 0;
    }
    edi = *A10;
    edi = !(edi & 2) ? 0x23 : !(edi & 1) ? 0x22 : 0x21;
    eax = *(ecx + edi * 4 + 0x40);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edx = edx | eax >> 8 & 65280;
    eax = eax << 0x18;
    if(!(edx = edx | eax)) {
        esp = ebp - 0xc;
        return 0;
    }
    edi = edx + ecx;
    eax = ebp - 0x40;
    L0044FC20(Ac, A10, ebp - 0x30, eax, ebp - 0x20);
    L0045DCA0(A8, ebp - 0x30, edi);
    eax = *(A10 + 0x14);
    *(ebp - 0x10) = eax;
    if(!(eax & 0x10)) {
        (save)5;
        L004496D0(A8);
        eax = ebp - 0x40;
        (restore)ecx;
        (save)0x30;
        (save) *(A10 + 0x10);
        (save) *(A10 + 0xc);
        (save)eax;
    } else {
        (save) *(edi + 8);
        L004496A0(A8);
        (restore)ecx;
        if(!( *(ebp - 0x10) & 8)) {
            L0044A620(A8, *(A10 + 8), ebp - 0x40, *(A10 + 0xc), *(A10 + 0x10), 0x21);
            goto L0045e8a5;
        }
        (save)0x30;
        (save) *(A10 + 0x10);
        (save) *(A10 + 0xc);
        (save)ebp - 0x40;
    }
    (save) *(A10 + 8);
    (save)A8;
    L0044A4D0();
L0045e8a5:
    esp = esp + 0x18;
    eax = L0044D7C0(A8, ebp - 0x20, A10, *(edi + 8));
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045E8C3 - 0x0045E8CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045E8C3()
{



}

/*	Procedure: 0x0045E8D0 - 0x0045EC16
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044D320()
 */

L0045E8D0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = M00481010;
    esp = esp - 0x2c;
    ebx = A10;
    if(esi == 0) {
        return 0;
    }
    eax = Ac;
    *(ebp - 0x18) = *eax;
    *(ebp - 0x10) = *(eax + 4);
    *(ebp - 0x38) = *(eax + 8);
    *(ebp - 0x14) = *(eax + 0xc);
    eax = *(ebp - 0x38);
    edx = *ebx;
    *(ebp - 0x2c) = eax;
    *(ebp - 0x2c) = *(ebp - 0x2c) - *(ebp - 0x18);
    if(*(ebp - 0x2c) <= 0x1c) {
        if(!(edx & 2)) {
            eax = 0x4f;
            edi = 0x53;
        } else {
            if(!(edx & 1)) {
                eax = 0x4e;
                edi = 0x52;
            } else {
                eax = 0x4d;
                edi = 0x51;
            }
        }
        ecx = *(esi + eax * 4 + 0x40);
        edx = ecx << 8 & 16711680;
        ebx = ecx;
        eax = ecx;
        edx = edx | ebx >> 0x18;
        eax = eax >> 8 & 65280;
        edx = edx | eax;
        if(!(edx = edx | ecx << 0x18)) {
            esp = ebp - 0xc;
            return 0;
        }
        ebx = edx + esi;
        L0045DCA0(A8, Ac, ebx);
        eax = *(esi + edi * 4 + 0x40);
        ecx = eax << 8 & 16711680;
        edi = eax;
        edx = eax;
        ecx = ecx | edi >> 0x18;
        ecx = ecx | edx >> 8 & 65280;
        if(!(ecx = ecx | eax << 0x18)) {
            edx = ecx + esi;
            edi = *(edx + 2) & 65535;
            esi = *edx & 65535;
            (save)edx;
            ebx = edi << 8;
            ebx = ebx | edi >> 8;
            eax = *(ebp - 0x10) + *(ebp - 0x14);
            eax = eax - (bx & 65535);
            eax :: -2147483648;
            asm("sbb eax,-0x1");
            (save)eax >> 1;
            edx = esi << 8;
            esi = esi >> 8;
            edx = edx | esi;
            ebx = *(ebp - 0x18) + *(ebp - 0x38);
            ebx = ebx - (dx & 65535);
            ebx :: -2147483648;
            asm("sbb ebx,-0x1");
            ebx = ebx >> 1;
            (save)ebx;
            (save)A8;
            eax = L0045E3A0();
            esp = esp + 0x10;
        } else {
            eax = L0044D270(A8, *(ebp - 0x18), *(ebp - 0x10), *(ebp - 0x38), *(ebp - 0x14), *(ebx + 8));
        }
        esp = ebp - 0xc;
        return 1;
    }
    if(!(edx & 2)) {
        edx = 0x4b;
        *(ebp - 0x30) = 0x53;
    } else {
        if(!(edx & 1)) {
            edx = 0x4a;
            *(ebp - 0x30) = 0x52;
        } else {
            edx = 0x49;
            *(ebp - 0x30) = 0x51;
        }
    }
    ecx = *(esi + edx * 4 + 0x40);
    eax = ecx << 8 & 16711680;
    edi = ecx;
    edx = ecx;
    eax = eax | edi >> 0x18;
    eax = eax | edx >> 8 & 65280;
    if(!(eax = eax | ecx << 0x18)) {
        esp = ebp - 0xc;
        return 0;
    }
    edi = eax + esi;
    L0045DCA0(A8, Ac, edi);
    edx = *(edi + 8);
    *(ebp - 0x34) = edx;
    ecx = *(esi + *(ebp - 0x30) * 4 + 0x40);
    edi = ecx << 8 & 16711680;
    edi = edi | ecx >> 0x18;
    edi = edi | ecx >> 8 & 65280;
    if(!(edi = edi | ecx << 0x18)) {
        edx = edi + esi;
        ecx = *(edx + 0x10) & 0xff;
        eax = cl & 0xff;
        esi = eax;
        if(eax != 0) {
            esi = esi + *(ebp - 0x18);
        } else {
            esi = *edx & 65535;
            edi = esi;
            esi = esi >> 8;
            edi = edi << 8 | esi;
            edi = di & 65535;
            esi = *(ebp - 0x38);
            ecx = *(edx + 0x12) & 0xff;
            esi = esi - edi - ecx;
        }
        eax = *(edx + 0x11) & 0xff & 0xff;
        ecx = eax;
        if(eax != 0) {
            ecx = ecx + *(ebp - 0x10);
        } else {
            eax = *(edx + 0x13) & 0xff;
            if(eax != 0) {
                ecx = *(edx + 2) & 65535;
                edi = ecx;
                ecx = ecx >> 8;
                edi = (edi << 8 | ecx) & 65535;
                ecx = *(ebp - 0x14) - edi - eax;
            } else {
                ecx = *(edx + 2) & 65535;
                edi = ecx;
                ecx = ecx >> 8;
                edi = edi << 8 | ecx;
                ecx = *(ebp - 0x10) + *(ebp - 0x14);
                ecx = ecx - (di & 65535);
                ecx :: -2147483648;
                asm("sbb ecx,-0x1");
                ecx = ecx >> 1;
            }
        }
        eax = L0045E3A0(A8, esi, ecx, edx);
    } else {
        eax = L0044D270(A8, *(ebp - 0x38) - 0x16, *(ebp - 0x10), *(ebp - 0x38), *(ebp - 0x14), edx);
    }
    if(*(ebp - 0x2c) >= 0x26) {
        L004496A0(A8, *(ebp - 0x34));
        *(ebp - 0x24) = *(ebp - 0x10);
        eax = *(ebp - 0x38) - 0x17;
        ecx = *(ebp - 0x18) + 8;
        *(ebp - 0x20) = eax;
        *(ebp - 0x28) = ecx;
        *(ebp - 0x1c) = *(ebp - 0x14);
        eax = L0044A620(A8, *(ebx + 4), ebp - 0x28, *(ebx + 8), *(ebx + 0xc), 0x21);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045EC17 - 0x0045EC1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045EC17()
{



}

/*	Procedure: 0x0045EC20 - 0x0045ECF7
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044C3C0()
 */

L0045EC20(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  edi;



    ecx = M00481010;
    esp = esp - 0x10;
    edi = A10;
    if(ecx == 0) {
        return 0;
    }
    edi = !(edi & 2) ? 0x57 : !(edi & 5) ? 0x56 : 0x55;
    eax = *(ecx + edi * 4 + 0x40);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edx = edx | eax >> 8 & 65280;
    eax = eax << 0x18;
    if(!(edx = edx | eax)) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = L0045DCA0(A8, Ac, edx + ecx);
    if(A18 != 0) {
        *(ebp - 0x1c) = *Ac + 3;
        *(ebp - 0x18) = *(Ac + 4) + 3;
        *(ebp - 0x14) = *(Ac + 8) - 3;
        *(ebp - 0x10) = *(Ac + 0xc) - 3;
        L004496A0(A8, A14);
        eax = L0044A0D0(A8, ebp - 0x1c);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045ECF8 - 0x0045ECFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045ECF8()
{



}

/*	Procedure: 0x0045ED00 - 0x0045EF51
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044C5F0()
 */

L0045ED00(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = M00481010;
    esp = esp - 0x2c;
    ebx = Ac;
    edi = A10;
    if(esi == 0) {
        return 0;
    }
    ecx = *edi;
    if(ecx == 4) {
        esp = ebp - 0xc;
        return 0;
    }
    if(ecx == 2) {
        ecx = *(esi + 0x1b0);
        edx = ecx << 8 & 16711680;
        eax = ecx;
        edi = ecx;
        eax = eax >> 0x18;
        edx = edx | eax;
        edx = edx | edi >> 8 & 65280;
        if(!(edx = edx | ecx << 0x18)) {
            esp = ebp - 0xc;
            return 0;
        }
        eax = L0045DCA0(A8, ebx, esi + edx);
    } else {
        if(ecx == 3) {
            eax = *(esi + 0x1b0);
            edi = eax << 8 & 16711680;
            edx = eax;
            ecx = eax;
            edi = edi | edx >> 0x18;
            edi = edi | ecx >> 8 & 65280;
            eax = eax << 0x18;
            if(!(edi = edi | eax)) {
                esp = ebp - 0xc;
                return 0;
            }
            L004496D0(A8, 2);
            L0044A0D0(A8, ebx);
            eax = L0045DCA0(A8, ebx, esi + edi);
        } else {
            edx = *(esi + 0x1ac);
            ecx = edx << 8 & 16711680;
            ecx = ecx | edx >> 0x18;
            eax = edx >> 8 & 65280;
            ecx = ecx | eax;
            if(!(ecx = ecx | edx << 0x18)) {
                esp = ebp - 0xc;
                return 0;
            }
            *(ebp - 0x14) = esi;
            *(ebp - 0x14) = *(ebp - 0x14) + ecx;
            *(ebp - 0x10) = *ebx;
            *(ebp - 0x1c) = *(ebx + 4);
            *(ebp - 0x24) = *(ebx + 8);
            *(ebp - 0x18) = *(ebx + 0xc);
            esi = *(ebp - 0x24) - *(ebp - 0x10);
            if(*(edi + 0xc) == 0 || esi <= 0x36) {
                eax = L0045DCA0(A8, ebx, *(ebp - 0x14));
            } else {
                eax = *(edi + 4);
                *(ebp - 0x20) = eax;
                *(ebp - 0x28) = L0044BF40( *(ebp - 0x20));
                ebx = L0044BCD0( *(ebp - 0x20), *(edi + 8), *(edi + 0xc));
                ecx = esi - 0x20;
                if(ebx > ecx) {
                    ebx = ecx;
                }
                edx = *(ebp - 0x28);
                eax = *(ebp - 0x10);
                edx :: -2147483648;
                asm("sbb edx,-0x1");
                *(ebp - 0x38) = eax;
                eax = *(ebp - 0x24);
                edx = (edx >> 1) + *(ebp - 0x1c);
                *(ebp - 0x30) = eax;
                *(ebp - 0x2c) = *(ebp - 0x18);
                *(ebp - 0x34) = edx;
                L0045DCA0(A8, ebp - 0x38, *(ebp - 0x14));
                eax = *(ebp - 0x1c);
                edx = *(ebp - 0x10);
                ecx = *(ebp - 0x10);
                edx = edx + ebx;
                esi = eax + *(ebp - 0x28);
                ecx = ecx + 0xc;
                *(ebp - 0x18) = eax;
                *(ebp - 0x34) = eax;
                edx = edx + 0x14;
                eax = ebp - 0x38;
                *(ebp - 0x38) = ecx;
                *(ebp - 0x30) = edx;
                *(ebp - 0x2c) = esi;
                L0044CAF0(A8, eax, 2);
                eax = *(ebp - 0x18);
                edx = *(ebp - 0x10);
                ecx = *(ebp - 0x10);
                edx = edx + 0x10;
                ecx = ecx + 0x10;
                *(ebp - 0x34) = eax;
                edx = edx + ebx;
                *(ebp - 0x38) = ecx;
                *(ebp - 0x30) = edx;
                *(ebp - 0x2c) = esi;
                L004496A0(A8, *( *(ebp - 0x14) + 8));
                eax = L0044A620(A8, *(ebp - 0x20), ebp - 0x38, *(edi + 8), *(edi + 0xc), 0x30);
            }
        }
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0045EF52 - 0x0045EF5F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0045EF52()
{



}

/*	Procedure: 0x0045EF60 - 0x0045FC63
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004592B0()
 */

L0045EF60(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = M00481010;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x3c;
    *(ebp - 0x44) = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return 0;
    }
    edx = *A10;
    eax = Ac;
    *(ebp - 0x30) = *eax;
    *(ebp - 0x3c) = *(eax + 4);
    *(ebp - 0x38) = *(eax + 8);
    ecx = *(eax + 0xc);
    *(ebp - 0x34) = ecx;
    esi = *(ebp - 0x38) - *(ebp - 0x30);
    edi = ecx - *(ebp - 0x3c);
    cl = esi == 0x10 ? 0 : edi == 0x10 ? 1 : esi :: edi > 0;
    if(cl != 0) {
        if(!(edx & 2)) {
            edi = *( *(ebp - 0x44) + 0x290);
            eax = edi << 8 & 16711680;
            ebx = edi;
            edx = edi;
            eax = eax | ebx >> 0x18;
            eax = eax | edx >> 8 & 65280;
            if(!(eax = eax | edi << 0x18)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                return 0;
            }
            ebx = *(ebp - 0x44) + eax;
            ecx = *(ebx + 0xe) & 0xff;
            if(esi < ecx + ( *(ebx + 0xc) & 0xff)) {
                eax = *(ebp - 0x44);
                esi = *(eax + 0x294);
                edi = esi << 8 & 16711680;
                ebx = esi;
                edx = esi;
                edi = edi | ebx >> 0x18;
                edi = edi | edx >> 8 & 65280;
                if(!(edi = edi | esi << 0x18)) {
                    esp = ebp - 0xc;
                    (restore)edi;
                    (restore)esi;
                    (restore)ebx;
                    return 0;
                }
                ebx = *(ebp - 0x44) + edi;
            }
            eax = L0045E0E0(A8, Ac, ebx);
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return 1;
        }
        if(esi < 0x80) {
            edi = *( *(ebp - 0x44) + 0x28c);
            edx = edi << 8 & 16711680;
            ecx = edi;
            eax = edi;
            edx = edx | ecx >> 0x18;
            eax = eax >> 8 & 65280;
            edx = edx | eax;
            if(!(edx = edx | edi << 0x18)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                return 0;
            }
            ebx = *(ebp - 0x44) + edx;
            edx = *(ebx + 0xe) & 0xff;
            if(esi < edx + ( *(ebx + 0xc) & 0xff)) {
                eax = *( *(ebp - 0x44) + 0x294);
                ecx = eax << 8 & 16711680;
                edi = eax;
                edx = eax;
                ecx = ecx | edi >> 0x18;
                ecx = ecx | edx >> 8 & 65280;
                eax = eax << 0x18;
                if(!(ecx = ecx | eax)) {
                    esp = ebp - 0xc;
                    (restore)edi;
                    (restore)esi;
                    (restore)ebx;
                    return 0;
                }
                eax = L0045E0E0(A8, Ac, *(ebp - 0x44) + ecx);
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                return 1;
            }
            L0045E0E0(A8, Ac, ebx);
            ecx = *(A10 + 4) - 1;
            if(ecx > 1) {
                goto L0045f3c0;
            }
            switch(ecx) {
                case 0:
                    goto L0045f158;
                case 1:
                    goto L0045f1a5;
            }
L0045f158:
            edi = *( *(ebp - 0x44) + 0x2c0);
            eax = edi << 8 & 16711680;
            esi = edi;
            edx = edi;
            eax = eax | esi >> 0x18;
            eax = eax | edx >> 8 & 65280;
            if(eax = eax | edi << 0x18) {
                goto L0045f3c0;
            }
            edx = *(ebp - 0x44) + eax;
            (save)edx;
            (save)( *(edx + 0x11) & 0xff) + *(ebp - 0x3c);
            (save)( *(edx + 0x10) & 0xff) + *(ebp - 0x30);
            goto L0045f3b5;
L0045f1a5:
            eax = *(ebp - 0x44);
            esi = *(eax + 0x2c4);
            ecx = esi << 8 & 16711680;
            edx = esi;
            edi = esi;
            ecx = ecx | edx >> 0x18;
            ecx = ecx | edi >> 8 & 65280;
            if(ecx = ecx | esi << 0x18) {
                goto L0045f3c0;
            }
            edi = ecx + eax;
            eax = *edi & 65535;
            (save)edi;
            (save)( *(edi + 0x11) & 0xff) + *(ebp - 0x3c);
            edx = *(edi + 0x12) & 0xff;
            ecx = eax << 8;
            ecx = ecx | eax >> 8;
            edi = *(ebp - 0x38);
            (save)edi - (cx & 65535) - edx;
            goto L0045f3b5;
        }
        eax = *(ebp - 0x44);
        ebx = *(eax + 0x288);
        edx = ebx << 8 & 16711680;
        esi = ebx;
        ecx = ebx;
        edx = edx | esi >> 0x18;
        edx = edx | ecx >> 8 & 65280;
        if(edx = edx | ebx << 0x18) {
            goto L0045f240;
        }
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return 0;
        ebx = *(ebp - 0x44) + edx;
        L0045E0E0(A8, Ac, ebx);
        eax = *(A10 + 4) - 1;
        if(eax <= 3) {
            goto ( *(eax * 4 + 0x479344));
            eax = *(ebp - 0x44);
            edi = *(eax + 0x2b0);
            edx = edi << 8 & 16711680;
            esi = edi;
            ecx = edi;
            edx = edx | esi >> 0x18;
            edx = edx | ecx >> 8 & 65280;
            if(!(edx = edx | edi << 0x18)) {
                ecx = edx + eax;
                (save)ecx;
                (save)( *(ecx + 0x11) & 0xff) + *(ebp - 0x3c);
                eax = *(ecx + 0x10) & 0xff;
                goto L0045f3b1;
                esi = *( *(ebp - 0x44) + 0x2b4);
                eax = esi << 8 & 16711680;
                ecx = esi;
                edi = esi;
                eax = eax | ecx >> 0x18;
                eax = eax | edi >> 8 & 65280;
                if(!(eax = eax | esi << 0x18)) {
                    edi = *(ebp - 0x44) + eax;
                    edx = *edi & 65535;
                    (save)edi;
                    (save)( *(edi + 0x11) & 0xff) + *(ebp - 0x3c);
                    ecx = *(edi + 0x12) & 0xff;
                    eax = edx << 8;
                    eax = eax | edx >> 8;
                    edi = *(ebp - 0x38);
                    (save)edi - (ax & 65535) - ecx;
                    goto L0045f3b5;
                    esi = *( *(ebp - 0x44) + 0x2b8);
                    ecx = esi << 8 & 16711680;
                    eax = esi;
                    edx = esi;
                    ecx = ecx | eax >> 0x18;
                    ecx = ecx | edx >> 8 & 65280;
                    if(!(ecx = ecx | esi << 0x18)) {
                        esi = *(ebp - 0x44) + ecx;
                        edi = *esi & 65535;
                        (save)esi;
                        edx = edi;
                        (save)( *(esi + 0x11) & 0xff) + *(ebp - 0x3c);
                        edx = edx << 8;
                        edx = edx | edi >> 8;
                        ecx = *(ebp - 0x38);
                        eax = *(esi + 0x12) & 0xff;
                        (save)ecx - (dx & 65535) - eax;
                        goto L0045f3b5;
                        esi = *( *(ebp - 0x44) + 0x2bc);
                        eax = esi << 8 & 16711680;
                        edx = esi;
                        edi = esi;
                        eax = eax | edx >> 0x18;
                        eax = eax | edi >> 8 & 65280;
                        if(!(eax = eax | esi << 0x18)) {
                            edx = *(ebp - 0x44) + eax;
                            L0045E3A0(A8, ( *(edx + 0x10) & 0xff) + *(ebp - 0x30), ( *(edx + 0x11) & 0xff) + *(ebp - 0x3c), edx);
                        }
                    }
                }
            }
        }
L0045f3c0:
        *(ebp - 0x40) = *(ebx + 0x10) & 0xff;
        *(ebp - 0x40) = *(ebp - 0x40) + *(ebp - 0x30);
        edx = *(ebx + 0x12) & 0xff;
        ecx = *(ebp - 0x38);
        ecx = ecx - edx;
        if(*(A10 + 4) != 7) {
            goto L0045f3f0;
        }
        esi = 0x97;
        *(ebp - 0x30) = 0x9a;
        goto L0045f3fc;
        *(ebp - 0x30) = 0x99;
        edi = *( *(ebp - 0x44) + 0x298);
        edx = edi << 8 & 16711680;
        eax = edi;
        ebx = edi;
        eax = eax >> 0x18;
        edx = edx | eax;
        edx = edx | ebx >> 8 & 65280;
        if(edx = edx | edi << 0x18) {
            goto L0045f433;
        }
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return 0;
        esi = *(ebp - 0x44) + edx;
        edx = *(esi + 0xe) & 0xff;
        if(edx + ( *(esi + 0xc) & 0xff) > 0x10) {
            goto L0045f44c;
        }
        edx = 0x10;
        edi = ecx - *(ebp - 0x40);
        if(edi < 0x1a) {
            goto L0045fc5a;
        }
        eax = A10;
        ecx = *(eax + 0x14);
        ebx = *(eax + 0x10);
        if(ebx >= ecx) {
            goto L0045f4d1;
        }
        *(ebp - 0x1c) = ecx;
        *(ebp - 0x18) = 0;
        (fsave) *(ebp - 0x1c);
        *(ebp - 0x1c) = ebx;
        *(ebp - 0x18) = 0;
        (fsave) *(ebp - 0x1c);
        *(ebp - 0x1c) = edi;
        asm("fdivrp st1");
        (fsave) *(ebp - 0x1c);
        asm("fmulp st1");
        *(ebp - 0x1c) = st0;
        *(ebp - 0x38) = *(ebp - 0x18);
        ecx = *(ebp - 0x1c);
        asm("fst dword [ebp-0x14]");
        (fsave) *(ebp - 0x1c);
        asm("fsubp st1");
        *(ebp - 0x10) = ((frestore));
        eax = *(ebp - 0x10);
        if(*(ebp - 0x14) >= 0) {
            goto L0045f4c2;
        }
        eax = eax + 2147483647;
        asm("sbb ecx,+0x0");
        asm("sbb dword [ebp-0x38],+0x0");
        goto L0045f4d3;
        ecx = ecx + (eax :: 0 > 0 & 0xff);
        asm("adc dword [ebp-0x38],+0x0");
        goto L0045f4d3;
        if(edi >= edx) {
            goto L0045f4d9;
        }
        ecx = edx;
        eax = A10;
        ebx = *(eax + 0xc);
        edx = *(eax + 8);
        if(edx >= ebx) {
            goto L0045f555;
        }
        *(ebp - 0x1c) = ebx;
        *(ebp - 0x18) = 0;
        (fsave) *(ebp - 0x1c);
        *(ebp - 0x1c) = edx;
        *(ebp - 0x18) = 0;
        (fsave) *(ebp - 0x1c);
        *(ebp - 0x1c) = edi - ecx;
        *(ebp - 0x18) = 0;
        asm("fdivrp st1");
        (fsave) *(ebp - 0x1c);
        asm("fmulp st1");
        *(ebp - 0x1c) = st0;
        edi = *(ebp - 0x1c);
        edx = *(ebp - 0x18);
        asm("fst dword [ebp-0x14]");
        (fsave) *(ebp - 0x1c);
        asm("fsubp st1");
        *(ebp - 0x10) = ((frestore));
        ebx = *(ebp - 0x10);
        if(*(ebp - 0x14) >= 0) {
            goto L0045f547;
        }
        ebx = ebx + 2147483647;
        asm("sbb edi,+0x0");
        asm("sbb edx,+0x0");
        goto L0045f557;
        edi = edi + (ebx :: 0 > 0 & 0xff);
        asm("adc edx,+0x0");
        goto L0045f557;
        edi = edi - ecx;
        eax = *(ebp - 0x3c);
        edx = *(ebp - 0x40) + edi;
        *(ebp - 0x2c) = edx;
        *(ebp - 0x28) = eax;
        eax = *(ebp - 0x34);
        *(ebp - 0x24) = edx + ecx;
        *(ebp - 0x20) = eax;
        L0045E0E0(A8, ebp - 0x2c, esi);
        eax = *(ebp - 0x44);
        edx = *(eax + *(ebp - 0x30) * 4 + 0x40);
        esi = edx << 8 & 16711680;
        eax = edx;
        edi = edx;
        esi = esi | eax >> 0x18;
        esi = esi | edi >> 8 & 65280;
        if(esi = esi | edx << 0x18) {
            goto L0045fc5a;
        }
        ecx = *(ebp - 0x44) + esi;
        ebx = *(ecx + 2) & 65535;
        eax = *ecx & 65535;
        (save)ecx;
        esi = ebx << 8;
        esi = esi | ebx >> 8;
        edx = *(ebp - 0x28) + *(ebp - 0x20);
        ecx = eax;
        edx = edx - (si & 65535);
        edx :: -2147483648;
        asm("sbb edx,-0x1");
        edx = edx >> 1;
        (save)edx;
        ecx = ecx << 8;
        ecx = ecx | eax >> 8;
        edi = *(ebp - 0x2c) + *(ebp - 0x24);
        edi = edi - (cx & 65535);
        edi :: -2147483648;
        asm("sbb edi,-0x1");
        (save)edi >> 1;
        goto L0045fc4f;
    }
    if(edx & 2) {
        goto L0045f6c0;
    }
    esi = *( *(ebp - 0x44) + 0x2dc);
    eax = esi << 8 & 16711680;
    ebx = esi;
    edx = esi;
    eax = eax | ebx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    if(eax = eax | esi << 0x18) {
        goto L0045f650;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
    ebx = *(ebp - 0x44);
    ecx = *(ebx + 0xf) & 0xff;
    if(edi >= ecx + ( *(ebx + 0xd) & 0xff)) {
        goto L0045f6a5;
    }
    eax = *(ebp - 0x44);
    edi = *(eax + 0x2e0);
    esi = edi << 8 & 16711680;
    ebx = edi;
    edx = edi;
    esi = esi | ebx >> 0x18;
    esi = esi | edx >> 8 & 65280;
    if(esi = esi | edi << 0x18) {
        goto L0045f6a0;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
    eax = L0045e240(A8, Ac, *(ebp - 0x44) + esi);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
    if(edi >= 0x80) {
        goto L0045f848;
    }
    esi = *( *(ebp - 0x44) + 0x2d8);
    edx = esi << 8 & 16711680;
    ecx = esi;
    eax = esi;
    edx = edx | ecx >> 0x18;
    eax = eax >> 8 & 65280;
    edx = edx | eax;
    if(edx = edx | esi << 0x18) {
        goto L0045f704;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
    ebx = *(ebp - 0x44) + edx;
    edx = *(ebx + 0xf) & 0xff;
    if(edi >= edx + ( *(ebx + 0xd) & 0xff)) {
        goto L0045f770;
    }
    eax = *( *(ebp - 0x44) + 0x2e0);
    ecx = eax << 8 & 16711680;
    edx = eax;
    esi = eax;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    eax = eax << 0x18;
    if(ecx = ecx | eax) {
        goto L0045f750;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
    eax = L0045e240(A8, Ac, *(ebp - 0x44) + ecx);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
    L0045e240(A8, Ac, ebx);
    ecx = *(A10 + 4) - 1;
    if(ecx > 1) {
        goto L0045fa09;
    }
    goto ( *(ecx * 4 + 0x47933c));
    edi = *( *(ebp - 0x44) + 0x30c);
    eax = edi << 8 & 16711680;
    edx = edi;
    esi = edi;
    eax = eax | edx >> 0x18;
    eax = eax | esi >> 8 & 65280;
    if(eax = eax | edi << 0x18) {
        goto L0045fa09;
    }
    edx = *(ebp - 0x44) + eax;
    (save)edx;
    (save)( *(edx + 0x11) & 0xff) + *(ebp - 0x3c);
    (save)( *(edx + 0x10) & 0xff) + *(ebp - 0x30);
    goto L0045f9fe;
    edx = *( *(ebp - 0x44) + 0x310);
    ecx = edx << 8 & 16711680;
    eax = edx;
    esi = edx;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | esi >> 8 & 65280;
    if(ecx = ecx | edx << 0x18) {
        goto L0045fa09;
    }
    edx = *(ebp - 0x44) + ecx;
    edi = *(edx + 2) & 65535;
    (save)edx;
    ecx = *(edx + 0x13) & 0xff;
    eax = edi << 8;
    eax = eax | edi >> 8;
    esi = *(ebp - 0x34);
    (save)esi - (ax & 65535) - ecx;
    (save)( *(edx + 0x10) & 0xff) + *(ebp - 0x30);
    goto L0045f9fe;
    ebx = *( *(ebp - 0x44) + 0x2d4);
    ecx = ebx << 8 & 16711680;
    eax = ebx;
    edi = ebx;
    eax = eax >> 0x18;
    ecx = ecx | eax;
    ecx = ecx | edi >> 8 & 65280;
    if(ecx = ecx | ebx << 0x18) {
        goto L0045f881;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
    ebx = *(ebp - 0x44) + ecx;
    L0045e240(A8, Ac, ebx);
    edx = *(A10 + 4) - 1;
    if(edx > 3) {
        goto L0045fa09;
    }
    goto ( *(edx * 4 + 0x47932c));
    esi = *( *(ebp - 0x44) + 0x2fc);
    edx = esi << 8 & 16711680;
    eax = esi;
    edi = esi;
    edx = edx | eax >> 0x18;
    edx = edx | edi >> 8 & 65280;
    if(edx = edx | esi << 0x18) {
        goto L0045fa09;
    }
    eax = *(ebp - 0x44) + edx;
    (save)eax;
    (save)( *(eax + 0x11) & 0xff) + *(ebp - 0x3c);
    (save)( *(eax + 0x10) & 0xff) + *(ebp - 0x30);
    goto L0045f9fe;
    eax = *( *(ebp - 0x44) + 0x300);
    edx = eax << 8 & 16711680;
    edi = eax;
    ecx = eax;
    edx = edx | edi >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    if(edx = edx | eax << 0x18) {
        goto L0045fa09;
    }
    eax = *(ebp - 0x44) + edx;
    esi = *(eax + 2) & 65535;
    (save)eax;
    edx = *(eax + 0x13) & 0xff;
    edi = esi << 8;
    edi = edi | esi >> 8;
    ecx = *(ebp - 0x34);
    (save)ecx - (di & 65535) - edx;
    (save)( *(eax + 0x10) & 0xff) + *(ebp - 0x30);
    goto L0045f9fe;
    edi = *( *(ebp - 0x44) + 0x304);
    eax = edi << 8 & 16711680;
    esi = edi;
    edx = edi;
    eax = eax | esi >> 0x18;
    eax = eax | edx >> 8 & 65280;
    if(eax = eax | edi << 0x18) {
        goto L0045fa09;
    }
    edx = *(ebp - 0x44) + eax;
    ecx = *(edx + 2) & 65535;
    (save)edx;
    eax = *(edx + 0x13) & 0xff;
    esi = ecx << 8;
    esi = esi | ecx >> 8;
    edi = *(ebp - 0x34);
    (save)edi - (si & 65535) - eax;
    (save)( *(edx + 0x10) & 0xff) + *(ebp - 0x30);
    goto L0045f9fe;
    esi = *( *(ebp - 0x44) + 0x308);
    eax = esi << 8 & 16711680;
    ecx = esi;
    edi = esi;
    eax = eax | ecx >> 0x18;
    eax = eax | edi >> 8 & 65280;
    if(eax = eax | esi << 0x18) {
        goto L0045fa09;
    }
    ecx = *(ebp - 0x44) + eax;
    L0045E3A0(A8, ( *(ecx + 0x10) & 0xff) + *(ebp - 0x30), ( *(ecx + 0x11) & 0xff) + *(ebp - 0x3c), ecx);
    *(ebp - 0x40) = *(ebx + 0x11) & 0xff;
    *(ebp - 0x40) = *(ebp - 0x40) + *(ebp - 0x3c);
    ecx = *(ebx + 0x13) & 0xff;
    edx = *(ebp - 0x34);
    edx = edx - ecx;
    if(*(A10 + 4) != 7) {
        goto L0045fa36;
    }
    esi = 0xaa;
    *(ebp - 0x3c) = 0xad;
    goto L0045fa42;
    *(ebp - 0x3c) = 0xac;
    edi = *( *(ebp - 0x44) + 0x2e4);
    ecx = edi << 8 & 16711680;
    eax = edi;
    ebx = edi;
    eax = eax >> 0x18;
    ecx = ecx | eax;
    ecx = ecx | ebx >> 8 & 65280;
    if(ecx = ecx | edi << 0x18) {
        goto L0045fa80;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
    esi = *(ebp - 0x44) + ecx;
    ecx = *(esi + 0xf) & 0xff;
    if(ecx + ( *(esi + 0xd) & 0xff) > 0x10) {
        goto L0045fa99;
    }
    ecx = 0x10;
    edi = edx - *(ebp - 0x40);
    if(edi < 0x1a) {
        goto L0045fc5a;
    }
    eax = A10;
    edx = *(eax + 0x14);
    ebx = *(eax + 0x10);
    if(ebx >= edx) {
        goto L0045fb20;
    }
    *(ebp - 0x1c) = edx;
    *(ebp - 0x18) = 0;
    (fsave) *(ebp - 0x1c);
    *(ebp - 0x1c) = ebx;
    *(ebp - 0x18) = 0;
    (fsave) *(ebp - 0x1c);
    *(ebp - 0x1c) = edi;
    asm("fdivrp st1");
    (fsave) *(ebp - 0x1c);
    asm("fmulp st1");
    *(ebp - 0x1c) = st0;
    *(ebp - 0x34) = *(ebp - 0x18);
    edx = *(ebp - 0x1c);
    asm("fst dword [ebp-0x14]");
    (fsave) *(ebp - 0x1c);
    asm("fsubp st1");
    *(ebp - 0x10) = ((frestore));
    eax = *(ebp - 0x10);
    if(*(ebp - 0x14) >= 0) {
        goto L0045fb10;
    }
    eax = eax + 2147483647;
    asm("sbb edx,+0x0");
    asm("sbb dword [ebp-0x34],+0x0");
    goto L0045fb22;
    edx = edx + (eax :: 0 > 0 & 0xff);
    asm("adc dword [ebp-0x34],+0x0");
    goto L0045fb22;
    if(edi >= ecx) {
        goto L0045fb28;
    }
    edx = ecx;
    eax = A10;
    ebx = *(eax + 0xc);
    ecx = *(eax + 8);
    if(ecx >= ebx) {
        goto L0045fba4;
    }
    *(ebp - 0x1c) = ebx;
    *(ebp - 0x18) = 0;
    (fsave) *(ebp - 0x1c);
    *(ebp - 0x1c) = ecx;
    *(ebp - 0x18) = 0;
    (fsave) *(ebp - 0x1c);
    *(ebp - 0x1c) = edi - edx;
    *(ebp - 0x18) = 0;
    asm("fdivrp st1");
    (fsave) *(ebp - 0x1c);
    asm("fmulp st1");
    *(ebp - 0x1c) = st0;
    ebx = *(ebp - 0x1c);
    ecx = *(ebp - 0x18);
    asm("fst dword [ebp-0x14]");
    (fsave) *(ebp - 0x1c);
    asm("fsubp st1");
    *(ebp - 0x10) = ((frestore));
    edi = *(ebp - 0x10);
    if(*(ebp - 0x14) >= 0) {
        goto L0045fb96;
    }
    edi = edi + 2147483647;
    asm("sbb ebx,+0x0");
    asm("sbb ecx,+0x0");
    goto L0045fba8;
    ebx = ebx + (edi :: 0 > 0 & 0xff);
    asm("adc ecx,+0x0");
    goto L0045fba8;
    ebx = edi - edx;
    eax = *(ebp - 0x30);
    edi = *(ebp - 0x40) + ebx;
    *(ebp - 0x2c) = eax;
    eax = *(ebp - 0x38);
    *(ebp - 0x28) = edi;
    edi = edi + edx;
    *(ebp - 0x24) = eax;
    *(ebp - 0x20) = edi;
    L0045e240(A8, ebp - 0x2c, esi);
    eax = *(ebp - 0x44);
    eax = *(eax + *(ebp - 0x3c) * 4 + 0x40);
    esi = eax << 8 & 16711680;
    ebx = eax;
    edi = eax;
    esi = esi | ebx >> 0x18;
    esi = esi | edi >> 8 & 65280;
    if(esi = esi | eax << 0x18) {
        goto L0045fc5a;
    }
    edi = *(ebp - 0x44) + esi;
    edx = *(edi + 2) & 65535;
    ecx = *edi & 65535;
    (save)edi;
    esi = edx << 8;
    esi = esi | edx >> 8;
    ebx = *(ebp - 0x28) + *(ebp - 0x20);
    edi = ecx;
    ebx = ebx - (si & 65535);
    ebx :: -2147483648;
    asm("sbb ebx,-0x1");
    (save)ebx >> 1;
    edi = edi << 8;
    edi = edi | ecx >> 8;
    eax = *(ebp - 0x2c) + *(ebp - 0x24);
    eax = eax - (di & 65535);
    eax :: -2147483648;
    asm("sbb eax,-0x1");
    (save)eax >> 1;
    (save)A8;
    eax = L0045E3A0();
    esp = esp + 0x10;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x0045FC70 - 0x00460493
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00458970()
 */

L0045FC70(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    eax = M00481010;
    (save)esi;
    (save)edi;
    esp = esp - 0x38;
    edx = A8;
    *(ebp - 0x2c) = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 0;
    }
    *(ebp - 0x34) = *edx;
    *(ebp - 0x20) = *(edx + 4);
    *(ebp - 0x24) = *(edx + 8);
    *(ebp - 0x40) = *(edx + 0xc);
    if(*(ebp - 0x24) <= *(ebp - 0x34) || *(ebp - 0x40) <= *(ebp - 0x20)) {
        eax = L00434150(A10, 0x74);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 1;
    }
    esi = *(ebp - 0x24);
    edi = *(ebp - 0x40);
    esi = esi - *(ebp - 0x34);
    edi = edi - *(ebp - 0x20);
    if(esi > edi) {
        *(A10 + 0x70) = 1;
        if(esi < 0x80) {
            ecx = *( *(ebp - 0x2c) + 0x28c);
            eax = ecx << 8 & 16711680;
            edi = ecx;
            edx = ecx;
            eax = eax | edi >> 0x18;
            eax = eax | edx >> 8 & 65280;
            if(!(eax = eax | ecx << 0x18)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                return 0;
            }
            edi = *(ebp - 0x2c) + eax;
            edx = *(edi + 0xe) & 0xff;
            if(esi < edx + ( *(edi + 0xc) & 0xff)) {
                eax = L00434150(A10, 0x74);
                *(A10 + 0x70) = 1;
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                return 1;
            }
            *(ebp - 0x28) = *(edi + 0x10) & 0xff;
            *(ebp - 0x28) = *(ebp - 0x28) + *(ebp - 0x34);
            eax = *(edi + 0x12) & 0xff;
            edi = *(ebp - 0x24) - eax;
            *A10 = *(ebp - 0x34);
            eax = *(ebp - 0x20);
            *(ebp - 0x34) = eax;
            *(A10 + 4) = *(ebp - 0x34);
            eax = *(ebp - 0x28);
            *(ebp - 0x38) = eax;
            *(A10 + 8) = *(ebp - 0x38);
            eax = *(ebp - 0x40);
            *(ebp - 0x3c) = eax;
            *(A10 + 0xc) = *(ebp - 0x3c);
            *(ebp - 0x30) = edi;
            *(A10 + 0x10) = edi;
            *(A10 + 0x14) = *(ebp - 0x20);
            *(A10 + 0x18) = *(ebp - 0x24);
            *(A10 + 0x1c) = *(ebp - 0x40);
            *(A10 + 0x3c) = 0;
            *(A10 + 0x38) = *(A10 + 0x3c);
            *(A10 + 0x34) = *(A10 + 0x38);
            *(A10 + 0x30) = *(A10 + 0x34);
            *(A10 + 0x2c) = 0;
            *(A10 + 0x28) = *(A10 + 0x2c);
            *(A10 + 0x24) = *(A10 + 0x28);
            *(A10 + 0x20) = *(A10 + 0x24);
        } else {
            eax = *( *(ebp - 0x2c) + 0x288);
            edx = eax << 8 & 16711680;
            edi = eax;
            esi = eax;
            edx = edx | edi >> 0x18;
            edx = edx | esi >> 8 & 65280;
            eax = eax << 0x18;
            if(!(edx = edx | eax)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                return 0;
            }
            esi = *(ebp - 0x2c) + edx;
            *(ebp - 0x28) = *(esi + 0x10) & 0xff;
            edx = *(esi + 0x12) & 0xff;
            ecx = *(ebp - 0x28);
            esi = *(ebp - 0x24);
            eax = *(ebp - 0x34);
            ecx :: -2147483648;
            asm("sbb ecx,-0x1");
            ecx = (ecx >> 1) + *(ebp - 0x34);
            edi = edx;
            edi :: -2147483648;
            asm("sbb edi,-0x1");
            *(ebp - 0x28) = *(ebp - 0x28) + eax;
            esi = esi - (edi >> 1);
            edi = *(ebp - 0x24);
            *A10 = eax;
            eax = *(ebp - 0x20);
            *(ebp - 0x34) = eax;
            *(A10 + 4) = *(ebp - 0x34);
            *(A10 + 8) = ecx;
            eax = *(ebp - 0x40);
            *(ebp - 0x3c) = eax;
            *(A10 + 0xc) = *(ebp - 0x3c);
            *(A10 + 0x30) = ecx;
            *(A10 + 0x34) = *(ebp - 0x20);
            eax = *(ebp - 0x28);
            edi = edi - edx;
            *(ebp - 0x38) = eax;
            *(A10 + 0x38) = eax;
            *(A10 + 0x3c) = *(ebp - 0x40);
            *(ebp - 0x30) = edi;
            *(A10 + 0x20) = edi;
            *(A10 + 0x24) = *(ebp - 0x20);
            *(A10 + 0x28) = esi;
            *(A10 + 0x2c) = *(ebp - 0x40);
            *(A10 + 0x10) = esi;
            *(A10 + 0x14) = *(ebp - 0x20);
            *(A10 + 0x18) = *(ebp - 0x24);
            *(A10 + 0x1c) = *(ebp - 0x40);
        }
        eax = *( *(ebp - 0x2c) + 0x298);
        esi = eax << 8 & 16711680;
        ecx = eax;
        edx = eax;
        esi = esi | ecx >> 0x18;
        esi = esi | edx >> 8 & 65280;
        eax = eax << 0x18;
        if(!(esi = esi | eax)) {
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            return 0;
        }
        eax = *(ebp - 0x2c) + esi;
        ecx = *(eax + 0xe) & 0xff;
        ecx = ecx + ( *(eax + 0xc) & 0xff);
        if(ecx <= 0x10) {
            ecx = 0x10;
        }
        esi = edi - *(ebp - 0x28);
        if(esi >= ecx + 0xa) {
            eax = Ac;
            edi = *(eax + 0x14);
            eax = *(eax + 0x10);
            if(eax < edi) {
                *(ebp - 0x1c) = edi;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = eax;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = esi;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x1c);
                asm("fmulp st1");
                *(ebp - 0x1c) = st0;
                *(ebp - 0x2c) = *(ebp - 0x18);
                edx = *(ebp - 0x1c);
                asm("fst dword [ebp-0x14]");
                (fsave) *(ebp - 0x1c);
                asm("fsubp st1");
                *(ebp - 0x10) = ((frestore));
                edi = *(ebp - 0x10);
                if(*(ebp - 0x14) < 0) {
                    edi = edi + 2147483647;
                    asm("sbb edx,+0x0");
                    asm("sbb dword [ebp-0x2c],+0x0");
                } else {
                    edx = edx + (edi :: 0 > 0 & 0xff);
                    asm("adc dword [ebp-0x2c],+0x0");
                }
            } else {
                edx = esi;
            }
            if(edx < ecx) {
                edx = ecx;
            }
            eax = Ac;
            edi = *(eax + 0xc);
            ecx = *(eax + 8);
            if(ecx < edi) {
                *(ebp - 0x1c) = edi;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = ecx;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = esi - edx;
                *(ebp - 0x18) = 0;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x1c);
                asm("fmulp st1");
                *(ebp - 0x1c) = st0;
                edi = *(ebp - 0x1c);
                ecx = *(ebp - 0x18);
                asm("fst dword [ebp-0x14]");
                (fsave) *(ebp - 0x1c);
                asm("fsubp st1");
                *(ebp - 0x10) = ((frestore));
                esi = *(ebp - 0x10);
                if(*(ebp - 0x14) < 0) {
                    esi = esi + 2147483647;
                    asm("sbb edi,+0x0");
                    asm("sbb ecx,+0x0");
                } else {
                    edi = edi + (esi :: 0 > 0 & 0xff);
                    asm("adc ecx,+0x0");
                }
            } else {
                edi = esi - edx;
            }
            ecx = *(ebp - 0x28) + edi;
            esi = ecx;
            *(A10 + 0x60) = esi;
            ecx = ecx + edx;
            *(A10 + M00000064) = *(ebp - 0x20);
            *(A10 + 0x68) = ecx;
            *(A10 + 0x6c) = *(ebp - 0x40);
            *(A10 + 0x40) = *(ebp - 0x38);
            *(A10 + 0x44) = *(ebp - 0x20);
            *(A10 + 0x48) = esi;
            *(A10 + 0x4c) = *(ebp - 0x40);
            *(A10 + 0x50) = ecx;
            *(A10 + 0x54) = *(ebp - 0x20);
            *(A10 + 0x58) = *(ebp - 0x30);
            eax = *(ebp - 0x40);
            *(A10 + 0x5c) = eax;
            goto L0046048a;
        }
        *(A10 + 0x40) = *(ebp - 0x38);
        *(A10 + 0x44) = *(ebp - 0x34);
        *(A10 + 0x48) = *(ebp - 0x30);
        *(A10 + 0x4c) = *(ebp - 0x3c);
        *(A10 + 0x5c) = 0;
        *(A10 + 0x58) = *(A10 + 0x5c);
        *(A10 + 0x54) = *(A10 + 0x58);
        eax = *(A10 + 0x54);
        *(A10 + 0x50) = eax;
        *(A10 + 0x6c) = 0;
        *(A10 + 0x68) = *(A10 + 0x6c);
        *(A10 + M00000064) = *(A10 + 0x68);
    } else {
        *(A10 + 0x70) = 0;
        if(edi < 0x80) {
            ecx = *( *(ebp - 0x2c) + 0x2d8);
            eax = ecx << 8 & 16711680;
            esi = ecx;
            edx = ecx;
            eax = eax | esi >> 0x18;
            eax = eax | edx >> 8 & 65280;
            if(!(eax = eax | ecx << 0x18)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                return 0;
            }
            esi = *(ebp - 0x2c) + eax;
            edx = *(esi + 0xf) & 0xff;
            if(edi < edx + ( *(esi + 0xd) & 0xff)) {
                eax = L00434150(A10, 0x74);
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                return 1;
            }
            *(ebp - 0x28) = *(esi + 0x11) & 0xff;
            *(ebp - 0x28) = *(ebp - 0x28) + *(ebp - 0x20);
            eax = *(esi + 0x13) & 0xff;
            edi = *(ebp - 0x40) - eax;
            eax = *(ebp - 0x34);
            *(ebp - 0x3c) = eax;
            *A10 = *(ebp - 0x3c);
            *(A10 + 4) = *(ebp - 0x20);
            eax = *(ebp - 0x24);
            *(ebp - 0x20) = eax;
            *(A10 + 8) = *(ebp - 0x20);
            eax = *(ebp - 0x28);
            *(ebp - 0x38) = eax;
            *(A10 + 0xc) = *(ebp - 0x38);
            *(A10 + 0x10) = *(ebp - 0x34);
            *(ebp - 0x30) = edi;
            *(A10 + 0x14) = edi;
            *(A10 + 0x18) = *(ebp - 0x24);
            *(A10 + 0x1c) = *(ebp - 0x40);
            *(A10 + 0x3c) = 0;
            *(A10 + 0x38) = *(A10 + 0x3c);
            *(A10 + 0x34) = *(A10 + 0x38);
            *(A10 + 0x30) = *(A10 + 0x34);
            *(A10 + 0x2c) = 0;
            *(A10 + 0x28) = *(A10 + 0x2c);
            *(A10 + 0x24) = *(A10 + 0x28);
            *(A10 + 0x20) = *(A10 + 0x24);
        } else {
            eax = *( *(ebp - 0x2c) + 0x2d4);
            edx = eax << 8 & 16711680;
            edi = eax;
            esi = eax;
            edx = edx | edi >> 0x18;
            edx = edx | esi >> 8 & 65280;
            eax = eax << 0x18;
            if(!(edx = edx | eax)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                return 0;
            }
            esi = *(ebp - 0x2c) + edx;
            *(ebp - 0x28) = *(esi + 0x11) & 0xff;
            edx = *(esi + 0x13) & 0xff;
            ecx = *(ebp - 0x28);
            eax = *(ebp - 0x20);
            esi = *(ebp - 0x40);
            ecx :: -2147483648;
            asm("sbb ecx,-0x1");
            ecx = (ecx >> 1) + *(ebp - 0x20);
            edi = edx;
            edi :: -2147483648;
            asm("sbb edi,-0x1");
            *(ebp - 0x28) = *(ebp - 0x28) + eax;
            esi = esi - (edi >> 1);
            eax = *(ebp - 0x34);
            edi = *(ebp - 0x40) - edx;
            *(ebp - 0x3c) = eax;
            *A10 = eax;
            *(A10 + 4) = *(ebp - 0x20);
            eax = *(ebp - 0x24);
            *(ebp - 0x20) = eax;
            *(A10 + 8) = *(ebp - 0x20);
            *(A10 + 0xc) = ecx;
            *(A10 + 0x30) = *(ebp - 0x34);
            *(A10 + 0x34) = ecx;
            *(A10 + 0x38) = *(ebp - 0x24);
            eax = *(ebp - 0x28);
            *(ebp - 0x38) = eax;
            *(A10 + 0x3c) = *(ebp - 0x38);
            *(A10 + 0x20) = *(ebp - 0x34);
            *(ebp - 0x30) = edi;
            *(A10 + 0x24) = edi;
            *(A10 + 0x28) = *(ebp - 0x24);
            *(A10 + 0x2c) = esi;
            *(A10 + 0x10) = *(ebp - 0x34);
            *(A10 + 0x14) = esi;
            *(A10 + 0x18) = *(ebp - 0x24);
            *(A10 + 0x1c) = *(ebp - 0x40);
        }
        eax = *( *(ebp - 0x2c) + 0x2e4);
        esi = eax << 8 & 16711680;
        ecx = eax;
        edx = eax;
        esi = esi | ecx >> 0x18;
        esi = esi | edx >> 8 & 65280;
        eax = eax << 0x18;
        if(!(esi = esi | eax)) {
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            return 0;
        }
        eax = *(ebp - 0x2c) + esi;
        ecx = *(eax + 0xf) & 0xff;
        ecx = ecx + ( *(eax + 0xd) & 0xff);
        if(ecx <= 0x10) {
            ecx = 0x10;
        }
        esi = edi - *(ebp - 0x28);
        if(esi >= ecx + 0xa) {
            eax = Ac;
            edi = *(eax + 0x14);
            eax = *(eax + 0x10);
            if(eax < edi) {
                *(ebp - 0x1c) = edi;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = eax;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = esi;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x1c);
                asm("fmulp st1");
                *(ebp - 0x1c) = st0;
                *(ebp - 0x40) = *(ebp - 0x18);
                edx = *(ebp - 0x1c);
                asm("fst dword [ebp-0x14]");
                (fsave) *(ebp - 0x1c);
                asm("fsubp st1");
                *(ebp - 0x10) = ((frestore));
                edi = *(ebp - 0x10);
                if(*(ebp - 0x14) < 0) {
                    edi = edi + 2147483647;
                    asm("sbb edx,+0x0");
                    asm("sbb dword [ebp-0x40],+0x0");
                } else {
                    edx = edx + (edi :: 0 > 0 & 0xff);
                    asm("adc dword [ebp-0x40],+0x0");
                }
            } else {
                edx = esi;
            }
            if(edx < ecx) {
                edx = ecx;
            }
            eax = Ac;
            edi = *(eax + 0xc);
            ecx = *(eax + 8);
            if(ecx < edi) {
                *(ebp - 0x1c) = edi;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = ecx;
                *(ebp - 0x18) = 0;
                (fsave) *(ebp - 0x1c);
                *(ebp - 0x1c) = esi - edx;
                *(ebp - 0x18) = 0;
                asm("fdivrp st1");
                (fsave) *(ebp - 0x1c);
                asm("fmulp st1");
                *(ebp - 0x1c) = st0;
                esi = *(ebp - 0x1c);
                ecx = *(ebp - 0x18);
                asm("fst dword [ebp-0x14]");
                (fsave) *(ebp - 0x1c);
                asm("fsubp st1");
                *(ebp - 0x10) = ((frestore));
                edi = *(ebp - 0x10);
                if(*(ebp - 0x14) < 0) {
                    edi = edi + 2147483647;
                    asm("sbb esi,+0x0");
                    asm("sbb ecx,+0x0");
                } else {
                    esi = esi + (edi :: 0 > 0 & 0xff);
                    asm("adc ecx,+0x0");
                }
            } else {
                esi = esi - edx;
            }
            ecx = *(ebp - 0x28) + esi;
            edi = ecx;
            ecx = ecx + edx;
            *(A10 + 0x60) = *(ebp - 0x34);
            *(A10 + M00000064) = edi;
            *(A10 + 0x68) = *(ebp - 0x24);
            *(A10 + 0x6c) = ecx;
            *(A10 + 0x40) = *(ebp - 0x34);
            *(A10 + 0x44) = *(ebp - 0x38);
            *(A10 + 0x48) = *(ebp - 0x24);
            *(A10 + 0x4c) = edi;
            *(A10 + 0x50) = *(ebp - 0x34);
            *(A10 + 0x54) = ecx;
            *(A10 + 0x58) = *(ebp - 0x24);
            eax = *(ebp - 0x30);
            *(A10 + 0x5c) = eax;
            goto L0046048a;
        }
        *(A10 + 0x40) = *(ebp - 0x3c);
        *(A10 + 0x44) = *(ebp - 0x38);
        *(A10 + 0x48) = *(ebp - 0x20);
        *(A10 + 0x4c) = *(ebp - 0x30);
        *(A10 + 0x5c) = 0;
        *(A10 + 0x58) = *(A10 + 0x5c);
        *(A10 + 0x54) = *(A10 + 0x58);
        *(A10 + 0x50) = *(A10 + 0x54);
        *(A10 + 0x6c) = 0;
        *(A10 + 0x68) = *(A10 + 0x6c);
        eax = *(A10 + 0x68);
        *(A10 + M00000064) = eax;
    }
    *(A10 + 0x60) = *(A10 + M00000064);
L0046048a:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return 1;
}

/*	Procedure: 0x00460494 - 0x0046049F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00460494()
{



}

/*	Procedure: 0x004604A0 - 0x0046059F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044E360()
 */

L004604A0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    edx = M00481010;
    (save)ebx;
    (save)esi;
    if(edx == 0) {
        esp = ebp - 8;
        (restore)esi;
        (restore)ebx;
        return 0;
    }
    ebx = A10 - 2;
    if(ebx <= 6) {
        switch(ebx) {
            case 0:
L004604d2:
                ebx = 0xec;
                goto L00460508;
            case 1:
                ebx = 0xed;
                goto L00460508;
            case 2:
                ebx = 0xee;
                goto L00460508;
            case 3:
                ebx = 0xef;
                goto L00460508;
            case 4:
                ebx = 0xf0;
                goto L00460508;
            case 5:
                ebx = 0xf1;
                goto L00460508;
            case 6:
                ebx = 0xf2;
                goto L00460508;
        }
        goto L004604d2;
    }
    esi = *(edx + 0x3ec);
    eax = esi << 8 & 16711680;
    eax = eax | esi >> 0x18;
    eax = eax | esi >> 8 & 65280;
    if(eax = eax | esi << 0x18) {
        goto L00460540;
    }
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    return 0;
    esi = edx;
    eax = *esi & 65535;
    ebx = *(esi + 2) & 65535;
    (save)esi;
    edx = *(Ac + 4) + *(Ac + 0xc);
    esi = ebx;
    ebx = ebx >> 8;
    esi = esi << 8 | ebx;
    ebx = eax;
    edx = edx - (si & 65535);
    edx :: -2147483648;
    asm("sbb edx,-0x1");
    edx = edx >> 1;
    eax = eax >> 8;
    (save)edx;
    edx = *Ac + *(Ac + 8);
    edx = edx - ((ebx << 8 | eax) & 65535);
    edx :: -2147483648;
    asm("sbb edx,-0x1");
    (save)edx >> 1;
    (save)A8;
    eax = L0045E3A0();
    esp = esp + 0x10;
    esp = ebp - 8;
    (restore)esi;
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x004605A0 - 0x00460653
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044CB50()
 */

L004605A0()
{



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x20;
    edi = *(ebp + 0xc);
    if(M00481010 != 0) {
        goto L004605c0;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    return 0;
    edx = *(ebx + 0x320);
    ecx = edx << 8 & 16711680;
    ecx = ecx | edx >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    edx = edx << 0x18;
    esi = 0;
    if(ecx = ecx | edx) {
        goto L0046060c;
    }
    esi = ecx + ebx;
    L0045DA00(esi, ebp - 0x2c);
    L0044A2F0( *(ebp + 8), edi, ebp - 0x2c);
    edx = *(ebx + 0x324);
    eax = edx << 8 & 16711680;
    eax = eax | edx >> 0x18;
    eax = eax | edx >> 8 & 65280;
    if(eax = eax | edx << 0x18) {
        goto L00460647;
    }
    esi = eax + ebx;
    eax = L0045DCA0( *(ebp + 8), edi, esi);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00460660 - 0x0046080D
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044CFA0()
 */

L00460660(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = M00481010;
    esp = esp - 0x34;
    esi = Ac;
    if(ebx == 0) {
        return 0;
    }
    edx = *(A10 + 0xc);
    if(!(edx & 65536)) {
        eax = *(ebx + 0x340);
        ecx = eax << 8 & 16711680;
        edx = eax;
        edi = eax;
        ecx = ecx | edx >> 0x18;
        ecx = ecx | edi >> 8 & 65280;
        eax = eax << 0x18;
        if(!(ecx = ecx | eax)) {
            esp = ebp - 0xc;
            return 0;
        }
        edx = ecx + ebx;
        edi = *(edx + 2) & 65535;
        ecx = *(esi + 8);
        eax = *(esi + 4) + *(esi + 0xc);
        ebx = edi;
        edi = edi >> 8;
        ebx = (ebx << 8 | edi) & 65535;
        eax = eax - ebx;
        eax :: -2147483648;
        asm("sbb eax,-0x1");
        eax = eax >> 1;
        *(ebp - 0x40) = *esi;
        *(ebp - 0x3c) = eax;
        *(ebp - 0x38) = ecx;
        *(ebp - 0x34) = eax + ebx;
        esi = ebp - 0x40;
        eax = L0045E0E0(A8, esi, edx);
        esp = ebp - 0xc;
        return 1;
    }
    if(!(edx & 262144)) {
        edx = 0xbc;
        *(ebp - 0x10) = 0xbf;
    } else {
        if(!(edx & 16777216)) {
            edx = 0xbb;
            *(ebp - 0x10) = 0xbe;
        } else {
            edx = 0xba;
            *(ebp - 0x10) = 0xbd;
        }
    }
    eax = *(ebx + edx * 4 + 0x40);
    ecx = eax << 8 & 16711680;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    eax = eax << 0x18;
    edi = 0;
    if(!(ecx = ecx | eax)) {
        edi = ecx + ebx;
        L0045DA00(edi, ebp - 0x30);
        L0044A2F0(A8, esi, ebp - 0x30);
    }
    eax = *(ebx + *(ebp - 0x10) * 4 + 0x40);
    edx = eax << 8 & 16711680;
    edx = edx | eax >> 0x18;
    edx = edx | eax >> 8 & 65280;
    eax = eax << 0x18;
    if(!(edx = edx | eax)) {
        edi = edx + ebx;
        eax = L0045DCA0(A8, esi, edi);
    }
    if(edi == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    eax = L0044CB90(A8, esi, A10, *(edi + 8));
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0046080E - 0x0046080F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046080E()
{



}

/*	Procedure: 0x00460810 - 0x00460D34
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044EDB0()
 */

L00460810(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    eax = M00481010;
    (save)esi;
    (save)edi;
    esp = esp - 0xb8;
    edx = A8;
    ebx = Ac;
    *(ebp + -196) = eax;
    if(eax == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 0;
    }
    eax = A10;
    *(ebp - 0x10) = *(eax + 0x14);
    *(ebp - 0x20) = *eax;
    *(ebp - 0x20) = *(ebp - 0x20) & 5;
    if(( *(ebp - 0x10) & 130023424) == 41943040) {
        eax = *(ebp - 0x20) != 0 ? 0xe9 : 0xe8;
        ecx = ax & 65535;
        edi = *( *(ebp + -196) + ecx * 4 + 0x40);
        esi = edi << 8 & 16711680;
        eax = edi;
        ecx = edi;
        eax = eax >> 0x18;
        esi = esi | eax;
        esi = esi | ecx >> 8 & 65280;
        if(!(esi = esi | edi << 0x18)) {
            esp = ebp - 0xc;
            (restore)edi;
            (restore)esi;
            return 0;
        }
        eax = L00449380(edx, ebp + -192, 0x80);
        eax = L0045DCA0(eax, ebx, *(ebp + -196) + esi);
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 1;
    }
    eax = *(ebp - 0x20) != 0 ? 0xcd : 0xcc;
    esi = ax & 65535;
    ecx = *( *(ebp + -196) + esi * 4 + 0x40);
    edi = ecx << 8 & 16711680;
    esi = ecx;
    eax = ecx;
    edi = edi | esi >> 0x18;
    eax = eax >> 8 & 65280;
    edi = edi | eax;
    if(!(edi = edi | ecx << 0x18)) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return 0;
    }
    esi = *(ebp + -196);
    eax = ebp + -192;
    esi = esi + edi;
    eax = L00449380(edx, eax, 0x80);
    *(ebp - 0x1c) = eax;
    L0045DCA0( *(ebp - 0x1c), ebx, esi);
    *(ebp - 0x40) = *(esi + 8);
    *(ebp - 0x3c) = *(esi + 0x11) & 0xff;
    *(ebp - 0x14) = *ebx;
    *(ebp - 0x24) = *(ebx + 4);
    *(ebp - 0x18) = *(ebx + 8);
    *(ebp - 0x28) = *(A10 + 4);
    ebx = *(ebp - 0x14);
    esi = *(ebp - 0x18);
    ecx = !( *(ebp - 0x10) & 1) ? 0xd2 : *(ebp - 0x28) == 5 ? 0xd1 : *(ebp - 0x20) != 0 ? 0xd0 : 0xcf;
    edx = *( *(ebp + -196) + ecx * 4 + 0x40);
    edi = edx << 8 & 16711680;
    ecx = edx;
    eax = edx;
    edi = edi | ecx >> 0x18;
    edi = edi | eax >> 8 & 65280;
    if(!(edi = edi | edx << 0x18)) {
        ecx = *(ebp + -196) + edi;
        edx = *ecx & 65535;
        edi = edx << 8;
        edi = edi | edx >> 8;
        eax = *(ecx + 0x12) & 0xff;
        eax :: 0;
        if(!(edi = di & 65535)) {
            edx = *(ebp - 0x18) - edi - eax;
            esi = *(ebp - 0x18) < edx ? *(ebp - 0x18) : edx;
        } else {
            edx = ( *(ecx + 0x10) & 0xff) + *(ebp - 0x14);
            ebx = edi + edx;
            if(*(ebp - 0x14) > ebx) {
                ebx = *(ebp - 0x14);
            }
        }
        L0045E3A0( *(ebp - 0x1c), edx, ( *(ecx + 0x11) & 0xff) + *(ebp - 0x24), ecx);
    }
    ecx = !( *(ebp - 0x10) & 0x40) ? 0xd7 : *(ebp - 0x28) == 9 ? 0xd6 : *(ebp - 0x20) != 0 ? 0xd5 : 0xd4;
    eax = *( *(ebp + -196) + ecx * 4 + 0x40);
    edx = eax << 8 & 16711680;
    edi = eax;
    ecx = eax;
    edx = edx | edi >> 0x18;
    edx = edx | ecx >> 8 & 65280;
    if(!(edx = edx | eax << 0x18)) {
        edi = *(ebp + -196) + edx;
        edx = *edi & 65535;
        eax = edx << 8;
        eax = eax | edx >> 8;
        ecx = *(edi + 0x12) & 0xff;
        ecx :: 0;
        if(!(eax = ax & 65535)) {
            edx = *(ebp - 0x18) - eax - ecx;
            if(esi >= edx) {
                esi = edx;
            }
        } else {
            edx = ( *(edi + 0x10) & 0xff) + *(ebp - 0x14);
            ecx = eax + edx;
            if(ebx <= ecx) {
                ebx = ecx;
            }
        }
        L0045E3A0( *(ebp - 0x1c), edx, ( *(edi + 0x11) & 0xff) + *(ebp - 0x24), edi);
    }
    edi = !( *(ebp - 0x10) & 2) ? 0xdc : *(ebp - 0x28) == 8 ? 0xdb : *(ebp - 0x20) != 0 ? 0xda : 0xd9;
    edx = *( *(ebp + -196) + edi * 4 + 0x40);
    ecx = edx << 8 & 16711680;
    edi = edx;
    eax = edx;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | eax >> 8 & 65280;
    if(!(ecx = ecx | edx << 0x18)) {
        edi = *(ebp + -196) + ecx;
        ecx = *edi & 65535;
        edx = ecx << 8;
        edx = edx | ecx >> 8;
        eax = *(edi + 0x12) & 0xff;
        eax :: 0;
        if(!(edx = dx & 65535)) {
            ecx = *(ebp - 0x18) - edx - eax;
            if(esi >= ecx) {
                esi = ecx;
            }
        } else {
            ecx = ( *(edi + 0x10) & 0xff) + *(ebp - 0x14);
            eax = edx + ecx;
            if(ebx <= eax) {
                ebx = eax;
            }
        }
        L0045E3A0( *(ebp - 0x1c), ecx, ( *(edi + 0x11) & 0xff) + *(ebp - 0x24), edi);
    }
    edx = !( *(ebp - 0x10) & 4) ? 0xe1 : *(ebp - 0x28) == 6 ? 0xe0 : *(ebp - 0x20) != 0 ? 0xdf : 0xde;
    eax = *( *(ebp + -196) + edx * 4 + 0x40);
    ecx = eax << 8 & 16711680;
    edi = eax;
    edx = eax;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    if(!(ecx = ecx | eax << 0x18)) {
        edi = *(ebp + -196) + ecx;
        ecx = *edi & 65535;
        eax = ecx << 8;
        eax = eax | ecx >> 8;
        edx = *(edi + 0x12) & 0xff;
        edx :: 0;
        if(!(eax = ax & 65535)) {
            ecx = *(ebp - 0x18) - eax - edx;
            if(esi >= ecx) {
                esi = ecx;
            }
        } else {
            ecx = ( *(edi + 0x10) & 0xff) + *(ebp - 0x14);
            edx = eax + ecx;
            if(ebx <= edx) {
                ebx = edx;
            }
        }
        L0045E3A0( *(ebp - 0x1c), ecx, ( *(edi + 0x11) & 0xff) + *(ebp - 0x24), edi);
    }
    eax = *(A10 + 0x10);
    if(eax != 0) {
        *(ebp - 0x10) = L0044BCD0(2, *(A10 + 0xc), eax);
        eax = L0044BF40(2);
        edi = *(ebp - 0x18) - *(ebp - 0x14) - *(ebp - 0x10);
        edi :: -2147483648;
        asm("sbb edi,-0x1");
        edi = (edi >> 1) + *(ebp - 0x14);
        ecx = ebx + 2;
        if(edi < ecx) {
            edi = ecx;
        }
        edx = edi + *(ebp - 0x10);
        ecx = esi - 2;
        if(edx > ecx) {
            edi = ecx;
            edx = ecx;
            edi = edi - *(ebp - 0x10);
            ecx = ebx + 2;
            if(edi < ecx) {
                edi = ecx;
            }
        }
        ecx = *(ebp - 0x3c) - eax;
        ecx :: -2147483648;
        asm("sbb ecx,-0x1");
        ecx = (ecx >> 1) + *(ebp - 0x24);
        *(ebp - 0x34) = ecx;
        *(ebp - 0x30) = edx;
        *(ebp - 0x2c) = *(ebp - 0x34) + eax;
        *(ebp - 0x38) = edi;
        L004496A0( *(ebp - 0x1c), *(ebp - 0x40));
        eax = A10;
        eax = L0044A620( *(ebp - 0x1c), 2, ebp - 0x38, *(eax + 0xc), *(eax + 0x10), 3);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    return 1;
}

/*	Procedure: 0x00460D35 - 0x00460D3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00460D35()
{



}

/*	Procedure: 0x00460D40 - 0x00460E20
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044F670()
 */

L00460D40(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ecx = M00481010;
    esp = esp - 0x84;
    esi = A10;
    if(ecx == 0) {
        return 0;
    }
    edx = !( *esi & 5) ? 0xe4 : 0xe3;
    eax = *(ecx + edx * 4 + 0x40);
    edi = eax << 8 & 16711680;
    esi = eax;
    edx = eax;
    edi = edi | esi >> 0x18;
    edi = edi | edx >> 8 & 65280;
    eax = eax << 0x18;
    if(!(edi = edi | eax)) {
        esp = ebp - 0xc;
        return 0;
    }
    edx = ebp + -140;
    esi = edi + ecx;
    eax = L00449380(A8, edx, 0x80);
    edi = *(esi + 2) & 65535;
    edx = *esi & 65535;
    *(ebp + -144) = *(esi + 0x13) & 0xff;
    ecx = edi;
    edi = edi >> 8;
    ecx = (ecx << 8 | edi) & 65535;
    ecx = *(esi + 0x12) & 0xff;
    esi = edx << 8;
    esi = esi | edx >> 8;
    edi = *(Ac + 8);
    eax = L0045E3A0(eax, edi - (si & 65535) - ecx, *(Ac + 0xc) - ecx - *(ebp + -144), esi);
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00460E21 - 0x00460E2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00460E21()
{



}

/*	Procedure: 0x00460E30 - 0x00461423
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 */

L00460E30(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    A14 = M00481010;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x28;
    esi = A8;
    edi = A10;
    *(ebp - 0x18) = A14;
    if(A14 == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return 0;
    }
    *(ebp - 0x28) = *esi;
    *(ebp - 0x20) = *(esi + 4);
    *(ebp - 0x1c) = *(esi + 8);
    *(ebp - 0x14) = *(esi + 0xc);
    *(ebp - 0x34) = *(edi + 4);
    *(ebp - 0x30) = *(ebp - 0x28);
    *(ebp - 0x10) = *edi;
    A14 = *(ebp - 0x30);
    cl = 0;
    dl = 0;
    bl = 0;
    if(*(ebp - 0x10) >= A14 && *(ebp - 0x34) >= *(ebp - 0x20)) {
        ebx = 1 & 0xff;
    }
    if(bl != 0 && *(ebp - 0x10) < *(ebp - 0x1c)) {
        dl = 1;
    }
    if(dl != 0 && *(ebp - 0x34) < *(ebp - 0x14)) {
        cl = 1;
    }
    if(cl == 0) {
        esi = 0;
    } else {
        ecx = *(Ac + 0x14);
        *(ebp - 0x24) = ecx;
        if((ecx & 130023424) == 41943040) {
            A14 = *(ebp - 0x18);
            esi = *(A14 + 0x3e0);
            ecx = esi << 8 & 16711680;
            ebx = esi;
            edi = esi;
            ecx = ecx | ebx >> 0x18;
            ecx = ecx | edi >> 8 & 65280;
            if(!(ecx = ecx | esi << 0x18)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                return 0;
            }
            edx = *(ebp - 0x18) + ecx;
            A14 = *(edx + 0x13) & 0xff;
            ecx = *(edx + 0x12) & 0xff;
            ebx = *(edx + 0x11) & 0xff;
            edx = *(edx + 0x10) & 0xff;
            edi = *(ebp - 0x14);
            esi = *(ebp - 0x1c);
            edx = edx + *(ebp - 0x28);
            edi = edi - A14;
            esi = esi - ecx;
            ebx = ebx + *(ebp - 0x20);
            if(*(ebp - 0x10) < edx || *(ebp - 0x34) < ebx || *(ebp - 0x10) >= esi || *(ebp - 0x34) >= edi) {
                goto L00461410;
            }
            esi = 1;
        } else {
            ebx = *( *(ebp - 0x18) + 0x370);
            edx = ebx << 8 & 16711680;
            A14 = ebx;
            edi = ebx;
            A14 = A14 >> 0x18;
            edx = edx | A14;
            edx = edx | edi >> 8 & 65280;
            if(!(edx = edx | ebx << 0x18)) {
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                return 0;
            }
            ecx = *(ebp - 0x18) + edx;
            if(!( *(ebp - 0x24) & 8)) {
                esi = *( *(ebp - 0x18) + 0x3cc);
                ebx = esi << 8 & 16711680;
                edx = esi;
                A14 = esi;
                ebx = ebx | edx >> 0x18;
                ebx = ebx | A14 >> 8 & 65280;
                if(!(ebx = ebx | esi << 0x18)) {
                    edi = *(ebp - 0x18) + ebx;
                    ebx = *(edi + 2) & 65535;
                    edx = *(edi + 0x13) & 0xff;
                    A14 = ebx;
                    ebx = ebx >> 8;
                    A14 = (A14 << 8 | ebx) & 65535;
                    esi = *(ebp - 0x14) - A14 - edx;
                    edx = *edi & 65535;
                    A14 = *(edi + 0x12) & 0xff;
                    edi = edx << 8;
                    edi = (edi | edx >> 8) & 65535;
                    if(*(ebp - 0x10) < *(ebp - 0x1c) - edi - A14 || *(ebp - 0x34) < esi || *(ebp - 0x10) >= *(ebp - 0x1c) || *(ebp - 0x34) >= *(ebp - 0x14)) {
                        goto L00461070;
                    }
                    esi = 3;
                } else {
                    if(*(ebp - 0x10) < *(ebp - 0x1c) - 0x10 || *(ebp - 0x34) < *(ebp - 0x14) - 0x10 || *(ebp - 0x10) >= *(ebp - 0x1c) || *(ebp - 0x34) >= *(ebp - 0x14)) {
                        goto L00461070;
                    }
                    esi = 3;
                }
            } else {
L00461070:
                edx = *(ecx + 0x13) & 0xff;
                esi = *(ebp - 0x14) - edx;
                edx = *(ecx + 0x10) & 0xff;
                A14 = *(ecx + 0x12) & 0xff;
                edi = *(ebp - 0x1c);
                ebx = *(ecx + 0x11) & 0xff;
                edx = edx + *(ebp - 0x28);
                edi = edi - A14;
                ebx = ebx + *(ebp - 0x20);
                if(*(ebp - 0x10) >= edx && *(ebp - 0x34) >= ebx && *(ebp - 0x10) < edi && *(ebp - 0x34) < esi) {
                    esi = 1;
                } else {
                    *(ebp - 0x28) = *Ac;
                    *(ebp - 0x28) = *(ebp - 0x28) & 5;
                    if(!( *(ebp - 0x24) & 1)) {
                        esi = *(ebp - 0x28) != 0 ? 0xd0 : 0xcf;
                        A14 = L00461460((si & 65535) * 4 + *(ebp - 0x18) + 0x40);
                        if(A14 == 0) {
                            dl = 0;
                        } else {
                            edi = *(ebp - 0x18) + A14;
                            L00461440(edi);
                            A14 = ax & 65535;
                            *(ebp - 0x2c) = A14;
                            L00461430(edi + 0x12);
                            A14 = al & 0xff;
                            if(A14 != 0) {
                                ebx = *(ebp - 0x1c) - *(ebp - 0x2c) - A14;
                            } else {
                                L00461430(edi + 0x10);
                                ebx = (al & 0xff) + *(ebp - 0x30);
                            }
                            L00461430(edi + 0x11);
                            *(ebp - 0x14) = (al & 0xff) + *(ebp - 0x20);
                            A14 = edi + 2;
                            esi = ebx + *(ebp - 0x2c);
                            L00461440(A14);
                            A14 = (ax & 65535) + *(ebp - 0x14);
                            dl = 0;
                            if(*(ebp - 0x10) >= ebx && *(ebp - 0x34) >= *(ebp - 0x14) && *(ebp - 0x10) < esi && *(ebp - 0x34) < A14) {
                                edx = 1 & 0xff;
                            }
                        }
                        if(dl == 0) {
                            goto L00461193;
                        }
                        esi = 5;
                    } else {
L00461193:
                        if(!( *(ebp - 0x24) & 4)) {
                            ebx = *(ebp - 0x28) != 0 ? 0xdf : 0xde;
                            A14 = L00461460((bx & 65535) * 4 + *(ebp - 0x18) + 0x40);
                            if(A14 == 0) {
                                dl = 0;
                            } else {
                                edi = *(ebp - 0x18) + A14;
                                L00461440(edi);
                                *(ebp - 0x2c) = ax & 65535;
                                L00461430(edi + 0x12);
                                A14 = al & 0xff;
                                if(A14 != 0) {
                                    ebx = *(ebp - 0x1c) - *(ebp - 0x2c) - A14;
                                } else {
                                    L00461430(edi + 0x10);
                                    ebx = (al & 0xff) + *(ebp - 0x30);
                                }
                                L00461430(edi + 0x11);
                                ecx = edi + 2;
                                *(ebp - 0x14) = (al & 0xff) + *(ebp - 0x20);
                                esi = ebx + *(ebp - 0x2c);
                                L00461440(ecx);
                                A14 = (ax & 65535) + *(ebp - 0x14);
                                dl = 0;
                                if(*(ebp - 0x10) >= ebx && *(ebp - 0x34) >= *(ebp - 0x14) && *(ebp - 0x10) < esi && *(ebp - 0x34) < A14) {
                                    edx = 1 & 0xff;
                                }
                            }
                            if(dl == 0) {
                                goto L00461267;
                            }
                            esi = 6;
                        } else {
L00461267:
                            if(!( *(ebp - 0x24) & 2)) {
                                ebx = *(ebp - 0x28) != 0 ? 0xda : 0xd9;
                                A14 = L00461460((bx & 65535) * 4 + *(ebp - 0x18) + 0x40);
                                if(A14 == 0) {
                                    dl = 0;
                                } else {
                                    edi = *(ebp - 0x18) + A14;
                                    L00461440(edi);
                                    A14 = ax & 65535;
                                    *(ebp - 0x2c) = A14;
                                    L00461430(edi + 0x12);
                                    A14 = al & 0xff;
                                    if(A14 != 0) {
                                        ebx = *(ebp - 0x1c) - *(ebp - 0x2c) - A14;
                                    } else {
                                        L00461430(edi + 0x10);
                                        ebx = (al & 0xff) + *(ebp - 0x30);
                                    }
                                    L00461430(edi + 0x11);
                                    *(ebp - 0x14) = (al & 0xff) + *(ebp - 0x20);
                                    A14 = edi + 2;
                                    esi = ebx + *(ebp - 0x2c);
                                    L00461440(A14);
                                    A14 = (ax & 65535) + *(ebp - 0x14);
                                    dl = 0;
                                    if(*(ebp - 0x10) >= ebx && *(ebp - 0x34) >= *(ebp - 0x14) && *(ebp - 0x10) < esi && *(ebp - 0x34) < A14) {
                                        edx = 1 & 0xff;
                                    }
                                }
                                if(dl == 0) {
                                    goto L00461338;
                                }
                                esi = 8;
                            } else {
L00461338:
                                if(!( *(ebp - 0x24) & 0x40)) {
                                    ebx = *(ebp - 0x28) != 0 ? 0xd5 : 0xd4;
                                    A14 = L00461460((bx & 65535) * 4 + *(ebp - 0x18) + 0x40);
                                    if(A14 == 0) {
                                        dl = 0;
                                    } else {
                                        edi = *(ebp - 0x18) + A14;
                                        L00461440(edi);
                                        *(ebp - 0x24) = ax & 65535;
                                        L00461430(edi + 0x12);
                                        A14 = al & 0xff;
                                        if(A14 != 0) {
                                            ebx = *(ebp - 0x1c) - *(ebp - 0x24) - A14;
                                        } else {
                                            L00461430(edi + 0x10);
                                            ebx = (al & 0xff) + *(ebp - 0x30);
                                        }
                                        L00461430(edi + 0x11);
                                        ecx = edi + 2;
                                        *(ebp - 0x20) = (al & 0xff) + *(ebp - 0x20);
                                        esi = ebx + *(ebp - 0x24);
                                        L00461440(ecx);
                                        A14 = (ax & 65535) + *(ebp - 0x20);
                                        dl = 0;
                                        if(*(ebp - 0x10) >= ebx && *(ebp - 0x34) >= *(ebp - 0x20) && *(ebp - 0x10) < esi && *(ebp - 0x34) < A14) {
                                            edx = 1 & 0xff;
                                        }
                                    }
                                    if(dl == 0) {
                                        goto L00461410;
                                    }
                                    esi = 9;
                                } else {
L00461410:
                                    esi = 2;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    *A14 = esi;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x00461424 - 0x0046142F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461424()
{



}

/*	Procedure: 0x00461430 - 0x00461436
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00460E30()
 */

L00461430(A4)
/* unknown */ void  A4;
{



    return *A4;
}

/*	Procedure: 0x00461437 - 0x0046143F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461437()
{



}

/*	Procedure: 0x00461440 - 0x00461451
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00460E30()
 */

L00461440(A4)
/* unknown */ void  A4;
{



    ecx = *A4 & 65535;
    eax = ecx << 8;
    return eax | ecx >> 8;
}

/*	Procedure: 0x00461452 - 0x0046145F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461452()
{



}

/*	Procedure: 0x00461460 - 0x00461489
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00460E30()
 */

L00461460(A4)
/* unknown */ void  A4;
{



    ecx = *A4;
    eax = ecx << 8 & 16711680;
    eax = eax | ecx >> 0x18;
    eax = eax | ecx >> 8 & 65280;
    return eax | ecx << 0x18;
}

/*	Procedure: 0x0046148A - 0x00461543
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 8
 */

L0046148A(Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = Ac;
    (save)ebp;
    ebp = *(esi + A10 * 4 + 0x40);
    ebx = ebp << 8 & 16711680;
    ecx = ebp;
    edx = ebp;
    ebx = ebx | ecx >> 0x18;
    ebx = ebx | edx >> 8 & 65280;
    if(!(ebx = ebx | ebp << 0x18)) {
        *(A20 + 0xc) = 0;
        ebx = *(A20 + 0xc);
        *(A20 + 8) = ebx;
        *(A20 + 4) = *(A20 + 8);
        *A20 = *(A20 + 4);
        (restore)ebp;
        return;
    }
    esi = esi + ebx;
    ebp = *esi & 65535;
    ebx = ebp << 8;
    ebx = ebx | ebp >> 8;
    edx = *(esi + 0x12) & 0xff;
    edx :: 0;
    ecx = !(ebx = bx & 65535) ? A1c - ebx - edx : ( *(esi + 0x10) & 0xff) + A14;
    ebp = *(esi + 2) & 65535;
    edx = ( *(esi + 0x11) & 0xff) + A18;
    *A20 = ecx;
    *(A20 + 4) = edx;
    *(A20 + 8) = ecx + ebx;
    ecx = ebp;
    ebp = ebp >> 8;
    *(A20 + 0xc) = ((ecx << 8 | ebp) & 65535) + edx;
    (restore)ebp;
}

/*	Procedure: 0x00461544 - 0x0046154F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461544()
{



}

/*	Procedure: 0x00461550 - 0x00461A5F
 *	Argument size: 44
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044F9A0()
 */

L00461550(A0, A4, A1c, A28)
/* unknown */ void  A0;
/* unknown */ void  A4;
/* unknown */ void  A1c;
/* unknown */ void  A28;
{
	/* unknown */ void  Vfffffff8;



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)A0;
    (save)edi;
    edx = M00481010;
    esp = esp - 0x10;
    edi = *(ebp + 8);
    A1c = *(ebp + 0x14);
    if(edx == 0) {
        esp = ebp - 0xc;
        (restore)edi;
        (restore)A0;
        (restore)ebx;
        (restore)ebp;
        return 0;
    }
    *(ebp - 0x18) = *edi;
    *(ebp - 0x14) = *(edi + 4);
    *(ebp - 0x1c) = *(edi + 8);
    *(ebp - 0x10) = *(edi + 0xc);
    if(( *( *(ebp + 0xc) + 0x14) & 130023424) == 41943040) {
        ebx = *(edx + 0x3e0);
        A0 = ebx << 8 & 16711680;
        edi = ebx;
        eax = ebx;
        A0 = A0 | edi >> 0x18;
        eax = eax >> 8 & 65280;
        A0 = A0 | eax;
        if(!(A0 = A0 | ebx << 0x18)) {
            esp = ebp - 0xc;
            (restore)edi;
            (restore)A0;
            (restore)ebx;
            (restore)ebp;
            return 0;
        }
        eax = *(ebp + 0x10) - 1;
        eax :: 0;
        if(edi = A0 + edx) {
            goto L004618c6;
        }
        switch(eax) {
            case 0:
L004615ef:
                edx = *(edi + 0x13) & 0xff;
                eax = *(edi + 0x12) & 0xff;
                ebx = *(ebp - 0x10) - edx;
                A0 = *(ebp - 0x1c) - eax;
                edx = ( *(edi + 0x11) & 0xff) + *(ebp - 0x14);
                *A1c = ( *(edi + 0x10) & 0xff) + *(ebp - 0x18);
                *(A1c + 4) = edx;
                *(A1c + 8) = A0;
                *(A1c + 0xc) = ebx;
                goto L004618bc;
        }
        goto L004615ef;
    }
    edi = *(edx + 0x370);
    eax = edi << 8 & 16711680;
    eax = eax | edi >> 0x18;
    eax = eax | edi >> 8 & 65280;
    if(eax = eax | edi << 0x18) {
        goto L00461655;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)A0;
    (restore)ebx;
    (restore)ebp;
    return 0;
    A0 = edx;
    eax = *(ebp + 0xc);
    edi = *(ebp + 0x10);
    eax = *eax;
    edi = edi - 1;
    eax = eax & 5;
    if(edi <= 8) {
        goto ( *(edi * 4 + 0x479388));
        ebx = *(A0 + 0x13) & 0xff;
        0;
        *(ebp - 0x10) = *(ebp - 0x10) - ebx;
        eax = *(A0 + 0x12) & 0xff;
        edi = *(ebp - 0x1c) - eax;
        edx = ( *(A0 + 0x11) & 0xff) + *(ebp - 0x14);
        ebx = ( *(A0 + 0x10) & 0xff) + *(ebp - 0x18);
        *A1c = ebx;
        *(A1c + 4) = edx;
        *(A1c + 8) = edi;
        *(A1c + 0xc) = *(ebp - 0x10);
        goto L004618bc;
        if(!(ebx & 8)) {
            eax = *(edx + 0x3cc);
            ebx = eax << 8 & 16711680;
            A0 = eax;
            edi = eax;
            ebx = ebx | A0 >> 0x18;
            ebx = ebx | edi >> 8 & 65280;
            eax = eax << 0x18;
            if(ebx = ebx | eax) {
                goto L004616f0;
            }
            esp = ebp - 0xc;
            (restore)edi;
            (restore)A0;
            (restore)ebx;
            (restore)ebp;
            return 0;
            A0 = ebx + edx;
            edi = *(A0 + 2) & 65535;
            eax = *(A0 + 0x13) & 0xff;
            edx = edi;
            edi = edi >> 8;
            edx = (edx << 8 | edi) & 65535;
            ebx = *(ebp - 0x10) - edx - eax;
            eax = *A0 & 65535;
            edx = *(A0 + 0x12) & 0xff;
            A0 = eax;
            eax = eax >> 8;
            A0 = A0 << 8 | eax;
            edi = *(ebp - 0x1c);
            *A1c = edi - (si & 65535) - edx;
            *(A1c + 4) = ebx;
            *(A1c + 8) = *(ebp - 0x1c);
            *(A1c + 0xc) = *(ebp - 0x10);
            goto L004618bc;
            if(!(ebx & 8)) {
                eax = *(edx + 0x3cc);
                A0 = eax << 8 & 16711680;
                ebx = eax;
                edi = eax;
                A0 = A0 | ebx >> 0x18;
                A0 = A0 | edi >> 8 & 65280;
                eax = eax << 0x18;
                if(A0 = A0 | eax) {
                    goto L00461782;
                }
                esp = ebp - 0xc;
                (restore)edi;
                (restore)A0;
                (restore)ebx;
                (restore)ebp;
                return 0;
                eax = A0 + edx;
                ebx = *(eax + 0x12) & 0xff;
                edx = *(eax + 0x13) & 0xff;
                edi = *(eax + 2) & 65535;
                A0 = *eax & 65535;
                eax = A0;
                A0 = A0 >> 8;
                eax = eax << 8 | A0;
                eax = ax & 65535;
                *A1c = *(ebp - 0x1c) - eax - ebx;
                A0 = edi;
                edi = edi >> 8;
                A0 = A0 << 8 | edi;
                A0 = si & 65535;
                eax = *(ebp - 0x10) - A0 - edx;
                *(A1c + 4) = eax;
                *(A1c + 8) = *(ebp - 0x1c) - ebx;
                *(A1c + 0xc) = *(ebp - 0x10) - edx;
                goto L004618bc;
                if(!(ebx & 1)) {
                    if(eax == 0) {
                        goto L004617f0;
                    }
                    eax = 0xd0;
                    goto L004617f5;
                    eax = 0xcf;
                    (save)A1c;
                    (save) *(ebp - 0x1c);
                    (save) *(ebp - 0x14);
                    (save) *(ebp - 0x18);
                    A1c = 0xcf;
                    goto L004618b2;
                    if(!(ebx & 4)) {
                        if(eax == 0) {
                            goto L00461820;
                        }
                        ebx = 0xdf;
                        goto L00461825;
                        (save)A1c;
                        (save) *(ebp - 0x1c);
                        (save) *(ebp - 0x14);
                        (save) *(ebp - 0x18);
                        (save)0xde;
                        goto L004618b3;
                        if(!(ebx & 4)) {
                            if(eax == 0) {
                                goto L00461850;
                            }
                            eax = 0xdf;
                            goto L00461855;
                            (save)A1c;
                            (save) *(ebp - 0x1c);
                            (save) *(ebp - 0x14);
                            (save) *(ebp - 0x18);
                            (save)0xde;
                            goto L004618b3;
                            if(!(ebx & 2)) {
                                if(eax == 0) {
                                    goto L00461878;
                                }
                                A0 = 0xda;
                                goto L0046187d;
                                ebx = 0xd9;
                                (save)A1c;
                                (save) *(ebp - 0x1c);
                                (save) *(ebp - 0x14);
                                (save) *(ebp - 0x18);
                                (save)0xd9;
                                goto L004618b3;
                                if(!(ebx & 0x40)) {
                                    if(eax == 0) {
                                        goto L004618a0;
                                    }
                                    edi = 0xd5;
                                    goto L004618a5;
                                    eax = L00461490(edx, 0xd4, *(ebp - 0x18), *(ebp - 0x14), *(ebp - 0x1c), A1c);
                                    esp = ebp - 0xc;
                                    (restore)edi;
                                    (restore)A0;
                                    (restore)ebx;
                                    (restore)ebp;
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
L004618c6:
    *(A1c + 0xc) = 0;
    *(A1c + 8) = *(A1c + 0xc);
    *(A1c + 4) = *(A1c + 8);
    *A1c = *(A1c + 4);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)A0;
    (restore)ebx;
    (restore)ebp;
    return 1;
    (save)ebx;
    (save)A0;
    (save)edi;
    (save)ebp;
    eax = Vfffffff8;
    ebx = A4;
    if(M00481010 != 0) {
        goto L00461911;
    }
    (restore)ebp;
    (restore)edi;
    (restore)A0;
    (restore)ebx;
    return 0;
    if((A4 & 130023424) != 41943040) {
        goto L00461930;
    }
    edi = 0xe8;
    goto L00461935;
    edx = *(A1c + 0x370) << 8 & 16711680;
    edx = edx | ebp >> 0x18;
    edx = edx | ebp >> 8 & 65280;
    if(edx = edx | ebp << 0x18) {
        goto L00461966;
    }
    (restore)ebp;
    (restore)edi;
    (restore)A0;
    (restore)ebx;
    return 0;
    *L00000000 = *(edx + A1c + 0x10) & 0xff;
    A1c = *(ebp + 0x11) & 0xff;
    *A1c = cl;
    *A0 = *(ebp + 0x12) & 0xff;
    *ebx = *(ebp + 0x13) & 0xff;
    (restore)ebp;
    (restore)edi;
    (restore)A0;
    (restore)ebx;
    return 1;
    (save)ebx;
    (save)ebp;
    if(M00481010 != 0) {
        goto L004619a5;
    }
    (restore)ebp;
    (restore)ebx;
    return 0;
    if((A1c & 130023424) != 41943040) {
        goto L004619c0;
    }
    *A1c = 0;
    goto L00461a55;
    ebp = *(edx + 0x370) << 8 & 16711680;
    ebp = ebp | eax >> 0x18;
    ebp = ebp | eax >> 8 & 65280;
    if(ebp = ebp | eax << 0x18) {
        goto L004619f1;
    }
    (restore)ebp;
    (restore)ebx;
    return 0;
    if(A28 - 5 > 4) {
        goto L00461a20;
    }
    goto ( *(ebx * 4 + 0x4793b4));
    ebp = 0xd1;
    goto L00461a28;
    ebp = 0xdb;
    goto L00461a28;
    ebp = 0xd6;
    goto L00461a28;
    *A1c = 0;
    (restore)ebp;
    (restore)ebx;
    return 1;
    ebx = *(edx + ebp * 4 + 0x40) << 8 & 16711680;
    ebx = ebx | eax >> 0x18;
    ebx = ebx | eax >> 8 & 65280;
    eax = eax << 0x18;
    *A1c = 0;
    (restore)ebp;
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x00461A60 - 0x00461AA4
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00461BD0()
 */

L00461A60(A8)
/* unknown */ void  A8;
{



    (save)ebx;
    if(A8 != 0) {
        goto L00461a70;
    }
    (restore)ebx;
    return 1;
    if(ebx >= 0x100) {
        goto L00461aa1;
    }
    eax = ebx >> 3;
    edx = *(eax + A8 + 0x18) & 0xff;
    eax = 7 & ebx;
    (restore)ebx;
    al = 0;
    return;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00461AB0 - 0x00461BCD
 *	Argument size: 8
 *	Local size: 32
 *	Save regs size: 12
 *	Called by:
 *		L00461BD0()
 */

L00461AB0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = Ac;
    Vffffffe8 = L0044CA90(0x69);
    Vffffffe4 = L0044CA90(0x68);
    *(ebp - 0x28) = L0044CA90(0x6a);
    *(ebp - 0x2c) = *ebx;
    Vffffffe0 = *(ebx + 4);
    *(ebp - 0x24) = *(ebx + 8);
    edi = *(ebx + 0xc);
    L004496A0(A8, Vffffffe8);
    ebx = *(ebp - 0x24);
    ebx = ebx - 2;
    Vffffffec = Vffffffe0;
    Vffffffec = Vffffffec + 2;
    Vfffffff0 = *(ebp - 0x2c);
    Vfffffff0 = Vfffffff0 + 2;
    esi = edi - 2;
    L0044A090(A8, Vfffffff0, Vffffffec, ebx, esi);
    edi = Vffffffe0 + 1;
    0;
    *(ebp - 0x2c) = *(ebp - 0x2c) + 1;
    L00449E20(A8, *(ebp - 0x2c), edi, Vffffffe4);
    L004497A0(A8, Vfffffff0, edi, ebx, Vffffffe4);
    L00449E20(A8, ebx, edi, Vffffffe8);
    L00449E20(A8, *(ebp - 0x2c), esi, Vffffffe8);
    L004497A0(A8, Vfffffff0, esi, *(ebp - 0x24) - 1, *(ebp - 0x28));
    L00449990(A8, *(ebp - 0x2c), Vffffffec, esi, Vffffffe4);
    return L00449990(A8, ebx, Vffffffec, esi, *(ebp - 0x28));
}

/*	Procedure: 0x00461BCE - 0x00461BCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461BCE()
{



}

/*	Procedure: 0x00461BD0 - 0x00461CF6
 *	Argument size: 8
 *	Local size: 64
 *	Save regs size: 12
 */

L00461BD0(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    ebx = ebp - 0x4c;
    *(ebp - 0x4c) = -1;
    *(ebp - 0x48) = -1;
    *(ebp - 0x44) = 0x131;
    Vffffffc0 = 0x121;
    L00461AB0(Ac, ebx);
    eax = A8;
    Vffffffe4 = *(eax + 0x14);
    edi = 0;
    Vfffffff0 = 0;
    Vffffffec = 0x10;
    if(!(Vffffffec = Vffffffec - 1)) {
        do {
            eax = Vfffffff0;
            *(ebp - 0x48) = eax;
            eax = *(ebp - 0x48) + 0x12;
            esi = 0;
            Vffffffe8 = 0x10;
            Vffffffc0 = eax;
            if(!(Vffffffe8 = Vffffffe8 - 1)) {
                do {
                    edx = esi + 0x13;
                    ebx = *(edi * 2 + 0x49c7f8) & 65535;
                    *(ebp - 0x4c) = esi;
                    *(ebp - 0x44) = edx;
                    if(ebx != 0) {
                        if(edi == Vffffffe4) {
                            L004496D0(Ac, 0x6d);
                            L0044A0D0(Ac, ebp - 0x4c);
                            (save)0x6f;
                        } else {
                            (save)ebx;
                            L00461A60(A8);
                            (restore)ecx;
                            cl = al == 0 ? 0x6b : 0x70;
                            (save)cl & 0xff;
                        }
                        (save)Ac;
                        L004496D0();
                        (restore)ecx;
                        eax = L00428380(ebx, & Vffffffc4, 0x20);
                        edx = ebp - 0x4c;
                        eax = L0044A4D0(Ac, *(A8 + 8), edx, & Vffffffc4, eax, 0x30);
                    }
                    edi = edi + 1;
                    esi = esi + 0x13;
                } while(Vffffffe8 = Vffffffe8 - 1);
            }
            Vfffffff0 = Vfffffff0 + 0x12;
        } while(Vffffffec = Vffffffec - 1);
    }
}

/*	Procedure: 0x00461CF7 - 0x00461CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461CF7()
{



}

/*	Procedure: 0x00461E26 - 0x00461E2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461E26()
{



}

/*	Procedure: 0x00461F11 - 0x00461F1F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00461F11()
{



}

/*	Procedure: 0x00461F6D - 0x00462051
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00461F6D(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = Ac;
    edx = *(eax + 8) - 5;
    if(edx <= 0) {
        switch(edx) {
            case 0:
                goto L00461f87;
        }
L00461f87:
        if(( *(eax + 0x14) & 65535) == 0x90) {
            eax = L00461f20(A8);
        }
    }
    return;
    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)A8;
    esp = esp - 0x2c;
    ebx = Ac;
    ecx = *(ebx + 8) - 9;
    if(ecx > 4) {
        goto L0046204b;
    }
    goto ( *(ecx * 4 + 0x479414));
    L00461d00(A8, *(ebx + 0x10), *(ebx + 0x14));
    goto L0046204b;
    L00461d00(A8, -4, -4);
    goto L0046204b;
    L00461d00(A8, *(ebx + 0x10), *(ebx + 0x14));
    if(*(A8 + 0x14) >= 0x100 || *(A8 + 0xc) == 0) {
        goto L0046204b;
    }
    L00434150(ebp - 0x34, 0x2c);
    *(ebp - 0x34) = *(A8 + 0x10);
    *(ebp - 0x30) = A8;
    *(ebp - 0x24) = 1;
    *(ebp - 0x20) = *(A8 + 0x14);
    *(ebp - 0x1c) = *(ebx + 0xc);
    *(ebp - 0x10) = *(A8 + 0x14);
    edx = *( *(A8 + 0x14) * 2 + 0x49c7f8) & 65535;
    *(ebp - 0xc) = edx;
    eax = *(A8 + 0xc)( *(A8 + 0x10), ebp - 0x34);
    esp = ebp - 8;
    (restore)A8;
    (restore)ebx;
}

/*	Procedure: 0x00462060 - 0x004620F4
 *	Argument size: 16
 *	Local size: 28
 *	Save regs size: 4
 */

L00462060(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff8;



    eax = L0042E3A0(0x38);
    *(ebp - 0x20) = eax;
    *( *(ebp - 0x20) + 0xc) = A8;
    edx = *(ebp - 0x20);
    *(edx + 0x10) = Ac;
    *( *(ebp - 0x20) + 0x14) = -1;
    if(A14 != 0) {
        L004342A0( *(ebp - 0x20) + 0x18, A14, 0x20);
    }
    Vfffffff8 = esp;
    *( *(ebp - 0x20) + 8) = L0044BBF0(A10);
    goto L004620e3;
    L0042E3E0(ebp - 0x20);
    L004234F0(0, 0, 0);
    if(Vffffffec != 0) {
        ecx = Vffffffe4;
        Vffffffec(-1);
    }
    esp = *(ebp - 8);
L004620e3:
    *( *(ebp - 0x20)) = -100414577;
    return *(ebp - 0x20);
}

/*	Procedure: 0x004620F5 - 0x004620FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004620F5()
{



}

/*	Procedure: 0x00462100 - 0x00462157
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00442430()
 *		L00445430()
 */

L00462100(A8)
/* unknown */ void  A8;
{



    (save)esi;
    esi = *A8;
    if(esi == 0) {
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    if(*esi != -100414577) {
        *A8 = 0;
        esp = ebp - 8;
        (restore)esi;
        return;
    }
    *esi = 0;
    L0041C860(esi + 4);
    (save)esi + 8;
    L0044BB30();
    eax = L0042E3E0(A8);
    esp = ebp - 8;
    (restore)esi;
}

/*	Procedure: 0x00462158 - 0x0046215F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00462158()
{



}

/*	Procedure: 0x00462160 - 0x004621E9
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 8
 */

L00462160(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    esp = esp - 0x10;
    if(A8 == 0 || *A8 != -100414577) {
        L00429610(65561);
    }
    if(Ac == 0) {
        L00429610(65538);
    }
    L0041C860(A8 + 4);
    ecx = *(Ac + 4);
    eax = *Ac;
    *(ebp - 0x18) = eax;
    *(ebp - 0x14) = ecx;
    *(ebp - 0x10) = *(ebp - 0x18) + 0x130;
    ecx = ecx + 0x120;
    *(ebp - 0xc) = ecx;
    *(A8 + 4) = L0041C5A0(A8, ebp - 0x18, 176160912, A10, 0);
    return L0041B560( *(A8 + 4), 0x49c9f8);
}

/*	Procedure: 0x004621EA - 0x00462267
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 */

L004621EA(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = L00421520(0x4c, A8, Ac, A10, A14, 0x102, 0x214);
    *(esi + 0x30) = 0x28;
    L00452360( *(esi + 0x28), 0x4623d0, esi);
    ebx = *(esi + 0x2c);
    L00455790(ebx, 0x462470, esi);
    L00455880(ebx, 0x462380, esi);
    L00455820(ebx, 0x4625d0, esi);
    return esi;
}

/*	Procedure: 0x00462268 - 0x0046226F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00462268()
{



}

/*	Procedure: 0x00462270 - 0x0046231E
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004633F0()
 *		L004634B0()
 */

L00462270(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    ebx = A10;
    (save)edi;
    esp = esp - 0x1c;
    edx = ( *ebx & 0xff) + 0x11;
    esi = ecx;
    eax = L0042E310(edx);
    edx = eax;
    *(ebp - 0x28) = eax;
    *edx = A14;
    ecx = *(ebp - 0x28);
    *(ecx + 4) = Ac;
    eax = *(ebp - 0x28);
    *(eax + 8) = A8;
    edx = *(ebp - 0x28);
    eax = *(ebp - 0x28);
    *(eax + 0xc) = edx + 0x10;
    L004288C0( *( *(ebp - 0x28) + 0xc), ebx);
    ebx = *(ebp - 0x28);
    *(ebp - 0x10) = esp;
    if(ebx == 0) {
        L00429610(65538);
    }
    edi = L00429A00(esi + 0x3c, ebx);
    goto L00462313;
    L0042E3E0(ebp - 0x28);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x1c) != 0) {
        ecx = *(ebp - 0x24);
        *(ebp - 0x1c)(-1);
    }
    esp = *(ebp - 0x10);
L00462313:
    esp = ebp - 0xc;
    eax = edi;
    (restore)edi;
}

/*	Procedure: 0x0046231F - 0x0046231F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046231F()
{



}

/*	Procedure: 0x00462320 - 0x00462378
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004633F0()
 *		L004634B0()
 */

L00462320()
{
	/* unknown */ void  ebx;



    eax = ecx;
    (save)esi;
    (save)edi;
    esp = esp - 4;
    *(ebp - 0x10) = ecx;
    ebx = *(eax + 0x2c);
    L00454BE0(ebx, 0, L00454DD0(ebx));
    eax = *(ebp - 0x10);
    edi = *(eax + 0x40);
    esi = 0;
    ebx = *(eax + 0x3c);
    if(edi > 0) {
        do {
            L0042E3E0(ebx);
            esi = esi + 1;
            ebx = ebx + 4;
        } while(esi < edi);
    }
    eax = L00429D80( *(ebp - 0x10) + 0x3c);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00462379 - 0x004623C5
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L00462379(A8)
/* unknown */ void  A8;
{



    eax = A8;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 4;
    *(ebp - 0x10) = eax;
    edi = *(eax + 0x40);
    esi = 0;
    ebx = *(eax + 0x3c);
    if(edi > 0) {
        do {
            L0042E3E0(ebx);
            esi = esi + 1;
            ebx = ebx + 4;
        } while(esi < edi);
    }
    eax = L00429D80( *(ebp - 0x10) + 0x3c);
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x004623C6 - 0x004623CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004623C6()
{



}

/*	Procedure: 0x00462463 - 0x0046246F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00462463()
{



}

/*	Procedure: 0x004625C5 - 0x004625CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004625C5()
{



}

/*	Procedure: 0x0046261F - 0x0046261F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046261F()
{



}

/*	Procedure: 0x00462620 - 0x00462694
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 */

L00462620(A8)
/* unknown */ void  A8;
{



    edx = ebp - 0x10;
    eax = ecx;
    (save)esi;
    (save)edi;
    esp = esp - 8;
    *(ebp - 0x14) = ecx;
    (save)edx;
    eax = L00454E40( *(eax + 0x2c));
    esi = 0;
    (restore)ecx;
    edi = eax;
    if(*(ebp - 0x10) > 0) {
        do {
            (save)A8;
            (restore)ecx;
            if(L00428D80( *( *(edi + esi * 4) + 0xc)) != 0) {
                goto L00462669;
            }
            esi = esi + 1;
        } while(esi < *(ebp - 0x10));
        goto L0046268b;
L00462669:
        L00454F60( *( *(ebp - 0x14) + 0x2c), esi);
        eax = L00455700( *( *(ebp - 0x14) + 0x2c), esi, 0x21);
    }
L0046268b:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x00462695 - 0x0046269F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00462695()
{



}

/*	Procedure: 0x004626CB - 0x00462711
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004626CB()
{



    (save)ebp;
    ebp = esp;
    eax = *(ebp + 8);
    esp = esp - 4;
    eax = L00443D10( *( *(eax + 0x34) + 0x2c), ebp - 4, 0);
    edx = *( *(ebp + 0xc) + 0xc);
    ecx = *edx & 0xff;
    eax = L00426440(eax, *(ebp - 4), edx + 1, ecx, 1);
    esp = ebp;
    (restore)ebp;
    al = 0;
}

/*	Procedure: 0x00462712 - 0x0046271F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00462712()
{



}

/*	Procedure: 0x00462720 - 0x0046279C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L004633F0()
 *		L004634B0()
 */

L00462720(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    (save)edi;
    esp = esp - 8;
    esi = 0x4626a0;
    L00443C60( *( *(A8 + 0x34) + 0x2c));
    eax = al != 0 ? 0 : 0x4626d0;
    edx = ebp - 0x10;
    esi = L00429F50(A8 + 0x3c, eax, esi, A8, edx);
    *(ebp - 0x14) = esi;
    edi = *(A8 + 0x2c);
    L00454BE0(edi, 0, L00454DD0(edi));
    L00454A20( *(A8 + 0x2c), 0, esi, *(ebp - 0x10), 0x22);
    eax = L0042E3E0(ebp - 0x14);
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x0046279D - 0x00462C42
 *	Argument size: 4
 *	Local size: 284
 *	Save regs size: 8
 */

L0046279D(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffee4;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffef4;
	/* unknown */ void  Vfffffef8;
	/* unknown */ void  Vfffffefc;
	/* unknown */ void  Vffffff00;
	/* unknown */ void  Vffffff04;
	/* unknown */ void  Vffffff08;
	int Vffffff0c;
	/* unknown */ void  Vffffff10;
	/* unknown */ void  Vffffff14;
	/* unknown */ void  Vffffff18;
	/* unknown */ void  Vffffff1c;
	/* unknown */ void  Vffffff20;
	/* unknown */ void  Vffffff24;
	/* unknown */ void  Vffffff28;
	/* unknown */ void  Vffffff2c;
	/* unknown */ void  Vffffff30;
	/* unknown */ void  Vffffff34;
	/* unknown */ void  Vffffff38;
	/* unknown */ void  Vffffff3c;
	/* unknown */ void  Vffffff40;
	/* unknown */ void  Vffffff44;
	/* unknown */ void  Vffffff48;
	/* unknown */ void  Vffffff4c;
	/* unknown */ void  Vffffff50;
	/* unknown */ void  Vffffff54;
	/* unknown */ void  Vffffff58;
	/* unknown */ void  Vffffff5c;
	/* unknown */ void  Vffffff60;
	/* unknown */ void  Vffffff64;
	/* unknown */ void  Vffffff68;
	/* unknown */ void  Vffffff6c;
	/* unknown */ void  Vffffff70;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff7c;
	/* unknown */ void  Vffffff80;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff88;
	/* unknown */ void  Vffffff8c;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;



    Vffffffe8 = 0;
    Vffffffec = 0;
    Vfffffff0 = 0x140;
    Vfffffff4 = 0x10e;
    eax = L00419240(0x50, & Vffffffe8, 268435457, 0, A8);
    Vffffff74 = eax;
    Vfffffef0 = esp;
    L0041B820( *(eax + 0xc), 0x462fb0, eax);
    Vffffff14 = 0;
    Vffffff18 = 0;
    Vffffff1c = 0x140;
    Vffffff20 = 0x10e;
    ebx = L0043C220(Vffffff74, & Vffffff14, 0x100);
    Vffffffc8 = 0xa;
    Vffffffcc = 0xa;
    Vffffffd0 = 0x2a;
    Vffffffd4 = 0x2a;
    eax = L0043BA80(ebx, & Vffffffc8, 0x100, 0);
    *(Vffffff74 + 0x2c) = eax;
    Vffffffb8 = 0x32;
    Vffffffbc = 0x14;
    Vffffffc0 = 0x140;
    Vffffffc4 = 0x24;
    eax = L0043A530(ebx, & Vffffffb8, 0x100, 0, 0);
    *(Vffffff74 + 0x30) = eax;
    Vffffffa8 = 0xa;
    Vffffffac = 0x32;
    Vffffffb0 = 0x50;
    Vffffffb4 = 0x42;
    L0043A240(ebx, & Vffffffa8, 0x100, 0x4794b4, 0);
    Vffffff98 = 0x5a;
    *(ebp - M00000064) = 0x32;
    Vffffffa0 = 0x140;
    Vffffffa4 = 0x42;
    eax = L0043A530(ebx, & Vffffff98, 0x100, 0, 0);
    *(Vffffff74 + 0x34) = eax;
    Vffffff88 = 0xa;
    Vffffff8c = 0x46;
    Vffffff90 = 0x50;
    Vffffff94 = 0x56;
    L0043A240(ebx, & Vffffff88, 0x100, 0x4794bc, 0);
    Vffffff78 = 0x5a;
    Vffffff7c = 0x46;
    Vffffff80 = 0x136;
    Vffffff84 = 0x56;
    eax = L0043A530(ebx, & Vffffff78, 0x100, 0, 0);
    *(Vffffff74 + 0x38) = eax;
    Vffffff64 = 0xa;
    Vffffff68 = 0x5a;
    Vffffff6c = 0x50;
    Vffffff70 = 0x6a;
    L0043A240(ebx, & Vffffff64, 0x100, 0x4794c4, 0);
    Vffffff54 = 0x5a;
    Vffffff58 = 0x5a;
    Vffffff5c = 0x136;
    Vffffff60 = 0x6a;
    eax = L0043A530(ebx, & Vffffff54, 0x100, 0, 0);
    *(Vffffff74 + 0x3c) = eax;
    Vffffff44 = 0xa;
    Vffffff48 = 0x6e;
    Vffffff4c = 0x50;
    Vffffff50 = 0x7e;
    L0043A240(ebx, & Vffffff44, 0x100, "\tModified:", 0);
    Vffffff34 = 0x5a;
    Vffffff38 = 0x6e;
    Vffffff3c = 0x136;
    Vffffff40 = 0x7e;
    eax = L0043A530(ebx, & Vffffff34, 0x100, 0, 0);
    *(Vffffff74 + 0x40) = eax;
    Vffffff24 = 0xa;
    Vffffff28 = 0x84;
    Vffffff2c = 0x50;
    Vffffff30 = 0x94;
    L0043A240(ebx, & Vffffff24, 0x100, "\tLocation:", 0);
    Vffffffd8 = 0x5a;
    Vffffffdc = 0x82;
    Vffffffe0 = 0x136;
    Vffffffe4 = 0x96;
    eax = L0043ADB0(ebx, & Vffffffd8, 0x100, 0, 1);
    *(Vffffff74 + 0x44) = eax;
    Vffffff04 = 0xa;
    Vffffff08 = 0xa0;
    Vffffff0c = M00000064;
    Vffffff10 = 0xb0;
    L0043A240(ebx, & Vffffff04, 0x100, "\tComments:", 0);
    Vfffffef4 = 0xa;
    Vfffffef8 = 0xb4;
    Vfffffefc = 0x136;
    Vffffff00 = 0x104;
    esi = L004206D0(ebx, & Vfffffef4, 0x100, 0, 0x402, 0);
    (save)0;
    L004431B0( *(esi + 0x2c));
    (restore)ecx;
    *(Vffffff74 + 0x48) = esi;
    *(ebx + 0x4c) = 0x3ee;
    *(ebx + 0x50) = 0x3ee;
    *(Vffffff74 + 0x18) = 0x3ee;
    return Vffffff74;
    L004192E0( & Vffffff74);
    L004234F0(0, 0, 0);
    if(Vfffffee4 != 0) {
        ecx = *(ebp + -292);
        Vfffffee4(-1);
    }
    esp = *(ebp + -272);
    return Vffffff74;
}

/*	Procedure: 0x00462C43 - 0x00462C4F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00462C43()
{



}

/*	Procedure: 0x00462C50 - 0x00462DA2
 *	Argument size: 4
 *	Local size: 288
 *	Save regs size: 8
 */

L00462C50(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;



    ebx = *(ecx + 0x44);
    *(ebp + -296) = 0;
    Vfffffff4 = 0;
    Vfffffff0 = esp;
    eax = L0042BDB0(A8, 0x21);
    *(ebp + -296) = eax;
    if(eax == 0) {
        return;
    }
    L0042C260( *(ebp + -296), ebp + -292, 0x100);
    esi = eax;
    L00424EC0( *(ebx + 0x28), 0, ebp + -292, esi, 0, 0, 0);
    for(L0041A1A0(ebx, ebp + -292, esi); 1; Vfffffff4 = 0) {
        eax = L0042BDB0( *(ebp + -296), 0x21);
        Vfffffff4 = eax;
        if(eax == 0) {
            goto L00462d83;
        }
        eax = L0042C260(eax, ebp + -292, 0x100);
        L00424EC0( *(ebx + 0x28), 0, ebp + -292, eax, 0, 0, 0);
        L0042BD00(ebp + -296);
        *(ebp + -296) = Vfffffff4;
    }
    L0042BD00(ebp + -296);
    L0042BD00( & Vfffffff4);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        (save)-1;
        ecx = Vffffffdc;
        Vffffffe4();
    }
    esp = *(ebp - 0x10);
L00462d83:
    L0042BD00(ebp + -296);
    esp = ebp - 8;
    return L0042BD00( & Vfffffff4);
}

/*	Procedure: 0x00462DA3 - 0x00462DAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00462DA3()
{



}

/*	Procedure: 0x00462FAA - 0x00463242
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 */

L00462FAA(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = *(A8 + 0x4c);
    edx = Ac;
    if(ecx != 0) {
        eax = *(ecx + 0x28) - 10005;
        if(eax <= 1) {
            switch(eax) {
                case 0:
L00462fd4:
                    (save)edx;
                    (save)ecx;
                    L00464110();
                    goto L00462fe7;
                case 1:
                    goto L00462fd4;
            }
            goto L00462fd4;
        }
        eax = L00463a90(ecx, edx);
    }
    return;
    (save)ebp;
    ebp = esp;
    (save)A8;
    esp = esp - 0x7c;
    A8 = ebp - 0x14;
    *(ebp - 0x14) = 0;
    *(ebp - 0x10) = 0;
    *(ebp - 0xc) = 0x10e;
    *(ebp - 8) = 0x66;
    eax = L00419240(0x34, A8, 268435457, 0, "\rCreate Folder");
    *(ebp - 0x80) = eax;
    *(ebp - 0x68) = esp;
    L0041B820( *(eax + 0xc), 0x4631c0, eax);
    eax = ebp - M00000064;
    *(ebp - M00000064) = 0;
    *(ebp - 0x60) = 0;
    *(ebp - 0x5c) = 0x10e;
    *(ebp - 0x58) = 0x66;
    A8 = L0043C220( *(ebp - 0x80), eax, 0x100);
    ecx = ebp - 0x34;
    *(ebp - 0x34) = 0xa;
    *(ebp - 0x30) = 7;
    *(ebp - 0x2c) = 0x104;
    *(ebp - 0x28) = 0x17;
    L0043A240(A8, ecx, 0x100, 0x479534, 0);
    edx = ebp - 0x44;
    *(ebp - 0x44) = 0xa;
    *(ebp - 0x40) = 0x1e;
    *(ebp - 0x3c) = 0x104;
    *(ebp - 0x38) = 0x38;
    eax = L004206D0(A8, edx, 0x100, 0, 0, 0);
    *( *(ebp - 0x80) + 0x2c) = eax;
    L0043C350(A8, *( *(ebp - 0x80) + 0x2c));
    ecx = ebp - 0x54;
    *(ebp - 0x54) = 0xae;
    *(ebp - 0x50) = 0x42;
    *(ebp - 0x4c) = 0x104;
    *(ebp - 0x48) = 0x5c;
    L00439DE0(A8, ecx, 0x500, 0x3f2, 0x479550, 0);
    eax = ebp - 0x24;
    *(ebp - 0x24) = 0x46;
    *(ebp - 0x20) = 0x45;
    *(ebp - 0x1c) = 0x96;
    *(ebp - 0x18) = 0x59;
    L00439DE0(A8, eax, 0x100, 0x3f3, 0x479558, 0);
    *(A8 + 0x4c) = 0x3f2;
    *(A8 + 0x50) = 0x3f3;
    *( *(ebp - 0x80) + 0x18) = 0x3f3;
    goto L004631b3;
    L004192E0(ebp - 0x80);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x74) == 0) {
        goto L004631b0;
    }
    ecx = *(ebp - 0x7c);
    *(ebp - 0x74)(-1);
    esp = *(ebp - 0x68);
    eax = *(ebp - 0x80);
    esp = ebp - 4;
    (restore)A8;
    return;
    (save)ebp;
    ebp = esp;
    edx = *(A8 + 0x30);
    if(edx == 0) {
        goto L004631d8;
    }
    eax = L00464110(edx, Ac);
    esp = ebp;
    return;
    (save)ebp;
    ebp = esp;
    (save)A8;
    L0042BD00(A8 + 0x50);
    L004192E0(A8 + 0x44);
    L004192E0(A8 + 0x48);
    L0042BD00(A8 + 0x54);
    eax = L00439BF0(A8 + 0x4c);
    esp = ebp - 4;
    (restore)A8;
    return;
    (save)ebp;
    ebp = esp;
    esp = ebp;
    return L0041A300(A8, 0x1a4, 0x2bc, 134217728, 0);
}

/*	Procedure: 0x00463250 - 0x004633EE
 *	Argument size: 4
 *	Local size: 288
 *	Save regs size: 8
 *	Called by:
 *		L004634B0()
 */

L00463250(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffee0;
	/* unknown */ void  Vfffffeec;
	/* unknown */ void  Vfffffef0;
	/* unknown */ void  Vfffffef4;
	/* unknown */ void  Vfffffff4;



    esi = *(ecx + 0x38);
    L00424F30( *(esi + 0x28));
    L00424EC0( *(esi + 0x28), 0, & Vfffffef4, L0042C260(A8, & Vfffffef4, 0x100), 0, 0, 0);
    Vfffffef0 = 0;
    Vfffffff4 = 0;
    Vfffffeec = esp;
    eax = L0042BDB0(A8, 0x21);
    Vfffffef0 = eax;
    if(eax != 0) {
        L0042C260(eax, & Vfffffef4, 0x100);
        for(L00424EC0( *(esi + 0x28), 0, & Vfffffef4, eax, 0, 0, 0); 1; Vfffffff4 = 0) {
            eax = L0042BDB0(Vfffffef0, 0x21);
            Vfffffff4 = eax;
            if(eax == 0) {
                goto L004633ab;
            }
            L00424EC0( *(esi + 0x28), 0, & Vfffffef4, L0042C260(eax, & Vfffffef4, 0x100), 0, 0, 0);
            L0042BD00( & Vfffffef0);
            Vfffffef0 = Vfffffff4;
        }
        L0042BD00( & Vfffffef0);
        L0042BD00( & Vfffffff4);
        L004234F0(0, 0, 0);
        if(Vfffffee0 != 0) {
            (save)-1;
            ecx = *(ebp + -296);
            Vfffffee0();
        }
        esp = *(ebp + -276);
    }
L004633ab:
    L0042BD00( & Vfffffef0);
    L0042BD00( & Vfffffff4);
    L00424EF0( *(esi + 0x28), 0, 0x479560, 0, 0, 0);
    return L00425670( *(esi + 0x28), 0);
}

/*	Procedure: 0x004633EF - 0x004633EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004633EF()
{



}

/*	Procedure: 0x004633F0 - 0x004634A8
 *	Argument size: 0
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L00463569()
 *		L00463640()
 */

L004633F0()
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    *(ebp - 0x14) = ecx;
    (save)0;
    ebx = L0042D720(0);
    *(ebp - 0x10) = ebx;
    edi = *( *(ebp - 0x14) + 0x34);
    ecx = edi;
    L00462320();
    L00421AB0(edi);
    L0042BD00( *(ebp - 0x14) + 0x50);
    esi = ebx != 0 ? *(ebx + 4) : 0;
    ebx = ebx + 8;
    if(!(esi = esi - 1)) {
        do {
            ecx = edi;
            L00462270( *(ebx + 0x30) & 65535, *(ebx + 0x2c), *(ebx + 0x44), *(ebx + 0x50));
            ebx = ebx + 0x58;
        } while(esi = esi - 1);
    }
    L00462720(edi);
    ebx = *( *(ebp - 0x14) + 0x38);
    L00424F30( *(ebx + 0x28));
    L00424EF0( *(ebx + 0x28), 0, 0x479560, 0, 0, 0);
    L00425670( *(ebx + 0x28), 0);
    return L0042E3E0(ebp - 0x10);
}

/*	Procedure: 0x004634A9 - 0x004634AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004634A9()
{



}

/*	Procedure: 0x004634B0 - 0x00463568
 *	Argument size: 4
 *	Local size: 8
 *	Save regs size: 12
 *	Called by:
 *		L00463569()
 *		L00463640()
 */

L004634B0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    *(ebp - 0x14) = ecx;
    ebx = L0042CFC0(A8, 0, 0);
    *(ebp - 0x10) = ebx;
    edi = *( *(ebp - 0x14) + 0x34);
    ecx = edi;
    L00462320();
    L00421AB0(edi);
    esi = ebx != 0 ? *(ebx + 4) : 0;
    ebx = ebx + 8;
    if(!(esi = esi - 1)) {
        do {
            edx = *(ebx + 0x38);
            ecx = *edx & 0xff;
            L00437790(edx + 1, ecx);
            ecx = edi;
            L00462270(ax & 65535, *(ebx + 0x20), *(ebx + 0x34), 0);
            ebx = ebx + 0x40;
        } while(esi = esi - 1);
    }
    L00462720(edi);
    ecx = *(ebp - 0x14);
    L00463250(A8);
    L0042BD00( *(ebp - 0x14) + 0x50);
    eax = *(ebp - 0x14);
    *(eax + 0x50) = A8;
    return L0042E3E0(ebp - 0x10);
}

/*	Procedure: 0x00463569 - 0x00463633
 *	Argument size: 4
 *	Local size: 28
 *	Save regs size: 12
 */

L00463569(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    esi = ecx;
    edi = *(esi + 0x50);
    ebx = A8;
    if(edi == 0) {
        return;
    }
    eax = L0042BDB0(edi, 0x21);
    *(ebp - 0x28) = eax;
    if(eax == 0) {
        ecx = esi;
        esp = ebp - 0xc;
        return L004633F0();
    }
    Vfffffff0 = esp;
    if(ebx > 1 && !(ebx = ebx - 2)) {
        do {
            eax = L0042BDB0( *(ebp - 0x28), 0x21);
            ecx = ebp - 0x28;
            edi = eax;
            L0042BD00(ecx);
            *(ebp - 0x28) = edi;
            if(edi == 0) {
                goto L004635df;
            }
        } while(ebx = ebx - 1);
        goto L004635f5;
L004635df:
        ecx = esi;
        esp = ebp - 0xc;
        return L004633F0();
    }
L004635f5:
    ecx = esi;
    eax = L004634B0( *(ebp - 0x28));
    goto L0046362a;
    L0042BD00(ebp - 0x28);
    eax = L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        ecx = *(ebp - 0x24);
        eax = Vffffffe4(-1);
    }
    esp = *(ebp - 0x10);
L0046362a:
    esp = ebp - 0xc;
}

/*	Procedure: 0x00463634 - 0x0046363F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00463634()
{



}

/*	Procedure: 0x00463640 - 0x004636AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 */

L00463640()
{
	/* unknown */ void  ebx;



    edx = M00481074;
    esp = esp - 0x1c;
    ebx = ecx;
    if(edx == 0) {
        return L004633F0();
    }
    *(ebp - 0xc) = esp;
    eax = L0042B5E0(edx, 0, 0, 0, 1);
    *(ebp - 8) = eax;
    ecx = ebx;
    L004634B0( *(ebp - 8));
    ecx = ebp - 8;
    *(ebp - 8) = 0;
    eax = L0042BD00(ecx);
    goto L004636aa;
    ecx = ebx;
    eax = L004633F0();
    if(*(ebp - 0x18) != 0) {
        ecx = *(ebp - 0x20);
        eax = *(ebp - 0x18)(-1);
    }
    esp = *(ebp - 0xc);
L004636aa:
    esp = ebp - 4;
}

/*	Procedure: 0x004636B0 - 0x004636E4
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 */

L004636B0()
{
	/* unknown */ void  ebx;



    edx = *(ecx + 0x50);
    if(edx != 0) {
        ebx = L0042B5E0(edx, 0, 0, 0, 1);
        eax = L0042BD00(0x481074);
        M00481074 = ebx;
    }
}

/*	Procedure: 0x004636E5 - 0x004636EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004636E5()
{



}

/*	Procedure: 0x004637FA - 0x00463A84
 *	Argument size: 16
 *	Local size: 4
 *	Save regs size: 8
 */

L004637FA(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  esi;



    eax = Ac;
    edx = *(eax + 8) - 0x10;
    A10 = A8;
    if(edx > 4) {
        goto L00463887;
    }
    switch(edx) {
        case 0:
L00463820:
            L00451020( *(eax + 0x1c));
            (save)al & 0xff;
            L0041f940( *(A10 + 0xc));
            goto L00463887;
        case 1:
L00463887:
            return;
        case 2:
            (save)0;
            eax = L0041f940( *(A10 + 0xc));
            goto L00463887;
        case 3:
            goto L00463887;
        case 4:
            goto L00463845;
    }
    goto L00463820;
L00463845:
    esi = *(eax + 0x1c);
    eax = L00450f70(esi, 0, 1, 0, 0);
    if(eax == 0) {
        goto L00463880;
    }
    *(ebp - 0xc) = eax;
    (save)eax;
    ecx = A10;
    L004636f0();
    L00451090(esi);
    (save)ebp - 0xc;
    L0042BD00();
    goto L00463887;
    eax = L004510c0(esi);
    goto L00463887;
    (save)ebp;
    ebp = esp;
    (save)A10;
    (save)esi;
    A10 = A8;
    esp = esp - 0x2c;
    if(*(A10 + 0x6c) != -1) {
        goto L004638e0;
    }
    eax = L004553D0( *( *(A10 + 0x34) + 0x2c));
    *(A10 + 0x6c) = eax;
    if(eax != -1) {
        goto L004638e0;
    }
    if(*(A10 + 0x28) == 10001 || *(A10 + 0x50) == 0) {
        goto L004638d0;
    }
    *(A10 + 0x71) = 1;
    goto L004638e0;
    esp = ebp - 8;
    return L00447040();
    ecx = A10;
    L004636B0();
    L0041CBA0( *(A10 + 0xc), 0);
    *(ebp + -52) = *L0049CA38;
    *(ebp + -48) = *L0049CA3C;
    *(ebp + -44) = *L0049CA40;
    *(ebp + -40) = *L0049CA44;
    if(0x10 < 0x20) {
        goto L004638f5;
    }
    *(ebp - 0x14) = M0049ca58;
    *(ebp - 0x10) = M0049ca5c;
    *(ebp - 0xc) = M0049ca60;
    *(ebp - 0x34) = *(A10 + 0x5c);
    *(ebp - 0x30) = A10;
    *(ebp - 0x28) = *(A10 + M00000064);
    *(ebp - 0x1c) = Ac;
    esi = *(A10 + 0x58);
    if(esi == 0) {
        goto L00463968;
    }
    (save)ebp - 0x34;
    *esi( *(A10 + 0x5c));
    goto L00463971;
    eax = L00438C70(ebp - 0x34);
    esp = ebp - 8;
    return;
    (save)ebp;
    ebp = esp;
    (save)A10;
    (save)esi;
    esp = esp - 0x38;
    esi = A8;
    if(Ac != 0xc) {
        goto L004639a4;
    }
    eax = L00462720( *(esi + 0x34));
    esp = ebp - 8;
    return;
    (save)A10;
    eax = L00454E00( *( *(esi + 0x34) + 0x2c));
    (restore)ecx;
    if(eax != 0) {
        goto L004639c0;
    }
    esp = ebp - 8;
    return;
    edx = *eax;
    if(edx == 0) {
        goto L00463a15;
    }
    eax = L0042B5E0(edx, 0, 0, 0, 1);
    *(ebp - 0x28) = eax;
    *(ebp - 0x2c) = esp;
    ecx = esi;
    L004634B0( *(ebp - 0x28));
    goto L00463a7e;
    L0042BD00(ebp - 0x28);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x38) == 0) {
        goto L00463a10;
    }
    (save)-1;
    ecx = *(ebp - 0x40);
    eax = *(ebp - 0x38)();
    esp = *(ebp - 0x2c);
    goto L00463a7e;
    if(*(eax + 4) & 0x42) {
        goto L00463a70;
    }
    eax = L0042B5E0( *(esi + 0x50), 0, 0, *(eax + 0xc), 1);
    *(ebp - 0x24) = eax;
    *(ebp - 0xc) = esp;
    ecx = esi;
    L004634B0( *(ebp - 0x24));
    goto L00463a7e;
    L0042BD00(ebp - 0x24);
    L004234F0(0, 0, 0);
    if(*(ebp - 0x18) == 0) {
        goto L00463a68;
    }
    (save)-1;
    ecx = *(ebp - 0x20);
    *(ebp - 0x18)();
    esp = *(ebp - 0xc);
    goto L00463a7e;
    *(esi + 0x6c) = A10;
    eax = L00463890(esi, A14);
    esp = ebp - 8;
}

/*	Procedure: 0x00463CD0 - 0x004640E0
 *	Argument size: 12
 *	Local size: 220
 *	Save regs size: 4
 */

L00463CD0(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vffffff28;
	/* unknown */ void  Vffffff34;
	/* unknown */ void  Vffffff38;
	/* unknown */ void  Vffffff3c;
	/* unknown */ void  Vffffff40;
	/* unknown */ void  Vffffff44;
	/* unknown */ void  Vffffff48;
	/* unknown */ void  Vffffff4c;
	/* unknown */ void  Vffffff50;
	/* unknown */ void  Vffffff54;
	/* unknown */ void  Vffffff58;
	/* unknown */ void  Vffffff5c;
	/* unknown */ void  Vffffff60;
	/* unknown */ void  Vffffff64;
	/* unknown */ void  Vffffff68;
	/* unknown */ void  Vffffff6c;
	/* unknown */ void  Vffffff70;
	/* unknown */ void  Vffffff74;
	/* unknown */ void  Vffffff78;
	/* unknown */ void  Vffffff7c;
	/* unknown */ void  Vffffff80;
	/* unknown */ void  Vffffff84;
	/* unknown */ void  Vffffff88;
	/* unknown */ void  Vffffff8c;
	/* unknown */ void  Vffffff90;
	/* unknown */ void  Vffffff94;
	/* unknown */ void  Vffffff98;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;



    if(A8 == 0) {
        goto L00463ce7;
    }
    ecx = 0x479574;
    goto L00463cec;
    Vffffffec = 0;
    Vfffffff0 = 0;
    Vfffffff4 = 0x172;
    Vfffffff8 = 0x190;
    eax = L00419240(0x74, & Vffffffec, 268435467, 0, "\tSave File");
    Vffffff88 = eax;
    Vffffff34 = esp;
    L0041B6F0( *(eax + 0xc), 0x4631e0);
    L0041b630( *(Vffffff88 + 0xc), 0x463800);
    L0041B5F0( *(Vffffff88 + 0xc), 0x4647b0);
    L0041B6B0( *(Vffffff88 + 0xc), 0x463220);
    L0041B820( *(Vffffff88 + 0xc), 0x464110, Vffffff88);
    eax = Vffffff88;
    *(eax + 0x14) = 0x49ca90;
    *(eax + 0x24) = 1;
    L0041CF00( *(Vffffff88 + 0xc), 0x172, 0x12c, 32767, 32767);
    eax = ebp - M00000064;
    *(ebp - M00000064) = 0;
    Vffffffa0 = 0;
    Vffffffa4 = 0x172;
    Vffffffa8 = 0x190;
    ebx = L0043C220(Vffffff88, eax, 0x100);
    *(Vffffff88 + 0x30) = ebx;
    Vffffffcc = 0xa;
    Vffffffd0 = 7;
    Vffffffd4 = 0x19a;
    Vffffffd8 = 0x17;
    L0043A530(ebx, & Vffffffcc, 0x100, A10, 0);
    Vffffffbc = 0xa;
    Vffffffc0 = 0x1e;
    Vffffffc4 = 0x122;
    Vffffffc8 = 0x32;
    eax = L0043ADB0(ebx, & Vffffffbc, 0x100, 0x3e9, 0);
    *(Vffffff88 + 0x38) = eax;
    Vffffffac = 0xa;
    Vffffffb0 = 0x3c;
    Vffffffb4 = 0x168;
    Vffffffb8 = 0x12c;
    eax = L004621f0(ebx, & Vffffffac, 0x10c, 0x3e8);
    *(Vffffff88 + 0x34) = eax;
    *( *(Vffffff88 + 0x34) + 0x48) = 1;
    L00421990( *(Vffffff88 + 0x34));
    Vffffffdc = 0xa;
    Vffffffe0 = 0x13a;
    Vffffffe4 = 0x50;
    Vffffffe8 = 0x14a;
    L0043A240(ebx, & Vffffffdc, 0x10a, 0x47958c, 0);
    Vffffff8c = 0x50;
    Vffffff90 = 0x136;
    Vffffff94 = 0x168;
    Vffffff98 = 0x150;
    eax = L004206D0(ebx, & Vffffff8c, 0x10e, 0, 0, 0);
    *(Vffffff88 + 0x3c) = eax;
    L0043C350(ebx, *(Vffffff88 + 0x3c));
    Vffffff78 = 0xa;
    Vffffff7c = 0x154;
    Vffffff80 = 0x50;
    Vffffff84 = 0x164;
    L0043A240(ebx, & Vffffff78, 0x10a, 0x4794b4, 0);
    Vffffff68 = 0x50;
    Vffffff6c = 0x154;
    Vffffff70 = 0x1a4;
    Vffffff74 = 0x164;
    eax = L0043A530(ebx, & Vffffff68, 0x10e, Ac, 0);
    *(Vffffff88 + 0x40) = eax;
    Vffffff58 = 0x104;
    Vffffff5c = 0x16e;
    Vffffff60 = 0x15a;
    Vffffff64 = 0x188;
    L00439DE0(ebx, & Vffffff58, 0x50f, 0x3ea, 0x479594, 0);
    Vffffff48 = 0xa6;
    Vffffff4c = 0x171;
    Vffffff50 = 0xf6;
    Vffffff54 = 0x185;
    L00439DE0(ebx, & Vffffff48, 0x10f, 0x3eb, 0x479558, 0);
    Vffffff38 = 0xa;
    Vffffff3c = 0x171;
    Vffffff40 = 0x78;
    Vffffff44 = 0x185;
    L00439DE0(ebx, & Vffffff38, 0x10a, 0x3f1, "\rNew Folder...", 0);
    *(ebx + 0x4c) = 0x3ea;
    *(ebx + 0x50) = 0x3eb;
    *(Vffffff88 + 0x18) = 0x3eb;
    goto L004640d8;
    L004192E0( & Vffffff88);
    L004234F0(0, 0, 0);
    if(Vffffff28 == 0) {
        goto L004640d2;
    }
    ecx = *(ebp + -224);
    Vffffff28(-1);
    esp = *(ebp + -204);
    return Vffffff88;
}

/*	Procedure: 0x00464104 - 0x0046410F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00464104()
{



}

/*	Procedure: 0x00464110 - 0x004647E2
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 8
 */

L00464110(A8, Ac)
/* unknown */ void  A8;
/* unknown */ void  Ac;
{
	/* unknown */ void  esi;



    (save)edi;
    esp = esp - 0x464;
    esi = A8;
    eax = *(Ac + 0xc) - 0x3e8;
    Ac = *(esi + 0x34);
    if(eax > 0xd) {
        goto L004647a7;
    }
    switch(eax) {
        case 0:
            goto L0046413d;
        case 1:
            goto L00464296;
        case 2:
            goto L004642f2;
        case 3:
            goto L004642f2;
        case 4:
            (save)0;
            ecx = esi;
            L00463570();
            goto L004647a7;
        case 5:
            goto L004645b1;
        case 6:
            esi = esi + 0x44;
            L004192E0(esi);
            goto L004647a7;
        case 7:
L004647a7:
            esp = ebp - 0xc;
            (restore)edi;
            return;
        case 8:
            goto L004647a7;
        case 9:
            goto L00464689;
        case 0xa:
            goto L00464714;
        case 0xb:
            eax = L004192E0(esi + 0x48);
            goto L004647a7;
        case 0xc:
            L00439BF0(esi + 0x4c);
            *(esi + 0x70) = 1;
            goto L004642f2;
        case 0xd:
            esi = esi + 0x4c;
            L00439BF0(esi);
            goto L004647a7;
    }
L0046413d:
    if(*(edi + 0x10) != 0xc) {
        goto L00464152;
    }
    eax = L00462720(Ac);
    esp = ebp - 0xc;
    (restore)edi;
    return;
    (save) *(edi + 0x14);
    eax = L00454E00( *(Ac + 0x2c));
    (restore)ecx;
    if(eax != 0) {
        goto L00464170;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return;
    edi = *eax;
    if(edi == 0) {
        goto L004641e0;
    }
    eax = L0042B5E0(edi, 0, 0, 0, 1);
    *(ebp + -1132) = eax;
    *(ebp + -244) = esp;
    ecx = esi;
    L004634B0( *(ebp + -1132));
    goto L004647a7;
    esi = ebp + -1132;
    L0042BD00(esi);
    L004234F0(0, 0, 0);
    if(*(ebp + -256) == 0) {
        goto L004641d2;
    }
    (save)-1;
    ecx = *(ebp + -264);
    eax = *(ebp + -256)();
    esp = *(ebp + -244);
    goto L004647a7;
    if(*(eax + 4) & 0x42) {
        goto L00464253;
    }
    eax = L0042B5E0( *(esi + 0x50), 0, 0, *(eax + 0xc), 1);
    *(ebp + -1124) = eax;
    *(ebp + -268) = esp;
    ecx = esi;
    L004634B0( *(ebp + -1124));
    goto L004647a7;
    L0042BD00(ebp + -1124);
    L004234F0(0, 0, 0);
    if(*(ebp + -280) == 0) {
        goto L00464248;
    }
    (save)-1;
    ecx = *(ebp + -288);
    eax = *(ebp + -280)();
    esp = *(ebp + -268);
    goto L004647a7;
    edi = *(esi + 0x3c);
    Ac = *(eax + 0xc);
    edx = *(edi + 0x2c);
    if(Ac == 0) {
        goto L00464265;
    }
    eax = *Ac & 0xff;
    goto L00464267;
    L00443480(edx, Ac + 1, 0);
    L00442EF0( *(edi + 0x2c), 0, 65535);
    (save)edi;
    eax = L0043C350( *(esi + 0x30));
    goto L004647a7;
L00464296:
    Ac = *(edi + 0x14);
    if(Ac != 0) {
        goto L004642a5;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return;
    if(Ac != L00424FF0( *( *(esi + 0x38) + 0x28)) - 1) {
        goto L004642c7;
    }
    ecx = esi;
    esp = ebp - 0xc;
    (restore)edi;
    return L004633F0();
    (save)Ac;
    ecx = esi;
    L00463570();
    goto L004647a7;
L004642f2:
    bl = 0;
    if(0 != 0) {
        goto L004644db;
    }
    if(*(esi + 0x50) != 0) {
        goto L00464317;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return L00447040();
    L00443550( *( *(esi + 0x3c) + 0x2c), ebp + -543, 0xff);
    *(ebp + -544) = al;
    if(*(ebp + -544) != 0) {
        goto L00464350;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return L00447040();
    ecx = esi;
    L004636B0();
    L0041A1E0( *(esi + 0x40), ebp + -1119, 0x3f);
    *(ebp + -1120) = al;
    L0042BD00(esi + 0x54);
    ecx = *(esi + 0x68);
    if(*(esi + 0x70) == 0) {
        goto L00464387;
    }
    ecx = ecx | 0x40;
    edx = ebp + -1120;
    *(ebp + -164) = esp;
    *(esi + 0x54) = L0042B600( *(esi + 0x50), 0, 0, ebp + -544, ecx, edx);
    goto L004644db;
    if(*( *(ebp + -172)) != 196723) {
        goto L004644b0;
    }
    L00439BF0(esi + 0x4c);
    *(esi + 0x70) = 0;
    L00434150(ebp - 0x74, 0x68);
    *(ebp - 0x74) = 2;
    *(ebp - 0x70) = 3;
    *(ebp - M00000064) = 1;
    *(ebp - 0x2c) = 0x4795ac;
    *(ebp - 0x4c) = 0x3f4;
    *(ebp - 0x28) = 0x479558;
    *(ebp - 0x48) = 0x3f5;
    *(ebp - 0x38) = 0x90;
    *(ebp - 0x36) = 16384;
    *(ebp - 0x1c) = 0x4795ac;
    L004288C0(ebp + -800, 0x4795b4);
    eax = ebp + -544;
    L00428B20(ebp + -800, eax, 0x28);
    L00428A30(ebp + -800, 0x4795c4);
    edi = ebp + -800;
    *(ebp - 0x18) = edi;
    (save) *(esi + 0xc);
    *(esi + 0x4c) = L004395A0(0x4640f0, esi, ebp - 0x74);
    if(*(ebp + -176) == 0) {
        goto L004644a0;
    }
    ecx = *(ebp + -184);
    eax = *(ebp + -176)(-1);
    esp = *(ebp + -164);
    esp = ebp - 0xc;
    (restore)edi;
    return;
    L004234F0(0, 0, 0);
    if(*(ebp + -176) == 0) {
        goto L004644d5;
    }
    (save)-1;
    ecx = *(ebp + -184);
    *(ebp + -176)();
    esp = *(ebp + -164);
    L0041CBA0( *(esi + 0xc), 0);
    *(ebp + -160) = *L0049CA98;
    *(ebp + -156) = *L0049CA9C;
    *(ebp + -152) = *L0049CAA0;
    *(ebp + -148) = *L0049CAA4;
    if(0x10 < 0x20) {
        goto L004644e9;
    }
    *(ebp - 0x80) = M0049cab8;
    *(ebp - 0x7c) = M0049cabc;
    *(ebp - 0x78) = M0049cac0;
    *(ebp + -160) = *(esi + 0x5c);
    *(ebp + -156) = esi;
    *(ebp + -148) = *(esi + M00000064);
    *(ebp + -136) = *(edi + 0x18);
    if(bl == 0) {
        goto L00464579;
    }
    *(ebp + -144) = 2;
    *(ebp + -140) = 2;
    Ac = *(esi + 0x58);
    if(Ac == 0) {
        goto L00464592;
    }
    edi = ebp + -160;
    (save)edi;
    *Ac( *(esi + 0x5c));
    goto L004647a7;
    esi = ebp + -160;
    L00438C70(esi);
    goto L004647a7;
L004645b1:
    L004192E0(esi + 0x44);
    (save) *(edi + 0x14);
    eax = L00454E00( *(Ac + 0x2c));
    (restore)ecx;
    if(eax != 0) {
        goto L004645d4;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return;
    edi = L0042B070( *(esi + 0x50), 0, 0, *(eax + 0xc), 1);
    *(ebp + -1136) = edi;
    eax = L004627a0(0);
    *(ebp + -188) = eax;
    *(ebp + -192) = esp;
    (save)edi;
    ecx = *(ebp + -188);
    L00462db0();
    L0041CBA0( *( *(ebp + -188) + 0xc), 1);
    goto L00464658;
    L004192E0(ebp + -188);
    L004234F0(0, 0, 0);
    if(*(ebp + -204) == 0) {
        goto L00464652;
    }
    (save)-1;
    ecx = *(ebp + -212);
    *(ebp + -204)();
    esp = *(ebp + -192);
    *(esi + 0x44) = *(ebp + -188);
    Ac = *(ebp + -188);
    *(Ac + 0x4c) = esi;
    (save)ebp + -1136;
    L0042BD00();
    goto L004647a7;
L00464689:
    L004192E0(esi + 0x48);
    if(*(esi + 0x50) != 0) {
        goto L004646a6;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return L00447040();
    eax = L00462ff0();
    *(ebp + -216) = eax;
    *(ebp + -220) = esp;
    L0041CBA0( *( *(ebp + -216) + 0xc), 1);
    goto L004646fd;
    L004192E0(ebp + -216);
    L004234F0(0, 0, 0);
    if(*(ebp + -232) == 0) {
        goto L004646f7;
    }
    (save)-1;
    ecx = *(ebp + -240);
    *(ebp + -232)();
    esp = *(ebp + -220);
    *(esi + 0x48) = *(ebp + -216);
    *( *(ebp + -216) + 0x30) = esi;
    goto L004647a7;
L00464714:
    L00443550( *( *( *(esi + 0x48) + 0x2c) + 0x2c), ebp + -1055, 0xff);
    *(ebp + -1056) = al;
    Ac = *(esi + 0x50);
    if(*(ebp + -1056) == 0) {
        goto L00464747;
    }
    if(Ac != 0) {
        goto L00464754;
    }
    esp = ebp - 0xc;
    (restore)edi;
    return L00447040();
    L004192E0(esi + 0x48);
    eax = L0042BA30(Ac, 0, 0, ebp + -1056, 0x81);
    *(ebp + -1128) = eax;
    ecx = esi;
    L004634B0( *(ebp + -1128));
    esi = ebp + -1128;
    *(ebp + -1128) = 0;
    (save)esi;
    L0042BD00();
    goto L004647a7;
    (save)ebp;
    ebp = esp;
    (save)Ac;
    (save)esi;
    esi = A8;
    if(*(Ac + 8) != 9) {
        goto L004647d3;
    }
    ecx = esi;
    if(*(ecx + 0x4c) == 0) {
        goto L004647d3;
    }
    L00439BF0(ecx + 0x4c);
    eax = L0041aa30(esi, Ac);
    esp = ebp - 8;
}

/*	Procedure: 0x00464908 - 0x00464B78
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L00464908(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  edi;



    esp = esp - 0xc;
    if(A8 == 0 || *(A8 + 0x2c) != 1023310590) {
        L00429610(65561);
    }
    if(Ac != 0) {
        *Ac = 0;
    }
    if(A10 != 0) {
        *A10 = 0;
    }
    eax = *(A8 + 0x28);
    *(ebp - 0x18) = eax;
    if(eax == 10005 || eax == 10006) {
        eax = *(A8 + 0x54);
        *(ebp - 0x10) = eax;
        if(eax == 0) {
            return 0;
        }
        if(Ac != 0) {
            L00443550( *( *(A8 + 0x3c) + 0x2c), Ac + 1, 0xff);
            *Ac = al;
        }
        if(A10 != 0) {
            edi = *(ebp - 0x18) == 10006 ? 2 : 1;
            *A10 = edi;
        }
        *(A8 + 0x54) = 0;
        eax = *(ebp - 0x10);
        esp = ebp - 0xc;
        return;
    }
    eax = *(A8 + 0x68);
    edx = *(A8 + 0x34);
    *(ebp - 0x14) = eax;
    *(ebp - 0x14) = *(ebp - 0x14) & 16415;
    if(*(A8 + 0x71) != 0) {
        if(Ac != 0) {
            L0041A1E0( *(A8 + 0x38), Ac + 1, 0xff);
            *Ac = al;
        }
        if(A10 != 0) {
            *A10 = 2;
        }
        *(A8 + 0x71) = 0;
        eax = L0042B5E0( *(A8 + 0x50), 0, 0, 0, *(ebp - 0x14));
        esp = ebp - 0xc;
        return;
    }
    (save) *(A8 + 0x6c);
    edi = L00454E00( *(edx + 0x2c));
    (restore)ecx;
    if(edi == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    *(A8 + 0x6c) = -1;
    if(*edi != 0) {
        if(*(ebp - 0x18) == 10000 || *(ebp - 0x18) == 10001) {
            esp = ebp - 0xc;
            return 0;
        }
        if(Ac != 0) {
            L004288C0(Ac, *(edi + 0xc));
        }
        if(A10 != 0) {
            *A10 = 2;
        }
        eax = L0042B5E0( *edi, 0, 0, 0, *(ebp - 0x14));
        esp = ebp - 0xc;
        return;
    }
    eax = *(edi + 4);
    *(ebp - 0x10) = eax;
    if(!(eax & 0x42)) {
        if(*(ebp - 0x18) == 10000 || *(ebp - 0x18) == 10001) {
            esp = ebp - 0xc;
            return 0;
        }
        if(Ac != 0) {
            L004288C0(Ac, *(edi + 0xc));
        }
        if(A10 != 0) {
            *A10 = *(ebp - 0x10);
        }
        eax = L0042B5E0( *(A8 + 0x50), 0, 0, *(edi + 0xc), *(ebp - 0x14));
        esp = ebp - 0xc;
        return;
    }
    if(*(ebp - 0x18) == 10002 || *(ebp - 0x18) == 10003) {
        esp = ebp - 0xc;
        return 0;
    }
    if(Ac != 0) {
        L004288C0(Ac, *(edi + 0xc));
    }
    if(A10 != 0) {
        *A10 = *(ebp - 0x10);
    }
    eax = L0042B460( *(A8 + 0x50), 0, 0, *(edi + 0xc), *(ebp - 0x14));
    esp = ebp - 0xc;
}

/*	Procedure: 0x00464B79 - 0x00464B7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00464B79()
{



}

/*	Procedure: 0x00464B80 - 0x00464BB4
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 */

L00464B80(A8)
/* unknown */ void  A8;
{



    eax = A8;
    ecx = *eax;
    if(ecx == 0) {
        return;
    }
    if(*(ecx + 0x2c) != 1023310590) {
        *eax = 0;
        esp = ebp;
        return;
    }
    *(ecx + 0x2c) = 0;
    eax = L004192E0(eax);
    esp = ebp;
}

/*	Procedure: 0x00464BB5 - 0x00464BBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00464BB5()
{



}

/*	Procedure: 0x00464BC0 - 0x00464E61
 *	Argument size: 36
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044B0C0()
 *		L00464E70()
 */

L00464BC0(A4, A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    eax = A14;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)ebp;
    esp = esp - 0x2c;
    ebx = *eax;
    Vffffffd8 = *(eax + 4);
    Vffffffdc = ebx;
    Vffffffc8 = ebx;
    Vffffffc8 = Vffffffc8 - *A18;
    eax = Vffffffd8;
    Vffffffe0 = eax;
    Vffffffcc = Vffffffe0;
    Vffffffcc = Vffffffcc - *(A18 + 4);
    eax = Vffffffc8;
    edx = A8;
    Vffffffe8 = eax;
    esi = *edx + Vffffffe8;
    edi = Ac;
    if(ebx > esi) {
        esi = ebx;
    }
    eax = Vffffffcc;
    Vffffffe4 = esi;
    *esp = eax;
    ebp = *(edx + 4) + eax;
    if(Vffffffd8 > ebp) {
        ebp = Vffffffd8;
    }
    Vffffffec = ebp;
    ecx = *(edx + 8);
    ecx = ecx + Vffffffe8;
    ebx = ebx + *A20;
    if(ebx >= ecx) {
        ebx = ecx;
    }
    Vffffffe8 = ebx;
    ecx = *(edx + 0xc);
    eax = A24;
    ecx = ecx + *esp;
    edx = Vffffffd8 + *eax;
    if(edx >= ecx) {
        edx = ecx;
    }
    *esp = edx;
    if(esi >= ebx || ebp >= edx) {
        esp = esp + 0x2c;
        (restore)ebp;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return 0;
    }
    if(edi != 0 && A1c != 0) {
        Vffffffd4 = Vffffffdc;
        Vffffffd4 = Vffffffd4 - *A1c;
        Vffffffd0 = Vffffffe0;
        Vffffffd0 = Vffffffd0 - *(A1c + 4);
        ecx = Vffffffd4;
        eax = *edi + ecx;
        if(esi <= eax) {
            esi = eax;
        }
        Vffffffdc = Vffffffd0;
        Vffffffe4 = esi;
        eax = *(edi + 4) + Vffffffdc;
        if(ebp <= eax) {
            ebp = eax;
        }
        Vffffffec = ebp;
        eax = *(edi + 8) + ecx;
        if(ebx >= eax) {
            ebx = eax;
        }
        Vffffffe8 = ebx;
        eax = *(edi + 0xc) + Vffffffdc;
        if(edx >= eax) {
            edx = eax;
        }
        *esp = edx;
        if(esi >= ebx) {
            goto L00464d0a;
        }
        if(ebp >= edx) {
L00464d0a:
            esp = esp + 0x2c;
            (restore)ebp;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return 0;
        }
    }
    eax = A4;
    ebx = *eax;
    edx = *(eax + 4);
    if(A10 != 0) {
        ebp = ebx;
        esi = *A10 + ebp;
        if(Vffffffe4 > esi) {
            esi = Vffffffe4;
        }
        Vffffffe4 = esi;
        Vffffffe0 = edx;
        edi = *(A10 + 4) + edx;
        if(Vffffffec > edi) {
            edi = Vffffffec;
        }
        Vffffffec = edi;
        ecx = *(A10 + 8) + ebp;
        if(Vffffffe8 < ecx) {
            ecx = Vffffffe8;
        }
        Vffffffe8 = ecx;
        eax = *(A10 + 0xc) + Vffffffe0;
        if(*esp < eax) {
            eax = *esp;
        }
        *esp = eax;
        if(esi >= ecx) {
            goto L00464d8c;
        }
        if(edi >= eax) {
L00464d8c:
            esp = esp + 0x2c;
            (restore)ebp;
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            return 0;
        }
    }
    if(Vffffffe4 <= ebx) {
        Vffffffe4 = ebx;
    }
    if(Vffffffec <= edx) {
        Vffffffec = edx;
    }
    ebx = *(A4 + 8);
    if(Vffffffe8 >= ebx) {
        Vffffffe8 = ebx;
    }
    eax = *(A4 + 0xc);
    if(*esp >= eax) {
        *esp = eax;
    }
    eax = Vffffffe8;
    if(Vffffffe4 < eax) {
        eax = *esp;
        if(Vffffffec < eax) {
            goto L00464de7;
        }
    }
    esp = esp + 0x2c;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 0;
L00464de7:
    *A14 = Vffffffe4;
    *(A14 + 4) = Vffffffec;
    *A18 = Vffffffe4 - Vffffffc8;
    *(A18 + 4) = Vffffffec - Vffffffcc;
    if(A1c != 0) {
        *A1c = Vffffffe4 - Vffffffd4;
        *(A1c + 4) = Vffffffec - Vffffffd0;
    }
    *A20 = Vffffffe8 - Vffffffe4;
    ecx = *esp;
    eax = A24;
    *eax = ecx - Vffffffec;
    esp = esp + 0x2c;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return 1;
}

/*	Procedure: 0x00464E62 - 0x00464E6F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00464E62()
{



}

/*	Procedure: 0x00464E70 - 0x0046552F
 *	Argument size: 28
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044EDB0()
 *		L0044F670()
 */

L00464E70(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  ebx;
	/* unknown */ void  edi;



    ecx = Ac;
    esp = esp - 0x34;
    ebx = A10;
    edi = A14;
    if(ecx != 0) {
        *(ebp - 0x14) = *ecx;
        *(ebp - 0x10) = *(ecx + 4);
    } else {
        *(ebp - 0x14) = 0;
        *(ebp - 0x10) = 0;
    }
    if(edi != 0) {
        *(ebp - 0x40) = *edi;
        *(ebp - 0x3c) = *(edi + 4);
    } else {
        *(ebp - 0x40) = 0;
        *(ebp - 0x3c) = 0;
    }
    ecx = *(ebx + 4);
    *(ebp - 0x28) = 0;
    *(ebp - 0x24) = 0;
    *(ebp - 0x20) = *ebx;
    *(ebp - 0x1c) = ecx;
    edi = *(A8 + 4);
    eax = *A8;
    *(ebp - 0x38) = 0;
    *(ebp - 0x34) = 0;
    *(ebp - 0x30) = eax;
    *(ebp - 0x2c) = edi;
    eax = ebp - 0x40;
    edx = ebp - 0x28;
    ecx = ebp - 0x38;
    if(L00464BC0(ecx, edx, 0, A20, ebp - 0x14, eax, 0, & A18, & A1c) == 0) {
        return;
    }
    eax = *(A8 + 0xc);
    edi = *(ebx + 0xc);
    ecx = eax;
    edx = edi;
    edx = *(ebp - 0x3c) * *(ebp - 0x3c) + *(ebx + 0x18);
    *(ebp - 0x18) = eax;
    ecx = *(ebp - 0x10) * *(ebp - 0x10);
    eax = *(ebx + 8) - 1;
    ecx = ecx + *(A8 + 0x18);
    if(eax > 0x1f) {
        goto L00465523;
    }
    switch(eax) {
        case 0:
            goto L00465429;
        case 1:
            goto L00465329;
        case 2:
L00465523:
            esp = ebp - 0xc;
            return;
        case 3:
            goto L00465229;
        case 4:
            goto L00465523;
        case 5:
            goto L00465523;
        case 6:
            goto L00465523;
        case 7:
            goto L00465129;
        case 8:
            goto L00465523;
        case 9:
            goto L00465523;
        case 0xa:
            goto L00465523;
        case 0xb:
            goto L00465523;
        case 0xc:
            goto L00465523;
        case 0xd:
            goto L00465523;
        case 0xe:
            goto L00465523;
        case 0xf:
            goto L00465041;
        case 0x10:
            goto L00465523;
        case 0x11:
            goto L00465523;
        case 0x12:
            goto L00465523;
        case 0x13:
            goto L00465523;
        case 0x14:
            goto L00465523;
        case 0x15:
            goto L00465523;
        case 0x16:
            goto L00465523;
        case 0x17:
            goto L00465523;
        case 0x18:
            goto L00465523;
        case 0x19:
            goto L00465523;
        case 0x1a:
            goto L00465523;
        case 0x1b:
            goto L00465523;
        case 0x1c:
            goto L00465523;
        case 0x1d:
            goto L00465523;
        case 0x1e:
            goto L00465523;
        case 0x1f:
            goto L00464f59;
    }
L00464f59:
    ebx = *(A8 + 8) - 1;
    if(ebx > 0x1f) {
        goto L00465523;
    }
    goto ( *(ebx * 4 + 0x47a234));
    L0046b1c0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c);
    goto L00465523;
    L0046afe0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c);
    goto L00465523;
    L0046ad90(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
    L0046abf0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
    L0046abe0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
    L0046abd0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
L00465041:
    ebx = *(A8 + 8) - 1;
    if(ebx > 0x1f) {
        goto L00465523;
    }
    goto ( *(ebx * 4 + 0x47a1b4));
    L0046a740(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c);
    goto L00465523;
    L0046a670(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c);
    goto L00465523;
    L0046a520(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
    L0046a510(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
    L0046a500(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
    L0046a4f0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10));
    goto L00465523;
L00465129:
    eax = *(A8 + 8) - 1;
    if(eax > 0x1f) {
        goto L00465523;
    }
    goto ( *(eax * 4 + 0x47a134));
    L0046a2f0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    L00469fd0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469d00();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469cf0();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469ce0();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469730();
    goto L00465520;
L00465229:
    eax = *(A8 + 8) - 1;
    if(eax > 0x1f) {
        goto L00465523;
    }
    goto ( *(eax * 4 + 0x47a0b4));
    L00469560(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    L00469290(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469160();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469150();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469140();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00469130();
    goto L00465520;
L00465329:
    eax = *(A8 + 8) - 1;
    if(eax > 0x1f) {
        goto L00465523;
    }
    goto ( *(eax * 4 + 0x47a034));
    L00468eb0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    L00468b90(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00468860();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00468850();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00468840();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00468830();
    goto L00465520;
L00465429:
    eax = *(A8 + 8) - 1;
    if(eax > 0x1f) {
        goto L00465523;
    }
    goto ( *(eax * 4 + 0x479fb4));
    L00468540(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    L004680a0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00467be0();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00467bd0();
    goto L00465520;
    (save) *(ebx + 0x10);
    (save) *(ebx + 0x1c);
    (save) *(A8 + 0x10);
    (save) *(A8 + 0x1c);
    (save)A1c;
    (save)A18;
    (save) *(ebp - 0x40);
    (save)edi;
    (save)edx;
    (save) *(ebp - 0x14);
    (save) *(ebp - 0x18);
    (save)ecx;
    L00467bc0();
    goto L00465520;
    L00467bb0(ecx, *(ebp - 0x18), *(ebp - 0x14), edx, edi, *(ebp - 0x40), A18, A1c, *(A8 + 0x1c), *(A8 + 0x10), *(ebx + 0x1c), *(ebx + 0x10));
    goto L00465523;
}

/*	Procedure: 0x00465530 - 0x0046567F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044EDB0()
 */

L00465530(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x10;
    *(ebp - 0x1c) = *Ac;
    *(ebp - 0x10) = *(Ac + 4);
    *(ebp - 0x18) = *(Ac + 8);
    ebx = *(Ac + 0xc);
    if(*(ebp - 0x1c) >= 0) {
        goto L0046555d;
    }
    *(ebp - 0x1c) = 0;
    if(*(ebp - 0x10) >= 0) {
        goto L0046556a;
    }
    *(ebp - 0x10) = 0;
    if(*(ebp - 0x18) <= *A8) {
        goto L00465577;
    }
    *(ebp - 0x18) = edx;
    if(ebx <= *(A8 + 4)) {
        goto L00465583;
    }
    ebx = eax;
    if(*(ebp - 0x18) > *(ebp - 0x1c) && ebx > *(ebp - 0x10)) {
        goto L00465598;
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    *(ebp - 0x14) = *(A8 + 0xc);
    esi = ebx;
    edi = ecx;
    edi = *(ebp - 0x10) * *(ebp - 0x10);
    ebx = *(ebp - 0x18);
    edi = edi + *(A8 + 0x18);
    esi = esi - *(ebp - 0x10);
    ebx = ebx - *(ebp - 0x1c);
    if(*(A8 + 8) - 1 <= 0x1f) {
        goto ( *(edx * 4 + 0x47a338));
        edi = edi + *(ebp - 0x1c) * 4;
        if(!(esi = esi - 1)) {
            L00434080(edi, ebx, A10);
            edi = edi + *(ebp - 0x14);
            if(esi = esi - 1) {
                goto L004655e0;
            }
            goto L00465671;
            edi = edi + *(ebp - 0x1c) + *(ebp - 0x1c);
            if(!(esi = esi - 1)) {
                L00433F80(edi, ebx, A10 & 65535);
                edi = edi + *(ebp - 0x14);
                if(esi = esi - 1) {
                    goto L00465603;
                }
                goto L00465671;
                edi = edi + *(ebp - 0x1c);
                if(!(esi = esi - 1)) {
                    L00433E50(edi, ebx, A10 & 0xff);
                    edi = edi + *(ebp - 0x14);
                    if(esi = esi - 1) {
                        goto L00465624;
                    }
                    goto L00465671;
                    L00429610(65540);
                    goto L00465671;
                    L00429610(65540);
                    goto L00465671;
                    L00433d50(edi, *(ebp - 0x1c), ebx, A10 & 0xff);
                    edi = edi + *(ebp - 0x14);
                    if(esi = esi - 1) {
                        goto L00465657;
                    }
                }
            }
        }
    }
L00465671:
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
    return;
    goto L0046566c;
}

/*	Procedure: 0x00465680 - 0x00465F4F
 *	Argument size: 32
 *	Local size: 96
 *	Save regs size: 12
 *	Called by:
 *		L00449B90()
 */

L00465680(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffa0;
	/* unknown */ void  Vffffffa4;
	/* unknown */ void  Vffffffa8;
	/* unknown */ void  Vffffffac;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    edi = A18;
    Vffffffc4 = *edi;
    Vffffffd4 = *(edi + 8);
    Vffffffe0 = *(edi + 0xc);
    Vffffffc8 = *(edi + 4);
    if(Vffffffd4 <= Vffffffc4) {
        goto L004656b3;
    }
    eax = Vffffffc8;
    if(Vffffffe0 > eax) {
        goto L004656c0;
    }
    return;
    Vffffffb0 = A10;
    Vffffffb8 = A14;
    eax = Vffffffc4;
    Vffffffa8 = 0;
    Vffffffb4 = eax;
    if(A8 >= eax) {
        goto L004656f0;
    }
    Vffffffe4 = 1;
    Vffffffbc = 1;
    goto L0046571d;
    if(A8 <= Vffffffd4 - 1) {
        goto L00465710;
    }
    Vffffffe4 = 2;
    Vffffffbc = 1;
    goto L0046571d;
    Vffffffbc = 0;
    Vffffffe4 = Vffffffbc;
    eax = Vffffffc8;
    Vffffffa0 = eax;
    if(Ac >= eax) {
        goto L00465730;
    }
    Vffffffe4 = Vffffffe4 | 4;
    goto L0046573f;
    if(Ac <= Vffffffe0 - 1) {
        goto L00465743;
    }
    Vffffffe4 = Vffffffe4 | 8;
    Vffffffbc = Vffffffbc + 1;
    if(Vffffffb0 >= Vffffffc4) {
        goto L00465760;
    }
    Vffffffe8 = 1;
    Vffffffcc = 1;
    goto L0046578d;
    if(Vffffffb0 <= Vffffffd4 - 1) {
        goto L00465780;
    }
    Vffffffe8 = 2;
    Vffffffcc = 1;
    goto L0046578d;
    Vffffffcc = 0;
    Vffffffe8 = Vffffffcc;
    if(Vffffffb8 >= Vffffffc8) {
        goto L004657a0;
    }
    Vffffffe8 = Vffffffe8 | 4;
    goto L004657af;
    if(Vffffffb8 <= Vffffffe0 - 1) {
        goto L004657b3;
    }
    Vffffffe8 = Vffffffe8 | 8;
    Vffffffcc = Vffffffcc + 1;
    eax = Vffffffe8;
    if(Vffffffe4 & eax) {
        goto L004657c3;
    }
    esp = ebp - 0xc;
    return;
    if(Vffffffbc != 0 && Vffffffcc == 0) {
        goto L004657db;
    }
    if(Vffffffbc != 2 || Vffffffcc != 1) {
        goto L0046580f;
    }
    Vffffffe4 = Vffffffe8;
    Vffffffbc = Vffffffcc;
    A8 = Vffffffb0;
    Vffffffe8 = Vffffffe4;
    Vffffffcc = Vffffffbc;
    Vffffffb0 = A8;
    Ac = Vffffffb8;
    Vffffffb8 = Ac;
    Vffffffa8 = Vffffffa8 ^ 1;
    edx = A8;
    Vffffffd0 = Vffffffb0;
    Vffffffd0 = Vffffffd0 - edx;
    *(ebp - 0x6c) = edx;
    esi = Ac;
    Vffffffac = 1;
    if(Vffffffd0 >= 0) {
        goto L0046583f;
    }
    Vffffffd0 = ~Vffffffd0;
    eax = Vffffffd0;
    Vffffffac = -1;
    Vffffffc0 = Vffffffb8;
    Vffffffc0 = Vffffffc0 - Ac;
    Vffffffa4 = 1;
    if(Vffffffc0 >= 0) {
        goto L00465865;
    }
    Vffffffc0 = ~Vffffffc0;
    eax = Vffffffc0;
    Vffffffa4 = -1;
    eax = Vffffffd0;
    Vffffffdc = eax;
    Vffffffdc = Vffffffdc + Vffffffdc;
    eax = Vffffffc0;
    Vffffffd8 = eax;
    Vffffffd8 = Vffffffd8 + eax;
    if(Vffffffd0 < eax) {
        goto L00465c01;
    }
    *(ebp - M00000064) = 0;
    eax = *(ebp - M00000064) & 0xff;
    ebx = Vffffffd8 - Vffffffd0 - eax;
    *(ebp - M00000064) = eax;
    if(Vffffffe4 == 0) {
        goto L00465a50;
    }
    if(Vffffffe4 & 1) {
        goto L004658c8;
    }
    Vfffffff0 = Vffffffb4;
    Vfffffff0 = Vfffffff0 - A8;
    eax = Vfffffff0;
    Vfffffff0 = Vffffffd8 * Vffffffd8;
    *(ebp - 0x6c) = Vffffffc4;
    goto L004658f4;
    if(Vffffffe4 & 2) {
        goto L004658f4;
    }
    Vfffffff0 = A8;
    Vfffffff0 = Vfffffff0 - Vffffffd4 - 1;
    eax = Vfffffff0;
    Vfffffff0 = Vffffffd8 * Vffffffd8;
    *(ebp - 0x6c) = Vffffffd4;
    *(ebp - 0x6c) = *(ebp - 0x6c) - 1;
    if(Vffffffe4 & 4) {
        goto L00465918;
    }
    Vffffffec = Vffffffa0;
    Vffffffec = Vffffffec - Ac;
    eax = Vffffffec;
    esi = Vffffffc8;
    Vffffffec = Vffffffdc * Vffffffdc;
    goto L00465940;
    if(Vffffffe4 & 8) {
        goto L00465940;
    }
    Vffffffec = Ac;
    Vffffffec = Vffffffec - Vffffffe0 - 1;
    eax = Vffffffec;
    esi = Vffffffe0 - 1;
    Vffffffec = Vffffffdc * Vffffffdc;
    if(Vffffffbc != 2) {
        goto L00465968;
    }
    ecx = Vffffffec + *(ebp - M00000064);
    if(Vfffffff0 + Vffffffd0 >= ecx) {
        goto L00465960;
    }
    edx = -4;
    goto L00465965;
    Vffffffe4 = Vffffffe4 & -13;
    if(Vffffffe4 & 3) {
        goto L004659d6;
    }
    Vffffffec = Vfffffff0;
    Vffffffec = Vffffffec + Vffffffd0;
    Vffffffec = Vffffffec - *(ebp - M00000064);
    eax = Vffffffec;
    asm("cdq");
    Vffffffdc = Vffffffdc / Vffffffdc;
    edx = Vffffffdc % Vffffffdc;
    Vffffffec = eax;
    if(Vffffffa4 < 0) {
        goto L004659b0;
    }
    esi = Ac + eax;
    eax = Vffffffe0 - 1;
    if(esi <= eax) {
        goto L004659c3;
    }
    esp = ebp - 0xc;
    return;
    if(Ac - Vffffffec >= Vffffffc8) {
        goto L004659c3;
    }
    esp = ebp - 0xc;
    return;
    edx = Vffffffdc;
    ebx = ebx + Vfffffff0 - Vffffffec * Vffffffec;
    goto L00465a55;
    Vfffffff0 = Vffffffec;
    Vfffffff0 = Vfffffff0 - Vffffffd0;
    Vfffffff0 = Vfffffff0 + Vffffffd8;
    Vfffffff0 = Vfffffff0 - Vffffffa8;
    eax = Vfffffff0;
    asm("cdq");
    Vffffffd8 = Vffffffd8 / Vffffffd8;
    edx = Vffffffd8 % Vffffffd8;
    Vfffffff0 = eax;
    if(Vffffffac < 0) {
        goto L00465a20;
    }
    *(ebp - 0x6c) = A8;
    eax = Vfffffff0;
    edi = Vffffffd4 - 1;
    *(ebp - 0x6c) = *(ebp - 0x6c) + eax;
    if(*(ebp - 0x6c) <= edi) {
        goto L00465a40;
    }
    esp = ebp - 0xc;
    return;
    *(ebp - 0x6c) = A8;
    *(ebp - 0x6c) = *(ebp - 0x6c) - Vfffffff0;
    eax = Vffffffc4;
    if(*(ebp - 0x6c) >= eax) {
        goto L00465a40;
    }
    esp = ebp - 0xc;
    return;
    eax = Vffffffd8;
    ebx = ebx + Vfffffff0 * Vfffffff0 - Vffffffec;
    goto L00465a55;
    *(ebp - 0x6c) = edx;
    esi = edi;
    Vffffffb8 = 0;
    if(Vffffffe8 == 0) {
        goto L00465b11;
    }
    if(Vffffffcc != 2) {
        goto L00465aca;
    }
    if(Vffffffe8 & 1) {
        goto L00465a80;
    }
    ecx = A8 - Vffffffb4;
    goto L00465a89;
    eax = Vffffffd8;
    eax = (Vffffffd4 - 1 - A8) * (Vffffffd4 - 1 - A8);
    if(Vffffffe8 & 4) {
        goto L00465aa0;
    }
    edi = Ac - Vffffffa0;
    goto L00465aa9;
    ecx = Vffffffdc;
    edx = eax + Vffffffa8;
    if((Vffffffe0 - 1 - Ac) * (Vffffffe0 - 1 - Ac) + Vffffffd0 >= edx) {
        goto L00465ac2;
    }
    edi = -4;
    goto L00465ac7;
    Vffffffe8 = Vffffffe8 & -13;
    if(Vffffffe8 & 3) {
        goto L00465af0;
    }
    if(Vffffffe8 & 1) {
        goto L00465ae4;
    }
    edi = *(ebp - 0x6c) - Vffffffc4;
    goto L00465b26;
    edi = Vffffffd4 - 1 - *(ebp - 0x6c);
    goto L00465b26;
    if(Vffffffe8 & 4) {
        goto L00465b00;
    }
    edi = esi - Vffffffc8;
    goto L00465b08;
    edi = Vffffffe0 - 1 - esi;
    Vffffffb8 = 1;
    goto L00465b26;
    eax = *(ebp - 0x6c);
    if(Vffffffb0 < eax) {
        goto L00465b20;
    }
    edi = Vffffffb0 - eax;
    goto L00465b26;
    edi = *(ebp - 0x6c) - Vffffffb0;
    Vffffffcc = Vffffffd8;
    Vffffffcc = Vffffffcc - Vffffffdc;
    if(Vffffffb8 == 0) {
        goto L00465ba0;
    }
    if(*(ebp - 0x6c) != A10) {
        goto L00465b45;
    }
    if(esi == A14 || *(ebp - 0x6c) < Vffffffc4 || esi < Vffffffc8 || *(ebp - 0x6c) > Vffffffd4 - 1 || esi > Vffffffe0 - 1) {
        goto L00465b77;
    }
    A1c(A20, *(ebp - 0x6c), esi, A24);
    if(ebx < 0) {
        goto L00465b90;
    }
    edi = edi - 1;
    if(edi < 0) {
        goto L00465f48;
    }
    ebx = ebx + Vffffffcc;
    esi = esi + Vffffffa4;
    goto L00465b93;
    ebx = ebx + Vffffffd8;
    *(ebp - 0x6c) = *(ebp - 0x6c) + Vffffffac;
    goto L00465b38;
    if(*(ebp - 0x6c) != A10) {
        goto L00465bad;
    }
    if(esi == A14 || *(ebp - 0x6c) < Vffffffc4 || esi < Vffffffc8 || *(ebp - 0x6c) > Vffffffd4 - 1 || esi > Vffffffe0 - 1) {
        goto L00465bdf;
    }
    A1c(A20, *(ebp - 0x6c), esi, A24);
    if(edi - 1 < 0) {
        goto L00465f48;
    }
    if(ebx < 0) {
        goto L00465bf6;
    }
    ebx = ebx + Vffffffcc;
    esi = esi + Vffffffa4;
    goto L00465bf9;
    ebx = ebx + Vffffffd8;
    *(ebp - 0x6c) = *(ebp - 0x6c) + Vffffffac;
    goto L00465ba0;
    *(ebp - 0x68) = 0;
    eax = *(ebp - 0x68) & 0xff;
    ebx = Vffffffdc - Vffffffc0 - eax;
    *(ebp - 0x68) = eax;
    if(Vffffffe4 == 0) {
        goto L00465da0;
    }
    if(Vffffffe4 & 4) {
        goto L00465c46;
    }
    Vfffffff0 = Vffffffa0;
    Vfffffff0 = Vfffffff0 - Ac;
    eax = Vfffffff0;
    esi = Vffffffc8;
    Vfffffff0 = Vffffffdc * Vffffffdc;
    goto L00465c6e;
    if(Vffffffe4 & 8) {
        goto L00465c6e;
    }
    Vfffffff0 = Ac;
    Vfffffff0 = Vfffffff0 - Vffffffe0 - 1;
    eax = Vfffffff0;
    esi = Vffffffe0 - 1;
    Vfffffff0 = Vffffffdc * Vffffffdc;
    if(Vffffffe4 & 1) {
        goto L00465c95;
    }
    Vffffffec = Vffffffb4;
    Vffffffec = Vffffffec - A8;
    eax = Vffffffec;
    Vffffffec = Vffffffd8 * Vffffffd8;
    *(ebp - 0x6c) = Vffffffc4;
    goto L00465cc1;
    if(Vffffffe4 & 2) {
        goto L00465cc1;
    }
    Vffffffec = A8;
    Vffffffec = Vffffffec - Vffffffd4 - 1;
    eax = Vffffffec;
    Vffffffec = Vffffffd8 * Vffffffd8;
    *(ebp - 0x6c) = Vffffffd4;
    *(ebp - 0x6c) = *(ebp - 0x6c) - 1;
    if(Vffffffbc != 2) {
        goto L00465ce8;
    }
    edx = Vffffffec + *(ebp - 0x68);
    if(Vfffffff0 + Vffffffc0 >= edx) {
        goto L00465ce0;
    }
    eax = -13;
    goto L00465ce5;
    Vffffffe4 = Vffffffe4 & -4;
    if(Vffffffe4 & 0xc) {
        goto L00465d50;
    }
    eax = Vfffffff0 + Vffffffc0 - *(ebp - 0x68);
    asm("cdq");
    Vffffffd8 = Vffffffd8 / Vffffffd8;
    edx = Vffffffd8 % Vffffffd8;
    ecx = eax;
    if(Vffffffac < 0) {
        goto L00465d24;
    }
    *(ebp - 0x6c) = A8;
    eax = Vffffffd4 - 1;
    *(ebp - 0x6c) = *(ebp - 0x6c) + ecx;
    if(*(ebp - 0x6c) <= eax) {
        goto L00465d40;
    }
    esp = ebp - 0xc;
    return;
    *(ebp - 0x6c) = A8;
    eax = Vffffffc4;
    *(ebp - 0x6c) = *(ebp - 0x6c) - ecx;
    if(*(ebp - 0x6c) >= eax) {
        goto L00465d40;
    }
    esp = ebp - 0xc;
    return;
    edi = Vffffffd8;
    edi = ecx * ecx;
    ebx = ebx + Vfffffff0 - edi;
    goto L00465da5;
    eax = Vffffffec - Vffffffc0 + Vffffffdc - Vffffffa8;
    asm("cdq");
    Vffffffdc = Vffffffdc / Vffffffdc;
    edx = Vffffffdc % Vffffffdc;
    ecx = eax;
    if(Vffffffa4 < 0) {
        goto L00465d81;
    }
    esi = Ac + ecx;
    eax = Vffffffe0 - 1;
    if(esi <= eax) {
        goto L00465d93;
    }
    esp = ebp - 0xc;
    return;
    if(Ac - ecx >= Vffffffc8) {
        goto L00465d93;
    }
    esp = ebp - 0xc;
    return;
    edi = Vffffffdc;
    edi = ecx * ecx - Vffffffec;
    ebx = ebx + edi;
    goto L00465da5;
    esi = edi;
    *(ebp - 0x6c) = edx;
    Vffffffd0 = 0;
    if(Vffffffe8 == 0) {
        goto L00465e63;
    }
    if(Vffffffcc != 2) {
        goto L00465e1a;
    }
    if(Vffffffe8 & 4) {
        goto L00465dd0;
    }
    eax = Ac - Vffffffa0;
    goto L00465dd9;
    ecx = Vffffffdc;
    ecx = (Vffffffe0 - 1 - Ac) * (Vffffffe0 - 1 - Ac);
    if(Vffffffe8 & 1) {
        goto L00465df0;
    }
    edi = A8 - Vffffffb4;
    goto L00465df9;
    eax = Vffffffd8;
    edx = ecx + Vffffffa8;
    if((Vffffffd4 - 1 - A8) * (Vffffffd4 - 1 - A8) + Vffffffc0 >= edx) {
        goto L00465e12;
    }
    edi = -13;
    goto L00465e17;
    Vffffffe8 = Vffffffe8 & -4;
    if(Vffffffe8 & 0xc) {
        goto L00465e40;
    }
    if(Vffffffe8 & 4) {
        goto L00465e33;
    }
    edi = esi - Vffffffc8;
    goto L00465e75;
    edi = Vffffffe0 - 1 - esi;
    goto L00465e75;
    if(Vffffffe8 & 1) {
        goto L00465e51;
    }
    edi = *(ebp - 0x6c) - Vffffffc4;
    goto L00465e5a;
    edi = Vffffffd4 - 1 - *(ebp - 0x6c);
    Vffffffd0 = 1;
    goto L00465e75;
    if(Vffffffb8 < esi) {
        goto L00465e70;
    }
    edi = Vffffffb8 - esi;
    goto L00465e75;
    edi = esi - Vffffffb8;
    Vffffffb4 = Vffffffdc;
    Vffffffb4 = Vffffffb4 - Vffffffd8;
    if(Vffffffd0 == 0) {
        goto L00465ee8;
    }
    if(*(ebp - 0x6c) != A10) {
        goto L00465e94;
    }
    if(esi == A14 || *(ebp - 0x6c) < Vffffffc4 || esi < Vffffffc8 || *(ebp - 0x6c) > Vffffffd4 - 1 || esi > Vffffffe0 - 1) {
        goto L00465ec6;
    }
    A1c(A20, *(ebp - 0x6c), esi, A24);
    if(ebx < 0) {
        goto L00465ee0;
    }
    edi = edi - 1;
    if(edi < 0) {
        goto L00465f48;
    }
    ebx = ebx + Vffffffb4;
    *(ebp - 0x6c) = *(ebp - 0x6c) + Vffffffac;
    goto L00465ee3;
    ebx = ebx + Vffffffdc;
    esi = esi + Vffffffa4;
    goto L00465e87;
    if(*(ebp - 0x6c) != A10) {
        goto L00465ef5;
    }
    if(esi == A14 || *(ebp - 0x6c) < Vffffffc4 || esi < Vffffffc8 || *(ebp - 0x6c) > Vffffffd4 - 1 || esi > Vffffffe0 - 1) {
        goto L00465f27;
    }
    A1c(A20, *(ebp - 0x6c), esi, A24);
    if(edi - 1 < 0) {
        goto L00465f48;
    }
    if(ebx < 0) {
        goto L00465f40;
    }
    eax = Vffffffac;
    ebx = ebx + Vffffffb4;
    *(ebp - 0x6c) = *(ebp - 0x6c) + eax;
    goto L00465f43;
    ebx = ebx + Vffffffdc;
    esi = esi + Vffffffa4;
    goto L00465ee8;
    esp = ebp - 0xc;
}

/*	Procedure: 0x00465F50 - 0x00465FFF
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044EC10()
 *		L0044EDB0()
 */

L00465F50(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;



    (save)esi;
    (save)A10;
    if(Ac <= A14) {
        goto L00465f6f;
    }
    esi = ebx;
    ebx = ecx;
    ecx = esi;
    if(A10 >= 0 && A10 < *(A8 + 4)) {
        goto L00465f80;
    }
    esp = ebp - 0xc;
    (restore)A10;
    (restore)esi;
    return;
    if(ecx >= 0) {
        goto L00465f86;
    }
    ecx = 0;
    if(ebx > *A8) {
    }
    if(0 < esi) {
        goto L00465fa0;
    }
    esp = ebp - 0xc;
    (restore)A10;
    (restore)esi;
    return;
    esi = *(A8 + 0xc);
    esi = A10 * A10;
    ebx = ebx;
    esi = esi + *(A8 + 0x18);
    if(*(A8 + 8) - 1 > 0x1f) {
        goto L00465ff3;
    }
    goto ( *(A8 * 4 + 0x47a3bc));
    (save)A18;
    (save)ebx;
    (save)esi;
    L00434080();
    goto L00465ff0;
    esi = esi + ecx + ecx;
    (save)ax & 65535;
    (save)ebx;
    (save)esi;
    L00433F80();
    goto L00465ff0;
    esi = esi + ecx;
    L00433E50(esi, ebx, al & 0xff);
    esp = ebp - 0xc;
    (restore)A10;
    (restore)esi;
}

/*	Procedure: 0x00466000 - 0x004660B0
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L0044EDB0()
 */

L00466000(A14, A18, A1c, A20, A24)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ecx = A1c;
    ebp = A20;
    edx = A18;
    if(ecx <= ebp) {
        goto L00466022;
    }
    edi = ebp;
    ebp = ecx;
    ecx = edi;
    if(edx < 0) {
        goto L0046602a;
    }
    if(edx < *A14) {
        goto L00466030;
    }
    return;
    if(ecx >= 0) {
        goto L00466036;
    }
    ecx = 0;
    esi = *(A14 + 4);
    if(ebp <= esi) {
        goto L0046603f;
    }
    ebp = esi;
    if(0 < ebp) {
        goto L00466048;
    }
    return;
    ebp = ebp;
    edi = *(A14 + 0xc);
    esi = edi;
    ecx = *(A14 + 8) - 1;
    esi = *(A14 + 0x18);
    if(ecx > 0x1f) {
        goto L004660ac;
    }
    goto ( *(ecx * 4 + 0x47a440));
    edx = edx * 4;
    esi = esi + edx;
    if(ebp = ebp - 1) {
        goto L004660ac;
    }
L00466075:
    *esi = A24;
    esi = esi + edi;
    if(ebp = ebp - 1) {
        goto L00466075;
    }
    goto L004660ac;
    edx = edx + edx;
    esi = esi + edx;
    if(ebp = ebp - 1) {
        goto L004660ac;
    }
L00466090:
    *esi = ax;
    esi = esi + edi;
    if(ebp = ebp - 1) {
        goto L00466090;
    }
    goto L004660ac;
    esi = esi + edx;
    if(ebp = ebp - 1) {
        goto L004660ac;
    }
L004660a3:
    *esi = al;
    esi = esi + edi;
    if(ebp = ebp - 1) {
        goto L004660a3;
    }
}

/*	Procedure: 0x004660C0 - 0x004666FC
 *	Argument size: 24
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00449B90()
 */

L004660C0(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{



    (save)esi;
    (save)edi;
    eax = A18;
    esp = esp - 0x4c;
    ecx = A10;
    edx = A14;
    if(eax <= 1) {
        *A1c = 0;
        *(A1c + 4) = 0;
        *(A1c + 8) = 0;
        *(A1c + 0xc) = 0;
        *(A1c + 0x10) = 0;
        *(A1c + 0x14) = 0;
        *(A1c + 0x18) = 0;
        *(A1c + 0x1c) = 0;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    *(ebp - 0x50) = eax;
    *(ebp - 0x50) = *(ebp - 0x50) >> 1;
    *(ebp - 0x54) = eax;
    eax = *(ebp - 0x50);
    *(ebp - 0x54) = *(ebp - 0x54) - eax;
    if(!(edi = edx - Ac)) {
        edi = Ac - eax;
        *A1c = A8;
        *(A1c + 4) = edi;
        *(A1c + 8) = ecx;
        *(A1c + 0xc) = edi;
        edx = Ac + *(ebp - 0x54);
        *(A1c + 0x10) = ecx;
        *(A1c + 0x14) = edx;
        eax = A8;
        *(A1c + 0x18) = eax;
        *(A1c + 0x1c) = edx;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    if(!(esi = ecx - A8)) {
        edi = A8 - *(ebp - 0x50);
        *A1c = edi;
        *(A1c + 4) = Ac;
        esi = A8 + *(ebp - 0x54);
        *(A1c + 8) = esi;
        eax = Ac;
        *(A1c + 0xc) = eax;
        *(A1c + 0x10) = esi;
        *(A1c + 0x14) = edx;
        *(A1c + 0x18) = edi;
        *(A1c + 0x1c) = edx;
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        return;
    }
    *(ebp - 0x24) = esi;
    (fsave) *(ebp - 0x24);
    *(ebp - 0x24) = edi;
    esp = esp - 8;
    (fsave) *(ebp - 0x24);
    asm("fdivrp st1");
    *esp = ((frestore));
    L0046D2A0();
    (restore)ecx;
    *(ebp - 0x1c) = ((frestore));
    if(esi < 0) {
        L0046D2C0();
        *(ebp - 0x1c) = ((frestore)) + *(ebp - 0x1c);
    }
    L0046D280( *(ebp - 0x1c), *(ebp - 0x18));
    *(ebp - 0x3c) = ((frestore));
    L0046D260( *(ebp - 0x1c), *(ebp - 0x18));
    asm("fst qword [ebp-0x1c]");
    asm("fchs");
    esp = esp - 8;
    *(ebp - 0x14) = ((frestore));
    eax = edi;
    eax = edi * edi;
    ecx = esi;
    *(ebp - 0x24) = eax + esi * esi;
    *esp = *(ebp - 0x24);
    L0046D2B0();
    (restore)ecx;
    asm("fst qword [ebp-0x4c]");
    *(ebp - 0x24) = *(ebp - 0x54);
    *(ebp - 0x44) = ((frestore)) * *(ebp - 0x3c);
    *(ebp - 0x34) = *(ebp - 0x24) * *(ebp - 0x14);
    (fsave) *(ebp - 0x44) + *(ebp - 0x34);
    asm("fst qword [ebp-0x24]");
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    ah = ah & 5;
    if(ah == 1) {
        (fsave) *(ebp - 0x24) - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        ecx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb ecx,+0x0");
        } else {
            ecx = ecx + (edi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave) *(ebp - 0x24) + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        ecx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edx = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edx = edx + 2147483647;
            asm("sbb ecx,+0x0");
        } else {
            ecx = ecx + (edx :: 0 > 0 & 0xff);
        }
    }
    *A1c = A8 + ecx;
    (fsave)0;
    (fsave)0;
    (fsave)0;
    *(ebp - 0x24) = *(ebp - 0x54);
    st1 = *(ebp - 0x4c) * *(ebp - 0x1c);
    st2 = *(ebp - 0x24) * *(ebp - 0x3c);
    (fsave)st0 + st2;
    asm("fst st3");
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    ah = ah & 5;
    if(ah == 1) {
        (fsave)st2 - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        eax = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb eax,+0x0");
        } else {
            eax = eax + (edi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave)st2 + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        eax = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        esi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            esi = esi + 2147483647;
            asm("sbb eax,+0x0");
        } else {
            eax = eax + (esi :: 0 > 0 & 0xff);
        }
    }
    *(A1c + 4) = Ac + eax;
    (fsave) *(ebp - 0x34);
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    ah = ah & 5;
    if(ah == 1) {
        (fsave) *(ebp - 0x34) - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        edx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb edx,+0x0");
        } else {
            edx = edx + (edi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave) *(ebp - 0x34) + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        edx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        esi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            esi = esi + 2147483647;
            asm("sbb edx,+0x0");
        } else {
            edx = edx + (esi :: 0 > 0 & 0xff);
        }
    }
    (fsave)st1;
    *(A1c + 8) = A8 + edx;
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    ah = ah & 5;
    if(ah == 1) {
        (fsave)st1 - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        ecx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb ecx,+0x0");
        } else {
            ecx = ecx + (edi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave)st1 + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        ecx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        esi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            esi = esi + 2147483647;
            asm("sbb ecx,+0x0");
        } else {
            ecx = ecx + (esi :: 0 > 0 & 0xff);
        }
    }
    *(A1c + 0xc) = Ac + ecx;
    edi = ~( *(ebp - 0x50));
    *(ebp - 0x24) = edi;
    *(ebp - 0x24) = edi;
    st3 = *(ebp - 0x24) * *(ebp - 0x14);
    st2 = *(ebp - 0x24) * *(ebp - 0x3c);
    (fsave)st2;
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    ah = ah & 5;
    if(ah == 1) {
        (fsave)st2 - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        eax = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        esi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            esi = esi + 2147483647;
            asm("sbb eax,+0x0");
        } else {
            eax = eax + (esi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave)st2 + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        eax = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb eax,+0x0");
        } else {
            eax = eax + (edi :: 0 > 0 & 0xff);
        }
    }
    (fsave)st1;
    *(A1c + 0x10) = A8 + eax;
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    ah = ah & 5;
    if(ah == 1) {
        (fsave)st1 - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        edx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        esi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            esi = esi + 2147483647;
            asm("sbb edx,+0x0");
        } else {
            edx = edx + (esi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave)st1 + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        edx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb edx,+0x0");
        } else {
            edx = edx + (edi :: 0 > 0 & 0xff);
        }
    }
    *(A1c + 0x14) = Ac + edx;
    (fsave) *(ebp - 0x44) + st3;
    asm("fst st3");
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    ah = ah & 5;
    if(ah == 1) {
        (fsave)st2 - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        ecx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        esi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            esi = esi + 2147483647;
            asm("sbb ecx,+0x0");
        } else {
            ecx = ecx + (esi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave)st2 + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        ecx = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb ecx,+0x0");
        } else {
            ecx = ecx + (edi :: 0 > 0 & 0xff);
        }
    }
    (fsave)st0 + st2;
    *(A1c + 0x18) = A8 + ecx;
    asm("fst st3");
    asm("fcomp qword [0x49ce30]");
    asm("fnstsw ax");
    if((ah & 5) == 1) {
        (fsave)st2 - M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        eax = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        esi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            esi = esi + 2147483647;
            asm("sbb eax,+0x0");
        } else {
            eax = eax + (esi :: 0 > 0 & 0xff);
        }
    } else {
        (fsave)st2 + M0049ce38;
        asm("fist dword [ebp-0x24]");
        asm("fst dword [ebp-0x2c]");
        (fsave) *(ebp - 0x24);
        eax = *(ebp - 0x24);
        asm("fsubp st1");
        *(ebp - 0x28) = ((frestore));
        edi = *(ebp - 0x28);
        if(*(ebp - 0x2c) < 0) {
            edi = edi + 2147483647;
            asm("sbb eax,+0x0");
        } else {
            eax = eax + (edi :: 0 > 0 & 0xff);
        }
    }
    *(A1c + 0x1c) = Ac + eax;
    esp = ebp - 0xc;
    (restore)edi;
    (restore)esi;
    asm("fcompp");
    st0 = ((frestore));
}

/*	Procedure: 0x004666FD - 0x004666FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004666FD()
{



}

/*	Procedure: 0x00466700 - 0x0046675F
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044EDB0()
 */

L00466700(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{



    (save)A8;
    edx = A10;
    if(Ac < 0 || edx < 0 || Ac >= *A8 || edx >= *(A8 + 4)) {
        (restore)A8;
        return;
    }
    ecx = *(A8 + 0xc);
    ecx = edx * edx;
    edx = *(A8 + 8) - 1;
    ecx = ecx + *(A8 + 0x18);
    if(edx > 0x1f) {
        goto L0046675c;
    }
    switch(edx) {
        case 0:
L0046675c:
            (restore)A8;
            return;
        case 1:
            goto L0046675c;
        case 2:
            goto L0046675c;
        case 3:
            goto L0046675c;
        case 4:
            goto L0046675c;
        case 5:
            goto L0046675c;
        case 6:
            goto L0046675c;
        case 7:
            *(ecx + Ac) = al;
            goto L0046675c;
        case 8:
            goto L0046675c;
        case 9:
            goto L0046675c;
        case 0xa:
            goto L0046675c;
        case 0xb:
            goto L0046675c;
        case 0xc:
            goto L0046675c;
        case 0xd:
            goto L0046675c;
        case 0xe:
            goto L0046675c;
        case 0xf:
            ecx = ecx + Ac + Ac;
            *ecx = ax;
            goto L0046675c;
        case 0x10:
            goto L0046675c;
        case 0x11:
            goto L0046675c;
        case 0x12:
            goto L0046675c;
        case 0x13:
            goto L0046675c;
        case 0x14:
            goto L0046675c;
        case 0x15:
            goto L0046675c;
        case 0x16:
            goto L0046675c;
        case 0x17:
            goto L0046675c;
        case 0x18:
            goto L0046675c;
        case 0x19:
            goto L0046675c;
        case 0x1a:
            goto L0046675c;
        case 0x1b:
            goto L0046675c;
        case 0x1c:
            goto L0046675c;
        case 0x1d:
            goto L0046675c;
        case 0x1e:
            goto L0046675c;
        case 0x1f:
L00466741:
            ecx = ecx + Ac * 4;
            *ecx = A14;
            goto L0046675c;
    }
    goto L00466741;
}

/*	Procedure: 0x00466760 - 0x00466825
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0045DB10()
 *		L0045DC10()
 *		L0045DCA0()
 */

L00466760(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    eax = A8;
    (save)ebx;
    ecx = A4;
    ebx = Ac;
    if(eax < 0 || ebx < 0 || eax >= *ecx) {
        goto L0046677e;
    }
    if(ebx < *(ecx + 4)) {
        goto L00466782;
    }
    (restore)ebx;
    return 0;
    edx = *(ecx + 0xc);
    edx = ebx * ebx + *(ecx + 0x18);
    ecx = *(ecx + 8) - 1;
    if(ecx > 0x1f) {
        goto L00466822;
    }
    goto ( *(ecx * 4 + 0x47a548));
    eax = *edx;
    goto L00466824;
    edx = *(edx + eax * 2) & 65535;
    eax = edx << 8;
    edx = edx >> 8;
    eax = (eax | edx) & 65535;
    goto L00466824;
    eax = *(edx + eax) & 0xff;
    goto L00466824;
    if(eax & 1) {
        goto L004667d3;
    }
    eax = *(edx + (eax >> 1)) & 0xff & 0xf;
    goto L004667dc;
    eax = ( *(edx + (eax >> 1)) & 0xff) >> 4;
    eax = al & 0xff;
    goto L00466824;
    ecx = eax;
    eax = eax >> 2;
    ecx = ( !ecx & 3) + ( !ecx & 3);
    eax = ( *(edx + eax) & 0xff) >> cl & 3 & 0xff;
    goto L00466824;
    ebx = *(edx + (eax >> 3)) & 0xff;
    edx = 7 & eax;
    ebx = ebx >> 7 - edx;
    eax = 0;
    goto L00466824;
    (restore)ebx;
    return 0;
}

/*	Procedure: 0x00466830 - 0x00466984
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0044A2F0()
 *		L0045DAA0()
 *		L0045DBA0()
 *		L0045DCA0()
 */

L00466830(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = Ac;
    (save)ebp;
    edx = A8;
    ecx = A10;
    if(ebx < 0 || ecx < 0 || ebx >= *edx || ecx >= *(edx + 4)) {
        (restore)ebp;
        return 0;
    }
    eax = *(edx + 0xc);
    eax = ecx * ecx;
    ebp = *(edx + 8) - 1;
    eax = eax + *(edx + 0x18);
    if(ebp > 0x1f) {
        goto L00466980;
    }
    switch(ebp) {
        case 0:
            goto L00466944;
        case 1:
            goto L00466914;
        case 2:
L00466980:
            (restore)ebp;
            return 0;
        case 3:
            goto L004668d7;
        case 4:
            goto L00466980;
        case 5:
            goto L00466980;
        case 6:
            goto L00466980;
        case 7:
            goto L004668b9;
        case 8:
            goto L00466980;
        case 9:
            goto L00466980;
        case 0xa:
            goto L00466980;
        case 0xb:
            goto L00466980;
        case 0xc:
            goto L00466980;
        case 0xd:
            goto L00466980;
        case 0xe:
            goto L00466980;
        case 0xf:
            ecx = *(eax + ebx * 2) & 65535;
            edx = ecx << 8;
            edx = (edx | ecx >> 8) & 65535;
            ebx = edx;
            ebp = edx;
            ebx = ebx >> 0xa & 0x1f;
            ebp = ebp >> 5 & 0x1f;
            eax = *(ebx * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c);
            edx = edx & 0x1f;
            eax = eax | *(edx * 4 + 0x49cdac);
            goto L00466982;
        case 0x10:
            goto L00466980;
        case 0x11:
            goto L00466980;
        case 0x12:
            goto L00466980;
        case 0x13:
            goto L00466980;
        case 0x14:
            goto L00466980;
        case 0x15:
            goto L00466980;
        case 0x16:
            goto L00466980;
        case 0x17:
            goto L00466980;
        case 0x18:
            goto L00466980;
        case 0x19:
            goto L00466980;
        case 0x1a:
            goto L00466980;
        case 0x1b:
            goto L00466980;
        case 0x1c:
            goto L00466980;
        case 0x1d:
            goto L00466980;
        case 0x1e:
            goto L00466980;
        case 0x1f:
L00466873:
            eax = *(eax + ebx * 4);
            goto L00466982;
    }
    goto L00466873;
L004668b9:
    ecx = *(eax + ebx) & 0xff;
    if(ecx >= *(edx + 0x10)) {
        goto L004668d0;
    }
    eax = *( *(edx + 0x1c) + ecx * 4);
    goto L00466982;
    eax = 0;
    goto L00466982;
L004668d7:
    if(ebx & 1) {
        goto L004668f0;
    }
    ebx = *(eax + (ebx >> 1)) & 0xff & 0xf;
    goto L004668fb;
    ebx = ( *(eax + (ebx >> 1)) & 0xff) >> 4;
    eax = bl & 0xff;
    if(eax >= *(edx + 0x10)) {
        goto L00466910;
    }
    ebx = *(edx + 0x1c);
    eax = *(ebx + eax * 4);
    goto L00466982;
    eax = 0;
    goto L00466982;
L00466914:
    ecx = ebx;
    ebx = ebx >> 2;
    ecx = ( !ecx & 3) + ( !ecx & 3);
    ebx = ( *(eax + ebx) & 0xff) >> cl & 3 & 0xff;
    if(ebx >= *(edx + 0x10)) {
        goto L00466940;
    }
    eax = *( *(edx + 0x1c) + ebx * 4);
    goto L00466982;
    eax = 0;
    goto L00466982;
L00466944:
    eax = *(eax + (ebx >> 3)) & 0xff;
    ebp = 7 & ebx;
    eax = eax >> 7 - ebp;
    if(0 >= *(edx + 0x10)) {
        goto L00466975;
    }
    eax = *( *(edx + 0x1c));
    goto L00466982;
    eax = 0;
    goto L00466982;
}

/*	Procedure: 0x00466990 - 0x00466B3A
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0046B2C0()
 */

L00466990(A10, A14, A18, A1c)
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;



    edi = A18;
    (save)ebp;
    esp = esp - 0x18;
    *esp = edi;
    *esp = *esp >> 8;
    *esp = *esp & 0xff;
    *esp = *esp & 0xff;
    Vfffffff8 = edi;
    Vfffffff8 = Vfffffff8 >> 0x10;
    Vfffffff8 = Vfffffff8 & 0xff;
    Vfffffff8 = Vfffffff8 & 0xff;
    Vfffffff0 = edi;
    Vfffffff0 = Vfffffff0 >> 0x18;
    Vfffffff0 = Vfffffff0 & 0xff;
    eax = 0;
    Vffffffe8 = 2147483647;
    if(!(A1c & 1)) {
        esi = 0;
        if(A14 > 0) {
            do {
                edx = *(A10 + esi * 4);
                ebx = edx >> 8;
                ebx = bl & 0xff;
                ebx = bl & 0xff;
                ebp = *esp - ebx;
                if(ebp < 0) {
                    ebp = ~ebp;
                }
                ecx = edx >> 0x10;
                ecx = cl & 0xff;
                ecx = cl & 0xff;
                edi = Vfffffff8 - ecx;
                if(edi < 0) {
                    edi = ~edi;
                }
                edx = edx >> 0x18;
                edx = dl & 0xff;
                ebx = Vfffffff0 - edx;
                if(ebx < 0) {
                    ebx = ~ebx;
                }
                ecx = edi + ebp + ebx;
                if(ecx < Vffffffe8) {
                    Vffffffe8 = ecx;
                    eax = esi;
                    if(ecx == 0) {
                        goto L00466b33;
                    }
                }
                esi = esi + 1;
            } while(esi < A14);
        }
    } else {
        Vfffffff4 = edi;
        Vfffffff4 = Vfffffff4 & 0xff;
        ecx = Vfffffff4 & 0xff;
        Vfffffff4 = ecx;
        if(ecx != 0) {
            Vfffffff4 = Vfffffff4 | 0x1000;
        }
        ebx = 0;
        if(A14 > 0) {
            do {
                Vffffffec = *(A10 + ebx * 4);
                edx = dl & 0xff;
                edx = dl & 0xff;
                if(edx != 0) {
                    edx = edx | 0x1000;
                }
                esi = Vfffffff4 - edx;
                if(esi < 0) {
                    esi = ~esi;
                }
                ecx = Vffffffec >> 8;
                ecx = cl & 0xff;
                ecx = cl & 0xff;
                ebp = *esp - ecx;
                if(ebp < 0) {
                    ebp = ~ebp;
                }
                edx = Vffffffec >> 0x10;
                edx = dl & 0xff;
                edx = dl & 0xff;
                edi = Vfffffff8 - edx;
                if(edi < 0) {
                    edi = ~edi;
                }
                ecx = Vffffffec >> 0x18;
                ecx = cl & 0xff;
                edx = Vfffffff0 - ecx;
                if(edx < 0) {
                    edx = ~edx;
                }
                ecx = ebp + esi + edi + edx;
                if(ecx < Vffffffe8) {
                    Vffffffe8 = ecx;
                    eax = ebx;
                    if(ecx == 0) {
                        goto L00466b33;
                    }
                }
                ebx = ebx + 1;
            } while(ebx < A14);
        }
    }
L00466b33:
    esp = esp + 0x18;
    (restore)ebp;
}

/*	Procedure: 0x00466B3B - 0x00466C0A
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 */

L00466B3B(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    (save)ebp;
    ebp = 0;
    if(A8 > 0) {
        A8 :: 8;
        if(!(ebx = A8 - 8)) {
            do {
                *(Ac + ebp * 4) = *(A4 + ebp * 4) >> 1 & 2139062143;
                *(Ac + ebp * 4 + 4) = *(A4 + ebp * 4 + 4) >> 1 & 2139062143;
                *(Ac + ebp * 4 + 8) = *(A4 + ebp * 4 + 8) >> 1 & 2139062143;
                *(Ac + ebp * 4 + 0xc) = *(A4 + ebp * 4 + 0xc) >> 1 & 2139062143;
                *(Ac + ebp * 4 + 0x10) = *(A4 + ebp * 4 + 0x10) >> 1 & 2139062143;
                *(Ac + ebp * 4 + 0x14) = *(A4 + ebp * 4 + 0x14) >> 1 & 2139062143;
                *(Ac + ebp * 4 + 0x18) = *(A4 + ebp * 4 + 0x18) >> 1 & 2139062143;
                *(Ac + ebp * 4 + 0x1c) = *(A4 + ebp * 4 + 0x1c) >> 1 & 2139062143;
                ebp = ebp + 8;
            } while(ebp < ebx);
        }
        do {
            *(Ac + ebp * 4) = *(A4 + ebp * 4) >> 1 & 2139062143;
            ebp = ebp + 1;
        } while(ebp < A8);
    }
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00466C0B - 0x00466C81
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 */

L00466C0B(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;



    ebp = 0;
    if(A18 > 0) {
        do {
            ecx = *(A14 + ebp * 4);
            eax = *(A14 + ebp * 4);
            ecx = ecx >> 0x18;
            ebx = *((cl & 0xff) + 0x49ce40) & 0xff;
            ecx = *(A14 + ebp * 4);
            eax = eax >> 0x10;
            ecx = ecx >> 8;
            eax = al & 0xff;
            edx = *((al & 0xff) + 0x49ce40) & 0xff;
            ecx = cl & 0xff;
            eax = *((cl & 0xff) + 0x49ce40) & 0xff;
            edx = (dl & 0xff) << 0x10;
            eax = (al & 0xff) << 8;
            edx = edx | eax;
            *(A1c + ebp * 4) = edx | (bl & 0xff) << 0x18;
            ebp = ebp + 1;
        } while(ebp < A18);
    }
}

/*	Procedure: 0x00466C82 - 0x00466C8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00466C82()
{



}

/*	Procedure: 0x00466D4D - 0x00466E2C
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 0
 */

L00466D4D(A4, A8, Ac, A10)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    ecx = A4;
    (save)ebx;
    (save)A8;
    (save)A10;
    (save)ebp;
    esp = esp - 0x10;
    Vffffffe8 = ecx;
    Vffffffe8 = Vffffffe8 >> 8;
    Vffffffe8 = Vffffffe8 & 0xff;
    Vffffffe8 = Vffffffe8 & 0xff;
    Vffffffec = ecx;
    Vffffffec = Vffffffec >> 0x10;
    Vffffffec = Vffffffec & 0xff;
    Vffffffec = Vffffffec & 0xff;
    Vffffffe4 = ecx;
    Vffffffe4 = Vffffffe4 >> 0x18;
    eax = Vffffffe4 & 0xff;
    ebp = 0;
    Vffffffe4 = eax;
    if(Ac > 0) {
        do {
            ebx = *(A8 + ebp * 4);
            edx = *(A8 + ebp * 4);
            ecx = *(A8 + ebp * 4);
            eax = Vffffffe8;
            ebx = ebx >> 8;
            edx = edx >> 0x10;
            ecx = ecx >> 0x18;
            ecx = cl & 0xff;
            ebx = bl & 0xff;
            ebx = bl & 0xff;
            eax = ebx * ebx;
            edx = dl & 0xff;
            edx = dl & 0xff;
            *esp = eax >> 8;
            *esp = *esp + ebx;
            *esp = *esp >> 1;
            eax = Vffffffec;
            eax = edx * edx;
            ebx = Vffffffe4;
            ebx = ecx * ecx;
            eax = (eax >> 8) + edx;
            ebx = (ebx >> 8) + ecx >> 1;
            eax = eax >> 1;
            edx = bl & 0xff;
            ecx = ( *esp & 0xff) << 8;
            edx = edx << 0x18;
            *(A10 + ebp * 4) = (al & 0xff) << 0x10 | ecx | edx;
            ebp = ebp + 1;
        } while(ebp < Ac);
    }
    esp = esp + 0x10;
    (restore)ebp;
    (restore)A10;
    (restore)A8;
    (restore)ebx;
}

/*	Procedure: 0x00466E2D - 0x00466E2F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00466E2D()
{



}

/*	Procedure: 0x00466E30 - 0x00466FCF
 *	Argument size: 12
 *	Local size: 56
 *	Save regs size: 12
 */

L00466E30(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    if(Ac == 0) {
        return L00434080(A10, 8192, 0);
    }
    edi = L0042E310(32768);
    *(ebp - 0x40) = edi;
    L00434080(edi, 8192, -1);
    if(Ac > 0x100) {
        Ac = 0x100;
    }
    Vffffffe8 = 0;
    if(Ac > 0) {
        do {
            Vfffffff0 = *(A8 + Vffffffe8 * 4);
            Vffffffd8 = *(A8 + Vffffffe8 * 4);
            Vffffffd8 = Vffffffd8 >> 0xb;
            Vffffffd8 = Vffffffd8 & 0x1f;
            Vffffffe0 = eax;
            Vffffffe0 = Vffffffe0 >> 0x13;
            Vffffffe0 = Vffffffe0 & 0x1f;
            Vfffffff0 = Vfffffff0 >> 0x1b;
            Vfffffff0 = Vfffffff0 & 0x1f;
            Vffffffdc = 0;
            Vffffffd4 = 0;
            do {
                *(ebp - 0x44) = Vffffffdc;
                *(ebp - 0x44) = *(ebp - 0x44) - Vffffffd8;
                if(*(ebp - 0x44) < 0) {
                    eax = *(ebp - 0x44);
                    *(ebp - 0x44) = ~( *(ebp - 0x44));
                }
                *(ebp - 0x3c) = Vffffffd4;
                Vffffffe4 = 0;
                Vffffffc8 = 0;
                do {
                    ebx = Vffffffe4 - Vffffffe0;
                    if(ebx < 0) {
                        ebx = ~ebx;
                    }
                    eax = *(ebp - 0x44);
                    Vffffffd0 = eax;
                    Vffffffd0 = Vffffffd0 + ebx;
                    if(eax > ebx) {
                        ebx = eax;
                    }
                    Vffffffcc = *(ebp - 0x3c);
                    Vffffffcc = Vffffffcc | Vffffffc8;
                    Vffffffec = 0;
                    do {
                        esi = Vffffffec - Vfffffff0;
                        edx = Vffffffcc | Vffffffec;
                        if(esi < 0) {
                            esi = ~esi;
                        }
                        eax = ebx <= esi ? esi : ebx;
                        ecx = eax + Vffffffd0 + esi;
                        if(ecx < ( *(edi + edx) & 0xff)) {
                            *(edi + edx) = cl;
                            cl = Vffffffe8;
                            *(A10 + edx) = cl;
                        }
                        Vffffffec = Vffffffec + 1;
                    } while(Vffffffec < 0x20);
                    Vffffffc8 = Vffffffc8 + 0x20;
                    Vffffffe4 = Vffffffe4 + 1;
                } while(Vffffffe4 < 0x20);
                Vffffffd4 = Vffffffd4 + 0x400;
                Vffffffdc = Vffffffdc + 1;
            } while(Vffffffdc < 0x20);
            Vffffffe8 = Vffffffe8 + 1;
        } while(Vffffffe8 < Ac);
    }
    eax = L0042E3E0(ebp - 0x40);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00466FD0 - 0x00467001
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L00467280()
 */

L00466FD0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    esp = esp - 0x18;
    *(ebp - 8) = esp;
    ebx = L0042E310(A8);
    goto L00466ffa;
    ebx = 0;
    if(*(ebp - 0x14) != 0) {
        ecx = *(ebp - 0x1c);
        *(ebp - 0x14)(-1);
    }
    esp = *(ebp - 8);
L00466ffa:
    esp = ebp - 4;
    return ebx;
}

/*	Procedure: 0x00467002 - 0x0046700F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467002()
{



}

/*	Procedure: 0x00467010 - 0x00467046
 *	Argument size: 20
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00467280()
 */

L00467010(A8, Ac, A10, A14, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
{



    (save)A18;
    (save)Ac;
    (save)edi;
    edx = A8;
    if(A8 != 0) {
        do {
            eax = *(edx + 4);
            edi = *edx;
            eax = A10(A14, eax, Ac, *(edi + 4), A18);
            edx = *edi;
        } while(edx != 0);
    }
    esp = ebp - 0xc;
    (restore)edi;
    (restore)Ac;
    (restore)A18;
}

/*	Procedure: 0x00467047 - 0x0046704F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467047()
{



}

/*	Procedure: 0x00467050 - 0x0046709C
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L00467280()
 */

L00467050(Ac)
/* unknown */ void  Ac;
{
	/* unknown */ void  ebx;



    (save)edi;
    (save)ebp;
    if(*Ac != 0) {
        do {
            ecx = *Ac;
            ebp = 0;
            eax = Ac;
            do {
                edi = *ecx;
                ebx = *(ecx + 4);
                if(ebx > *(edi + 4)) {
                    ebp = *edi;
                    *eax = edi;
                    *( *ecx) = ecx;
                    *ecx = ebp;
                    ebp = 1;
                }
                eax = *eax;
                ecx = *eax;
            } while(*ecx != 0);
        } while(ebp != 0);
    }
    (restore)ebp;
    (restore)edi;
}

/*	Procedure: 0x0046709D - 0x0046709F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046709D()
{



}

/*	Procedure: 0x004670A0 - 0x004670E7
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00467280()
 */

L004670A0(A4)
/* unknown */ void  A4;
{



    (save)ebx;
    ebx = *A4;
    eax = A4;
    do {
        if(*(ebx + 0x20) = *(ebx + 0x20) - 1) {
            *(ebx + 4) = *(ebx + 4) + *(ebx + 0xc);
            *(ebx + 0x14) = *(ebx + 0x14) + *(ebx + 0x18);
            if(*(ebx + 0x14) > 0) {
                *(ebx + 4) = *(ebx + 4) + *(ebx + 0x10);
                *(ebx + 0x14) = *(ebx + 0x14) - *(ebx + 0x1c);
            }
            eax = ebx;
        } else {
            *eax = *ebx;
        }
        ebx = *eax;
    } while(ebx != 0);
    (restore)ebx;
}

/*	Procedure: 0x004670E8 - 0x004670EF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L004670E8()
{



}

/*	Procedure: 0x004670F0 - 0x00467130
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L00467280()
 */

L004670F0(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    (save)ebx;
    (save)esi;
    (save)ebp;
    edx = *A4;
    for(esi = A8; edx != 0 && *(edx + 8) == Ac; *A4 = ebx) {
        for(ebx = *(edx + 4); 1; esi = ebp) {
            ebp = *esi;
            if(ebp == 0 || *(ebp + 4) >= ebx) {
                break;
            }
        }
        ebx = *edx;
        *esi = edx;
        *edx = ebp;
        esi = edx;
        edx = ebx;
    }
    (restore)ebp;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x00467131 - 0x0046713F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467131()
{



}

/*	Procedure: 0x00467140 - 0x0046727D
 *	Argument size: 24
 *	Local size: 12
 *	Save regs size: 16
 *	Called by:
 *		L00467280()
 */

L00467140(A20, A24, A28, A2c, A30, A34)
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
{
	/* unknown */ void  V4;
	/* unknown */ void  V8;
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  edi;



    eax = A20;
    *eax = 0;
    *esp = 0;
    if(A28 > 0) {
        V4 = A30;
        V8 = A34;
        do {
            eax = *esp;
            ebx = V4 + *(A24 + eax * 8);
            ecx = V8 + *(A24 + eax * 8 + 4);
            if(eax != 0) {
                edx = V4;
                eax = *esp;
            } else {
                edx = V4;
                eax = A28;
            }
            edi = V8 + *(A24 + eax * 8 - 4);
            edx = edx + *(A24 + eax * 8 - 8);
            if(ecx > edi) {
                ebp = ebx;
                eax = ecx;
                ebx = edx;
                ecx = edi;
                edx = ebp;
                edi = eax;
            }
            if(!(ebp = edi - ecx)) {
                edx = edx - ebx;
                edi = A2c;
                A2c = A2c + 0x24;
                eax = edx <= 0 ? eax | -1 : 1;
                *(edi + 0x10) = eax;
                eax = edx >= 0 ? edx : ~edx;
                *(edi + 4) = ebx;
                *(edi + 8) = ecx;
                *(edi + 0x20) = ebp;
                *(edi + 0x1c) = ebp;
                *(edi + 0x14) = edx < 0 ? 1 - ebp : 0;
                if(ebp < eax) {
                    asm("cdq");
                    ebp = ebp / ebp % ebp / ebp;
                    edx = *(edi + 0x10);
                    *(edi + 0xc) = eax * eax;
                    *(edi + 0x18) = ebp;
                } else {
                    *(edi + 0xc) = 0;
                    *(edi + 0x18) = eax;
                }
                for(edx = A20; 1; edx = ebp) {
                    ebp = *edx;
                    if(ebp == 0) {
                        break;
                    }
                    eax = *(ebp + 8);
                    if(eax > ecx || eax == ecx && *(ebp + 4) >= ebx) {
                        break;
                    }
                }
                *edi = ebp;
                *edx = edi;
            }
            eax = A28;
            *esp = *esp + 1;
        } while(*esp < eax);
    }
}

/*	Procedure: 0x0046727E - 0x0046727F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046727E()
{



}

/*	Procedure: 0x00467280 - 0x00467381
 *	Argument size: 28
 *	Local size: 40
 *	Save regs size: 12
 *	Called by:
 *		L0044A480()
 */

L00467280(A8, Ac, A10, A14, A18, A1c, A20)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
{
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vfffffff0;



    if(A14 < 3 || A18 == 0) {
        return 0;
    }
    eax = L00466FD0((A14 + A14 * 8) * 4);
    edi = eax;
    if(edi == 0) {
        esp = ebp - 0xc;
        return 0;
    }
    Vffffffd8 = 0;
    L00467140( & Vffffffd8, A10, A14, edi, A8, Ac);
    *(ebp - 0x34) = 0;
    esi = *(Vffffffd8 + 8);
    goto L0046735f;
    ecx = ebp - 0x30;
    *(ebp - 0x30) = edi;
    L0042E3E0(ecx);
    L004234F0(0, 0, 0);
    if(Vffffffe4 != 0) {
        (save)-1;
        ecx = Vffffffdc;
        Vffffffe4();
    }
    esp = *(ebp - 0x10);
    goto L00467348;
L0046735f:
    while(Vffffffd8 != 0 || *(ebp - 0x34) != 0) {
        eax = ebp - 0x34;
        L004670F0( & Vffffffd8, eax, esi);
        Vfffffff0 = esp;
        L00467010( *(ebp - 0x34), esi, A18, A1c, A20);
L00467348:
        L004670A0(ebp - 0x34);
        L00467050(ebp - 0x34);
        esi = esi + 1;
    }
    ecx = ebp - 0x2c;
    *(ebp - 0x2c) = edi;
    eax = L0042E3E0(ecx);
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x00467382 - 0x0046738F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467382()
{



}

/*	Procedure: 0x00467390 - 0x00467465
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044BAE0()
 *		L0044BCD0()
 *		L0044BD30()
 *		L0044BE30()
 *		L0044BE90()
 *		L0044BF40()
 *		L0044EDB0()
 */

L00467390(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{



    (save)ebx;
    (save)A10;
    (save)edi;
    if(!(ecx = A8 - 5)) {
        if(ecx = ecx - 1) {
            goto L004673d0;
        }
        if(ecx = ecx - 0x5e) {
            goto L004673e0;
        }
        if(ecx = ecx - 1) {
            goto L004673f0;
        }
        if(ecx = ecx - 1) {
            goto L00467400;
        }
        if(ecx = ecx - 1) {
            goto L00467410;
        }
        if(ecx = ecx - 1) {
            goto L00467420;
        }
    } else {
        edi = 0x492688;
        ebx = 0xf;
        goto L0046743d;
L004673d0:
        edi = 0x492688;
        ebx = 0xc;
        goto L0046743d;
L004673e0:
        edi = "%FNT";
        ebx = 0xf;
        goto L0046743d;
L004673f0:
        edi = 0x49998c;
        ebx = 0xf;
        goto L0046743d;
L00467400:
        edi = 0x492688;
        ebx = 0xf;
        goto L0046743d;
L00467410:
        edi = 0x492688;
        ebx = 0xc;
        goto L0046743d;
L00467420:
        edi = 0x4973a0;
        ebx = 0xc;
        goto L0046743d;
    }
    edi = M00481018;
    ebx = M0048101c & 0xff;
L0046743d:
    if(Ac != 0) {
        eax = L00467470(edi, 0, ebx, 0);
        *Ac = eax;
    }
    if(A10 != 0) {
        *A10 = bl;
    }
    esp = ebp - 0xc;
    eax = edi;
    (restore)edi;
    (restore)A10;
    (restore)ebx;
}

/*	Procedure: 0x00467466 - 0x0046746F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467466()
{



}

/*	Procedure: 0x00467470 - 0x00467522
 *	Argument size: 16
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0044EDB0()
 *		L00467390()
 */

L00467470(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;



    esi = 0;
    (save)edi;
    if(Ac != 0 && *Ac != 0) {
        edi = A8;
        ebx = *(edi + 7) & 0xff;
        edi = edi + 0xb8;
        if(!(ebx = ebx - 1)) {
            do {
                (save)edi + 0x14;
                L00428D80(Ac);
                (restore)ecx;
                if(al != 0) {
                    goto L004674aa;
                }
                edi = edi + 0x54;
            } while(ebx = ebx - 1);
            goto L004674b8;
L004674aa:
            esi = edi;
        }
    }
L004674b8:
    if(esi == 0) {
        esi = A8 + 0xb8;
    }
    edx = *(esi + 0xc);
    ecx = edx << 8 & 16711680;
    eax = edx;
    edi = edx;
    ecx = ecx | eax >> 0x18;
    ecx = ecx | edi >> 8 & 65280;
    ecx = ecx | edx << 0x18;
    ebx = *(esi + 0xb) & 0xff;
    ecx = ecx + A8;
    if(!(ebx = ebx - 1)) {
        do {
            if(A10 <= ( *ecx & 0xff)) {
                break;
            }
            ecx = ecx + 0x18;
        } while(ebx = ebx - 1);
    }
    if(A14 != 0) {
        edx = *ecx & 0xff;
        *A14 = edx;
    }
    eax = ecx - A8;
    esp = ebp - 0xc;
    (restore)edi;
}

/*	Procedure: 0x00467523 - 0x0046752F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467523()
{



}

/*	Procedure: 0x00467530 - 0x0046759F
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L004675A0()
 *		L00467910()
 *		L00467A30()
 */

L00467530(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  ebx;



    ebx = A10 - 1;
    (save)esi;
    (save)edi;
    (save)ebp;
    ebp = 0x100;
    if(ebx >= 0x100) {
        do {
            edx = ebx + ebp >> 1;
            eax = (edx << 4) + Ac;
            esi = *eax;
            ecx = esi << 8 & 16711680;
            ecx = ecx | esi >> 0x18;
            ecx = ecx | esi >> 8 & 65280;
            ecx = ecx | esi << 0x18;
            if(A8 == ecx) {
                goto L00467582;
            }
            if(A8 >= ecx) {
                ebp = edx + 1;
            } else {
                ebx = edx - 1;
            }
        } while(ebp <= ebx);
        goto L00467599;
L00467582:
        (restore)ebp;
        (restore)edi;
        (restore)esi;
        return;
    }
L00467599:
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    return 0;
}

/*	Procedure: 0x004675A0 - 0x0046790F
 *	Argument size: 32
 *	Local size: 80
 *	Save regs size: 12
 *	Called by:
 *		L0044A4D0()
 *		L0044A620()
 *		L0044A8D0()
 *		L0044AB00()
 *		L0044EDB0()
 */

L004675A0(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffb0;
	/* unknown */ void  Vffffffb4;
	/* unknown */ void  Vffffffb8;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;
	/* unknown */ void  Vffffffc4;
	/* unknown */ void  Vffffffc8;
	/* unknown */ void  Vffffffcc;
	/* unknown */ void  Vffffffd0;
	/* unknown */ void  Vffffffd4;
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;



    eax = A8;
    ebx = *(eax + 8);
    ecx = ebx << 8 & 16711680;
    edi = ebx;
    edx = ebx;
    ecx = ecx | edi >> 0x18;
    ecx = ecx | edx >> 8 & 65280;
    ecx = ecx | ebx << 0x18;
    Vffffffb8 = ecx;
    esi = A18;
    if(Ac > Vffffffb8) {
        return;
    }
    ecx = A8 + Ac;
    edi = *(ecx + 0x10);
    edx = edi;
    Vffffffe0 = edi;
    eax = edi;
    edi = edi << 0x18;
    eax = eax >> 0x18;
    Vffffffe0 = Vffffffe0 << 8;
    Vffffffe0 = Vffffffe0 & 16711680;
    Vffffffe0 = Vffffffe0 | eax;
    Vffffffe0 = Vffffffe0 | edx >> 8 & 65280;
    Vffffffe0 = Vffffffe0 | edi;
    ebx = *(ecx + 0x14);
    edx = & Vffffffc0;
    eax = ebx;
    *(ebp - 0x5c) = ebx;
    ecx = ebx >> 0x18;
    eax = eax >> 8 & 65280;
    *(ebp - 0x5c) = *(ebp - 0x5c) << 8;
    *(ebp - 0x5c) = *(ebp - 0x5c) & 16711680;
    *(ebp - 0x5c) = *(ebp - 0x5c) | ecx;
    *(ebp - 0x5c) = *(ebp - 0x5c) | eax;
    *(ebp - 0x5c) = *(ebp - 0x5c) | ebx << 0x18;
    *(ebp - 0x5c) = *(ebp - 0x5c) + A8;
    *edx = 0;
    *(edx + 4) = 0;
    Vffffffc4 = A24;
    edx = *(A10 + 8) & 0xff;
    Vffffffc8 = *(A10 + 0xc);
    eax = A14;
    Vffffffbc = *eax;
    *(ebp - 0x58) = *(eax + 4);
    if(esi != 0) {
        Vffffffd4 = *esi;
        Vffffffe8 = *(esi + 4);
        Vffffffd8 = *(esi + 8);
        Vffffffdc = *(esi + 0xc);
        if(Vffffffd4 < 0) {
            Vffffffd4 = 0;
        }
        if(Vffffffe8 < 0) {
            Vffffffe8 = 0;
        }
        ebx = *A10;
        if(Vffffffd8 > ebx) {
            Vffffffd8 = ebx;
        }
        eax = *(A10 + 4);
        if(Vffffffdc > eax) {
            Vffffffdc = eax;
        }
        eax = Vffffffd4;
        if(Vffffffd8 > eax) {
            eax = Vffffffe8;
            if(Vffffffdc > eax) {
                goto L00467901;
            }
        }
        esp = ebp - 0xc;
        return;
    }
    Vffffffe8 = 0;
    Vffffffd4 = Vffffffe8;
    eax = A10;
    Vffffffd8 = *eax;
    Vffffffdc = *(eax + 4);
    goto L00467901;
L004677c7:
    esp = ebp - 0xc;
    return;
    goto L004677d0;
L004678e7:
    while(A20 != 0) {
        eax = Vffffffd8;
        if(Vffffffbc >= eax) {
            break;
        }
        edi = L00428490(A1c, A20, & Vffffffb0);
        A1c = A1c + Vffffffb0;
        eax = A1c;
        A20 = A20 - Vffffffb0;
        if(edi >= 0x100) {
            ebx = L00467530(edi, *(ebp - 0x5c), Vffffffe0);
            if(ebx == 0) {
                ebx = *(ebp - 0x5c) + 0x1a0;
            }
        } else {
            ebx = (edi << 4) + *(ebp - 0x5c);
        }
        if(*(ebx + 0xc) == 0 && edi != 0xa) {
            ebx = *(ebp - 0x5c) + 0x1a0;
        }
        edx = *(ebx + 8) & 0xff;
        Vffffffe4 = *(ebx + 9) & 0xff;
        Vffffffec = edx;
        Vffffffec = Vffffffec + 7;
        Vffffffec = Vffffffec >> 3;
        esi = *(ebx + 4);
        edi = esi << 8 & 16711680;
        eax = esi;
        ecx = esi;
        eax = eax >> 0x18;
        edi = edi | eax;
        edi = edi | ecx >> 8 & 65280;
        edi = edi | esi << 0x18;
        if(edi > Vffffffb8) {
            goto L004677c7;
        }
        eax = Vffffffec;
        eax = Vffffffe4 * Vffffffe4 + edi;
        if(eax > Vffffffb8) {
            goto L004677c7;
        }
L004677d0:
        ecx = *(ebx + 0xa) & 0xff;
        eax = *(ebx + 0xb) & 0xff;
        ecx = ecx + Vffffffbc;
        Vffffffd0 = eax;
        Vffffffd0 = Vffffffd0 + *(ebp - 0x58);
        Vfffffff0 = ecx <= Vffffffd4 ? Vffffffd4 : ecx;
        eax = Vffffffd0 <= Vffffffe8 ? Vffffffe8 : Vffffffd0;
        esi = edx + ecx;
        Vffffffcc = eax;
        if(esi >= Vffffffb4) {
            esi = Vffffffb4;
        }
        edx = Vffffffd0 + Vffffffe4;
        if(edx >= Vffffffdc) {
            edx = Vffffffdc;
        }
        if(Vfffffff0 < esi && Vffffffcc < edx) {
            Vffffffe4 = Vfffffff0;
            Vffffffe4 = Vffffffe4 - ecx;
            ecx = Vffffffcc - Vffffffd0;
            eax = A8 + edi;
            edi = Vffffffc8;
            ecx = Vffffffec * Vffffffec + eax;
            esi = esi - Vfffffff0;
            edi = Vffffffcc * Vffffffcc + *(A10 + 0x18);
            eax = *(ebp - 0x54);
            edx = edx - Vffffffcc;
            if(eax = eax - 8) {
                eax = A10;
                L0046B2C0(1, edi, Vffffffc8, Vfffffff0, ecx, Vffffffec, Vffffffe4, esi, edx, *(eax + 0x1c), *(eax + 0x10), & Vffffffc0, 2);
            } else {
                if(eax = eax - 8) {
                    L0046B5B0(1, edi, Vffffffc8, Vfffffff0, ecx, Vffffffec, Vffffffe4, esi, edx, & Vffffffc0, 2);
                } else {
                    if(!(eax = eax - 0x10)) {
                        L0046B8C0(1, edi, Vffffffc8, Vfffffff0, ecx, Vffffffec, Vffffffe4, esi, edx, & Vffffffc0, 2);
                    }
                }
            }
        }
        eax = *(ebx + 0xc) & 0xff;
        Vffffffbc = Vffffffbc + eax;
    }
    esp = ebp - 0xc;
    return;
L00467901:
    Vffffffb4 = Vffffffd8;
    eax = dl & 0xff;
    *(ebp - 0x54) = eax;
    goto L004678e7;
}

/*	Procedure: 0x00467910 - 0x00467A2F
 *	Argument size: 16
 *	Local size: 12
 *	Save regs size: 12
 *	Called by:
 *		L0044A4D0()
 *		L0044A620()
 *		L0044A8D0()
 *		L0044AB00()
 *		L0044BCD0()
 *		L0044BE90()
 *		L0044EDB0()
 */

L00467910(A8, Ac, A10, A14)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    eax = *(A8 + 8);
    edi = eax << 8 & 16711680;
    edx = eax;
    esi = eax;
    edi = edi | edx >> 0x18;
    edi = edi | esi >> 8 & 65280;
    eax = eax << 0x18;
    ecx = Ac;
    ebx = A10;
    if(ecx > (edi | eax)) {
        return 0;
    }
    edi = A8 + ecx;
    edx = *(edi + 0x10);
    ecx = edx;
    *(ebp - 0x18) = edx;
    esi = edx;
    edx = edx << 0x18;
    esi = esi >> 0x18;
    *(ebp - 0x18) = *(ebp - 0x18) << 8;
    *(ebp - 0x18) = *(ebp - 0x18) & 16711680;
    *(ebp - 0x18) = *(ebp - 0x18) | esi;
    *(ebp - 0x18) = *(ebp - 0x18) | ecx >> 8 & 65280;
    *(ebp - 0x18) = *(ebp - 0x18) | edx;
    eax = *(edi + 0x14);
    esi = eax << 8 & 16711680;
    edx = eax;
    ecx = eax;
    esi = esi | edx >> 0x18;
    esi = esi | ecx >> 8 & 65280;
    esi = (esi | eax << 0x18) + A8;
    *(ebp - 0x10) = 0;
    do {
        edi = L00428490(ebx, A14, ebp - 0x14);
        eax = *(ebp - 0x14);
        ebx = ebx + *(ebp - 0x14);
        A14 = A14 - eax;
        if(edi >= 0x100) {
            eax = L00467530(edi, esi, *(ebp - 0x18));
            if(eax == 0) {
                eax = esi + 0x1a0;
            }
        } else {
            eax = (edi << 4) + esi;
        }
        if(*(eax + 0xc) == 0 && edi != 0xa) {
            eax = esi + 0x1a0;
        }
        *(ebp - 0x10) = *(ebp - 0x10) + ( *(eax + 0xc) & 0xff);
    } while(A14 != 0);
    eax = *(ebp - 0x10);
    esp = ebp - 0xc;
}

/*	Procedure: 0x00467A30 - 0x00467B71
 *	Argument size: 24
 *	Local size: 16
 *	Save regs size: 12
 *	Called by:
 *		L0044A620()
 *		L0044BD30()
 *		L0044BE90()
 */

L00467A30(A8, Ac, A10, A14, A18, A1c)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff0;



    ecx = A8;
    eax = *(ecx + 8);
    edx = eax << 8 & 16711680;
    esi = eax;
    ebx = eax;
    edx = edx | esi >> 0x18;
    edx = edx | ebx >> 8 & 65280;
    eax = eax << 0x18;
    edi = Ac;
    if(edi > (edx | eax)) {
        return 0;
    }
    eax = edi + ecx;
    edx = *(eax + 0x10);
    ebx = edx;
    *(ebp - 0x1c) = edx;
    esi = edx;
    edx = edx << 0x18;
    esi = esi >> 0x18;
    *(ebp - 0x1c) = *(ebp - 0x1c) << 8;
    *(ebp - 0x1c) = *(ebp - 0x1c) & 16711680;
    *(ebp - 0x1c) = *(ebp - 0x1c) | esi;
    *(ebp - 0x1c) = *(ebp - 0x1c) | ebx >> 8 & 65280;
    *(ebp - 0x1c) = *(ebp - 0x1c) | edx;
    eax = *(eax + 0x14);
    esi = eax << 8 & 16711680;
    esi = esi | eax >> 0x18;
    edx = eax;
    eax = eax << 0x18;
    esi = esi | edx >> 8 & 65280 | eax;
    *(ebp - 0x14) = 0;
    Vfffffff0 = A10;
    ebx = A14;
    esi = esi + ecx;
    if(ebx != 0) {
        do {
            edi = L00428490(Vfffffff0, ebx, ebp - 0x18);
            eax = *(ebp - 0x18);
            Vfffffff0 = Vfffffff0 + eax;
            ebx = ebx - eax;
            if(edi >= 0x100) {
                eax = L00467530(edi, esi, *(ebp - 0x1c));
                if(eax == 0) {
                    eax = esi + 0x1a0;
                }
            } else {
                eax = (edi << 4) + esi;
            }
            if(*(eax + 0xc) == 0 && edi != 0xa) {
                eax = esi + 0x1a0;
            }
            ecx = *(eax + 0xc) & 0xff;
            *(ebp - 0x14) = *(ebp - 0x14) + ecx;
            if(*(ebp - 0x14) > A18) {
                goto L00467b4a;
            }
        } while(ebx != 0);
        goto L00467b56;
L00467b4a:
        Vfffffff0 = Vfffffff0 - *(ebp - 0x18);
        *(ebp - 0x14) = *(ebp - 0x14) - ecx;
    }
L00467b56:
    if(A1c != 0) {
        *A1c = *(ebp - 0x14);
    }
    esp = ebp - 0xc;
    return Vfffffff0 - A10;
}

/*	Procedure: 0x00467B72 - 0x00467B7F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467B72()
{



}

/*	Procedure: 0x00467B80 - 0x00467B8C
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044A4D0()
 *		L0044A620()
 *		L0044BF40()
 */

L00467B80(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    return *(A4 + A8) & 0xff;
}

/*	Procedure: 0x00467B8D - 0x00467B8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467B8D()
{



}

/*	Procedure: 0x00467B90 - 0x00467BA1
 *	Argument size: 8
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0044A8D0()
 *		L0044AB00()
 *		L0044BE30()
 */

L00467B90(A4, A8)
/* unknown */ void  A4;
/* unknown */ void  A8;
{



    edx = A4 + A8;
    eax = *(edx + 1) & 0xff;
    return eax + ( *edx & 0xff);
}

/*	Procedure: 0x00467BA2 - 0x00467BAF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467BA2()
{



}

/*	Procedure: 0x00467BB1 - 0x00467BBF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467BB1()
{



}

/*	Procedure: 0x00467BC1 - 0x00467BCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467BC1()
{



}

/*	Procedure: 0x00467BD1 - 0x00467BDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00467BD1()
{



}

/*	Procedure: 0x00468094 - 0x0046809F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00468094()
{



}

/*	Procedure: 0x00468534 - 0x0046853F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00468534()
{



}

/*	Procedure: 0x00468540 - 0x00468828
 *	Argument size: 40
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L0046B8C0()
 */

L00468540(A14, A18, A1c, A20, A24, A28, A2c, A30, A34, A38)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    edi = A38;
    esp = esp - 0x28;
    esi = A28;
    A18 = A2c;
    ecx = A34;
    ebx = edi != 0 ? *ecx : 0;
    edx = edi > 1 ? *(ecx + 4) : 0;
    A14 = A14 + A1c * 4;
    A20 = A20 + (esi >> 3);
    *esp = esi;
    *esp = ~( *esp);
    *esp = *esp & 7;
    if(*esp > A18) {
        *esp = A18;
    }
    A18 = A18 - *esp;
    Vffffffdc = A18;
    Vffffffdc = Vffffffdc >> 3;
    Vfffffffc = A18;
    Vfffffffc = Vfffffffc & 7;
    Vfffffff8 = esi;
    Vfffffff8 = Vfffffff8 & 7;
    if(!(A30 = A30 - 1)) {
        A18 = *esp;
        Vffffffe0 = A18;
        Vfffffff0 = A18;
        Vffffffec = Vfffffff0;
        A18 = Vfffffffc;
        Vffffffe0 = Vffffffe0 & 4;
        Vfffffff0 = Vfffffff0 & 2;
        Vffffffec = Vffffffec & 1;
        Vffffffe4 = A18;
        Vffffffe4 = Vffffffe4 & 4;
        Vffffffe8 = A18;
        Vffffffe8 = Vffffffe8 & 2;
        Vfffffff4 = A18;
        Vfffffff4 = Vfffffff4 & 1;
        do {
            edi = A20;
            esi = A14;
            if(*esp != 0) {
                A18 = *edi & 0xff;
                ecx = Vfffffff8;
                edi = edi + 1;
                A18 = A18 << cl;
                if(Vffffffe0 != 0) {
                    ebp = A18 & 0x80 ? ebx : edx;
                    *esi = ebp;
                    ecx = A18 & 0x40 ? ebx : edx;
                    *(esi + 4) = ecx;
                    esi = esi + 8;
                    ebp = A18 & 0x20 ? ebx : edx;
                    *esi = ebp;
                    ecx = A18 & 0x10 ? ebx : edx;
                    *(esi + 4) = ecx;
                    esi = esi + 8;
                    A18 = A18 << 4;
                }
                if(Vfffffff0 != 0) {
                    ebp = A18 & 0x80 ? ebx : edx;
                    *esi = ebp;
                    ecx = A18 & 0x40 ? ebx : edx;
                    *(esi + 4) = ecx;
                    esi = esi + 8;
                    A18 = A18 * 4;
                }
                if(Vffffffec != 0) {
                    ebp = A18 & 0x80 ? ebx : edx;
                    *esi = ebp;
                    esi = esi + 4;
                }
            }
            if(!(ecx = Vffffffdc - 1)) {
                do {
                    A18 = *edi & 0xff;
                    edi = edi + 1;
                    ebp = A18 & 0x80 ? ebx : edx;
                    *esi = ebp;
                    ebp = A18 & 0x40 ? ebx : edx;
                    *(esi + 4) = ebp;
                    ebp = A18 & 0x20 ? ebx : edx;
                    *(esi + 8) = ebp;
                    ebp = A18 & 0x10 ? ebx : edx;
                    *(esi + 0xc) = ebp;
                    ebp = A18 & 8 ? ebx : edx;
                    *(esi + 0x10) = ebp;
                    ebp = A18 & 4 ? ebx : edx;
                    *(esi + 0x14) = ebp;
                    ebp = A18 & 2 ? ebx : edx;
                    *(esi + 0x18) = ebp;
                    A18 = A18 & 1 ? ebx : edx;
                    *(esi + 0x1c) = A18;
                    esi = esi + 0x20;
                } while(ecx = ecx - 1);
            }
            if(Vfffffffc != 0) {
                Vffffffe4 :: 0;
                if(!(ecx = *edi & 0xff)) {
                    A18 = ecx & 0x80 ? ebx : edx;
                    *esi = A18;
                    edi = ecx & 0x40 ? ebx : edx;
                    *(esi + 4) = edi;
                    esi = esi + 8;
                    A18 = ecx & 0x20 ? ebx : edx;
                    *esi = A18;
                    edi = ecx & 0x10 ? ebx : edx;
                    *(esi + 4) = edi;
                    esi = esi + 8;
                    ecx = ecx << 4;
                }
                if(Vffffffe8 != 0) {
                    A18 = ecx & 0x80 ? ebx : edx;
                    *esi = A18;
                    edi = ecx & 0x40 ? ebx : edx;
                    *(esi + 4) = edi;
                    esi = esi + 8;
                    ecx = ecx * 4;
                }
                if(Vfffffff4 != 0) {
                    A18 = ecx & 0x80 ? ebx : edx;
                    *esi = A18;
                }
            }
            A20 = A20 + A24;
            A14 = A14 + A18;
        } while(A30 = A30 - 1);
    }
    esp = esp + 0x28;
}

/*	Procedure: 0x00468829 - 0x00468830
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00468829()
{



}

/*	Procedure: 0x00468831 - 0x0046883F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00468831()
{



}

/*	Procedure: 0x00468841 - 0x0046884F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00468841()
{



}

/*	Procedure: 0x00468851 - 0x0046885F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00468851()
{



}

/*	Procedure: 0x00468B8B - 0x00468EA8
 *	Argument size: 40
 *	Local size: 20
 *	Save regs size: 16
 */

L00468B8B(A28, A2c, A30, A34, A38, A3c, A40, A44, A48, A4c)
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
/* unknown */ void  A3c;
/* unknown */ void  A40;
/* unknown */ void  A44;
/* unknown */ void  A48;
/* unknown */ void  A4c;
{
	/* unknown */ void  V2;
	/* unknown */ void  V4;
	/* unknown */ void  V6;
	/* unknown */ void  V8;
	/* unknown */ void  Vc;
	/* unknown */ void  ebx;
	/* unknown */ void  V10;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esi = A28;
    ebx = A34;
    eax = A48;
    if(A4c != 0) {
        edx = *eax;
        edi = edx;
        ecx = edx;
        edi = edi >> 0xe & 0x3e0;
        edi = edi | ecx >> 1 & 31744;
        edi = edi | edx >> 0x1b;
        edi = di & 65535;
    } else {
        edi = 0;
    }
    *esp = di;
    if(A4c > 1) {
        ebp = *(eax + 4);
        ecx = ebp;
        edi = ebp;
        ecx = ecx >> 0xe & 0x3e0;
        ecx = ecx | edi >> 1 & 31744;
        ecx = ecx | ebp >> 0x1b;
        ecx = cx & 65535;
    } else {
        ecx = 0;
    }
    V2 = cx;
    if(A4c > 2) {
        edx = *(eax + 8);
        ebp = edx;
        ecx = edx;
        ebp = ebp >> 0xe & 0x3e0;
        ebp = ebp | ecx >> 1 & 31744;
        ebp = ebp | edx >> 0x1b;
        ebp = bp & 65535;
    } else {
        ebp = 0;
    }
    V4 = bp;
    if(A4c > 3) {
        edi = *(eax + 0xc);
        edx = edi;
        ebp = edi;
        edx = edx >> 0xe & 0x3e0;
        ebp = ebp >> 1 & 31744;
        edx = edx | ebp;
        edx = edx | edi >> 0x1b;
        edx = dx & 65535;
    } else {
        edx = 0;
    }
    esi = esi + A30 + A30;
    V6 = dx;
    if(A40 < 3) {
        if(A40 == 1) {
            if(!(A44 = A44 - 1)) {
                ecx = ( !A3c & 3) + ( !A3c & 3);
                ebp = A3c >> 2;
                do {
                    edx = ( *(ebx + ebp) & 0xff) >> cl & 3;
                    eax = *(esp + (dl & 0xff) * 2);
                    *esi = ax;
                    esi = esi + A2c;
                    ebx = ebx + A38;
                } while(A44 = A44 - 1);
            }
            return;
        }
        if(A40 == 2) {
            if(!(A44 = A44 - 1)) {
                eax = A3c;
                Vc = eax;
                Vc = !Vc;
                Vc = Vc & 3;
                Vc = Vc << 1;
                ebp = eax;
                V10 = eax;
                V10 = V10 + 1;
                V10 = !V10;
                V10 = V10 & 3;
                V10 = V10 << 1;
                edi = eax + 1;
                ebp = ebp >> 2;
                edi = edi >> 2;
                do {
                    edx = *(ebx + ebp) & 0xff;
                    ecx = Vc;
                    edx = edx >> cl & 3;
                    ecx = *(esp + (dl & 0xff) * 2);
                    *esi = cx;
                    eax = *(ebx + edi) & 0xff;
                    ecx = V10;
                    eax = eax >> cl & 3;
                    eax = al & 0xff;
                    ecx = *(esp + eax * 2);
                    *(esi + 2) = cx;
                    esi = esi + A2c;
                    ebx = ebx + A38;
                } while(A44 = A44 - 1);
            }
            esp = esp + 0x14;
            return;
        }
        esp = esp + 0x14;
        return;
    }
    V8 = A3c;
    V8 = ~V8;
    V8 = V8 & 3;
    A40 = A40 - V8;
    eax = A40;
    ebx = ebx + (A3c >> 2);
    Vc = eax;
    Vc = Vc >> 2;
    V10 = eax;
    V10 = V10 & 3;
    if(!(A44 = A44 - 1)) {
        do {
            eax = ebx;
            edi = esi;
            if(V8 != 0) {
                edx = *eax & 0xff;
                eax = eax + 1;
                if(V8 != 1) {
                    if(V8 != 2) {
                        ecx = *(esp + (edx >> 4 & 3) * 2);
                        *edi = cx;
                        edi = edi + 2;
                    }
                    ecx = *(esp + (edx >> 2 & 3) * 2);
                    *edi = cx;
                    edi = edi + 2;
                }
                ecx = *(esp + (edx & 3) * 2);
                *edi = cx;
                edi = edi + 2;
            }
            if(!(ebp = Vc - 1)) {
                do {
                    ecx = *eax & 0xff;
                    edx = *(esp + (ecx >> 6) * 2);
                    *edi = dx;
                    edx = *(esp + (ecx >> 4 & 3) * 2);
                    *(edi + 2) = dx;
                    edi = edi + 4;
                    edx = *(esp + (ecx >> 2 & 3) * 2);
                    *edi = dx;
                    edx = *(esp + (ecx & 3) * 2);
                    eax = eax + 1;
                    *(edi + 2) = dx;
                    edi = edi + 4;
                } while(ebp = ebp - 1);
            }
            if(V10 != 0) {
                edx = *eax & 0xff;
                ebp = *(esp + (edx >> 6) * 2);
                *edi = bp;
                if(V10 != 1) {
                    eax = *(esp + (edx >> 4 & 3) * 2);
                    *(edi + 2) = ax;
                    edi = edi + 4;
                    if(V10 != 2) {
                        ecx = *(esp + (edx >> 2 & 3) * 2);
                        *edi = cx;
                    }
                }
            }
            esi = esi + A2c;
            ebx = ebx + A38;
        } while(A44 = A44 - 1);
    }
    esp = esp + 0x14;
}

/*	Procedure: 0x00468EA9 - 0x0046912E
 *	Argument size: 40
 *	Local size: 0
 *	Save regs size: 16
 */

L00468EA9(A14, A18, A1c, A20, A24, A28, A2c, A30, A34, A38)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;
	/* unknown */ void  Vfffffff0;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    ebp = A38;
    esp = esp - 0x1c;
    esi = A14;
    ebx = A20;
    edx = A2c;
    eax = A34;
    edi = ebp != 0 ? *eax : 0;
    *esp = edi;
    ecx = ebp > 1 ? *(eax + 4) : 0;
    Vffffffe8 = ecx;
    edi = ebp > 2 ? *(eax + 8) : 0;
    Vffffffec = edi;
    ecx = ebp > 3 ? *(eax + 0xc) : 0;
    edi = A1c * 4;
    esi = esi + edi;
    Vfffffff0 = ecx;
    if(edx < 3) {
        if(edx == 1) {
            if(!(A30 = A30 - 1)) {
                ecx = ( !A28 & 3) + ( !A28 & 3);
                ebp = A28 >> 2;
                do {
                    edx = ( *(ebx + ebp) & 0xff) >> cl & 3;
                    edx = dl & 0xff;
                    eax = *(esp + edx * 4);
                    *esi = eax;
                    esi = esi + A18;
                    ebx = ebx + A24;
                } while(A30 = A30 - 1);
            }
            esp = esp + 0x1c;
            return;
        }
        if(edx == 2) {
            if(!(A30 = A30 - 1)) {
                Vfffffff8 = A28;
                Vfffffff8 = !Vfffffff8;
                Vfffffff8 = Vfffffff8 & 3;
                Vfffffff8 = Vfffffff8 << 1;
                ebp = eax;
                Vfffffffc = eax;
                Vfffffffc = Vfffffffc + 1;
                Vfffffffc = !Vfffffffc;
                Vfffffffc = Vfffffffc & 3;
                Vfffffffc = Vfffffffc << 1;
                edi = eax + 1;
                ebp = ebp >> 2;
                edi = edi >> 2;
                do {
                    edx = *(ebx + ebp) & 0xff;
                    ecx = Vfffffff8;
                    edx = edx >> cl & 3;
                    edx = dl & 0xff;
                    *esi = *(esp + edx * 4);
                    eax = *(ebx + edi) & 0xff;
                    ecx = Vfffffffc;
                    eax = eax >> cl & 3;
                    eax = al & 0xff;
                    *(esi + 4) = *(esp + eax * 4);
                    esi = esi + A18;
                    ebx = ebx + A24;
                } while(A30 = A30 - 1);
            }
            esp = esp + 0x1c;
            return;
        }
        esp = esp + 0x1c;
        return;
    }
    eax = A28;
    Vfffffff4 = eax;
    Vfffffff4 = ~Vfffffff4;
    Vfffffff4 = Vfffffff4 & 3;
    edx = edx - Vfffffff4;
    ebx = ebx + (A28 >> 2);
    Vfffffff8 = edx;
    Vfffffff8 = Vfffffff8 >> 2;
    Vfffffffc = edx;
    Vfffffffc = Vfffffffc & 3;
    if(!(A30 = A30 - 1)) {
        do {
            edx = ebx;
            edi = esi;
            if(Vfffffff4 != 0) {
                eax = *edx & 0xff;
                edx = edx + 1;
                if(Vfffffff4 != 1) {
                    if(Vfffffff4 != 2) {
                        *edi = *(esp + (eax >> 4 & 3) * 4);
                        edi = edi + 4;
                    }
                    *edi = *(esp + (eax >> 2 & 3) * 4);
                    edi = edi + 4;
                }
                *edi = *(esp + (eax & 3) * 4);
                edi = edi + 4;
            }
            if(!(ebp = Vfffffff8 - 1)) {
                do {
                    ecx = *edx & 0xff;
                    *edi = *(esp + (ecx >> 6) * 4);
                    *(edi + 4) = *(esp + (ecx >> 4 & 3) * 4);
                    edi = edi + 8;
                    *edi = *(esp + (ecx >> 2 & 3) * 4);
                    eax = *(esp + (ecx & 3) * 4);
                    edx = edx + 1;
                    *(edi + 4) = eax;
                    edi = edi + 8;
                } while(ebp = ebp - 1);
            }
            if(Vfffffffc != 0) {
                eax = *edx & 0xff;
                *edi = *(esp + (eax >> 6) * 4);
                if(Vfffffffc != 1) {
                    *(edi + 4) = *(esp + (eax >> 4 & 3) * 4);
                    edi = edi + 8;
                    if(Vfffffffc != 2) {
                        *edi = *(esp + (eax >> 2 & 3) * 4);
                    }
                }
            }
            esi = esi + A18;
            ebx = ebx + A24;
        } while(A30 = A30 - 1);
    }
    esp = esp + 0x1c;
}

/*	Procedure: 0x0046912F - 0x00469130
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046912F()
{



}

/*	Procedure: 0x00469131 - 0x0046913F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469131()
{



}

/*	Procedure: 0x00469141 - 0x0046914F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469141()
{



}

/*	Procedure: 0x00469151 - 0x0046915F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469151()
{



}

/*	Procedure: 0x00469282 - 0x0046928F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469282()
{



}

/*	Procedure: 0x0046955C - 0x00469725
 *	Argument size: 40
 *	Local size: 0
 *	Save regs size: 16
 */

L0046955C(A14, A18, A20, A24, A28, A2c, A30, A34, A38)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffba;
	/* unknown */ void  Vffffffbb;
	/* unknown */ void  Vffffffbc;
	/* unknown */ void  Vffffffc0;



    edx = A38;
    esp = esp - 0x48;
    ebp = A20;
    ebx = A34;
    if(edx < 0x10) {
        ecx = 0;
        if(edx > 0) {
            edx :: 8;
            if(!(A18 = edx - 8)) {
                do {
                    *(esp + ecx * 4 + 8) = *(ebx + ecx * 4);
                    *(esp + ecx * 4 + 0xc) = *(ebx + ecx * 4 + 4);
                    *(esp + ecx * 4 + 0x10) = *(ebx + ecx * 4 + 8);
                    *(esp + ecx * 4 + 0x14) = *(ebx + ecx * 4 + 0xc);
                    *(esp + ecx * 4 + 0x18) = *(ebx + ecx * 4 + 0x10);
                    *(esp + ecx * 4 + 0x1c) = *(ebx + ecx * 4 + 0x14);
                    *(esp + ecx * 4 + 0x20) = *(ebx + ecx * 4 + 0x18);
                    *(esp + ecx * 4 + 0x24) = *(ebx + ecx * 4 + 0x1c);
                    ecx = ecx + 8;
                } while(ecx < A18);
            }
            do {
                *(esp + ecx * 4 + 8) = *(ebx + ecx * 4);
                ecx = ecx + 1;
            } while(ecx < edx);
        }
        edi = edx;
        if(edx < 0x10) {
            if(0x10 - edx > 8) {
                do {
                    *(esp + edi * 4 + 8) = 0;
                    *(esp + edi * 4 + 0xc) = 0;
                    *(esp + edi * 4 + 0x10) = 0;
                    *(esp + edi * 4 + 0x14) = 0;
                    *(esp + edi * 4 + 0x18) = 0;
                    *(esp + edi * 4 + 0x1c) = 0;
                    *(esp + edi * 4 + 0x20) = 0;
                    *(esp + edi * 4 + 0x24) = 0;
                    edi = edi + 8;
                } while(edi < 8);
            }
            do {
                *(esp + edi * 4 + 8) = 0;
                edi = edi + 1;
            } while(edi < 0x10);
        }
        ebx = & Vffffffc0;
    }
    ecx = *(esp + M00000064) * 4;
    ebp = ebp + (A28 >> 1);
    A14 = A14 + ecx;
    Vffffffba = 0;
    A2c = A2c - (Vffffffba & 0xff);
    Vffffffbb = 0;
    A18 = A2c;
    Vffffffbc = A18;
    Vffffffbc = Vffffffbc >> 1;
    if(!(A30 = A30 - 1)) {
        do {
            edi = ebp;
            esi = A14;
            if(Vffffffba != 0) {
                *esi = *(ebx + ( *edi & 0xff & 0xf) * 4);
                edi = edi + 1;
                esi = esi + 4;
            }
            if(!(edx = Vffffffbc - 1)) {
                do {
                    A18 = *edi & 0xff;
                    *esi = *(ebx + (A18 >> 4) * 4);
                    ecx = *(ebx + (A18 & 0xf) * 4);
                    edi = edi + 1;
                    *(esi + 4) = ecx;
                    esi = esi + 8;
                } while(edx = edx - 1);
            }
            if(Vffffffbb != 0) {
                *esi = *(ebx + (( *edi & 0xff) >> 4) * 4);
            }
            A14 = A14 + A18;
            ebp = ebp + A24;
        } while(A30 = A30 - 1);
    }
    esp = esp + 0x48;
}

/*	Procedure: 0x00469726 - 0x0046972F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469726()
{



}

/*	Procedure: 0x00469CD6 - 0x00469CDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469CD6()
{



}

/*	Procedure: 0x00469CE1 - 0x00469CEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469CE1()
{



}

/*	Procedure: 0x00469CF1 - 0x00469CFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469CF1()
{



}

/*	Procedure: 0x00469FC5 - 0x00469FCF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L00469FC5()
{



}

/*	Procedure: 0x0046A2EA - 0x0046A4E8
 *	Argument size: 40
 *	Local size: 0
 *	Save regs size: 16
 */

L0046A2EA(A14, A18, A1c, A20, A24, A28, A2c, A30, A34, A38)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffc00;



    eax = A38;
    esp = esp - 0x404;
    ecx = A34;
    if(eax < 0x100) {
        ebx = 0;
        if(eax > 0) {
            eax :: 8;
            if(!(edx = eax - 8)) {
                do {
                    *(esp + ebx * 4 + 4) = *(ecx + ebx * 4);
                    *(esp + ebx * 4 + 8) = *(ecx + ebx * 4 + 4);
                    *(esp + ebx * 4 + 0xc) = *(ecx + ebx * 4 + 8);
                    *(esp + ebx * 4 + 0x10) = *(ecx + ebx * 4 + 0xc);
                    *(esp + ebx * 4 + 0x14) = *(ecx + ebx * 4 + 0x10);
                    *(esp + ebx * 4 + 0x18) = *(ecx + ebx * 4 + 0x14);
                    *(esp + ebx * 4 + 0x1c) = *(ecx + ebx * 4 + 0x18);
                    *(esp + ebx * 4 + 0x20) = *(ecx + ebx * 4 + 0x1c);
                    ebx = ebx + 8;
                } while(ebx < edx);
            }
            do {
                *(esp + ebx * 4 + 4) = *(ecx + ebx * 4);
                ebx = ebx + 1;
            } while(ebx < eax);
        }
        ebp = eax;
        if(eax < 0x100) {
            if(0x100 - eax > 8) {
                do {
                    *(esp + ebp * 4 + 4) = 0;
                    *(esp + ebp * 4 + 8) = 0;
                    *(esp + ebp * 4 + 0xc) = 0;
                    *(esp + ebp * 4 + 0x10) = 0;
                    *(esp + ebp * 4 + 0x14) = 0;
                    *(esp + ebp * 4 + 0x18) = 0;
                    *(esp + ebp * 4 + 0x1c) = 0;
                    *(esp + ebp * 4 + 0x20) = 0;
                    ebp = ebp + 8;
                } while(ebp < 0xf8);
            }
            do {
                *(esp + ebp * 4 + 4) = 0;
                ebp = ebp + 1;
            } while(ebp < 0x100);
        }
        ecx = & Vfffffc00;
    }
    ebp = A20 + A28;
    ebx = A1c * 4 + A14;
    if(!(A30 = A30 - 1)) {
        *esp = A2c;
        do {
            edx = 0;
            if(A2c > 0) {
                *esp :: 8;
                if(!(esi = A2c - 8)) {
                    do {
                        *(ebx + edx * 4) = *(ecx + ( *(ebp + edx) & 0xff) * 4);
                        *(ebx + edx * 4 + 4) = *(ecx + ( *(ebp + edx + 1) & 0xff) * 4);
                        *(ebx + edx * 4 + 8) = *(ecx + ( *(ebp + edx + 2) & 0xff) * 4);
                        *(ebx + edx * 4 + 0xc) = *(ecx + ( *(ebp + edx + 3) & 0xff) * 4);
                        *(ebx + edx * 4 + 0x10) = *(ecx + ( *(ebp + edx + 4) & 0xff) * 4);
                        *(ebx + edx * 4 + 0x14) = *(ecx + ( *(ebp + edx + 5) & 0xff) * 4);
                        *(ebx + edx * 4 + 0x18) = *(ecx + ( *(ebp + edx + 6) & 0xff) * 4);
                        eax = *(ecx + ( *(ebp + edx + 7) & 0xff) * 4);
                        *(ebx + edx * 4 + 0x1c) = eax;
                        edx = edx + 8;
                    } while(edx < esi);
                }
                do {
                    eax = *(ecx + ( *(ebp + edx) & 0xff) * 4);
                    *(ebx + edx * 4) = eax;
                    edx = edx + 1;
                } while(edx < A2c);
            }
            ebp = ebp + A24;
            ebx = ebx + A18;
        } while(A30 = A30 - 1);
    }
    esp = esp + 0x404;
}

/*	Procedure: 0x0046A4E9 - 0x0046A4F0
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046A4E9()
{



}

/*	Procedure: 0x0046A4F1 - 0x0046A4FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046A4F1()
{



}

/*	Procedure: 0x0046A501 - 0x0046A50F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046A501()
{



}

/*	Procedure: 0x0046A511 - 0x0046A51F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046A511()
{



}

/*	Procedure: 0x0046A66B - 0x0046A737
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 16
 */

L0046A66B(A14, A18, A1c, A20, A24, A28, A2c, A30)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 4;
    ebx = A14 + A1c + A1c;
    edx = A20 + A28 + A28;
    if(!(eax = A30 - 1)) {
        *esp = A2c;
        do {
            esi = 0;
            if(A2c > 0) {
                *esp :: 8;
                if(!(ebp = A2c - 8)) {
                    do {
                        edi = *(edx + esi * 2) & 65535;
                        *(ebx + esi * 2) = di;
                        edi = *(edx + esi * 2 + 2) & 65535;
                        *(ebx + esi * 2 + 2) = di;
                        edi = *(edx + esi * 2 + 4) & 65535;
                        *(ebx + esi * 2 + 4) = di;
                        edi = *(edx + esi * 2 + 6) & 65535;
                        *(ebx + esi * 2 + 6) = di;
                        edi = *(edx + esi * 2 + 8) & 65535;
                        *(ebx + esi * 2 + 8) = di;
                        edi = *(edx + esi * 2 + 0xa) & 65535;
                        *(ebx + esi * 2 + 0xa) = di;
                        edi = *(edx + esi * 2 + 0xc) & 65535;
                        *(ebx + esi * 2 + 0xc) = di;
                        edi = *(edx + esi * 2 + 0xe) & 65535;
                        *(ebx + esi * 2 + 0xe) = di;
                        esi = esi + 8;
                    } while(esi < ebp);
                }
                do {
                    ebp = *(edx + esi * 2) & 65535;
                    *(ebx + esi * 2) = bp;
                    esi = esi + 1;
                } while(esi < A2c);
            }
            ebx = ebx + A18;
            edx = edx + A24;
        } while(eax = eax - 1);
    }
    esp = esp + 4;
}

/*	Procedure: 0x0046A738 - 0x0046AA1E
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 4
 */

L0046A738(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  Vfffffff0;



    (save)esi;
    (save)edi;
    (save)ebp;
    esp = esp - 8;
    *esp = A1c;
    *esp = *esp << 1;
    eax = A14;
    ebx = A10 * 4 + A8;
    *esp = *esp + eax;
    if(!(A24 = A24 - 1)) {
        Vfffffff0 = A20;
        do {
            edx = 0;
            if(A20 > 0) {
                ecx = A20 - 8;
                if(Vfffffff0 > 8) {
                    eax = *esp;
                    do {
                        esi = *eax & 65535;
                        edi = si & 65535;
                        ebp = edi;
                        edi = edi >> 8;
                        ebp = ebp << 8 | edi;
                        esi = bp & 65535;
                        edi = esi;
                        ebp = esi;
                        esi = esi & 0x1f;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        *(ebx + edx * 4) = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c) | *(esi * 4 + 0x49cdac);
                        ebp = *(eax + 2) & 65535;
                        edi = bp & 65535;
                        ebp = edi;
                        edi = edi >> 8;
                        ebp = ebp << 8 | edi;
                        esi = bp & 65535;
                        edi = esi;
                        ebp = esi;
                        esi = esi & 0x1f;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        *(ebx + edx * 4 + 4) = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c) | *(esi * 4 + 0x49cdac);
                        ebp = *(eax + 4) & 65535;
                        edi = bp & 65535;
                        ebp = edi;
                        edi = edi >> 8;
                        ebp = ebp << 8 | edi;
                        esi = bp & 65535;
                        edi = esi;
                        ebp = esi;
                        esi = esi & 0x1f;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        *(ebx + edx * 4 + 8) = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c) | *(esi * 4 + 0x49cdac);
                        ebp = *(eax + 6) & 65535;
                        edi = bp & 65535;
                        ebp = edi;
                        edi = edi >> 8;
                        ebp = ebp << 8 | edi;
                        esi = bp & 65535;
                        edi = esi;
                        ebp = esi;
                        esi = esi & 0x1f;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        *(ebx + edx * 4 + 0xc) = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c) | *(esi * 4 + 0x49cdac);
                        ebp = *(eax + 8) & 65535;
                        edi = bp & 65535;
                        ebp = edi;
                        edi = edi >> 8;
                        ebp = ebp << 8 | edi;
                        esi = bp & 65535;
                        edi = esi;
                        ebp = esi;
                        esi = esi & 0x1f;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        *(ebx + edx * 4 + 0x10) = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c) | *(esi * 4 + 0x49cdac);
                        ebp = *(eax + 0xa) & 65535;
                        edi = bp & 65535;
                        ebp = edi;
                        edi = edi >> 8;
                        ebp = ebp << 8 | edi;
                        esi = bp & 65535;
                        edi = esi;
                        ebp = esi;
                        esi = esi & 0x1f;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        *(ebx + edx * 4 + 0x14) = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c) | *(esi * 4 + 0x49cdac);
                        ebp = *(eax + 0xc) & 65535;
                        edi = bp & 65535;
                        ebp = edi;
                        edi = edi >> 8;
                        ebp = ebp << 8 | edi;
                        esi = bp & 65535;
                        edi = esi;
                        ebp = esi;
                        esi = esi & 0x1f;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        *(ebx + edx * 4 + 0x18) = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c) | *(esi * 4 + 0x49cdac);
                        edi = *(eax + 0xe) & 65535;
                        esi = edi;
                        edi = edi >> 8;
                        esi = esi << 8 | edi;
                        esi = si & 65535;
                        edi = esi;
                        ebp = esi;
                        edi = edi >> 0xa & 0x1f;
                        ebp = ebp >> 5 & 0x1f;
                        edi = *(edi * 4 + 0x49ccac) | *(ebp * 4 + 0x49cd2c);
                        *(ebx + edx * 4 + 0x1c) = edi | *((esi & 0x1f) * 4 + 0x49cdac);
                        edx = edx + 8;
                        eax = eax + 0x10;
                    } while(edx < ecx);
                }
                if(edx < A20) {
                    eax = edx + edx + *esp;
                    do {
                        ecx = *eax & 65535;
                        ebp = ecx;
                        ecx = ecx >> 8;
                        ebp = ebp << 8 | ecx;
                        ebp = bp & 65535;
                        ecx = ebp;
                        esi = ebp;
                        ecx = ecx >> 0xa & 0x1f;
                        esi = esi >> 5 & 0x1f;
                        ecx = *(ecx * 4 + 0x49ccac) | *(esi * 4 + 0x49cd2c);
                        *(ebx + edx * 4) = ecx | *((ebp & 0x1f) * 4 + 0x49cdac);
                        edx = edx + 1;
                        eax = eax + 2;
                    } while(edx < A20);
                }
            }
            *esp = *esp + A18;
            ebx = ebx + Ac;
            eax = *esp;
        } while(A24 = A24 - 1);
    }
    esp = esp + 8;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
}

/*	Procedure: 0x0046AA1F - 0x0046ABC7
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 12
 */

L0046AA1F(A10, A14, A18, A1c, A20, A24, A28, A2c)
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  Vfffffff8;



    (save)ebp;
    esp = esp - 8;
    A20 = A24 + A24 * 2 + A1c;
    A1c = A20;
    A2c = A2c - 1;
    if(!(esi = A10 + A18 * 4)) {
        Vfffffff8 = A28;
        do {
            ebp = 0;
            edx = A1c;
            if(A28 > 0) {
                *esp = A28;
                *esp = *esp - 8;
                if(Vfffffff8 > 8) {
                    do {
                        A20 = *edx & 0xff;
                        ebx = *(edx + 1) & 0xff;
                        ecx = ( *(edx + 2) & 0xff) << 0x18;
                        ebx = ebx << 0x10;
                        *(esi + ebp * 4) = ebx | (al & 0xff) << 8 | ecx;
                        A20 = *(edx + 3) & 0xff;
                        ebx = *(edx + 4) & 0xff;
                        ecx = ( *(edx + 5) & 0xff) << 0x18;
                        ebx = ebx << 0x10;
                        *(esi + ebp * 4 + 4) = ebx | (al & 0xff) << 8 | ecx;
                        A20 = *(edx + 6) & 0xff;
                        ebx = *(edx + 7) & 0xff;
                        ecx = ( *(edx + 8) & 0xff) << 0x18;
                        ebx = ebx << 0x10;
                        *(esi + ebp * 4 + 8) = ebx | (al & 0xff) << 8 | ecx;
                        A20 = *(edx + 9) & 0xff;
                        ebx = *(edx + 0xa) & 0xff;
                        ecx = ( *(edx + 0xb) & 0xff) << 0x18;
                        ebx = ebx << 0x10;
                        *(esi + ebp * 4 + 0xc) = ebx | (al & 0xff) << 8 | ecx;
                        A20 = *(edx + 0xc) & 0xff;
                        ebx = *(edx + 0xd) & 0xff;
                        ecx = ( *(edx + 0xe) & 0xff) << 0x18;
                        ebx = ebx << 0x10;
                        *(esi + ebp * 4 + 0x10) = ebx | (al & 0xff) << 8 | ecx;
                        A20 = *(edx + 0xf) & 0xff;
                        ebx = *(edx + 0x10) & 0xff;
                        ecx = ( *(edx + 0x11) & 0xff) << 0x18;
                        ebx = ebx << 0x10;
                        *(esi + ebp * 4 + 0x14) = ebx | (al & 0xff) << 8 | ecx;
                        A20 = *(edx + 0x12) & 0xff;
                        ebx = *(edx + 0x13) & 0xff;
                        ecx = ( *(edx + 0x14) & 0xff) << 0x18;
                        ebx = ebx << 0x10;
                        *(esi + ebp * 4 + 0x18) = ebx | (al & 0xff) << 8 | ecx;
                        ebx = *(edx + 0x16) & 0xff;
                        A20 = *(edx + 0x15) & 0xff;
                        ecx = *(edx + 0x17) & 0xff;
                        ebx = ebx << 0x10;
                        A20 = A20 << 8;
                        ecx = ecx << 0x18;
                        *(esi + ebp * 4 + 0x1c) = ebx | A20 | ecx;
                        ebp = ebp + 8;
                        edx = edx + 0x18;
                    } while(ebp < *esp);
                }
                do {
                    ebx = *(edx + 1) & 0xff;
                    A20 = *edx & 0xff;
                    ecx = *(edx + 2) & 0xff;
                    ebx = ebx << 0x10;
                    A20 = A20 << 8;
                    ecx = ecx << 0x18;
                    *(esi + ebp * 4) = ebx | A20 | ecx;
                    ebp = ebp + 1;
                    edx = edx + 3;
                } while(ebp < A28);
            }
            esi = esi + A14;
            A1c = A1c + A20;
        } while(A2c = A2c - 1);
    }
    esp = esp + 8;
    (restore)ebp;
}

/*	Procedure: 0x0046ABC8 - 0x0046ABD0
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046ABC8()
{



}

/*	Procedure: 0x0046ABD1 - 0x0046ABDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046ABD1()
{



}

/*	Procedure: 0x0046ABE1 - 0x0046ABEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046ABE1()
{



}

/*	Procedure: 0x0046AD85 - 0x0046AD8F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046AD85()
{



}

/*	Procedure: 0x0046AFD6 - 0x0046AFDF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046AFD6()
{



}

/*	Procedure: 0x0046B1B7 - 0x0046B1BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046B1B7()
{



}

/*	Procedure: 0x0046B2C0 - 0x0046B5AB
 *	Argument size: 52
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L004675A0()
 */

L0046B2C0(A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c, A30, A34, A38)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ecx = A38;
    esp = esp - 0x18;
    edi = A20;
    ebx = A24;
    edx = A34;
    esi = ecx != 0 ? *edx : 0;
    ecx = ecx > 1 ? *(edx + 4) : 0;
    if(!(A8 & 1)) {
        *(ebp - 0x24) = A8;
        *(ebp - 0x24) = *(ebp - 0x24) >> 0x18;
    } else {
        *(ebp - 0x24) = A8 == esi ? 0 : A8 == ecx ? 1 : 2;
    }
    if(A30 > 0x100) {
        A30 = 0x100;
    }
    *(ebp - 0x10) = L00466990(A2c, A30, ecx, 0);
    *(ebp - 0x10) = *(ebp - 0x10) << 8;
    *(ebp - 0x10) = *(ebp - 0x10) | L00466990(A2c, A30, esi, 0);
    eax = A14;
    Ac = Ac + eax;
    if(ebx < 7) {
        if(!(A28 = A28 - 1)) {
            *(ebp - 0x24) = *(ebp - 0x24) & 0xff;
            do {
                esi = 0;
                if(ebx > 0) {
                    do {
                        ecx = esi + edi;
                        edx = ecx >> 3;
                        eax = *(A18 + edx) & 0xff;
                        edx = 7 & ecx;
                        eax = eax >> 7 - edx;
                        cl = 0;
                        ecx = 0;
                        if(0 != *(ebp - 0x24)) {
                            edx = *(ebp - 0x10);
                            ecx = 0;
                            edx = edx >> 0;
                            *(esi + Ac) = dl;
                        }
                        esi = esi + 1;
                    } while(esi < ebx);
                }
                A18 = A18 + A1c;
                eax = A10;
                Ac = Ac + eax;
            } while(A28 = A28 - 1);
        }
        return;
    }
    ecx = edi >> 3;
    *(ebp - 0x18) = edi;
    *(ebp - 0x18) = ~( *(ebp - 0x18));
    *(ebp - 0x18) = *(ebp - 0x18) & 7;
    ebx = ebx - *(ebp - 0x18);
    A18 = A18 + ecx;
    *(ebp - 0x20) = ebx;
    *(ebp - 0x20) = *(ebp - 0x20) >> 3;
    *(ebp - 0x1c) = ebx;
    *(ebp - 0x1c) = *(ebp - 0x1c) & 7;
    if(!(A28 = A28 - 1)) {
        *(ebp - 0x14) = *(ebp - 0x24) & 0xff;
        do {
            eax = A18;
            *(ebp - 0x24) = eax;
            esi = Ac;
            if(*(ebp - 0x18) != 0) {
                eax = *eax & 0xff;
                *(ebp - 0x24) = *(ebp - 0x24) + 1;
                if(!(edx = *(ebp - 0x18) - 1)) {
                    do {
                        edi = eax;
                        ecx = edx;
                        edi = edi >> cl & 1;
                        if(edi != *(ebp - 0x14)) {
                            ebx = *(ebp - 0x10);
                            ecx = edi * 8;
                            ebx = ebx >> cl;
                            *esi = bl;
                        }
                        esi = esi + 1;
                    } while(edx = edx - 1);
                }
            }
            if(!(edi = *(ebp - 0x20) - 1)) {
                do {
                    edx = *( *(ebp - 0x24)) & 0xff;
                    *(ebp - 0x24) = *(ebp - 0x24) + 1;
                    ecx = edx >> 7;
                    if(ecx != *(ebp - 0x14)) {
                        eax = *(ebp - 0x10);
                        ecx = ecx * 8;
                        eax = eax >> cl;
                        *esi = al;
                    }
                    ecx = edx >> 6 & 1;
                    if(ecx != *(ebp - 0x14)) {
                        ebx = *(ebp - 0x10);
                        ecx = ecx * 8;
                        ebx = ebx >> cl;
                        *(esi + 1) = bl;
                    }
                    ecx = edx >> 5 & 1;
                    if(ecx != *(ebp - 0x14)) {
                        eax = *(ebp - 0x10);
                        ecx = ecx * 8;
                        eax = eax >> cl;
                        *(esi + 2) = al;
                    }
                    ecx = edx >> 4 & 1;
                    if(ecx != *(ebp - 0x14)) {
                        ebx = *(ebp - 0x10);
                        ecx = ecx * 8;
                        ebx = ebx >> cl;
                        *(esi + 3) = bl;
                    }
                    ecx = edx >> 3 & 1;
                    if(ecx != *(ebp - 0x14)) {
                        eax = *(ebp - 0x10);
                        ecx = ecx * 8;
                        eax = eax >> cl;
                        *(esi + 4) = al;
                    }
                    ecx = edx >> 2 & 1;
                    if(ecx != *(ebp - 0x14)) {
                        ebx = *(ebp - 0x10);
                        ecx = ecx * 8;
                        ebx = ebx >> cl;
                        *(esi + 5) = bl;
                    }
                    ecx = edx >> 1 & 1;
                    if(ecx != *(ebp - 0x14)) {
                        eax = *(ebp - 0x10);
                        ecx = ecx * 8;
                        eax = eax >> cl;
                        *(esi + 6) = al;
                    }
                    ecx = edx & 1;
                    if(ecx != *(ebp - 0x14)) {
                        ebx = *(ebp - 0x10);
                        ecx = ecx * 8;
                        ebx = ebx >> cl;
                        *(esi + 7) = bl;
                    }
                    esi = esi + 8;
                } while(edi = edi - 1);
            }
            if(*(ebp - 0x1c) != 0) {
                eax = *(ebp - 0x24);
                edi = *(ebp - 0x1c);
                edi :: 0;
                if(!(eax = *eax & 0xff)) {
                    do {
                        ecx = 8 - edi;
                        edx = eax >> cl & 1;
                        if(edx != *(ebp - 0x14)) {
                            ebx = *(ebp - 0x10);
                            ecx = edx * 8;
                            ebx = ebx >> cl;
                            *esi = bl;
                        }
                        esi = esi + 1;
                    } while(edi = edi - 1);
                }
            }
            A18 = A18 + A1c;
            eax = A10;
            Ac = Ac + eax;
        } while(A28 = A28 - 1);
    }
    esp = ebp - 0xc;
}

/*	Procedure: 0x0046B5AC - 0x0046B5AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046B5AC()
{



}

/*	Procedure: 0x0046B5B0 - 0x0046B8B8
 *	Argument size: 44
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L004675A0()
 */

L0046B5B0(A14, A18, A1c, A20, A24, A28, A2c, A30, A34, A38, A3c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
/* unknown */ void  A3c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    edx = A3c;
    esp = esp - 0x10;
    ecx = A14;
    esi = A30;
    ebx = A38;
    Vfffffffc = edx != 0 ? *ebx : 0;
    eax = edx > 1 ? *(ebx + 4) : 0;
    if(!(ecx & 1)) {
        *esp = ecx;
        *esp = *esp >> 0x18;
    } else {
        *esp = ecx == Vfffffffc ? 0 : ecx == eax ? 1 : 2;
    }
    edx = eax;
    ebp = eax;
    edx = edx >> 0xe & 0x3e0;
    edx = edx | ebp >> 1 & 31744;
    edx = edx | eax >> 0x1b;
    eax = Vfffffffc >> 0x1b;
    ecx = Vfffffffc >> 0xe & 0x3e0 | Vfffffffc >> 1 & 31744 | eax;
    edx = (dx & 65535) << 0x10;
    edx = edx | cx & 65535;
    A18 = A18 + A20 + A20;
    if(esi < 7) {
        if(!(A34 = A34 - 1)) {
            Vfffffff8 = *esp & 0xff;
            do {
                edi = 0;
                if(esi > 0) {
                    do {
                        ecx = A2c + edi;
                        ebx = ecx >> 3;
                        ebp = 7 & ecx;
                        ecx = 7 - ebp;
                        eax = ( *(A24 + ebx) & 0xff) >> cl;
                        cl = 0;
                        ecx = 0;
                        if(0 != Vfffffff8) {
                            ecx = 0 << 4;
                            ebx = edx;
                            ebx = ebx >> cl;
                            *(A18 + edi * 2) = bx;
                        }
                        edi = edi + 1;
                    } while(edi < esi);
                }
                A24 = A24 + A28;
                eax = A1c;
                A18 = A18 + eax;
            } while(A34 = A34 - 1);
        }
        esp = esp + 0x10;
        return;
    }
    eax = A2c;
    Vfffffff8 = eax;
    Vfffffff8 = ~Vfffffff8;
    Vfffffff8 = Vfffffff8 & 7;
    esi = esi - Vfffffff8;
    A24 = A24 + (A2c >> 3);
    Vfffffffc = esi;
    Vfffffffc = Vfffffffc >> 3;
    Vfffffff4 = esi;
    Vfffffff4 = Vfffffff4 & 7;
    if(!(A34 = A34 - 1)) {
        ebx = *esp & 0xff;
        do {
            edi = A24;
            esi = A18;
            if(Vfffffff8 != 0) {
                *esp = *edi & 0xff;
                edi = edi + 1;
                if(!(eax = Vfffffff8 - 1)) {
                    do {
                        ebp = *esp;
                        ecx = eax;
                        ebp = ebp >> cl & 1;
                        if(ebp != ebx) {
                            ecx = ebp << 4;
                            ebp = edx >> cl;
                            *esi = bp;
                        }
                        esi = esi + 2;
                    } while(eax = eax - 1);
                }
            }
            *esp = Vfffffffc;
            if(!( *esp = *esp - 1)) {
                do {
                    eax = *edi & 0xff;
                    ecx = eax;
                    edi = edi + 1;
                    ecx = ecx >> 7;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *esi = bp;
                    }
                    ecx = eax >> 6 & 1;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *(esi + 2) = bp;
                    }
                    ecx = eax >> 5 & 1;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *(esi + 4) = bp;
                    }
                    ecx = eax >> 4 & 1;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *(esi + 6) = bp;
                    }
                    ecx = eax >> 3 & 1;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *(esi + 8) = bp;
                    }
                    ecx = eax >> 2 & 1;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *(esi + 0xa) = bp;
                    }
                    ecx = eax >> 1 & 1;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *(esi + 0xc) = bp;
                    }
                    ecx = eax & 1;
                    if(ecx != ebx) {
                        ecx = ecx << 4;
                        ebp = edx >> cl;
                        *(esi + 0xe) = bp;
                    }
                    esi = esi + 0x10;
                } while(*esp = *esp - 1);
            }
            if(Vfffffff4 != 0) {
                eax = *edi & 0xff;
                edi = Vfffffff4;
                if(edi != 0) {
                    do {
                        ecx = 8 - edi;
                        ebp = eax >> cl & 1;
                        if(ebp != ebx) {
                            ecx = ebp << 4;
                            ebp = edx >> cl;
                            *esi = bp;
                        }
                        esi = esi + 2;
                    } while(edi = edi - 1);
                }
            }
            A24 = A24 + A28;
            eax = A1c;
            A18 = A18 + eax;
        } while(A34 = A34 - 1);
    }
    esp = esp + 0x10;
}

/*	Procedure: 0x0046B8B9 - 0x0046B8BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046B8B9()
{



}

/*	Procedure: 0x0046B8C0 - 0x0046C07F
 *	Argument size: 44
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004675A0()
 */

L0046B8C0(A4, A8, Ac, A10, A14, A18, A1c, A20, A24, A28, A2c)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
{
	/* unknown */ void  Vffffffd8;
	/* unknown */ void  Vffffffdc;
	/* unknown */ void  Vffffffe0;
	/* unknown */ void  Vffffffe4;
	/* unknown */ void  Vffffffe8;
	/* unknown */ void  Vffffffec;



    (save)ebp;
    ebp = esp;
    (save)ebx;
    (save)esi;
    (save)edi;
    esp = esp - 0x28;
    edi = *(ebp + 0xc);
    eax = *(ebp + 0x2c);
    esi = *(ebp + 0x30) != 0 ? *eax : 0;
    ebx = esi;
    ecx = *(ebp + 0x30) > 1 ? *(eax + 4) : 0;
    edx = ecx;
    if(!( *(ebp + 8) & 1)) {
        ecx = *(ebp + 8) >> 0x18;
        if(ecx == 0) {
            cl = 0;
        } else {
            if(ecx != 1) {
                goto L0046b940;
            }
            cl = 1;
        }
    } else {
        if(*(ebp + 8) == esi) {
            cl = 0;
        } else {
            if(*(ebp + 8) == ecx) {
                cl = 1;
            } else {
L0046b940:
                eax = L00468540(edi, *(ebp + 0x10), *(ebp + 0x14), *(ebp + 0x18), *(ebp + 0x1c), *(ebp + 0x20), *(ebp + 0x24), *(ebp + 0x28), eax, *(ebp + 0x30));
                esp = ebp - 0xc;
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                (restore)ebp;
                return;
            }
        }
    }
    eax = *(ebp + 0x20) >> 3;
    *(ebp + 0x18) = *(ebp + 0x18) + eax;
    eax = *(ebp + 0x20);
    *(ebp - 0x34) = eax;
    *(ebp - 0x34) = ~( *(ebp - 0x34));
    esi = *(ebp + 0x14) * 4;
    eax = *(ebp + 0x24);
    edi = edi + esi;
    *(ebp - 0x34) = *(ebp - 0x34) & 7;
    if(*(ebp - 0x34) > eax) {
        *(ebp - 0x34) = eax;
    }
    eax = *(ebp - 0x34);
    *(ebp + 0x24) = *(ebp + 0x24) - eax;
    eax = *(ebp + 0x24);
    *(ebp - 0x30) = eax;
    *(ebp - 0x10) = eax;
    eax = *(ebp + 0x20);
    *(ebp - 0x30) = *(ebp - 0x30) >> 3;
    *(ebp - 0x10) = *(ebp - 0x10) & 7;
    *(ebp - 0x2c) = eax;
    *(ebp - 0x2c) = *(ebp - 0x2c) & 7;
    if(cl != 0) {
        if(!( *(ebp + 0x28) = *(ebp + 0x28) - 1)) {
            eax = *(ebp - 0x34);
            *(ebp - 0x18) = eax;
            *(ebp - 0x14) = eax;
            *(ebp - 0x20) = eax;
            eax = *(ebp - 0x10);
            *(ebp - 0x18) = *(ebp - 0x18) & 4;
            *(ebp - 0x14) = *(ebp - 0x14) & 2;
            *(ebp - 0x20) = *(ebp - 0x20) & 1;
            *(ebp - 0x1c) = eax;
            *(ebp - 0x1c) = *(ebp - 0x1c) & 4;
            *(ebp - 0x28) = eax;
            *(ebp - 0x28) = *(ebp - 0x28) & 2;
            *(ebp - 0x24) = eax;
            *(ebp - 0x24) = *(ebp - 0x24) & 1;
            do {
                esi = *(ebp + 0x18);
                eax = edi;
                if(*(ebp - 0x34) != 0) {
                    edx = *esi & 0xff;
                    ecx = *(ebp - 0x2c);
                    esi = esi + 1;
                    edx = edx << cl;
                    if(*(ebp - 0x18) != 0) {
                        if(!(edx & 0x80)) {
                            *eax = ebx;
                        }
                        if(!(edx & 0x40)) {
                            *(eax + 4) = ebx;
                        }
                        if(!(edx & 0x20)) {
                            *(eax + 8) = ebx;
                        }
                        if(!(edx & 0x10)) {
                            *(eax + 0xc) = ebx;
                        }
                        edx = edx << 4;
                        eax = eax + 0x10;
                    }
                    if(*(ebp - 0x14) != 0) {
                        if(!(edx & 0x80)) {
                            *eax = ebx;
                        }
                        if(!(edx & 0x40)) {
                            *(eax + 4) = ebx;
                        }
                        edx = edx * 4;
                        eax = eax + 8;
                    }
                    if(*(ebp - 0x20) != 0) {
                        if(!(edx & 0x80)) {
                            *eax = ebx;
                        }
                        eax = eax + 4;
                    }
                }
                if(!(edx = *(ebp - 0x30) - 1)) {
                    do {
                        ecx = *esi & 0xff;
                        esi = esi + 1;
                        if(!(ecx & 0x80)) {
                            *eax = ebx;
                        }
                        if(!(ecx & 0x40)) {
                            *(eax + 4) = ebx;
                        }
                        if(!(ecx & 0x20)) {
                            *(eax + 8) = ebx;
                        }
                        if(!(ecx & 0x10)) {
                            *(eax + 0xc) = ebx;
                        }
                        if(!(ecx & 8)) {
                            *(eax + 0x10) = ebx;
                        }
                        if(!(ecx & 4)) {
                            *(eax + 0x14) = ebx;
                        }
                        if(!(ecx & 2)) {
                            *(eax + 0x18) = ebx;
                        }
                        if(!(ecx & 1)) {
                            *(eax + 0x1c) = ebx;
                        }
                        eax = eax + 0x20;
                    } while(edx = edx - 1);
                }
                if(*(ebp - 0x10) != 0) {
                    *(ebp - 0x1c) :: 0;
                    if(!(edx = *esi & 0xff)) {
                        if(!(edx & 0x80)) {
                            *eax = ebx;
                        }
                        if(!(edx & 0x40)) {
                            *(eax + 4) = ebx;
                        }
                        if(!(edx & 0x20)) {
                            *(eax + 8) = ebx;
                        }
                        if(!(edx & 0x10)) {
                            *(eax + 0xc) = ebx;
                        }
                        edx = edx << 4;
                        eax = eax + 0x10;
                    }
                    if(*(ebp - 0x28) != 0) {
                        if(!(edx & 0x80)) {
                            *eax = ebx;
                        }
                        if(!(edx & 0x40)) {
                            *(eax + 4) = ebx;
                        }
                        edx = edx * 4;
                        eax = eax + 8;
                    }
                    if(*(ebp - 0x24) != 0 && !(edx & 0x80)) {
                        *eax = ebx;
                    }
                }
                eax = *(ebp + 0x1c);
                *(ebp + 0x18) = *(ebp + 0x18) + eax;
                edi = edi + *(ebp + 0x10);
            } while(*(ebp + 0x28) = *(ebp + 0x28) - 1);
            goto L0046bcee;
L0046bce4:
            while(*(ebp + 0x28) = *(ebp + 0x28) - 1) {
                esi = *(ebp + 0x18);
                ebx = edi;
                if(*(ebp - 0x34) != 0) {
                    eax = *esi & 0xff;
                    ecx = *(ebp - 0x2c);
                    esi = esi + 1;
                    eax = eax << cl;
                    if(*(ebp - 0x18) != 0) {
                        if(!(eax & 0x80)) {
                            *ebx = edx;
                        }
                        if(!(eax & 0x40)) {
                            *(ebx + 4) = edx;
                        }
                        if(!(eax & 0x20)) {
                            *(ebx + 8) = edx;
                        }
                        if(!(eax & 0x10)) {
                            *(ebx + 0xc) = edx;
                        }
                        eax = eax << 4;
                        ebx = ebx + 0x10;
                    }
                    if(*(ebp - 0x14) != 0) {
                        if(!(eax & 0x80)) {
                            *ebx = edx;
                        }
                        if(!(eax & 0x40)) {
                            *(ebx + 4) = edx;
                        }
                        eax = eax * 4;
                        ebx = ebx + 8;
                    }
                    if(*(ebp - 0x20) != 0) {
                        if(!(eax & 0x80)) {
                            *ebx = edx;
                        }
                        ebx = ebx + 4;
                    }
                }
                if(!(eax = *(ebp - 0x30) - 1)) {
                    do {
                        ecx = *esi & 0xff;
                        esi = esi + 1;
                        if(!(ecx & 0x80)) {
                            *ebx = edx;
                        }
                        if(!(ecx & 0x40)) {
                            *(ebx + 4) = edx;
                        }
                        if(!(ecx & 0x20)) {
                            *(ebx + 8) = edx;
                        }
                        if(!(ecx & 0x10)) {
                            *(ebx + 0xc) = edx;
                        }
                        if(!(ecx & 8)) {
                            *(ebx + 0x10) = edx;
                        }
                        if(!(ecx & 4)) {
                            *(ebx + 0x14) = edx;
                        }
                        if(!(ecx & 2)) {
                            *(ebx + 0x18) = edx;
                        }
                        if(!(ecx & 1)) {
                            *(ebx + 0x1c) = edx;
                        }
                        ebx = ebx + 0x20;
                    } while(eax = eax - 1);
                }
                if(*(ebp - 0x10) != 0) {
                    *(ebp - 0x1c) :: 0;
                    if(!(eax = *esi & 0xff)) {
                        if(!(eax & 0x80)) {
                            *ebx = edx;
                        }
                        if(!(eax & 0x40)) {
                            *(ebx + 4) = edx;
                        }
                        if(!(eax & 0x20)) {
                            *(ebx + 8) = edx;
                        }
                        if(!(eax & 0x10)) {
                            *(ebx + 0xc) = edx;
                        }
                        eax = eax << 4;
                        ebx = ebx + 0x10;
                    }
                    if(*(ebp - 0x28) != 0) {
                        if(!(eax & 0x80)) {
                            *ebx = edx;
                        }
                        if(!(eax & 0x40)) {
                            *(ebx + 4) = edx;
                        }
                        eax = eax * 4;
                        ebx = ebx + 8;
                    }
                    if(*(ebp - 0x24) != 0 && !(eax & 0x80)) {
                        *ebx = edx;
                    }
                }
                eax = *(ebp + 0x1c);
                *(ebp + 0x18) = *(ebp + 0x18) + eax;
                edi = edi + *(ebp + 0x10);
            }
        }
L0046bcee:
        esp = ebp - 0xc;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        (restore)ebp;
        return;
    }
    eax = *(ebp - 0x34);
    *(ebp - 0x18) = eax;
    *(ebp - 0x14) = eax;
    *(ebp - 0x20) = eax;
    eax = *(ebp - 0x10);
    *(ebp - 0x18) = *(ebp - 0x18) & 4;
    *(ebp - 0x14) = *(ebp - 0x14) & 2;
    *(ebp - 0x20) = *(ebp - 0x20) & 1;
    *(ebp - 0x1c) = eax;
    *(ebp - 0x1c) = *(ebp - 0x1c) & 4;
    *(ebp - 0x28) = eax;
    *(ebp - 0x28) = *(ebp - 0x28) & 2;
    *(ebp - 0x24) = eax;
    *(ebp - 0x24) = *(ebp - 0x24) & 1;
    goto L0046bce4;
    (save)ebx;
    (save)esi;
    (save)edi;
    (save)ebp;
    edi = A2c;
    esp = esp - 0x1c;
    esi = A4;
    ebx = A14;
    ebp = A20;
    edx = A28;
    Vffffffe4 = edi != 0 ? *edx : 0;
    Vffffffec = edi > 1 ? *(edx + 4) : 0;
    Vffffffe8 = edi > 2 ? *(edx + 8) : 0;
    ecx = edi > 3 ? *(edx + 0xc) : 0;
    if(!(esi & 1)) {
        edx = esi >> 0x18;
    } else {
        dl = esi == Vffffffe4 ? 0 : esi == Vffffffec ? 1 : esi == Vffffffe8 ? 2 : esi == ecx ? 3 : 4;
    }
    *esp = Vffffffe4;
    Vffffffd8 = Vffffffec;
    eax = Vffffffe8;
    A8 = A8 + A10 * 4;
    Vffffffdc = eax;
    Vffffffe0 = ecx;
    if(ebp < 3) {
        if(ebp == 1) {
            if(!(A24 = A24 - 1)) {
                ecx = ( !A1c & 3) + ( !A1c & 3);
                ebp = A1c >> 2;
                edx = dl & 0xff;
L0046be42:
                eax = ( *(ebx + ebp) & 0xff) >> cl & 3;
                eax = al & 0xff;
                if(eax != edx) {
                    edi = *(esp + eax * 4);
                    *A8 = edi;
                }
                eax = Ac;
                A8 = A8 + eax;
                ebx = ebx + A18;
                if(A24 = A24 - 1) {
                    goto L0046be42;
                }
            }
        } else {
            if(ebp == 2 && !(A24 = A24 - 1)) {
                eax = A1c;
                Vffffffe4 = eax;
                esi = Vffffffe4;
                Vffffffe8 = dl & 0xff;
                eax = A1c;
                Vffffffe4 = !Vffffffe4;
                Vffffffe4 = Vffffffe4 & 3;
                Vffffffe4 = Vffffffe4 << 1;
                Vffffffec = eax;
                Vffffffec = Vffffffec + 1;
                Vffffffec = !Vffffffec;
                Vffffffec = Vffffffec & 3;
                Vffffffec = Vffffffec << 1;
                ebp = eax + 1;
                esi = esi >> 2;
                ebp = ebp >> 2;
L0046bec8:
                eax = *(ebx + esi) & 0xff;
                ecx = Vffffffe4;
                eax = eax >> cl & 3;
                eax = al & 0xff;
                if(eax != Vffffffe8) {
                    ecx = *(esp + eax * 4);
                    *A8 = ecx;
                }
                edx = *(ebx + ebp) & 0xff;
                ecx = Vffffffec;
                edx = edx >> cl & 3;
                edx = dl & 0xff;
                if(edx != Vffffffe8) {
                    edi = *(esp + edx * 4);
                    *(A8 + 4) = edi;
                }
                eax = Ac;
                A8 = A8 + eax;
                ebx = ebx + A18;
                if(A24 = A24 - 1) {
                    goto L0046bec8;
                }
            }
        }
        esp = esp + 0x1c;
        (restore)ebp;
        (restore)edi;
        (restore)esi;
        (restore)ebx;
        return;
    }
    eax = A1c;
    Vffffffec = eax;
    Vffffffec = ~Vffffffec;
    Vffffffec = Vffffffec & 3;
    ebp = ebp - Vffffffec;
    ebx = ebx + (A1c >> 2);
    Vffffffe4 = ebp;
    Vffffffe4 = Vffffffe4 >> 2;
    Vffffffe8 = ebp;
    Vffffffe8 = Vffffffe8 & 3;
    if(!(A24 = A24 - 1)) {
        ecx = dl & 0xff;
L0046bf60:
        ebp = ebx;
        edi = A8;
        if(Vffffffec != 0) {
            eax = *ebp & 0xff;
            ebp = ebp + 1;
            if(Vffffffec != 1) {
                if(Vffffffec != 2) {
                    esi = eax >> 4 & 3;
                    if(esi != ecx) {
                        *edi = *(esp + esi * 4);
                    }
                    edi = edi + 4;
                }
                edx = eax >> 2 & 3;
                if(edx != ecx) {
                    *edi = *(esp + edx * 4);
                }
                edi = edi + 4;
            }
            esi = eax & 3;
            if(esi != ecx) {
                *edi = *(esp + esi * 4);
            }
            edi = edi + 4;
        }
        if(!(esi = Vffffffe4 - 1)) {
L0046bfc4:
            edx = *ebp & 0xff;
            eax = edx;
            ebp = ebp + 1;
            eax = eax >> 6;
            if(eax != ecx) {
                *edi = *(esp + eax * 4);
            }
            eax = edx >> 4 & 3;
            if(eax != ecx) {
                *(edi + 4) = *(esp + eax * 4);
            }
            eax = edx >> 2 & 3;
            if(eax != ecx) {
                *(edi + 8) = *(esp + eax * 4);
            }
            eax = edx & 3;
            if(eax != ecx) {
                *(edi + 0xc) = *(esp + eax * 4);
            }
            edi = edi + 0x10;
            if(esi = esi - 1) {
                goto L0046bfc4;
            }
        }
        if(Vffffffe8 != 0) {
            eax = *ebp & 0xff;
            esi = eax >> 6;
            if(esi != ecx) {
                *edi = *(esp + esi * 4);
            }
            if(Vffffffe8 != 1) {
                ebp = eax >> 4 & 3;
                if(ebp != ecx) {
                    *(edi + 4) = *(esp + ebp * 4);
                }
                edi = edi + 8;
                if(Vffffffe8 != 2) {
                    ebp = eax >> 2 & 3;
                    if(ebp != ecx) {
                        *edi = *(esp + ebp * 4);
                    }
                }
            }
        }
        eax = Ac;
        A8 = A8 + eax;
        ebx = ebx + A18;
        if(A24 = A24 - 1) {
            goto L0046bf60;
        }
    }
    esp = esp + 0x1c;
    (restore)ebp;
    (restore)edi;
    (restore)esi;
    (restore)ebx;
}

/*	Procedure: 0x0046C080 - 0x0046C223
 *	Argument size: 44
 *	Local size: 0
 *	Save regs size: 16
 */

L0046C080(A14, A18, A20, A24, A28, A2c, A30, A34, A38, A3c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A20;
/* unknown */ void  A24;
/* unknown */ void  A28;
/* unknown */ void  A2c;
/* unknown */ void  A30;
/* unknown */ void  A34;
/* unknown */ void  A38;
/* unknown */ void  A3c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vffffffba;
	/* unknown */ void  Vffffffbb;
	/* unknown */ void  Vffffffbc;



    edi = A3c;
    esp = esp - 0x48;
    ebp = A14;
    ecx = A24;
    eax = A38;
    dl = 0xff;
    if(edi > 0x10) {
        edi = 0x10;
    }
    ebx = 0;
    if(edi > 0) {
        do {
            esi = *(eax + ebx * 4);
            if(ebp == esi) {
                dl = bl;
            }
            *(esp + ebx * 4 + 8) = esi;
            ebx = ebx + 1;
        } while(ebx < edi);
    }
    eax = edi;
    if(edi < 0x10) {
        if(0x10 - edi > 8) {
            do {
                *(esp + eax * 4 + 8) = 0;
                *(esp + eax * 4 + 0xc) = 0;
                *(esp + eax * 4 + 0x10) = 0;
                *(esp + eax * 4 + 0x14) = 0;
                *(esp + eax * 4 + 0x18) = 0;
                *(esp + eax * 4 + 0x1c) = 0;
                *(esp + eax * 4 + 0x20) = 0;
                *(esp + eax * 4 + 0x24) = 0;
                eax = eax + 8;
            } while(eax < 8);
        }
        do {
            *(esp + eax * 4 + 8) = 0;
            eax = eax + 1;
        } while(eax < 0x10);
    }
    if(!(ebp & 1)) {
        edx = ebp >> 0x18;
    }
    A18 = A18 + A20 * 4;
    ecx = ecx + (A2c >> 1);
    Vffffffba = 0;
    A30 = A30 - (Vffffffba & 0xff);
    Vffffffbb = 0;
    eax = A30;
    Vffffffbc = eax;
    Vffffffbc = Vffffffbc >> 1;
    if(!(A34 = A34 - 1)) {
        edx = dl & 0xff;
        do {
            edi = ecx;
            esi = A18;
            if(Vffffffba != 0) {
                eax = *edi & 0xff & 0xf;
                edi = edi + 1;
                if(eax != edx) {
                    *esi = *(esp + eax * 4 + 8);
                }
                esi = esi + 4;
            }
            if(!(ebx = Vffffffbc - 1)) {
                do {
                    eax = *edi & 0xff;
                    ebp = eax;
                    edi = edi + 1;
                    ebp = ebp >> 4;
                    if(ebp != edx) {
                        *esi = *(esp + ebp * 4 + 8);
                    }
                    ebp = eax & 0xf;
                    if(ebp != edx) {
                        *(esi + 4) = *(esp + ebp * 4 + 8);
                    }
                    esi = esi + 8;
                } while(ebx = ebx - 1);
            }
            if(Vffffffbb != 0) {
                ebx = ( *edi & 0xff) >> 4;
                if(ebx != edx) {
                    *esi = *(esp + ebx * 4 + 8);
                }
            }
            eax = *(esp + M00000064);
            A18 = A18 + eax;
            ecx = ecx + A28;
        } while(A34 = A34 - 1);
    }
    esp = esp + 0x48;
}

/*	Procedure: 0x0046C224 - 0x0046C22F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C224()
{



}

/*	Procedure: 0x0046C574 - 0x0046C57F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C574()
{



}

/*	Procedure: 0x0046C603 - 0x0046C60F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C603()
{



}

/*	Procedure: 0x0046C673 - 0x0046C67F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C673()
{



}

/*	Procedure: 0x0046C6A6 - 0x0046C6AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C6A6()
{



}

/*	Procedure: 0x0046C6B0 - 0x0046C788
 *	Argument size: 20
 *	Local size: 4
 *	Save regs size: 12
 *	Called by:
 *		L0046C789()
 */

L0046C6B0(A8, Ac, A10, A18)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A18;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    (save)A8;
    (save)-2;
    (save)0x46c680;
    (save) *fs:0x0];
    for(*fs:0x0] = esp; 1; *(A10 + 0x9c) = edi) {
        A10 = A8;
        if(*(A10 + 0xc) == -1) {
            break;
        }
        ecx = *(A10 + 0xc);
        if(ecx == A10) {
            break;
        }
        A10 = A8;
        esi = *(A10 + 0xc) * 4 + *(A10 + 0xc) * 4 * 2 + *(A10 + 8);
        ebx = *esi;
        *(ebp - 0x10) = *(esi + 4) != 0 ? 0 : *(esi + 8);
        A18 = ebx;
        *(A8 + 0xc) = ebx;
        if(*(ebp - 0x10) == 0) {
            continue;
        }
        if(*(A8 + 0xc) == -1) {
            A10 = Ac;
            ebx = *(A10 + 0xa4);
            esi = *(A10 + 0xa0);
            edi = *(A10 + 0x9c);
        }
        (save)ebp;
        A10 = *(ebp - 0x10);
        ebp = A8;
        ebp = & A10;
        *A10();
        (restore)ebp;
        if(*(A8 + 0xc) != -1) {
            continue;
        }
        A10 = Ac;
        *(A10 + 0xa4) = ebx;
        *(A10 + 0xa0) = esi;
    }
    (restore) *fs:0x0];
    (restore)ecx;
}

/*	Procedure: 0x0046C789 - 0x0046C9A1
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 12
 */

L0046C789(A8, Ac, A10)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
{
	/* unknown */ void  * ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    esp = esp - 0x20;
    if(!( *(A8 + 4) & 6)) {
        L0046C6B0(Ac, A10, -1);
        return 1;
    }
    *(ebp - 0x14) = A8;
    *(ebp - 0x10) = A10;
    if(!( *(A8 + 4) & 0x12)) {
        ecx = *(L0046D4D0(1) + 0x1cc);
        *(ebp - 0x24) = ecx;
        if(ecx != 0) {
            ebx = *(A10 + 0xb4);
            goto L0046c859;
L0046c80e:
            (save)ebx;
            (save)esi;
            (save)edi;
            (save)0;
            (save)A8;
            (save)M0046c824;
            (save)Ac;
            L0046D52A();
            (restore)edi;
            (restore)esi;
            (restore)ebx;
            (save)ebp;
            eax = A10;
            ebx = *(eax + 0xa4);
            esi = *(eax + 0xa0);
            edi = *(eax + 0x9c);
            ecx = *(ebp - 0x24);
            ebp = *(eax + 0xb4);
            *ecx( *A8, ebp - 0x14);
            (restore)ebp;
            goto L0046c872;
L0046c859:
            while(1) {
                if(IsBadReadPtr(ebx, 8) != 0) {
                    goto L0046c872;
                }
                esi = *ebx;
                if(esi == *(Ac + 0x10)) {
                    goto L0046c872;
                }
                edi = *(ebx + 4);
                if(L00423570(edi) != 0) {
                    goto L0046c80e;
                }
                ebx = *ebx;
            }
        }
    }
L0046c872:
    *(Ac - 4) = ebp - 0x14;
    eax = Ac;
    *(ebp - 0x2c) = *(eax + 0xc);
    *(ebp - 0x28) = *(eax + 8);
    goto L0046c98b;
L0046c8fe:
    esp = ebp - 0xc;
    return 0;
L0046c98b:
    while(*(ebp - 0x2c) != -1) {
        ecx = *(ebp - 0x2c) + *(ebp - 0x2c) * 2;
        eax = *(ebp - 0x28);
        if(*(eax + ecx * 4 + 4) != 0) {
            *(ebp - 0x1c) = *(eax + ( *(ebp - 0x2c) + *(ebp - 0x2c) * 2) * 4 + 4);
            *(ebp - 0x18) = *(eax + ( *(ebp - 0x2c) + *(ebp - 0x2c) * 2) * 4 + 8);
            eax = A10;
            ebx = *(eax + 0xa4);
            esi = *(eax + 0xa0);
            edi = *(eax + 0x9c);
            eax = *(ebp - 0x1c);
            ebp = Ac;
            ebp = & A10;
            eax = *eax(ebp);
            (restore)ebp;
            *(ebp - 0x20) = eax;
            eax = A10;
            *(eax + 0xa4) = ebx;
            *(eax + 0xa0) = esi;
            *(eax + 0x9c) = edi;
            if(*(ebp - 0x20) <= -1) {
                goto L0046c8fe;
            }
            if(*(ebp - 0x20) >= 1) {
                (save)ebx;
                (save)esi;
                (save)edi;
                (save)0;
                (save)A8;
                (save)M0046c924;
                (save)Ac;
                L0046D52A();
                (restore)edi;
                (restore)esi;
                (restore)ebx;
                L0046C6B0(Ac, A10, *(ebp - 0x2c));
                eax = *(ebp - 0x28);
                ecx = *(eax + ( *(ebp - 0x2c) + *(ebp - 0x2c) * 2) * 4);
                *(Ac + 0xc) = ecx;
                eax = A10;
                ebx = *(eax + 0xa4);
                esi = *(eax + 0xa0);
                edi = *(eax + 0x9c);
                eax = *(ebp - 0x18);
                ebp = Ac;
                ebp = & A10;
                *eax();
                asm("int3");
            }
        }
        *(ebp - 0x28) = *(Ac + 8);
        ecx = *(ebp - 0x2c);
        *(ebp - 0x2c) = ecx + ecx * 2;
        eax = *(ebp - 0x28);
        *(ebp - 0x2c) = *(eax + *(ebp - 0x2c) * 4);
    }
    esp = ebp - 0xc;
    return 1;
}

/*	Procedure: 0x0046C9A2 - 0x0046C9AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C9A2()
{



}

/*	Procedure: 0x0046C9C1 - 0x0046C9CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C9C1()
{



}

/*	Procedure: 0x0046C9FC - 0x0046C9FF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046C9FC()
{



}

/*	Procedure: 0x0046CA00 - 0x0046CA36
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		__entry_point__()
 */

L0046CA00(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  esi;



    if(!( *( *A8 + 4) & 0x12)) {
        esi = *(L0046D4D0(1) + 0x1cc);
        if(esi != 0) {
            *esi( *( *A8), A8);
        }
    }
    return 0;
}

/*	Procedure: 0x0046CA37 - 0x0046CA3F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046CA37()
{



}

/*	Procedure: 0x0046CA40 - 0x0046CA9F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		__entry_point__()
 */

L0046CA40()
{
	/* unknown */ void  * ebx;



    (save)esi;
    if(M004a1088 != 0) {
        esp = ebp - 8;
        (restore)esi;
        return 1;
    }
    esi = 0;
    M004a1088 = 1;
    ebx = 4853928;
    do {
        InitializeCriticalSection(ebx);
        esi = esi + 1;
        ebx = ebx + 0x18;
    } while(esi < 6);
    if(L0046D4A0() == 0) {
        esp = ebp - 8;
        (restore)esi;
        return 0;
    }
    esp = ebp - 8;
    (restore)esi;
    return 1;
}

/*	Procedure: 0x0046CAA0 - 0x0046CAD1
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0046D310()
 */

L0046CAA0(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  ebx;



    esp = esp - 0x18;
    *(ebp - 8) = esp;
    ebx = L0042E310(A8);
    goto L0046caca;
    ebx = 0;
    if(*(ebp - 0x14) != 0) {
        ecx = *(ebp - 0x1c);
        *(ebp - 0x14)(-1);
    }
    esp = *(ebp - 8);
L0046caca:
    esp = ebp - 4;
    return ebx;
}

/*	Procedure: 0x0046CAD2 - 0x0046CADF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046CAD2()
{



}

/*	Procedure: 0x0046CAE0 - 0x0046CAEB
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		__entry_point__()
 *		L0046CAF0()
 */

L0046CAE0()
{



    return L0042E710();
}

/*	Procedure: 0x0046CAEC - 0x0046CAEF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046CAEC()
{



}

/*	Procedure: 0x0046CAF0 - 0x0046CAFB
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		__entry_point__()
 *		L0046D4D0()
 */

L0046CAF0()
{



    return L0046CAE0();
}

/*	Procedure: 0x0046CAFC - 0x0046CAFF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046CAFC()
{



}

/*	Procedure: 0x0046CB00 - 0x0046CF50
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0046D150()
 */

L0046CB00(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{
	/* unknown */ void  ebx;
	/* unknown */ void  esi;
	/* unknown */ void  edi;



    ebx = A8;
    esp = esp - 0x44c;
    if(ebx == 0) {
        return;
    }
    L00434150(ebp + -1068, 0x20);
    edx = *ebx & 65535;
    edi = edx << 8;
    edx = edx >> 8;
    ecx = *(ebx + 2) & 65535;
    edi = edi | edx;
    *(ebp + -1072) = ecx;
    *(ebp + -1072) = *(ebp + -1072) << 8;
    *(ebp + -1072) = *(ebp + -1072) | ecx >> 8;
    edi = di & 65535;
    eax = *(ebp + -1072) & 65535;
    *(ebp + -1072) = eax;
    if(edi == 0 || eax == 0 || edi > 16384 || eax > 16384) {
        esp = ebp - 0xc;
        return;
    }
    *(ebp + -1068) = edi;
    eax = *(ebp + -1072);
    *(ebp + -1108) = edi;
    *(ebp + -1112) = eax;
    *(ebp + -1064) = *(ebp + -1112);
    eax = *(ebx + 5) & 0xff;
    *(ebp + -1104) = eax;
    eax = *(ebp + -1104) - 1;
    if(eax > 0x17) {
        goto L0046cbf2;
    }
    switch(eax) {
        case 0:
L0046cbbf:
            edx = (edi + 0x1f & -32) >> 3;
            goto L0046cc00;
        case 1:
            edx = (edi + 0xf & -16) >> 2;
            goto L0046cc00;
        case 2:
L0046cbf2:
            esp = ebp - 0xc;
            return;
        case 3:
            edx = (edi + 7 & -8) >> 1;
            goto L0046cc00;
        case 4:
            goto L0046cbf2;
        case 5:
            goto L0046cbf2;
        case 6:
            goto L0046cbf2;
        case 7:
            edx = edi + 3 & -4;
            goto L0046cc00;
        case 8:
            goto L0046cbf2;
        case 9:
            goto L0046cbf2;
        case 0xa:
            goto L0046cbf2;
        case 0xb:
            goto L0046cbf2;
        case 0xc:
            goto L0046cbf2;
        case 0xd:
            goto L0046cbf2;
        case 0xe:
            goto L0046cbf2;
        case 0xf:
            goto L0046cbf2;
        case 0x10:
            goto L0046cbf2;
        case 0x11:
            goto L0046cbf2;
        case 0x12:
            goto L0046cbf2;
        case 0x13:
            goto L0046cbf2;
        case 0x14:
            goto L0046cbf2;
        case 0x15:
            goto L0046cbf2;
        case 0x16:
            goto L0046cbf2;
        case 0x17:
            edx = edi + edi * 2 + 3 & -4;
            goto L0046cc00;
    }
    goto L0046cbbf;
    *(ebp + -1060) = *(ebp + -1104);
    *(ebp + -1056) = edx;
    eax = *(ebx + 4) & 0xff;
    esi = (eax & 0x1f) - 2;
    *(ebp + -1100) = eax;
    if(esi > 6) {
        goto L0046cc50;
    }
    goto ( *(esi * 4 + 0x47a7ec));
    esi = (edi + 0xf & -16) >> 2;
    goto L0046cc52;
    esi = (edi + 7 & -8) >> 1;
    goto L0046cc52;
    esi = edi + 3 & -4;
    goto L0046cc52;
    esi = 0;
    ecx = ( *(ebx + 6) & 0xff) + 1;
    if(*(ebp + -1104) <= 8 || *(ebp + -1100) & 1) {
        goto L0046cc70;
    }
    ecx = 0;
    eax = 0;
    *(ebp + -1096) = *(ebp + -1072) * *(ebp + -1072);
    0;
    eax = edx;
    *(ebp + -1092) = *(ebp + -1072) * *(ebp + -1072);
    *(ebp + -1092) = *(ebp + -1092) + *(ebp + -1096);
    eax = A10;
    if(*(ebp + -1092) <= eax) {
        goto L0046ccc0;
    }
    esp = ebp - 0xc;
    return;
    esi = *(ebx + 8);
    eax = esi << 8 & 16711680;
    eax = eax | esi >> 0x18;
    eax = eax | esi >> 8 & 65280;
    eax = eax | esi << 0x18;
    if(eax <= A10) {
        goto L0046ccf3;
    }
    esp = ebp - 0xc;
    return;
    if(eax + *(ebp + -1092) <= A10) {
        goto L0046cd08;
    }
    esp = ebp - 0xc;
    return;
    esi = Ac + eax;
    *(ebp + -1052) = 0;
    *(ebp + -1040) = esi;
    *(ebp + -1044) = esi + *(ebp + -1096);
    A1c & 1048576;
    if((ebx = *(ebx + 7) & 0xff) || *(ebp + -1052) != 2) {
        goto L0046cd74;
    }
    eax = *(ebp + -1040);
    if(*eax != -256 || *(eax + 4) != 0) {
        goto L0046cd74;
    }
    ecx = ebp + -1036;
    *(ebp + -1100) = *(ebp + -1100) | 1;
    bl = 0;
    *(ebp + -1032) = A24;
    *(ebp + -1040) = ecx;
    goto L0046ce8a;
    if(A1c & 131072) {
        goto L0046cdb0;
    }
    L00466b40( *(ebp + -1040), *(ebp + -1052), ebp + -1036);
    *(ebp + -1040) = ebp + -1036;
    goto L0046ce8a;
    if(A1c & 65536) {
        goto L0046cde0;
    }
    L00466c10( *(ebp + -1040), *(ebp + -1052), ebp + -1036);
    goto L0046ce7e;
    if(A1c & 262144) {
        goto L0046ce30;
    }
    if(A20 != -256) {
        goto L0046ce10;
    }
    L00466c10( *(ebp + -1040), *(ebp + -1052), ebp + -1036);
    goto L0046ce7e;
    L00466c90(A20, *(ebp + -1040), *(ebp + -1052), ebp + -1036);
    goto L0046ce7e;
    if(A1c & 524288) {
        goto L0046ce8a;
    }
    if(A20 != -256) {
        goto L0046ce60;
    }
    L00466c10( *(ebp + -1040), *(ebp + -1052), ebp + -1036);
    goto L0046ce7e;
    L00466d50(A20, *(ebp + -1040), *(ebp + -1052), ebp + -1036);
    *(ebp + -1040) = ebp + -1036;
    eax = A18;
    edx = *(eax + 4);
    ecx = *eax;
    *(ebp + -1088) = ecx;
    *(ebp + -1084) = edx;
    *(ebp + -1080) = *(ebp + -1088) + edi;
    edx = edx + *(ebp + -1072);
    ecx = ebp + -1088;
    *(ebp + -1076) = edx;
    L0044B8F0(ecx, ecx, A1c & 65535, eax);
    if(*(ebp + -1100) & 1) {
        goto L0046cf20;
    }
    if(*(ebp + -1104) > 8) {
        goto L0046cef0;
    }
    ecx = (bl & 0xff) << 0x18 | 1;
    goto L0046cef2;
    ecx = *esi;
    eax = ebp + -1088;
    (save)0;
    L0044B2E0(A14, eax, ebp + -1068, 0, *(ebp + -1108), *(ebp + -1112), ecx);
    goto L0046cf49;
    ecx = ebp + -1068;
    (save)0;
    eax = L0044B0C0(A14, ebp + -1088, ecx, 0, *(ebp + -1108), *(ebp + -1112));
    esp = ebp - 0xc;
}

/*	Procedure: 0x0046CF60 - 0x0046D0B9
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 16
 *	Called by:
 *		L0046D150()
 */

L0046CF60(A14, A18, A1c)
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
{
	/* unknown */ void  ebx;
	/* unknown */ void  ebp;
	/* unknown */ void  esi;
	/* unknown */ void  edi;
	/* unknown */ void  Vfffffff4;
	/* unknown */ void  Vfffffff8;
	/* unknown */ void  Vfffffffc;



    eax = A18;
    esp = esp - 0x10;
    edx = A1c;
    if(eax >= 8) {
        ecx = A14;
        edi = *ecx;
        ebp = edi << 8 & 16711680;
        esi = edi;
        ebx = edi;
        ebp = ebp | esi >> 0x18;
        ebp = ebp | ebx >> 8 & 65280;
        if((ebp | edi << 0x18) == 625560398) {
            ebp = *(ecx + 4) & 65535;
            esi = ebp << 8;
            if((esi | ebp >> 8) == 1) {
                ebx = *(ecx + 7) & 0xff;
                Vfffffff4 = ebx;
                if(eax >= Vfffffff4 * 4 + Vfffffff4 * 4 * 2 + 8 && edx != 0) {
                    Vfffffffc = *(edx + 8);
                    Vfffffffc = Vfffffffc - *edx;
                    *esp = *(edx + 0xc);
                    *esp = *esp - *(edx + 4);
                    if(Vfffffffc > 0 && *esp > 0) {
                        eax = 0;
                        Vfffffff4 = Vfffffff4 - 1;
                        Vfffffff8 = 0;
                        esi = 2147483647;
                        ebp = 2147483647;
                        if(!(edi = ecx + 8)) {
                            do {
                                ecx = *edi & 65535;
                                edx = ecx;
                                ecx = ecx >> 8;
                                edx = edx << 8 | ecx;
                                edx = dx & 65535;
                                ebx = Vfffffffc - edx;
                                edx = *(edi + 2) & 65535;
                                ecx = edx;
                                edx = edx >> 8;
                                ecx = ecx << 8 | edx;
                                ecx = cx & 65535;
                                edx = *esp - ecx;
                                ecx = edx + ebx;
                                if(ecx < 0) {
                                    ecx = ~ecx;
                                }
                                if(ebx >= 0 && edx >= 0) {
                                    if(ecx == 0) {
                                        goto L0046d076;
                                    }
                                    if(ecx < ebp) {
                                        ebp = ecx;
                                        eax = edi;
                                    }
                                }
                                if(ecx < esi) {
                                    esi = ecx;
                                    Vfffffff8 = edi;
                                }
                                edi = edi + 0xc;
                            } while(Vfffffff4 = Vfffffff4 - 1);
                            goto L0046d09c;
L0046d076:
                            eax = edi;
                        }
L0046d09c:
                        if(eax != 0) {
                            goto L0046d0a8;
                        }
                        eax = Vfffffff8;
                        if(eax != 0) {
L0046d0a8:
                            esp = esp + 0x10;
                            return;
                        }
                    }
                }
            }
        }
    }
    esp = esp + 0x10;
    return 0;
}

/*	Procedure: 0x0046D0BA - 0x0046D0BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D0BA()
{



}

/*	Procedure: 0x0046D0C0 - 0x0046D149
 *	Argument size: 12
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0046D150()
 */

L0046D0C0(A4, A8, Ac)
/* unknown */ void  A4;
/* unknown */ void  A8;
/* unknown */ void  Ac;
{



    ecx = A8;
    (save)A4;
    (save)esi;
    (save)ebp;
    eax = Ac;
    if(ecx >= 8) {
        edx = *A4;
        ebp = edx << 8 & 16711680;
        ebp = ebp | edx >> 0x18;
        ebp = ebp | edx >> 8 & 65280;
        if((ebp | edx << 0x18) == 625560398) {
            esi = *(A4 + 4) & 65535;
            edx = esi << 8;
            if((edx | esi >> 8) == 1) {
                edx = *(A4 + 7) & 0xff;
                if(ecx >= edx * 4 + edx * 4 * 2 + 8 && eax < edx) {
                    ecx = A4 + 8;
                    eax = eax * 4 + eax * 4 * 2 + ecx;
                    (restore)ebp;
                    (restore)esi;
                    (restore)A4;
                    return;
                }
            }
        }
    }
    (restore)ebp;
    (restore)esi;
    (restore)A4;
    return 0;
}

/*	Procedure: 0x0046D14A - 0x0046D14F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D14A()
{



}

/*	Procedure: 0x0046D150 - 0x0046D1B2
 *	Argument size: 32
 *	Local size: 0
 *	Save regs size: 12
 *	Called by:
 *		L0044CB90()
 *		L0044D7C0()
 */

L0046D150(A8, Ac, A10, A14, A18, A1c, A20, A24)
/* unknown */ void  A8;
/* unknown */ void  Ac;
/* unknown */ void  A10;
/* unknown */ void  A14;
/* unknown */ void  A18;
/* unknown */ void  A1c;
/* unknown */ void  A20;
/* unknown */ void  A24;
{



    if(A14 == 0 || A18 == 0) {
        return;
    }
    if(A10 == -1) {
        eax = L0046CF60(A8, Ac, A18);
    } else {
        L0046D0C0(A8, Ac, A10);
    }
    eax = L0046CB00(eax, A8, Ac, A14, A18, A1c, A20, A24);
    esp = ebp - 0xc;
}

/*	Procedure: 0x0046D1B3 - 0x0046D1BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D1B3()
{



}

/*	Procedure: 0x0046D236 - 0x0046D23F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D236()
{



}

/*	Procedure: 0x0046D240 - 0x0046D252
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0046D260()
 *		L0046D280()
 */

L0046D240()
{



    (fsave)M0049cf68;
    asm("fxch");
    asm("fprem");
    asm("fstsw ax");
    asm("sahf");
    asm("jpe 0x46d248");
    st1 = ((frestore));
}

/*	Procedure: 0x0046D253 - 0x0046D25F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D253()
{



}

/*	Procedure: 0x0046D260 - 0x0046D27E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004660C0()
 */

L0046D260(A8)
/* unknown */ void  A8;
{



    (fsave)A8;
    (fsave)st0;
    asm("fsin");
    asm("fnstsw ax");
    if(!(ax & 0x400)) {
        eax = L0046D240();
        asm("fsin");
    }
    st1 = ((frestore));
}

/*	Procedure: 0x0046D27F - 0x0046D27F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D27F()
{



}

/*	Procedure: 0x0046D280 - 0x0046D29E
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004660C0()
 */

L0046D280(A8)
/* unknown */ void  A8;
{



    (fsave)A8;
    (fsave)st0;
    asm("fcos");
    asm("fnstsw ax");
    if(!(ax & 0x400)) {
        eax = L0046D240();
        asm("fcos");
    }
    st1 = ((frestore));
}

/*	Procedure: 0x0046D29F - 0x0046D29F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D29F()
{



}

/*	Procedure: 0x0046D2A0 - 0x0046D2A8
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004660C0()
 */

L0046D2A0(A4)
/* unknown */ void  A4;
{



    (fsave)A4;
    (fsave)1;
    asm("fpatan");
}

/*	Procedure: 0x0046D2A9 - 0x0046D2AF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D2A9()
{



}

/*	Procedure: 0x0046D2B0 - 0x0046D2B6
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004660C0()
 */

L0046D2B0(A4)
/* unknown */ void  A4;
{



    (fsave)A4;
    asm("fsqrt");
}

/*	Procedure: 0x0046D2B7 - 0x0046D2BF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D2B7()
{



}

/*	Procedure: 0x0046D2C0 - 0x0046D2C6
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L004660C0()
 */

L0046D2C0()
{



    (fsave)M0049cf80;
}

/*	Procedure: 0x0046D2C7 - 0x0046D2CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D2C7()
{



}

/*	Procedure: 0x0046D2D0 - 0x0046D308
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0046D4A0()
 */

L0046D2D0()
{
	/* unknown */ void  ebp;



    ebp = esp;
    if(M0049cfa8 != -1) {
        return 1;
    }
    eax = TlsAlloc();
    M0049cfa8 = eax;
    if(eax == -1) {
        return 0;
    }
    esp = ebp;
    return 1;
}

/*	Procedure: 0x0046D309 - 0x0046D30F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D309()
{



}

/*	Procedure: 0x0046D310 - 0x0046D49B
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 8
 *	Called by:
 *		L0046D4A0()
 *		L0046D4D0()
 */

L0046D310(A8)
/* unknown */ void  A8;
{
	/* unknown */ void  * ebx;
	/* unknown */ void  * esi;



    if(TlsGetValue(M0049cfa8) == 0) {
        if(GetLastError() == 0) {
            ebx = L0046CAA0(0x1d0);
            if(ebx == 0) {
                return 0;
            }
            esi = 4854048;
            EnterCriticalSection(4854048);
            *ebx = M004a10a0;
            M004a10a0 = ebx;
            LeaveCriticalSection(esi);
            *(ebx + 4) = 0;
            *(ebx + 8) = 1;
            *(ebx + 0xc) = 0x49cfac;
            *(ebx + 0x10) = 0x49cfac;
            *(ebx + 0x14) = A8;
            *(ebx + 0x180) = 0x49cfb0;
            *(ebx + 0x3c) = 0;
            *(ebx + 0x40) = 0;
            *(ebx + 0x44) = 0;
            *(ebx + 0x48) = 1;
            *(ebx + 0x4c) = 0;
            *(ebx + 0x50) = 0;
            *(ebx + 0x54) = 1;
            *(ebx + 0x58) = 0;
            *(ebx + 0x5c) = -1;
            *(ebx + 0x18) = 0;
            *(ebx + 0x1c) = 0;
            *(ebx + 0x20) = 0;
            *(ebx + 0x24) = 1;
            *(ebx + 0x28) = 0;
            *(ebx + 0x2c) = 0;
            *(ebx + 0x30) = 1;
            *(ebx + 0x34) = 0;
            *(ebx + 0x38) = -1;
            *(ebx + 0x184) = 0;
            *(ebx + 0x188) = 0;
            *(ebx + 0x1b8) = 0;
            *(ebx + 0x1bc) = 0;
            *(ebx + 0x1c0) = 0;
            *(ebx + 0x1c4) = 0;
            *(ebx + 0x1c8) = 0;
            *(ebx + 0x17c) = 0;
            *(ebx + 0x1cc) = 0;
            eax = TlsSetValue(M0049cfa8, ebx);
            esp = ebp - 8;
            return;
        }
        esp = ebp - 8;
        return 0;
    }
    esp = ebp - 8;
    return 1;
}

/*	Procedure: 0x0046D49C - 0x0046D49F
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D49C()
{



}

/*	Procedure: 0x0046D4A0 - 0x0046D4C6
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0046CA40()
 */

L0046D4A0()
{



    if(L0046D2D0() != 0 && L0046D310(0) != 0) {
        esp = ebp;
        return 1;
    }
    esp = ebp;
    return 0;
}

/*	Procedure: 0x0046D4C7 - 0x0046D4CF
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 */

L0046D4C7()
{



}

/*	Procedure: 0x0046D4D0 - 0x0046D529
 *	Argument size: 4
 *	Local size: 0
 *	Save regs size: 4
 *	Called by:
 *		L0046C789()
 *		L0046CA00()
 */

L0046D4D0(A8)
/* unknown */ void  A8;
{
	LPVOID ebx;



    ebx = TlsGetValue(M0049cfa8);
    if(A8 != 0) {
        if(ebx == 0) {
            L0046D310(0);
            ebx = TlsGetValue(M0049cfa8);
        }
        if(ebx == 0) {
            MessageBoxA(0, "Could not allocate thread local data.", "MW Win32 Runtime", 0x30);
            L0046CAF0(0x7f);
        }
    }
    return ebx;
}

/*	Procedure: 0x0046D52A - 0x0046D52E
 *	Argument size: 0
 *	Local size: 0
 *	Save regs size: 0
 *	Called by:
 *		L0046C789()
 */

L0046D52A()
{



    goto ( *L6e4a0408);
}

/* address  size  */
/* 0x00000000       0 */ /* unknown */ void 	string.c;
/* 0x00000000       0 */ /* unknown */ void 	asciifun.c;
/* 0x00000000       0 */ /* unknown */ void 	commfunc.c;
/* 0x00000000       0 */ /* unknown */ void 	mmsystem.c;
/* 0x00000000       0 */ /* unknown */ void 	shellapi.c;
/* 0x00000000       0 */ /* unknown */ void 	sockets.c;
/* 0x00000000       0 */ /* unknown */ void 	ucodfunc.c;
/* 0x00000000       0 */ /* unknown */ void 	winbase.c;
/* 0x00000000       0 */ /* unknown */ void 	wingdi.c;
/* 0x00000000       0 */ /* unknown */ void 	winreg.c;
/* 0x00000000       0 */ /* unknown */ void 	winuser.c;
/* 0x00000064       0 */ int	M00000064;
/* 0x0044b520       0 */ /* unknown */ void 	__entry_point__;
/* 0x00476580       0 */ CHAR *	M00476580;
/* 0x0047fccc       0 */ struct HWND__ *	M0047fccc;
/* 0x0047fcd0       0 */ /* unknown */ void 	M0047fcd0;
/* 0x0047fcd4       0 */ /* unknown */ void 	M0047fcd4;
/* 0x0047fcd8       0 */ /* unknown */ void 	M0047fcd8;
/* 0x0047fcec       0 */ WCHAR *	M0047fcec;
/* 0x004811e8       0 */ struct HINSTANCE__ *	M004811e8;
/* 0x00481250       0 */ /* unknown */ void 	M00481250;
/* 0x00486cf4       0 */ unsigned long 	M00486cf4;
/* 0x0049cfa8       0 */ unsigned long 	M0049cfa8;
/* 0x004a0318       0 */ /* unknown */ void 	__imp__SetDIBitsToDevice;
/* 0x004a0319       0 */ int	SetDIBitsToDevice(HDC, int, int, DWORD, DWORD, int, int, UINT, UINT, /* unknown */ void  *, BITMAPINFO *, UINT);
/* 0x004a031c       0 */ /* unknown */ void 	__imp__CreateCompatibleDC;
/* 0x004a031d       0 */ HDC	CreateCompatibleDC(HDC);
/* 0x004a0320       0 */ /* unknown */ void 	__imp__CreateDIBSection;
/* 0x004a0321       0 */ HBITMAP	CreateDIBSection(HDC, BITMAPINFO *, UINT, /* unknown */ void  * *, HANDLE, DWORD);
/* 0x004a0324       0 */ /* unknown */ void 	__imp__SelectObject;
/* 0x004a0325       0 */ HGDIOBJ	SelectObject(HDC, HGDIOBJ);
/* 0x004a0328       0 */ /* unknown */ void 	__imp__BitBlt;
/* 0x004a0329       0 */ BOOL	BitBlt(HDC, int, int, int, int, HDC, int, int, DWORD);
/* 0x004a032c       0 */ /* unknown */ void 	__imp__GdiFlush;
/* 0x004a032d       0 */ BOOL	GdiFlush;
/* 0x004a0330       0 */ /* unknown */ void 	__imp__DeleteObject;
/* 0x004a0331       0 */ BOOL	DeleteObject(HGDIOBJ);
/* 0x004a0334       0 */ /* unknown */ void 	__imp__DeleteDC;
/* 0x004a0335       0 */ BOOL	DeleteDC(HDC);
/* 0x004a033c       0 */ /* unknown */ void 	__imp__GetVersionExA;
/* 0x004a033d       0 */ BOOL	GetVersionExA(LPOSVERSIONINFOA);
/* 0x004a0340       0 */ /* unknown */ void 	__imp__GetModuleHandleW;
/* 0x004a0341       0 */ HMODULE	GetModuleHandleW(LPCWSTR);
/* 0x004a0344       0 */ /* unknown */ void 	__imp__GetProcAddress;
/* 0x004a0345       0 */ FARPROC	GetProcAddress(HMODULE, LPCSTR);
/* 0x004a0348       0 */ /* unknown */ void 	__imp__MultiByteToWideChar;
/* 0x004a0349       0 */ int	MultiByteToWideChar(UINT, DWORD, LPCSTR, int, LPWSTR, int);
/* 0x004a034c       0 */ /* unknown */ void 	__imp__GetLastError;
/* 0x004a034d       0 */ DWORD	GetLastError;
/* 0x004a0350       0 */ /* unknown */ void 	__imp__GlobalReAlloc;
/* 0x004a0351       0 */ HGLOBAL	GlobalReAlloc(HGLOBAL, DWORD, UINT);
/* 0x004a0354       0 */ /* unknown */ void 	__imp__GlobalAlloc;
/* 0x004a0355       0 */ HGLOBAL	GlobalAlloc(UINT, DWORD);
/* 0x004a0358       0 */ /* unknown */ void 	__imp__GetModuleHandleA;
/* 0x004a0359       0 */ HMODULE	GetModuleHandleA(LPCSTR);
/* 0x004a035c       0 */ /* unknown */ void 	__imp__IsBadReadPtr;
/* 0x004a035d       0 */ BOOL	IsBadReadPtr(/* unknown */ void  *, UINT);
/* 0x004a0360       0 */ /* unknown */ void 	__imp__FindFirstFileW;
/* 0x004a0361       0 */ HANDLE	FindFirstFileW(LPCWSTR, LPWIN32_FIND_DATAW);
/* 0x004a0364       0 */ /* unknown */ void 	__imp__FindClose;
/* 0x004a0365       0 */ BOOL	FindClose(HANDLE);
/* 0x004a0368       0 */ /* unknown */ void 	__imp__GetFileAttributesW;
/* 0x004a0369       0 */ DWORD	GetFileAttributesW(LPCWSTR);
/* 0x004a036c       0 */ /* unknown */ void 	__imp__GetModuleFileNameW;
/* 0x004a036d       0 */ DWORD	GetModuleFileNameW(HMODULE, LPWSTR, DWORD);
/* 0x004a0370       0 */ /* unknown */ void 	__imp__CreateFileW;
/* 0x004a0371       0 */ HANDLE	CreateFileW(LPCWSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
/* 0x004a0374       0 */ /* unknown */ void 	__imp__CreateDirectoryW;
/* 0x004a0375       0 */ BOOL	CreateDirectoryW(LPCWSTR, LPSECURITY_ATTRIBUTES);
/* 0x004a0378       0 */ /* unknown */ void 	__imp__RemoveDirectoryW;
/* 0x004a0379       0 */ BOOL	RemoveDirectoryW(LPCWSTR);
/* 0x004a037c       0 */ /* unknown */ void 	__imp__CloseHandle;
/* 0x004a037d       0 */ BOOL	CloseHandle(HANDLE);
/* 0x004a0380       0 */ /* unknown */ void 	__imp__MoveFileW;
/* 0x004a0381       0 */ BOOL	MoveFileW(LPCWSTR, LPCWSTR);
/* 0x004a0384       0 */ /* unknown */ void 	__imp__GetVolumeInformationW;
/* 0x004a0385       0 */ BOOL	GetVolumeInformationW(LPCWSTR, LPWSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPWSTR, DWORD);
/* 0x004a0388       0 */ /* unknown */ void 	__imp__GetFileSize;
/* 0x004a0389       0 */ DWORD	GetFileSize(HANDLE, LPDWORD);
/* 0x004a038c       0 */ /* unknown */ void 	__imp__SetFilePointer;
/* 0x004a038d       0 */ DWORD	SetFilePointer(HANDLE, LONG, PLONG, DWORD);
/* 0x004a0390       0 */ /* unknown */ void 	__imp__ReadFile;
/* 0x004a0391       0 */ BOOL	ReadFile(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
/* 0x004a0394       0 */ /* unknown */ void 	__imp__WriteFile;
/* 0x004a0395       0 */ BOOL	WriteFile(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED);
/* 0x004a0398       0 */ /* unknown */ void 	__imp__SetEndOfFile;
/* 0x004a0399       0 */ BOOL	SetEndOfFile(HANDLE);
/* 0x004a039c       0 */ /* unknown */ void 	__imp__FlushFileBuffers;
/* 0x004a039d       0 */ BOOL	FlushFileBuffers(HANDLE);
/* 0x004a03a0       0 */ /* unknown */ void 	__imp__FindNextFileW;
/* 0x004a03a1       0 */ BOOL	FindNextFileW(HANDLE, LPWIN32_FIND_DATAW);
/* 0x004a03a4       0 */ /* unknown */ void 	__imp__GetFileInformationByHandle;
/* 0x004a03a5       0 */ BOOL	GetFileInformationByHandle(HANDLE, LPBY_HANDLE_FILE_INFORMATION);
/* 0x004a03a8       0 */ /* unknown */ void 	__imp__GetDriveTypeW;
/* 0x004a03a9       0 */ UINT	GetDriveTypeW(LPCWSTR);
/* 0x004a03ac       0 */ /* unknown */ void 	__imp__GetLogicalDriveStringsW;
/* 0x004a03ad       0 */ DWORD	GetLogicalDriveStringsW(DWORD, LPWSTR);
/* 0x004a03b0       0 */ /* unknown */ void 	__imp__GetDiskFreeSpaceW;
/* 0x004a03b1       0 */ BOOL	GetDiskFreeSpaceW(LPCWSTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD);
/* 0x004a03b4       0 */ /* unknown */ void 	__imp__SetVolumeLabelW;
/* 0x004a03b5       0 */ BOOL	SetVolumeLabelW(LPCWSTR, LPCWSTR);
/* 0x004a03b8       0 */ /* unknown */ void 	__imp__GlobalFree;
/* 0x004a03b9       0 */ HGLOBAL	GlobalFree(HGLOBAL);
/* 0x004a03bc       0 */ /* unknown */ void 	__imp__GlobalMemoryStatus;
/* 0x004a03bd       0 */ /* unknown */ void 	GlobalMemoryStatus(LPMEMORYSTATUS);
/* 0x004a03c0       0 */ /* unknown */ void 	__imp__ExitProcess;
/* 0x004a03c1       0 */ /* unknown */ void 	ExitProcess(UINT);
/* 0x004a03c4       0 */ /* unknown */ void 	__imp__Sleep;
/* 0x004a03c5       0 */ /* unknown */ void 	Sleep(DWORD);
/* 0x004a03c8       0 */ /* unknown */ void 	__imp__LoadLibraryA;
/* 0x004a03c9       0 */ HMODULE	LoadLibraryA(LPCSTR);
/* 0x004a03cc       0 */ /* unknown */ void 	__imp__OpenProcess;
/* 0x004a03cd       0 */ HANDLE	OpenProcess(DWORD, BOOL, DWORD);
/* 0x004a03d0       0 */ /* unknown */ void 	__imp__TerminateProcess;
/* 0x004a03d1       0 */ BOOL	TerminateProcess(HANDLE, UINT);
/* 0x004a03d4       0 */ /* unknown */ void 	__imp__GetSystemTimeAsFileTime;
/* 0x004a03d5       0 */ /* unknown */ void 	GetSystemTimeAsFileTime(LPFILETIME);
/* 0x004a03d8       0 */ /* unknown */ void 	__imp__GetTimeZoneInformation;
/* 0x004a03d9       0 */ DWORD	GetTimeZoneInformation(LPTIME_ZONE_INFORMATION);
/* 0x004a03dc       0 */ /* unknown */ void 	__imp__GlobalLock;
/* 0x004a03dd       0 */ LPVOID	GlobalLock(HGLOBAL);
/* 0x004a03e0       0 */ /* unknown */ void 	__imp__GlobalUnlock;
/* 0x004a03e1       0 */ BOOL	GlobalUnlock(HGLOBAL);
/* 0x004a03e4       0 */ /* unknown */ void 	__imp__GlobalSize;
/* 0x004a03e5       0 */ DWORD	GlobalSize(HGLOBAL);
/* 0x004a03e8       0 */ /* unknown */ void 	__imp__CreateMutexW;
/* 0x004a03e9       0 */ HANDLE	CreateMutexW(LPSECURITY_ATTRIBUTES, BOOL, LPCWSTR);
/* 0x004a03ec       0 */ /* unknown */ void 	__imp__GetCurrentProcess;
/* 0x004a03ed       0 */ HANDLE	GetCurrentProcess;
/* 0x004a03f0       0 */ /* unknown */ void 	__imp__GetCommandLineA;
/* 0x004a03f1       0 */ LPSTR	GetCommandLineA;
/* 0x004a03f4       0 */ /* unknown */ void 	__imp__GetStartupInfoA;
/* 0x004a03f5       0 */ /* unknown */ void 	GetStartupInfoA(LPSTARTUPINFOA);
/* 0x004a03f8       0 */ /* unknown */ void 	__imp__InitializeCriticalSection;
/* 0x004a03f9       0 */ /* unknown */ void 	InitializeCriticalSection(LPCRITICAL_SECTION);
/* 0x004a03fc       0 */ /* unknown */ void 	__imp__GetCurrentThreadId;
/* 0x004a03fd       0 */ DWORD	GetCurrentThreadId;
/* 0x004a0400       0 */ /* unknown */ void 	__imp__EnterCriticalSection;
/* 0x004a0401       0 */ /* unknown */ void 	EnterCriticalSection(LPCRITICAL_SECTION);
/* 0x004a0404       0 */ /* unknown */ void 	__imp__LeaveCriticalSection;
/* 0x004a0405       0 */ /* unknown */ void 	LeaveCriticalSection(LPCRITICAL_SECTION);
/* 0x004a0408       0 */ /* unknown */ void 	__imp__RtlUnwind;
/* 0x004a0409       0 */ /* unknown */ void 	RtlUnwind;
/* 0x004a040c       0 */ /* unknown */ void 	__imp__TlsAlloc;
/* 0x004a040d       0 */ DWORD	TlsAlloc;
/* 0x004a0410       0 */ /* unknown */ void 	__imp__TlsGetValue;
/* 0x004a0411       0 */ LPVOID	TlsGetValue(DWORD);
/* 0x004a0414       0 */ /* unknown */ void 	__imp__TlsSetValue;
/* 0x004a0415       0 */ BOOL	TlsSetValue(DWORD, LPVOID);
/* 0x004a041c       0 */ /* unknown */ void 	__imp__Shell_NotifyIconW;
/* 0x004a041d       0 */ BOOL	Shell_NotifyIconW(DWORD, PNOTIFYICONDATAW);
/* 0x004a0420       0 */ /* unknown */ void 	__imp__SHFileOperationW;
/* 0x004a0421       0 */ int	SHFileOperationW(LPSHFILEOPSTRUCTW);
/* 0x004a0424       0 */ /* unknown */ void 	__imp__ShellExecuteW;
/* 0x004a0425       0 */ HINSTANCE	ShellExecuteW(HWND, struct hostent *, struct hostent *, LPCWSTR, struct hostent *, int);
/* 0x004a0428       0 */ /* unknown */ void 	__imp__DragQueryFileW;
/* 0x004a0429       0 */ unsigned int	DragQueryFileW(HDROP, unsigned int, LPCWSTR, unsigned int);
/* 0x004a0430       0 */ /* unknown */ void 	__imp__GetSystemMetrics;
/* 0x004a0431       0 */ int	GetSystemMetrics(int);
/* 0x004a0434       0 */ /* unknown */ void 	__imp__IsIconic;
/* 0x004a0435       0 */ BOOL	IsIconic(HWND);
/* 0x004a0438       0 */ /* unknown */ void 	__imp__GetWindowPlacement;
/* 0x004a0439       0 */ BOOL	GetWindowPlacement(HWND, WINDOWPLACEMENT *);
/* 0x004a043c       0 */ /* unknown */ void 	__imp__GetWindowRect;
/* 0x004a043d       0 */ BOOL	GetWindowRect(HWND, LPRECT);
/* 0x004a0440       0 */ /* unknown */ void 	__imp__SystemParametersInfoA;
/* 0x004a0441       0 */ BOOL	SystemParametersInfoA(UINT, UINT, PVOID, UINT);
/* 0x004a0444       0 */ /* unknown */ void 	__imp__GetTopWindow;
/* 0x004a0445       0 */ HWND	GetTopWindow(HWND);
/* 0x004a0448       0 */ /* unknown */ void 	__imp__IsWindowVisible;
/* 0x004a0449       0 */ BOOL	IsWindowVisible(HWND);
/* 0x004a044c       0 */ /* unknown */ void 	__imp__GetWindow;
/* 0x004a044d       0 */ HWND	GetWindow(HWND, UINT);
/* 0x004a0450       0 */ /* unknown */ void 	__imp__ShowWindow;
/* 0x004a0451       0 */ BOOL	ShowWindow(HWND, int);
/* 0x004a0454       0 */ /* unknown */ void 	__imp__SetFocus;
/* 0x004a0455       0 */ HWND	SetFocus(HWND);
/* 0x004a0458       0 */ /* unknown */ void 	__imp__PostMessageW;
/* 0x004a0459       0 */ BOOL	PostMessageW(HWND, UINT, WPARAM, LPARAM);
/* 0x004a045c       0 */ /* unknown */ void 	__imp__BeginPaint;
/* 0x004a045d       0 */ HDC	BeginPaint(HWND, LPPAINTSTRUCT);
/* 0x004a0460       0 */ /* unknown */ void 	__imp__EndPaint;
/* 0x004a0461       0 */ BOOL	EndPaint(HWND, PAINTSTRUCT *);
/* 0x004a0464       0 */ /* unknown */ void 	__imp__DefWindowProcW;
/* 0x004a0465       0 */ LRESULT	DefWindowProcW(HWND, UINT, WPARAM, LPARAM);
/* 0x004a0468       0 */ /* unknown */ void 	__imp__SetWindowPos;
/* 0x004a0469       0 */ BOOL	SetWindowPos(HWND, HWND, int, int, int, int, UINT);
/* 0x004a046c       0 */ /* unknown */ void 	__imp__LoadImageA;
/* 0x004a046d       0 */ HANDLE	LoadImageA(HINSTANCE, LPCSTR, UINT, int, int, UINT);
/* 0x004a0470       0 */ /* unknown */ void 	__imp__LoadIconA;
/* 0x004a0471       0 */ HICON	LoadIconA(HINSTANCE, LPCSTR);
/* 0x004a0474       0 */ /* unknown */ void 	__imp__RegisterClassExW;
/* 0x004a0475       0 */ ATOM	RegisterClassExW(WNDCLASSEXW *);
/* 0x004a0478       0 */ /* unknown */ void 	__imp__CreateWindowExW;
/* 0x004a0479       0 */ HWND	CreateWindowExW(DWORD, LPCWSTR, LPCWSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID);
/* 0x004a047c       0 */ /* unknown */ void 	__imp__LoadIconW;
/* 0x004a047d       0 */ HICON	LoadIconW(HINSTANCE, LPCWSTR);
/* 0x004a0480       0 */ /* unknown */ void 	__imp__SetWindowTextW;
/* 0x004a0481       0 */ BOOL	SetWindowTextW(HWND, LPCWSTR);
/* 0x004a0484       0 */ /* unknown */ void 	__imp__GetFocus;
/* 0x004a0485       0 */ HWND	GetFocus;
/* 0x004a0488       0 */ /* unknown */ void 	__imp__DestroyWindow;
/* 0x004a0489       0 */ BOOL	DestroyWindow(HWND);
/* 0x004a048c       0 */ /* unknown */ void 	__imp__GetClientRect;
/* 0x004a048d       0 */ BOOL	GetClientRect(HWND, LPRECT);
/* 0x004a0490       0 */ /* unknown */ void 	__imp__InvalidateRect;
/* 0x004a0491       0 */ BOOL	InvalidateRect(HWND, RECT *, BOOL);
/* 0x004a0494       0 */ /* unknown */ void 	__imp__BringWindowToTop;
/* 0x004a0495       0 */ BOOL	BringWindowToTop(HWND);
/* 0x004a0498       0 */ /* unknown */ void 	__imp__GetDC;
/* 0x004a0499       0 */ HDC	GetDC(HWND);
/* 0x004a049c       0 */ /* unknown */ void 	__imp__ReleaseDC;
/* 0x004a049d       0 */ int	ReleaseDC(HWND, HDC);
/* 0x004a04a0       0 */ /* unknown */ void 	__imp__ReleaseCapture;
/* 0x004a04a1       0 */ BOOL	ReleaseCapture;
/* 0x004a04a4       0 */ /* unknown */ void 	__imp__SetCapture;
/* 0x004a04a5       0 */ HWND	SetCapture(HWND);
/* 0x004a04a8       0 */ /* unknown */ void 	__imp__GetKeyboardState;
/* 0x004a04a9       0 */ BOOL	GetKeyboardState(PBYTE);
/* 0x004a04ac       0 */ /* unknown */ void 	__imp__ToUnicode;
/* 0x004a04ad       0 */ int	ToUnicode(UINT, UINT, PBYTE, LPWSTR, int, UINT);
/* 0x004a04b0       0 */ /* unknown */ void 	__imp__MessageBeep;
/* 0x004a04b1       0 */ BOOL	MessageBeep(UINT);
/* 0x004a04b4       0 */ /* unknown */ void 	__imp__MapVirtualKeyW;
/* 0x004a04b5       0 */ UINT	MapVirtualKeyW(UINT, UINT);
/* 0x004a04b8       0 */ /* unknown */ void 	__imp__GetDesktopWindow;
/* 0x004a04b9       0 */ HWND	GetDesktopWindow;
/* 0x004a04bc       0 */ /* unknown */ void 	__imp__mouse_event;
/* 0x004a04bd       0 */ /* unknown */ void 	mouse_event(DWORD, DWORD, DWORD, DWORD, DWORD);
/* 0x004a04c0       0 */ /* unknown */ void 	__imp__keybd_event;
/* 0x004a04c1       0 */ /* unknown */ void 	keybd_event(int, int, DWORD, DWORD);
/* 0x004a04c4       0 */ /* unknown */ void 	__imp__PeekMessageW;
/* 0x004a04c5       0 */ BOOL	PeekMessageW(LPMSG, HWND, UINT, UINT, UINT);
/* 0x004a04c8       0 */ /* unknown */ void 	__imp__GetMessageW;
/* 0x004a04c9       0 */ BOOL	GetMessageW(LPMSG, HWND, UINT, UINT);
/* 0x004a04cc       0 */ /* unknown */ void 	__imp__DispatchMessageW;
/* 0x004a04cd       0 */ LONG	DispatchMessageW(MSG *);
/* 0x004a04d0       0 */ /* unknown */ void 	__imp__PostThreadMessageW;
/* 0x004a04d1       0 */ BOOL	PostThreadMessageW(DWORD, UINT, WPARAM, LPARAM);
/* 0x004a04d4       0 */ /* unknown */ void 	__imp__SetTimer;
/* 0x004a04d5       0 */ UINT	SetTimer(HWND, UINT, UINT, TIMERPROC);
/* 0x004a04d8       0 */ /* unknown */ void 	__imp__KillTimer;
/* 0x004a04d9       0 */ BOOL	KillTimer(HWND, UINT);
/* 0x004a04dc       0 */ /* unknown */ void 	__imp__OpenClipboard;
/* 0x004a04dd       0 */ BOOL	OpenClipboard(HWND);
/* 0x004a04e0       0 */ /* unknown */ void 	__imp__EmptyClipboard;
/* 0x004a04e1       0 */ BOOL	EmptyClipboard;
/* 0x004a04e4       0 */ /* unknown */ void 	__imp__SetClipboardData;
/* 0x004a04e5       0 */ HANDLE	SetClipboardData(UINT, HANDLE);
/* 0x004a04e8       0 */ /* unknown */ void 	__imp__CloseClipboard;
/* 0x004a04e9       0 */ BOOL	CloseClipboard;
/* 0x004a04ec       0 */ /* unknown */ void 	__imp__GetClipboardData;
/* 0x004a04ed       0 */ HANDLE	GetClipboardData(UINT);
/* 0x004a04f0       0 */ /* unknown */ void 	__imp__LoadCursorW;
/* 0x004a04f1       0 */ HCURSOR	LoadCursorW(HINSTANCE, LPCWSTR);
/* 0x004a04f4       0 */ /* unknown */ void 	__imp__SetCursor;
/* 0x004a04f5       0 */ HCURSOR	SetCursor(HCURSOR);
/* 0x004a04f8       0 */ /* unknown */ void 	__imp__GetDoubleClickTime;
/* 0x004a04f9       0 */ UINT	GetDoubleClickTime;
/* 0x004a04fc       0 */ /* unknown */ void 	__imp__GetCursorPos;
/* 0x004a04fd       0 */ BOOL	GetCursorPos(LPPOINT);
/* 0x004a0500       0 */ /* unknown */ void 	__imp__MessageBoxA;
/* 0x004a0501       0 */ int	MessageBoxA(HWND, LPCSTR, LPCSTR, UINT);
/* 0x004a0504       0 */ /* unknown */ void 	__imp__ExitWindowsEx;
/* 0x004a0505       0 */ BOOL	ExitWindowsEx(UINT, DWORD);
/* 0x004a0508       0 */ /* unknown */ void 	__imp__PostMessageA;
/* 0x004a0509       0 */ BOOL	PostMessageA(HWND, UINT, WPARAM, LPARAM);
/* 0x004a050c       0 */ /* unknown */ void 	__imp__RegisterClassExA;
/* 0x004a050d       0 */ ATOM	RegisterClassExA(WNDCLASSEXA *);
/* 0x004a0510       0 */ /* unknown */ void 	__imp__CreateWindowExA;
/* 0x004a0511       0 */ HWND	CreateWindowExA(DWORD, LPCSTR, LPCSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID);
/* 0x004a0514       0 */ /* unknown */ void 	__imp__SetWindowLongW;
/* 0x004a0515       0 */ LONG	SetWindowLongW(HWND, int, LONG);
/* 0x004a0518       0 */ /* unknown */ void 	__imp__GetWindowLongW;
/* 0x004a0519       0 */ LONG	GetWindowLongW(HWND, int);
/* 0x004a0578       0 */ /* unknown */ void 	__imp__RegisterDragDrop;
/* 0x004a0579       0 */ /* unknown */ void 	RegisterDragDrop;
/* 0x004a057c       0 */ /* unknown */ void 	__imp__RevokeDragDrop;
/* 0x004a057d       0 */ /* unknown */ void 	RevokeDragDrop;
/* 0x004a0580       0 */ /* unknown */ void 	__imp__CoCreateInstance;
/* 0x004a0581       0 */ /* unknown */ void 	CoCreateInstance;
/* 0x004a0584       0 */ /* unknown */ void 	__imp__OleInitialize;
/* 0x004a0585       0 */ /* unknown */ void 	OleInitialize;
/* 0x004a0588       0 */ /* unknown */ void 	__imp__ReleaseStgMedium;
/* 0x004a0589       0 */ /* unknown */ void 	ReleaseStgMedium;
/* 0x004a100c       0 */ /* unknown */ void 	M004a100c;
/* 0x004a1010       0 */ /* unknown */ void 	M004a1010;
/* 0x004a102c       0 */ /* unknown */ void 	M004a102c;
/* 0x004a1038       0 */ /* unknown */ void 	M004a1038;
/* 0x004a103c       0 */ /* unknown */ void 	M004a103c;
/* 0x004a1040       0 */ /* unknown */ void 	M004a1040;
/* 0x004a1044       0 */ /* unknown */ void 	M004a1044;
/* 0x004a1048       0 */ /* unknown */ void 	M004a1048;
/* 0x004a104c       0 */ /* unknown */ void 	M004a104c;
/* 0x004a1050       0 */ /* unknown */ void 	M004a1050;
/* 0x004a106c       0 */ /* unknown */ void 	M004a106c;
/* 0x004a1070       0 */ /* unknown */ void 	M004a1070;
/* 0x004a1074       0 */ /* unknown */ void 	M004a1074;
/* 0x004a10a0       0 */ /* unknown */ void 	M004a10a0;
#if 0 /* auxiliary information */
# Current option values:
option: +asmflush
option: -compactcalls
option: +compactexprs
option: +compactifs
option: +compset
option: -dfoproc
option: -disasmonly
option: -displaylabels
option: +doblocks
option: +docase
option: +dofor
option: +doifs
option: +dointrinsics
option: +doloops
option: +donullgotos
option: +dopackloops
option: +dopackstmt
option: +doremlabs
option: +dosimplify
option: -dosort
option: +dostmts
option: +doswitch
option: +dowhile
option: -dumpaddrs
option: -dumpcall
option: -dumpcomments
option: -dumpdfo
option: +dumpdoms
option: -dumpsblocks
option: -dumpsets
option: -dumpsizes
option: -dumpstmtid
option: +fatcase
option: -flag16
option: +fullscreen
option: -genpattern
option: -gui
option: -help
option: -hexconst
option: +insertlabels
option: -int16
option: +int32
option: -interactive
option: -isvb5
option: +locals
option: -nostackoffs
option: -objdump
option: -okclone
option: -outprocs
option: -outrefs
option: -overrule
option: +rdonly
option: -showblocks
option: -showjump
option: -showlabel
option: -showprotosym
option: -showreg
option: -showstring
option: -silent
option: +simplifyexprs
option: -stackalign16
option: -stackalign4
option: -stackalign8
option: +strallregions
option: -traceall
option: -tracesets
option: +types
option: -usesymtab
option: -validatebr
option: -validatereg
option: +validatestr
#endif
